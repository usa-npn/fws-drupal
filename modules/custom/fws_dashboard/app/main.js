(window["webpackJsonp"] = window["webpackJsonp"] || []).push([["main"],{

/***/ "../npn/common/src/lib/common/application-settings.ts":
/*!************************************************************!*\
  !*** ../npn/common/src/lib/common/application-settings.ts ***!
  \************************************************************/
/*! exports provided: SpeciesTitleFormat, APPLICATION_SETTINGS */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "SpeciesTitleFormat", function() { return SpeciesTitleFormat; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "APPLICATION_SETTINGS", function() { return APPLICATION_SETTINGS; });
/**
 * Ways in which a species' title can be displayed.
 * @see SpeciesTitlePipe
 */
var SpeciesTitleFormat;
(function (SpeciesTitleFormat) {
    SpeciesTitleFormat["CommonName"] = "common-name";
    SpeciesTitleFormat["ScientificName"] = "scientific-name";
})(SpeciesTitleFormat || (SpeciesTitleFormat = {}));
;
/**
 * Holds application level settings that can be altered by the user.
 * This is just a class and not an `@Injectable` service because it has
 * no `@Injectable` dependencies so it's just more simple.
 */
var ApplicationSettings = /** @class */ (function () {
    function ApplicationSettings() {
        this.settings = {
            speciesTitleFormat: SpeciesTitleFormat.CommonName
        };
    }
    Object.defineProperty(ApplicationSettings.prototype, "speciesTitleFormat", {
        get: function () { return this.settings.speciesTitleFormat; },
        set: function (f) { this.settings.speciesTitleFormat = f; },
        enumerable: true,
        configurable: true
    });
    return ApplicationSettings;
}());
var APPLICATION_SETTINGS = new ApplicationSettings();


/***/ }),

/***/ "../npn/common/src/lib/common/cache.service.ts":
/*!*****************************************************!*\
  !*** ../npn/common/src/lib/common/cache.service.ts ***!
  \*****************************************************/
/*! exports provided: CacheService */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "CacheService", function() { return CacheService; });
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @angular/core */ "../../node_modules/@angular/core/fesm5/core.js");
/* harmony import */ var _config__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./config */ "../npn/common/src/lib/common/config.ts");
/* harmony import */ var ts_md5_dist_md5__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ts-md5/dist/md5 */ "../../node_modules/ts-md5/dist/md5.js");
/* harmony import */ var ts_md5_dist_md5__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(ts_md5_dist_md5__WEBPACK_IMPORTED_MODULE_2__);
var __decorate = (undefined && undefined.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (undefined && undefined.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var __param = (undefined && undefined.__param) || function (paramIndex, decorator) {
    return function (target, key) { decorator(target, key, paramIndex); }
};



var CacheService = /** @class */ (function () {
    // has to inject NpnConfiguration since can't use NpnServiceUtils
    // w/out introducing a circular dependency.
    function CacheService(config) {
        this.config = config;
        this.ttl = (60 * 60 * 1000); // default 1 hour
        if ((typeof (config.cacheTTL)) === 'number') {
            this.ttl = config.cacheTTL * 60 * 1000; // value in minutes
        }
        console.log("CacheService Time To Live " + this.ttl / 60000 + " minutes");
        if (this.ttl === 0) {
            console.log('Caching disabled clearing local session storage');
            sessionStorage.clear();
        }
    }
    CacheService.prototype.cacheKey = function (key) {
        if (typeof (key) !== 'string') {
            key = JSON.stringify(key);
        }
        // not sure about the .toString() on the end since Md=5.hashStr returns string Int32Array
        return ts_md5_dist_md5__WEBPACK_IMPORTED_MODULE_2__["Md5"].hashStr(key).toString();
    };
    CacheService.prototype.get = function (key) {
        if (this.ttl <= 0) {
            return null; // caching disabled
        }
        var ck = this.cacheKey(key), entry = sessionStorage.getItem(ck);
        if (entry) {
            entry = JSON.parse(entry);
            if (Date.now() < entry.expiry) {
                console.log('cache hit', ck, key);
                return entry.data;
            }
            console.log('cache expired', ck);
            window.sessionStorage.removeItem(ck);
        }
        else {
            console.log('cache miss', ck);
        }
        return null;
    };
    CacheService.prototype.set = function (key, data) {
        if (this.ttl <= 0) {
            return null; // caching disabled
        }
        var ck = this.cacheKey(key);
        if (data) {
            var entry = {
                expiry: (Date.now() + this.ttl),
                data: data
            };
            console.log('caching', ck, data);
            try {
                sessionStorage.setItem(ck, JSON.stringify(entry));
            }
            catch (ex) {
                console.log('error storing item in cache', ex);
                // the assumption here is that this has happened because
                // we've stored too much, do the simplest thing
                // wipe it clean and try again.
                console.log('clearing');
                sessionStorage.clear();
                try {
                    sessionStorage.setItem(ck, JSON.stringify(entry));
                }
                catch (ex) {
                    console.log('error on second store attempt (giving up).', ex);
                }
            }
        }
        else {
            console.log('removing from cache', ck);
            sessionStorage.removeItem(ck);
        }
    };
    CacheService = __decorate([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Injectable"])(),
        __param(0, Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Inject"])(_config__WEBPACK_IMPORTED_MODULE_1__["NPN_CONFIGURATION"])),
        __metadata("design:paramtypes", [_config__WEBPACK_IMPORTED_MODULE_1__["NpnConfiguration"]])
    ], CacheService);
    return CacheService;
}());

var CacheEntry = /** @class */ (function () {
    function CacheEntry() {
    }
    return CacheEntry;
}());


/***/ }),

/***/ "../npn/common/src/lib/common/config.ts":
/*!**********************************************!*\
  !*** ../npn/common/src/lib/common/config.ts ***!
  \**********************************************/
/*! exports provided: NpnConfiguration, NPN_CONFIGURATION */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "NpnConfiguration", function() { return NpnConfiguration; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "NPN_CONFIGURATION", function() { return NPN_CONFIGURATION; });
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @angular/core */ "../../node_modules/@angular/core/fesm5/core.js");

/**
 * @todo rename dataApiRoot2 and the corresponding methods in NpnServiceUtils
 */
var NpnConfiguration = /** @class */ (function () {
    function NpnConfiguration() {
    }
    return NpnConfiguration;
}());

var NPN_CONFIGURATION = new _angular_core__WEBPACK_IMPORTED_MODULE_0__["InjectionToken"]('NpnConfiguration');


/***/ }),

/***/ "../npn/common/src/lib/common/detect-ie.ts":
/*!*************************************************!*\
  !*** ../npn/common/src/lib/common/detect-ie.ts ***!
  \*************************************************/
/*! exports provided: detectIE */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "detectIE", function() { return detectIE; });
/**
 * detect IE
 * returns version of IE or false, if browser is not Internet Explorer
 */
function detectIE() {
    var ua = window.navigator.userAgent;
    // Test values; Uncomment to check result â€¦
    // IE 10
    // ua = 'Mozilla/5.0 (compatible; MSIE 10.0; Windows NT 6.2; Trident/6.0)';
    // IE 11
    // ua = 'Mozilla/5.0 (Windows NT 6.3; Trident/7.0; rv:11.0) like Gecko';
    // IE 12 / Spartan
    // ua = 'Mozilla/5.0 (Windows NT 10.0; WOW64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/39.0.2171.71 Safari/537.36 Edge/12.0';
    // Edge (IE 12+)
    // ua = 'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/46.0.2486.0 Safari/537.36 Edge/13.10586';
    var msie = ua.indexOf('MSIE ');
    if (msie > 0) {
        // IE 10 or older => return version number
        return parseInt(ua.substring(msie + 5, ua.indexOf('.', msie)), 10);
    }
    var trident = ua.indexOf('Trident/');
    if (trident > 0) {
        // IE 11 => return version number
        var rv = ua.indexOf('rv:');
        return parseInt(ua.substring(rv + 3, ua.indexOf('.', rv)), 10);
    }
    var edge = ua.indexOf('Edge/');
    if (edge > 0) {
        // Edge (IE 12+) => return version number
        return parseInt(ua.substring(edge + 5, ua.indexOf('.', edge)), 10);
    }
    // other browser
    return false;
}


/***/ }),

/***/ "../npn/common/src/lib/common/doy.pipe.ts":
/*!************************************************!*\
  !*** ../npn/common/src/lib/common/doy.pipe.ts ***!
  \************************************************/
/*! exports provided: DoyPipe */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "DoyPipe", function() { return DoyPipe; });
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @angular/core */ "../../node_modules/@angular/core/fesm5/core.js");
var __decorate = (undefined && undefined.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};

var ONE_DAY_MILLIS = (24 * 60 * 60 * 1000);
var DoyPipe = /** @class */ (function () {
    function DoyPipe() {
    }
    DoyPipe.prototype.transform = function (date, ignoreLeapYear) {
        if (typeof (date) === 'string') {
            var parts = date.split('-');
            if (parts.length === 3) {
                var year = parseInt(parts[0]), month = parseInt(parts[1]), day = parseInt(parts[2]);
                if (!isNaN(year) && !isNaN(month) && !isNaN(day) && month < 13 && day < 32) {
                    date = new Date(year, (month - 1), day);
                }
            }
        }
        if (date instanceof Date) {
            date = new Date(date.getTime());
            if (ignoreLeapYear) {
                // ignore leap years, using 2010 which is known to be a non-leap year
                date.setFullYear(2010);
            }
            var doy = date.getDate();
            while (date.getMonth() > 0) {
                // back up to the last day of the last month
                date.setDate(1);
                date.setTime(date.getTime() - ONE_DAY_MILLIS);
                doy += date.getDate();
            }
            return doy;
        }
        return date;
    };
    DoyPipe = __decorate([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Pipe"])({ name: 'doy' })
    ], DoyPipe);
    return DoyPipe;
}());



/***/ }),

/***/ "../npn/common/src/lib/common/guid.ts":
/*!********************************************!*\
  !*** ../npn/common/src/lib/common/guid.ts ***!
  \********************************************/
/*! exports provided: newGuid */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "newGuid", function() { return newGuid; });
// https://stackoverflow.com/questions/26501688/a-typescript-guid-class
function newGuid() {
    return 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g, function (c) {
        var r = Math.random() * 16 | 0, v = c == 'x' ? r : (r & 0x3 | 0x8);
        return v.toString(16);
    });
}


/***/ }),

/***/ "../npn/common/src/lib/common/index.ts":
/*!*********************************************!*\
  !*** ../npn/common/src/lib/common/index.ts ***!
  \*********************************************/
/*! exports provided: NpnCommonModule, NPN_BASE_HREF, CacheService, NetworkService, StationService, getStaticColor, DoyPipe, LegendDoyPipe, NpnServiceUtils, TaxonomicSpeciesRank, Phenophase, TaxonomicPhenophaseRank, STATIC_COLORS, getSpeciesPlotKeys, SpeciesService, SpeciesTitlePipe, TaxonomicSpeciesTitlePipe, newGuid, NpnConfiguration, NPN_CONFIGURATION, detectIE, MonitorsDestroy, SpeciesTitleFormat, APPLICATION_SETTINGS */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _public_api__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./public_api */ "../npn/common/src/lib/common/public_api.ts");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "NpnCommonModule", function() { return _public_api__WEBPACK_IMPORTED_MODULE_0__["NpnCommonModule"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "NPN_BASE_HREF", function() { return _public_api__WEBPACK_IMPORTED_MODULE_0__["NPN_BASE_HREF"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "CacheService", function() { return _public_api__WEBPACK_IMPORTED_MODULE_0__["CacheService"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "NetworkService", function() { return _public_api__WEBPACK_IMPORTED_MODULE_0__["NetworkService"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "StationService", function() { return _public_api__WEBPACK_IMPORTED_MODULE_0__["StationService"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "getStaticColor", function() { return _public_api__WEBPACK_IMPORTED_MODULE_0__["getStaticColor"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "DoyPipe", function() { return _public_api__WEBPACK_IMPORTED_MODULE_0__["DoyPipe"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "LegendDoyPipe", function() { return _public_api__WEBPACK_IMPORTED_MODULE_0__["LegendDoyPipe"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "NpnServiceUtils", function() { return _public_api__WEBPACK_IMPORTED_MODULE_0__["NpnServiceUtils"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "TaxonomicSpeciesRank", function() { return _public_api__WEBPACK_IMPORTED_MODULE_0__["TaxonomicSpeciesRank"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "Phenophase", function() { return _public_api__WEBPACK_IMPORTED_MODULE_0__["Phenophase"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "TaxonomicPhenophaseRank", function() { return _public_api__WEBPACK_IMPORTED_MODULE_0__["TaxonomicPhenophaseRank"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "STATIC_COLORS", function() { return _public_api__WEBPACK_IMPORTED_MODULE_0__["STATIC_COLORS"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "getSpeciesPlotKeys", function() { return _public_api__WEBPACK_IMPORTED_MODULE_0__["getSpeciesPlotKeys"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "SpeciesService", function() { return _public_api__WEBPACK_IMPORTED_MODULE_0__["SpeciesService"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "SpeciesTitlePipe", function() { return _public_api__WEBPACK_IMPORTED_MODULE_0__["SpeciesTitlePipe"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "TaxonomicSpeciesTitlePipe", function() { return _public_api__WEBPACK_IMPORTED_MODULE_0__["TaxonomicSpeciesTitlePipe"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "newGuid", function() { return _public_api__WEBPACK_IMPORTED_MODULE_0__["newGuid"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "NpnConfiguration", function() { return _public_api__WEBPACK_IMPORTED_MODULE_0__["NpnConfiguration"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "NPN_CONFIGURATION", function() { return _public_api__WEBPACK_IMPORTED_MODULE_0__["NPN_CONFIGURATION"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "detectIE", function() { return _public_api__WEBPACK_IMPORTED_MODULE_0__["detectIE"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "MonitorsDestroy", function() { return _public_api__WEBPACK_IMPORTED_MODULE_0__["MonitorsDestroy"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "SpeciesTitleFormat", function() { return _public_api__WEBPACK_IMPORTED_MODULE_0__["SpeciesTitleFormat"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "APPLICATION_SETTINGS", function() { return _public_api__WEBPACK_IMPORTED_MODULE_0__["APPLICATION_SETTINGS"]; });




/***/ }),

/***/ "../npn/common/src/lib/common/legend-doy.pipe.ts":
/*!*******************************************************!*\
  !*** ../npn/common/src/lib/common/legend-doy.pipe.ts ***!
  \*******************************************************/
/*! exports provided: LegendDoyPipe */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "LegendDoyPipe", function() { return LegendDoyPipe; });
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @angular/core */ "../../node_modules/@angular/core/fesm5/core.js");
/* harmony import */ var _angular_common__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @angular/common */ "../../node_modules/@angular/common/fesm5/common.js");
var __decorate = (undefined && undefined.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (undefined && undefined.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};


var JAN_ONE_2010 = new Date(2010 /*(new Date()).getFullYear()*/, 0);
var JAN_ONE_THIS_YEAR = new Date((new Date()).getFullYear(), 0);
var ONE_DAY = (24 * 60 * 60 * 1000);
/**
 * Simplified version of thirtyYearAvgDayOfYear that simply takes a number day of year
 * and returns a formatted date.  The optional second argument defines the date format
 * which defaults to 'MMM d'.  The optional third argument defines whether or not the
 * current year should be used as oposed to one known to have 365 days (2010).
 *
 * This filter equates doy 0 with doy 1 since legend scales are inconsistent in this regard.
 */
var LegendDoyPipe = /** @class */ (function () {
    function LegendDoyPipe(datePipe) {
        this.datePipe = datePipe;
    }
    LegendDoyPipe.prototype.transform = function (doy, fmt, current_year) {
        doy = Math.round(doy);
        if (doy === 0) {
            doy = 1;
        }
        fmt = fmt || 'MMM d'; // e.g. Jan 1
        return this.datePipe.transform(new Date((current_year ? JAN_ONE_THIS_YEAR : JAN_ONE_2010).getTime() + ((doy - 1) * ONE_DAY)), fmt);
    };
    LegendDoyPipe = __decorate([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Pipe"])({ name: 'legendDoy' }),
        __metadata("design:paramtypes", [_angular_common__WEBPACK_IMPORTED_MODULE_1__["DatePipe"]])
    ], LegendDoyPipe);
    return LegendDoyPipe;
}());



/***/ }),

/***/ "../npn/common/src/lib/common/monitors-destroy.ts":
/*!********************************************************!*\
  !*** ../npn/common/src/lib/common/monitors-destroy.ts ***!
  \********************************************************/
/*! exports provided: MonitorsDestroy */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "MonitorsDestroy", function() { return MonitorsDestroy; });
/* harmony import */ var rxjs__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! rxjs */ "../../node_modules/rxjs/_esm5/index.js");

/**
 * Simple base class that can be re-used in support of a common pattern where
 * Observable subscriptions may outlast the life of a given component.
 * Extending classes will have a simple Subject, `componentDestroyed` that will
 * emit a single time when the componene is destroyed.
 *
 * This class implenents `ngOnDestroy` so if an extending class over-rides that
 * function it should call the parent implementation or a leak might occur.
 *
 * E.g.
 * ```
 * anObservable.pipe(takeUntil(this.componentDestroyed)).subscribe(...);
 * ```
 */
var MonitorsDestroy = /** @class */ (function () {
    function MonitorsDestroy() {
        this.componentDestroyed = new rxjs__WEBPACK_IMPORTED_MODULE_0__["Subject"]();
    }
    MonitorsDestroy.prototype.ngOnDestroy = function () {
        this.componentDestroyed.next();
        this.componentDestroyed.complete();
    };
    return MonitorsDestroy;
}());



/***/ }),

/***/ "../npn/common/src/lib/common/network.service.ts":
/*!*******************************************************!*\
  !*** ../npn/common/src/lib/common/network.service.ts ***!
  \*******************************************************/
/*! exports provided: NetworkService */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "NetworkService", function() { return NetworkService; });
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @angular/core */ "../../node_modules/@angular/core/fesm5/core.js");
/* harmony import */ var _npn_service_utils_service__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./npn-service-utils.service */ "../npn/common/src/lib/common/npn-service-utils.service.ts");
var __decorate = (undefined && undefined.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (undefined && undefined.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};


var NetworkService = /** @class */ (function () {
    function NetworkService(serviceUtils) {
        this.serviceUtils = serviceUtils;
    }
    /**
     * Get all stations for a network or list of networks.
     *
     * @param networkIds A single networkId or an array of networkIds.
     */
    NetworkService.prototype.getStations = function (networkIds) {
        var ids = Array.isArray(networkIds) ? networkIds : [networkIds];
        var params = ids.reduce(function (map, id, i) {
            map["network_ids[" + i + "]"] = id;
            return map;
        }, {});
        return this.serviceUtils.cachedGet(this.serviceUtils.apiUrl('/npn_portal/stations/getAllStations.json'), params);
    };
    /**
     * Get station ids nearby to a network (functional for only networks with boundaries).
     *
     * @param networkId A single networkId
     * @param radius The radius to constrain the results by.
     */
    NetworkService.prototype.getNearbyStationIds = function (networkId, radius) {
        return this.serviceUtils.cachedGet(this.serviceUtils.dataApiUrl2("/v0/stations/nearby_stations/" + networkId + "/" + radius)).then(function (response) { return response.Station_IDs; });
    };
    /**
     * Get a single Network by id
     *
     * @todo unfortunate that this takes a single networkId and yet returns an array, the function should unwrap the response so callers don't have to.
     *
     * @param networkId The id of the Network to fetch.
     */
    NetworkService.prototype.getNetwork = function (networkId) {
        return this.serviceUtils.cachedGet(this.serviceUtils.dataApiUrl2("/v0/networks/" + networkId));
    };
    /**
     * Get a set of Networks by id.
     *
     * @param networkIds The networkIds.
     */
    NetworkService.prototype.getNetworks = function (networkIds) {
        var _this = this;
        // ARGH there is a service that can do this in one request but the dataApiUrl2 
        // service doesn't do this and we don't yet have a link to the new services (not sure if they should be used)
        // e.g. curl -X GET "https://data-dev.usanpn.org:3004/v0/networks?network_id=295,724" -H "accept: application/json"
        // in a development setup dataApiRoot2 is https://data-dev.usanpn.org/webservices (prefixed with /webservices and no 3004)
        /*
        return this.serviceUtils.cachedGet(
            this.serviceUtils.dataApiUrl2('/v0/networks'),
            {network_id:networkIds.join(',')}
        );*/
        // not re-using the getNetwork function because I think it should be fixed to not return an array
        // but currently fetching the networks with one request per which is less efficient than it could be
        return Promise.all(networkIds.map(function (id) { return _this.serviceUtils.cachedGet(_this.serviceUtils.dataApiUrl2("/v0/networks/" + id)); })).then(function (results) {
            // TODO: What to do when given a bad network id?
            return results.map(function (result) { return result.length == 1 ? result[0] : null; }).filter(function (network) { return !!network; });
        });
    };
    NetworkService = __decorate([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Injectable"])(),
        __metadata("design:paramtypes", [_npn_service_utils_service__WEBPACK_IMPORTED_MODULE_1__["NpnServiceUtils"]])
    ], NetworkService);
    return NetworkService;
}());



/***/ }),

/***/ "../npn/common/src/lib/common/npn-common.module.ts":
/*!*********************************************************!*\
  !*** ../npn/common/src/lib/common/npn-common.module.ts ***!
  \*********************************************************/
/*! exports provided: NPN_BASE_HREF, NpnCommonModule */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "NPN_BASE_HREF", function() { return NPN_BASE_HREF; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "NpnCommonModule", function() { return NpnCommonModule; });
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @angular/core */ "../../node_modules/@angular/core/fesm5/core.js");
/* harmony import */ var _angular_common_http__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @angular/common/http */ "../../node_modules/@angular/common/fesm5/http.js");
/* harmony import */ var _cache_service__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./cache.service */ "../npn/common/src/lib/common/cache.service.ts");
/* harmony import */ var _species_service__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./species.service */ "../npn/common/src/lib/common/species.service.ts");
/* harmony import */ var _network_service__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./network.service */ "../npn/common/src/lib/common/network.service.ts");
/* harmony import */ var _station_service__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./station.service */ "../npn/common/src/lib/common/station.service.ts");
/* harmony import */ var _species_title_pipe__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./species-title.pipe */ "../npn/common/src/lib/common/species-title.pipe.ts");
/* harmony import */ var _doy_pipe__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./doy.pipe */ "../npn/common/src/lib/common/doy.pipe.ts");
/* harmony import */ var _legend_doy_pipe__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ./legend-doy.pipe */ "../npn/common/src/lib/common/legend-doy.pipe.ts");
/* harmony import */ var _angular_common__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! @angular/common */ "../../node_modules/@angular/common/fesm5/common.js");
/* harmony import */ var _config__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ./config */ "../npn/common/src/lib/common/config.ts");
/* harmony import */ var _npn_service_utils_service__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! ./npn-service-utils.service */ "../npn/common/src/lib/common/npn-service-utils.service.ts");
/* harmony import */ var _npn_logo_component__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! ./npn-logo.component */ "../npn/common/src/lib/common/npn-logo.component.ts");
var __decorate = (undefined && undefined.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};













var NPN_BASE_HREF = new _angular_core__WEBPACK_IMPORTED_MODULE_0__["InjectionToken"]('npnBaseHref');
var NpnCommonModule = /** @class */ (function () {
    function NpnCommonModule() {
    }
    NpnCommonModule = __decorate([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["NgModule"])({
            imports: [
                _angular_common_http__WEBPACK_IMPORTED_MODULE_1__["HttpClientModule"]
            ],
            declarations: [
                _species_title_pipe__WEBPACK_IMPORTED_MODULE_6__["SpeciesTitlePipe"],
                _species_title_pipe__WEBPACK_IMPORTED_MODULE_6__["TaxonomicSpeciesTitlePipe"],
                _legend_doy_pipe__WEBPACK_IMPORTED_MODULE_8__["LegendDoyPipe"],
                _doy_pipe__WEBPACK_IMPORTED_MODULE_7__["DoyPipe"],
                _npn_logo_component__WEBPACK_IMPORTED_MODULE_12__["NpnLogoComponent"]
            ],
            exports: [
                _species_title_pipe__WEBPACK_IMPORTED_MODULE_6__["SpeciesTitlePipe"],
                _species_title_pipe__WEBPACK_IMPORTED_MODULE_6__["TaxonomicSpeciesTitlePipe"],
                _legend_doy_pipe__WEBPACK_IMPORTED_MODULE_8__["LegendDoyPipe"],
                _doy_pipe__WEBPACK_IMPORTED_MODULE_7__["DoyPipe"],
                _npn_logo_component__WEBPACK_IMPORTED_MODULE_12__["NpnLogoComponent"]
            ],
            providers: [
                _cache_service__WEBPACK_IMPORTED_MODULE_2__["CacheService"],
                _species_service__WEBPACK_IMPORTED_MODULE_3__["SpeciesService"],
                _network_service__WEBPACK_IMPORTED_MODULE_4__["NetworkService"],
                _station_service__WEBPACK_IMPORTED_MODULE_5__["StationService"],
                _npn_service_utils_service__WEBPACK_IMPORTED_MODULE_11__["NpnServiceUtils"],
                _species_title_pipe__WEBPACK_IMPORTED_MODULE_6__["SpeciesTitlePipe"],
                _species_title_pipe__WEBPACK_IMPORTED_MODULE_6__["TaxonomicSpeciesTitlePipe"],
                _angular_common__WEBPACK_IMPORTED_MODULE_9__["DatePipe"],
                _doy_pipe__WEBPACK_IMPORTED_MODULE_7__["DoyPipe"],
                _legend_doy_pipe__WEBPACK_IMPORTED_MODULE_8__["LegendDoyPipe"],
                { provide: NPN_BASE_HREF, useValue: '/' },
                {
                    provide: _config__WEBPACK_IMPORTED_MODULE_10__["NPN_CONFIGURATION"], useValue: {
                        apiRoot: '//www-dev.usanpn.org',
                        dataApiRoot: '//data-dev.usanpn.org:3006',
                        geoServerRoot: '//geoserver-dev.usanpn.org/geoserver'
                    }
                }
            ]
        })
    ], NpnCommonModule);
    return NpnCommonModule;
}());



/***/ }),

/***/ "../npn/common/src/lib/common/npn-logo.component.ts":
/*!**********************************************************!*\
  !*** ../npn/common/src/lib/common/npn-logo.component.ts ***!
  \**********************************************************/
/*! exports provided: NpnLogoComponent */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "NpnLogoComponent", function() { return NpnLogoComponent; });
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @angular/core */ "../../node_modules/@angular/core/fesm5/core.js");
var __decorate = (undefined && undefined.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (undefined && undefined.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};

var NpnLogoComponent = /** @class */ (function () {
    function NpnLogoComponent() {
        this.spin = false;
    }
    __decorate([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Input"])(), Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["HostBinding"])('class.spin'),
        __metadata("design:type", Boolean)
    ], NpnLogoComponent.prototype, "spin", void 0);
    NpnLogoComponent = __decorate([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Component"])({
            selector: 'npn-logo',
            template: "\n    <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 391 391\"><g>\n        <path class=\"swirl-top\" d=\"M182,1c-36.3,2.4-68.6,13.4-95.3,32.5c-5.6,4-11.8,8.7-13.7,10.4l-3.5,3L73,46c5.8-1.6,15.6-1.2,22.2,1.1\n                c9.4,3.1,19.3,10.1,30.3,21.3C137.1,80.2,145.6,91,168,122c17.1,23.8,26.5,34.3,39.5,44.2c16.2,12.4,28.9,16.3,49.5,15.5\n                c21.7-0.9,38.4-7.7,53.2-21.6c17.4-16.3,25.7-36.1,25.8-61c0-10.3,0-10.3-2.2-9.6c-21.5,6.6-48.9,3.2-72.9-9.1\n                c-27.3-14.1-51.2-45.7-48.4-64.1c0.7-5.1,6-11,10.6-12c5.3-1,3-2.1-5.8-2.7C199.9,0.4,193.3,0.3,182,1z\"/>\n        <path class=\"swirl-top\" d=\"M256.5,5.9c-8.8,0.9-11.6,1.9-13.9,5.3c-2.2,3.1-2,6.5,0.8,12.5c6.1,13.1,19.8,28.5,30.3,34\n                c11,5.9,28.3,8.6,41.2,6.4l6.5-1.1l8.2,4.5c4.5,2.5,8.7,4.5,9.3,4.5c2.5,0,0.8-4.1-3.6-9l-4.6-5.2l-0.1-10.2\n                c-0.1-9.3-0.4-10.7-3.3-16.7c-5.4-10.8-16-19.1-30-23.2C291.1,5.8,267.9,4.8,256.5,5.9z M315.8,40.2c2.7,2.7,0.7,7.8-2.9,7.8\n                c-2.1,0-4.9-2.6-4.9-4.5C308,40,313.3,37.7,315.8,40.2z\"/>\n        <path class=\"swirl-top\" d=\"M72.5,50.6c-9.9,2.3-10.4,2.6-18.8,11.3c-4.5,4.7-11.1,12.2-14.6,16.6c-9.7,12.3-26,37.8-23,35.9\n                c0.8-0.5,4.6-3,8.6-5.7c9.7-6.4,23.9-13.1,34.8-16.3c8-2.5,10.6-2.7,24-2.7s15.9,0.2,23.8,2.6c4.8,1.5,12.4,4.5,16.9,6.8l8.1,4.1\n                l-3.8-6.9c-11.6-20.8-25.7-37.2-36.6-42.2C85.7,51.2,76.8,49.6,72.5,50.6z\"/>\n        <path class=\"swirl-left\" d=\"M354.6,81.9c1.3,5,0.7,31.5-1,40.5c-4.6,24.2-16.5,43.5-35.4,57.4c-14.1,10.4-23.8,14.3-55.1,22.2\n                c-23.8,6-32.9,8.9-44.6,14.5c-22.7,10.9-35.8,23.3-45,42.6c-5.4,11.5-7.5,21.2-7.5,35.1c0,15.5,1.9,23.6,8.5,37.4\n                c10.3,21.3,27.7,35.9,51.2,43c7.6,2.4,10.6,2.7,22.3,2.8c15.3,0,23.2-1.5,34.5-6.7c19-8.6,31.2-17.5,48-34.8\n                c17.5-18,28.4-33.6,39.6-56.3c28.1-57.2,26.1-119.5-5.7-181.6C358.2,85.8,353.6,78.3,354.6,81.9z M329.4,194.2\n                c-30.6,42.4-63.6,80-84.9,96.8c-13.1,10.3-34,19-49.9,20.6l-6.4,0.7l-0.7-7.7c-1.4-14.8,2.6-33.4,9.7-45.3\n                c5-8.5,14.6-17.5,23.6-22.1c8.9-4.7,17.5-7.3,43.7-13.7c10.5-2.6,23.5-6.4,29.1-8.6c10.9-4.2,24.4-12.7,33.4-20.8\n                c3-2.8,5.7-5.1,5.8-5.1C333,189,331.5,191.4,329.4,194.2z\"/>\n        <path class=\"swirl-right\" d=\"M67.5,108c-17.8,3.8-37.3,16-48,30.2C8.7,152.5,3.6,167,2,187.1C-0.1,215,7.8,248,24.4,280.3\n                c34.1,66.3,95.1,104.5,174.1,109.1l9,0.5l-6.5-1.4c-56.1-12.9-106.1-51.7-136.8-106.2c-14.5-25.7-20.6-47.5-20.7-73.8\n                c0-23.4,4.2-40,14.8-57.7c4.2-6.9,12.6-17.3,13.4-16.5c0.2,0.3-1.6,4.5-4,9.3C58.6,161.8,55,177.6,55,199c0,37.8,14.2,78,39.4,111.7\n                c14.5,19.5,39,42.1,58.8,54.2c14.9,9,31.2,16.2,46.5,20.5c14.6,4,15.2,3.9,5.5-1.4c-45.2-24.2-65.1-62.5-55.7-107.3\n                c0.9-4.3,3.9-15.1,6.6-24c9.7-31.5,12.1-43.7,12-63c0-9.1-0.5-14.3-2.1-20.2C154.6,125.4,111.9,98.7,67.5,108z\"/>\n    </g></svg>\n    ",
            styles: ["\n    :host {\n        display: block;\n    }\n    svg {\n        width: 100%;\n        height: 100%;\n    }\n    :host.spin > svg {\n        animation-name: spin;\n        animation-duration: 1250ms;\n        animation-iteration-count: infinite;\n        animation-timing-function: linear;\n    }\n    @keyframes spin {\n        from { transform: rotate(0deg); }\n        to { transform: rotate(360deg); }\n    }\n    "]
        })
    ], NpnLogoComponent);
    return NpnLogoComponent;
}());



/***/ }),

/***/ "../npn/common/src/lib/common/npn-service-utils.service.ts":
/*!*****************************************************************!*\
  !*** ../npn/common/src/lib/common/npn-service-utils.service.ts ***!
  \*****************************************************************/
/*! exports provided: NpnServiceUtils */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "NpnServiceUtils", function() { return NpnServiceUtils; });
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @angular/core */ "../../node_modules/@angular/core/fesm5/core.js");
/* harmony import */ var _angular_common_http__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @angular/common/http */ "../../node_modules/@angular/common/fesm5/http.js");
/* harmony import */ var _cache_service__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./cache.service */ "../npn/common/src/lib/common/cache.service.ts");
/* harmony import */ var _config__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./config */ "../npn/common/src/lib/common/config.ts");
var __decorate = (undefined && undefined.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (undefined && undefined.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var __param = (undefined && undefined.__param) || function (paramIndex, decorator) {
    return function (target, key) { decorator(target, key, paramIndex); }
};




/**
 * @todo rename dataApi[2], etc. (along with NpnConfiguration) to be more meaningful.
 */
var NpnServiceUtils = /** @class */ (function () {
    function NpnServiceUtils(http, cache, config) {
        this.http = http;
        this.cache = cache;
        this.config = config;
    }
    NpnServiceUtils.prototype.apiUrl = function (suffix) {
        return "" + this.config.apiRoot + suffix;
    };
    NpnServiceUtils.prototype.dataApiUrl = function (suffix) {
        return "" + this.config.dataApiRoot + suffix;
    };
    NpnServiceUtils.prototype.dataApiUrl2 = function (suffix) {
        return "" + this.config.dataApiRoot2 + suffix;
    };
    NpnServiceUtils.prototype.geoServerUrl = function (suffix) {
        return "" + this.config.geoServerRoot + suffix;
    };
    NpnServiceUtils.prototype.popApipUrl = function (suffix) {
        return "" + this.config.popApiRoot + suffix;
    };
    Object.defineProperty(NpnServiceUtils.prototype, "dataApiUseStatisticsCache", {
        get: function () {
            return typeof (this.config.dataApiUseStatisticsCache) === 'boolean' ?
                this.config.dataApiUseStatisticsCache : false;
        },
        enumerable: true,
        configurable: true
    });
    NpnServiceUtils.prototype.get = function (url, params, asText) {
        params = params || {};
        return asText
            ? this.http.get(url, { params: params, responseType: 'text' }).toPromise()
            : this.http.get(url, { params: params }).toPromise();
    };
    NpnServiceUtils.prototype.cachedGet = function (url, params, asText) {
        var _this = this;
        params = params || {};
        var cacheKey = {
            u: url,
            params: params
        };
        var data = this.cache.get(cacheKey);
        if (data) {
            return Promise.resolve(data);
        }
        return this.get(url, params, asText)
            .then(function (data) {
            _this.cache.set(cacheKey, data);
            return data;
        });
    };
    /**
     * Allows a client to populate the cache with an object as would
     * be done by `cachedGet` or `cachedPost` so that subsequent calls
     * to either return this cached object.  This is useful in cases where
     * an error response from a server should be replaced with a default
     * (e.g. 404 cache a default for some resource).
     *
     * @param url
     * @param data
     * @param paramsOrBody
     */
    NpnServiceUtils.prototype.cachedSet = function (url, data, paramsOrBody) {
        paramsOrBody = paramsOrBody || {};
        var cacheKey = {
            u: url,
            params: paramsOrBody
        };
        this.cache.set(cacheKey, data);
        return data;
    };
    NpnServiceUtils.prototype.post = function (url, body) {
        return this.http.post(url, body, { headers: { 'Content-Type': 'application/x-www-form-urlencoded' } }).toPromise();
    };
    NpnServiceUtils.prototype.cachedPost = function (url, body) {
        var _this = this;
        var cacheKey = {
            u: url,
            params: body
        };
        var data = this.cache.get(cacheKey);
        if (data) {
            return Promise.resolve(data);
        }
        return this.post(url, body)
            .then(function (response) {
            _this.cache.set(cacheKey, response);
            return response;
        });
    };
    NpnServiceUtils = __decorate([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Injectable"])(),
        __param(2, Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Inject"])(_config__WEBPACK_IMPORTED_MODULE_3__["NPN_CONFIGURATION"])),
        __metadata("design:paramtypes", [_angular_common_http__WEBPACK_IMPORTED_MODULE_1__["HttpClient"],
            _cache_service__WEBPACK_IMPORTED_MODULE_2__["CacheService"],
            _config__WEBPACK_IMPORTED_MODULE_3__["NpnConfiguration"]])
    ], NpnServiceUtils);
    return NpnServiceUtils;
}());



/***/ }),

/***/ "../npn/common/src/lib/common/phenophase.ts":
/*!**************************************************!*\
  !*** ../npn/common/src/lib/common/phenophase.ts ***!
  \**************************************************/
/*! exports provided: Phenophase, TaxonomicPhenophaseRank */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "Phenophase", function() { return Phenophase; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "TaxonomicPhenophaseRank", function() { return TaxonomicPhenophaseRank; });
var Phenophase = /** @class */ (function () {
    function Phenophase() {
    }
    return Phenophase;
}());

var TaxonomicPhenophaseRank;
(function (TaxonomicPhenophaseRank) {
    TaxonomicPhenophaseRank["PHENOPHASE"] = "phenophase";
    TaxonomicPhenophaseRank["CLASS"] = "class";
})(TaxonomicPhenophaseRank || (TaxonomicPhenophaseRank = {}));


/***/ }),

/***/ "../npn/common/src/lib/common/public_api.ts":
/*!**************************************************!*\
  !*** ../npn/common/src/lib/common/public_api.ts ***!
  \**************************************************/
/*! exports provided: NpnCommonModule, NPN_BASE_HREF, CacheService, NetworkService, StationService, getStaticColor, DoyPipe, LegendDoyPipe, NpnServiceUtils, TaxonomicSpeciesRank, Phenophase, TaxonomicPhenophaseRank, STATIC_COLORS, getSpeciesPlotKeys, SpeciesService, SpeciesTitlePipe, TaxonomicSpeciesTitlePipe, newGuid, NpnConfiguration, NPN_CONFIGURATION, detectIE, MonitorsDestroy, SpeciesTitleFormat, APPLICATION_SETTINGS */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _npn_common_module__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./npn-common.module */ "../npn/common/src/lib/common/npn-common.module.ts");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "NpnCommonModule", function() { return _npn_common_module__WEBPACK_IMPORTED_MODULE_0__["NpnCommonModule"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "NPN_BASE_HREF", function() { return _npn_common_module__WEBPACK_IMPORTED_MODULE_0__["NPN_BASE_HREF"]; });

/* harmony import */ var _species__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./species */ "../npn/common/src/lib/common/species.ts");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "TaxonomicSpeciesRank", function() { return _species__WEBPACK_IMPORTED_MODULE_1__["TaxonomicSpeciesRank"]; });

/* harmony import */ var _phenophase__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./phenophase */ "../npn/common/src/lib/common/phenophase.ts");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "Phenophase", function() { return _phenophase__WEBPACK_IMPORTED_MODULE_2__["Phenophase"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "TaxonomicPhenophaseRank", function() { return _phenophase__WEBPACK_IMPORTED_MODULE_2__["TaxonomicPhenophaseRank"]; });

/* harmony import */ var _static_color__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./static-color */ "../npn/common/src/lib/common/static-color.ts");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "STATIC_COLORS", function() { return _static_color__WEBPACK_IMPORTED_MODULE_3__["STATIC_COLORS"]; });

/* harmony import */ var _cache_service__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./cache.service */ "../npn/common/src/lib/common/cache.service.ts");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "CacheService", function() { return _cache_service__WEBPACK_IMPORTED_MODULE_4__["CacheService"]; });

/* harmony import */ var _species_service__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./species.service */ "../npn/common/src/lib/common/species.service.ts");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "getSpeciesPlotKeys", function() { return _species_service__WEBPACK_IMPORTED_MODULE_5__["getSpeciesPlotKeys"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "SpeciesService", function() { return _species_service__WEBPACK_IMPORTED_MODULE_5__["SpeciesService"]; });

/* harmony import */ var _network_service__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./network.service */ "../npn/common/src/lib/common/network.service.ts");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "NetworkService", function() { return _network_service__WEBPACK_IMPORTED_MODULE_6__["NetworkService"]; });

/* harmony import */ var _station_service__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./station.service */ "../npn/common/src/lib/common/station.service.ts");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "StationService", function() { return _station_service__WEBPACK_IMPORTED_MODULE_7__["StationService"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "getStaticColor", function() { return _static_color__WEBPACK_IMPORTED_MODULE_3__["getStaticColor"]; });

/* harmony import */ var _species_title_pipe__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ./species-title.pipe */ "../npn/common/src/lib/common/species-title.pipe.ts");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "SpeciesTitlePipe", function() { return _species_title_pipe__WEBPACK_IMPORTED_MODULE_8__["SpeciesTitlePipe"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "TaxonomicSpeciesTitlePipe", function() { return _species_title_pipe__WEBPACK_IMPORTED_MODULE_8__["TaxonomicSpeciesTitlePipe"]; });

/* harmony import */ var _doy_pipe__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ./doy.pipe */ "../npn/common/src/lib/common/doy.pipe.ts");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "DoyPipe", function() { return _doy_pipe__WEBPACK_IMPORTED_MODULE_9__["DoyPipe"]; });

/* harmony import */ var _legend_doy_pipe__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ./legend-doy.pipe */ "../npn/common/src/lib/common/legend-doy.pipe.ts");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "LegendDoyPipe", function() { return _legend_doy_pipe__WEBPACK_IMPORTED_MODULE_10__["LegendDoyPipe"]; });

/* harmony import */ var _guid__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! ./guid */ "../npn/common/src/lib/common/guid.ts");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "newGuid", function() { return _guid__WEBPACK_IMPORTED_MODULE_11__["newGuid"]; });

/* harmony import */ var _config__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! ./config */ "../npn/common/src/lib/common/config.ts");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "NpnConfiguration", function() { return _config__WEBPACK_IMPORTED_MODULE_12__["NpnConfiguration"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "NPN_CONFIGURATION", function() { return _config__WEBPACK_IMPORTED_MODULE_12__["NPN_CONFIGURATION"]; });

/* harmony import */ var _npn_service_utils_service__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! ./npn-service-utils.service */ "../npn/common/src/lib/common/npn-service-utils.service.ts");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "NpnServiceUtils", function() { return _npn_service_utils_service__WEBPACK_IMPORTED_MODULE_13__["NpnServiceUtils"]; });

/* harmony import */ var _detect_ie__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(/*! ./detect-ie */ "../npn/common/src/lib/common/detect-ie.ts");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "detectIE", function() { return _detect_ie__WEBPACK_IMPORTED_MODULE_14__["detectIE"]; });

/* harmony import */ var _monitors_destroy__WEBPACK_IMPORTED_MODULE_15__ = __webpack_require__(/*! ./monitors-destroy */ "../npn/common/src/lib/common/monitors-destroy.ts");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "MonitorsDestroy", function() { return _monitors_destroy__WEBPACK_IMPORTED_MODULE_15__["MonitorsDestroy"]; });

/* harmony import */ var _application_settings__WEBPACK_IMPORTED_MODULE_16__ = __webpack_require__(/*! ./application-settings */ "../npn/common/src/lib/common/application-settings.ts");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "SpeciesTitleFormat", function() { return _application_settings__WEBPACK_IMPORTED_MODULE_16__["SpeciesTitleFormat"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "APPLICATION_SETTINGS", function() { return _application_settings__WEBPACK_IMPORTED_MODULE_16__["APPLICATION_SETTINGS"]; });





















/***/ }),

/***/ "../npn/common/src/lib/common/species-title.pipe.ts":
/*!**********************************************************!*\
  !*** ../npn/common/src/lib/common/species-title.pipe.ts ***!
  \**********************************************************/
/*! exports provided: SpeciesTitlePipe, TaxonomicSpeciesTitlePipe */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "SpeciesTitlePipe", function() { return SpeciesTitlePipe; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "TaxonomicSpeciesTitlePipe", function() { return TaxonomicSpeciesTitlePipe; });
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @angular/core */ "../../node_modules/@angular/core/fesm5/core.js");
/* harmony import */ var _application_settings__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./application-settings */ "../npn/common/src/lib/common/application-settings.ts");
/* harmony import */ var _species__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./species */ "../npn/common/src/lib/common/species.ts");
var __decorate = (undefined && undefined.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (undefined && undefined.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};



var SpeciesTitlePipe = /** @class */ (function () {
    function SpeciesTitlePipe() {
    }
    SpeciesTitlePipe.prototype.transform = function (item, format) {
        if (item) {
            switch (format || _application_settings__WEBPACK_IMPORTED_MODULE_1__["APPLICATION_SETTINGS"].speciesTitleFormat) {
                case _application_settings__WEBPACK_IMPORTED_MODULE_1__["SpeciesTitleFormat"].CommonName:
                    if (item.common_name) {
                        var lower = item.common_name.toLowerCase();
                        return lower.substring(0, 1).toUpperCase() + lower.substring(1);
                    }
                    return item.common_name;
                case _application_settings__WEBPACK_IMPORTED_MODULE_1__["SpeciesTitleFormat"].ScientificName:
                    return item && item.genus
                        ? item.genus + " " + item.species
                        : undefined;
            }
        }
        return item;
    };
    SpeciesTitlePipe = __decorate([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Pipe"])({ name: 'speciesTitle' })
    ], SpeciesTitlePipe);
    return SpeciesTitlePipe;
}());

var TaxonomicSpeciesTitlePipe = /** @class */ (function () {
    function TaxonomicSpeciesTitlePipe(speciesTitle) {
        this.speciesTitle = speciesTitle;
    }
    TaxonomicSpeciesTitlePipe.prototype.transform = function (item, rank, format) {
        if (rank === void 0) { rank = _species__WEBPACK_IMPORTED_MODULE_2__["TaxonomicSpeciesRank"].SPECIES; }
        if (format === void 0) { format = _application_settings__WEBPACK_IMPORTED_MODULE_1__["APPLICATION_SETTINGS"].speciesTitleFormat; }
        if (item && typeof (item) === 'object') {
            var o = void 0;
            switch (rank) {
                case _species__WEBPACK_IMPORTED_MODULE_2__["TaxonomicSpeciesRank"].SPECIES:
                    o = item;
                    return this.speciesTitle.transform(o, format);
                case _species__WEBPACK_IMPORTED_MODULE_2__["TaxonomicSpeciesRank"].CLASS:
                    o = item;
                    return format === _application_settings__WEBPACK_IMPORTED_MODULE_1__["SpeciesTitleFormat"].CommonName
                        ? o.class_common_name || o.class_name + " (Scientific)" // || should not be necessary
                        : o.class_name;
                case _species__WEBPACK_IMPORTED_MODULE_2__["TaxonomicSpeciesRank"].ORDER:
                    o = item;
                    return format === _application_settings__WEBPACK_IMPORTED_MODULE_1__["SpeciesTitleFormat"].CommonName
                        ? o.order_common_name || o.order_name + " (Scientific)" // || should not be necessary
                        : o.order_name;
                case _species__WEBPACK_IMPORTED_MODULE_2__["TaxonomicSpeciesRank"].FAMILY:
                    o = item;
                    return format === _application_settings__WEBPACK_IMPORTED_MODULE_1__["SpeciesTitleFormat"].CommonName
                        ? o.family_common_name || o.family_name + " (Scientific)" // || should not be necessary
                        : o.family_name;
                case _species__WEBPACK_IMPORTED_MODULE_2__["TaxonomicSpeciesRank"].GENUS:
                    o = item;
                    return format === _application_settings__WEBPACK_IMPORTED_MODULE_1__["SpeciesTitleFormat"].CommonName
                        ? o.genus_common_name || o.genus + " (Scientific)" // || should not be necessary
                        : o.genus;
            }
        }
        return item;
    };
    TaxonomicSpeciesTitlePipe = __decorate([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Pipe"])({ name: 'taxonomicSpeciesTitle' }),
        __metadata("design:paramtypes", [SpeciesTitlePipe])
    ], TaxonomicSpeciesTitlePipe);
    return TaxonomicSpeciesTitlePipe;
}());



/***/ }),

/***/ "../npn/common/src/lib/common/species.service.ts":
/*!*******************************************************!*\
  !*** ../npn/common/src/lib/common/species.service.ts ***!
  \*******************************************************/
/*! exports provided: getSpeciesPlotKeys, SpeciesService */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "getSpeciesPlotKeys", function() { return getSpeciesPlotKeys; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "SpeciesService", function() { return SpeciesService; });
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @angular/core */ "../../node_modules/@angular/core/fesm5/core.js");
/* harmony import */ var _angular_common__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @angular/common */ "../../node_modules/@angular/common/fesm5/common.js");
/* harmony import */ var _angular_common_http__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @angular/common/http */ "../../node_modules/@angular/common/fesm5/http.js");
/* harmony import */ var _species__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./species */ "../npn/common/src/lib/common/species.ts");
/* harmony import */ var _phenophase__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./phenophase */ "../npn/common/src/lib/common/phenophase.ts");
/* harmony import */ var _npn_service_utils_service__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./npn-service-utils.service */ "../npn/common/src/lib/common/npn-service-utils.service.ts");
var __decorate = (undefined && undefined.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (undefined && undefined.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};






/**
 * @param plot The plot
 * @return {SpeciesPlotKeys} The names of the id keys associated with data records.
 */
function getSpeciesPlotKeys(plot) {
    var speciesIdKey;
    var phenophaseIdKey;
    switch (plot.speciesRank || _species__WEBPACK_IMPORTED_MODULE_3__["TaxonomicSpeciesRank"].SPECIES) {
        case _species__WEBPACK_IMPORTED_MODULE_3__["TaxonomicSpeciesRank"].SPECIES:
            speciesIdKey = 'species_id';
            break;
        case _species__WEBPACK_IMPORTED_MODULE_3__["TaxonomicSpeciesRank"].CLASS:
            speciesIdKey = 'class_id';
            break;
        case _species__WEBPACK_IMPORTED_MODULE_3__["TaxonomicSpeciesRank"].ORDER:
            speciesIdKey = 'order_id';
            break;
        case _species__WEBPACK_IMPORTED_MODULE_3__["TaxonomicSpeciesRank"].FAMILY:
            speciesIdKey = 'family_id';
            break;
        case _species__WEBPACK_IMPORTED_MODULE_3__["TaxonomicSpeciesRank"].GENUS:
            speciesIdKey = 'genus_id';
            break;
    }
    switch (plot.phenophaseRank || _phenophase__WEBPACK_IMPORTED_MODULE_4__["TaxonomicPhenophaseRank"].PHENOPHASE) {
        case _phenophase__WEBPACK_IMPORTED_MODULE_4__["TaxonomicPhenophaseRank"].PHENOPHASE:
            phenophaseIdKey = 'phenophase_id';
            break;
        case _phenophase__WEBPACK_IMPORTED_MODULE_4__["TaxonomicPhenophaseRank"].CLASS:
            phenophaseIdKey = 'pheno_class_id';
            break;
    }
    return { speciesIdKey: speciesIdKey, phenophaseIdKey: phenophaseIdKey };
}
function mapByNumericId(list, key) {
    return list.reduce(function (map, o) {
        if (typeof (o[key]) === 'number') {
            map[o[key]] = o;
        }
        return map;
    }, {});
}
var SpeciesService = /** @class */ (function () {
    function SpeciesService(serviceUtils, datePipe) {
        this.serviceUtils = serviceUtils;
        this.datePipe = datePipe;
        // all species related results are cached locally but not in the session cache since they can get large
        this.higherSpeciesCache = {};
    }
    SpeciesService.prototype.getAllSpecies = function (params) {
        // NOTE: when there are multiple species phenophase controls on the screen the result can
        // be multiple simultaneous queries...
        //console.log('SpeciesService.getAllSpecies:params', params);
        params = params || {};
        var url = this.serviceUtils.apiUrl('/npn_portal/species/getSpeciesFilter.json');
        var postParams = new _angular_common_http__WEBPACK_IMPORTED_MODULE_2__["HttpParams"]();
        Object.keys(params).forEach(function (key) { return postParams = postParams.set("" + key, "" + params[key]); });
        return this.serviceUtils.cachedPost(url, postParams.toString());
    };
    SpeciesService.prototype._allSpecies = function (params) {
        if (params === void 0) { params = new _angular_common_http__WEBPACK_IMPORTED_MODULE_2__["HttpParams"](); }
        params = params.set('include_restricted', 'false');
        var input = params.toString();
        var cacheKey = this.serviceUtils.cache.cacheKey({ service: 'getSpecies', input: input });
        if (!this.higherSpeciesCache[cacheKey]) {
            return this.higherSpeciesCache[cacheKey] = this.serviceUtils.post(this.serviceUtils.apiUrl('/npn_portal/species/getSpecies.json'), input);
        }
        return this.higherSpeciesCache[cacheKey].then(function (results) { return JSON.parse(JSON.stringify(results)); });
    };
    SpeciesService.prototype._filterSpecies = function (params) {
        if (params === void 0) { params = new _angular_common_http__WEBPACK_IMPORTED_MODULE_2__["HttpParams"](); }
        var input = params.toString();
        var cacheKey = this.serviceUtils.cache.cacheKey({ service: 'getSpeciesFilter', input: input });
        if (!this.higherSpeciesCache[cacheKey]) {
            return this.higherSpeciesCache[cacheKey] = this.serviceUtils.post(this.serviceUtils.apiUrl('/npn_portal/species/getSpeciesFilter.json'), input);
        }
        return this.higherSpeciesCache[cacheKey].then(function (results) { return JSON.parse(JSON.stringify(results)); });
    };
    /**
     * Creates Promises/requests to get species data for a set of years.  The resulting data will almost
     * certainly contain duplicates.
     *
     * @param params The base HttpParams to use when retrieving species (via /npn_portal/species/getSpeciesFilter.json)
     * @param years The years to request species for.
     */
    SpeciesService.prototype._allSpeciesPromises = function (params, years) {
        var _this = this;
        if (params === void 0) { params = new _angular_common_http__WEBPACK_IMPORTED_MODULE_2__["HttpParams"](); }
        if (years === void 0) { years = []; }
        years = years || []; // in case null is actually passed in
        // if we aren't doing any filtering then use the getSpecies service because
        // it's much faster for that use case, it just doesn't return numbers of observations
        if (!years.length && !params.keys().length) {
            return [this._allSpecies(params)];
        }
        return !years.length
            ? [this._filterSpecies(params)]
            // sets of input request parameters for filtering
            // e.g. [2013,2010,2012] ->
            // [['2010-01-01','2010-12-31'],['2012-01-01','2013-12-31']]
            : years.slice().sort().reduce(function (rngs, year) {
                if (!rngs.length) {
                    rngs[0] = [year, year];
                }
                else {
                    var rng = rngs[rngs.length - 1];
                    if (rng[1] === year - 1) {
                        rng[1] = year;
                    }
                    else {
                        rngs.push([year, year]);
                    }
                }
                return rngs;
            }, [])
                //.map(range => [`${range[0]}-01-01`,`${range[1]}-12-31`])
                .map(function (range) { return _this._filterSpecies(params.set('start_date', range[0] + "-01-01").set('end_date', range[1] + "-12-31")); });
    };
    /**
     * Requests species data for a set of years and consolidates the results into a single array of `TaxonomicSpecies`.
     *
     * @param params The base HttpParams to use when retrieving species (via /npn_portal/species/getSpeciesFilter.json)
     * @param years The years to request species for.
     */
    SpeciesService.prototype.getAllSpeciesConsolidated = function (params, years) {
        if (params === void 0) { params = new _angular_common_http__WEBPACK_IMPORTED_MODULE_2__["HttpParams"](); }
        if (years === void 0) { years = null; }
        return Promise.all(this._allSpeciesPromises(params, years))
            .then(function (results) {
            console.log('getAllSpeciesConsolidated.results', results.map(function (r) { return r.length; }).join(', '));
            var consolidated;
            if (results.length === 1) {
                consolidated = results[0]; // nothing to consolidate
            }
            else {
                var idMap_1 = {};
                consolidated = results.reduce(function (set, list) {
                    list.forEach(function (species) {
                        var species_id = species.species_id;
                        if (idMap_1[species_id]) {
                            // already in set, bump observation count
                            //console.log(`getAllSpeciesConsolidated.consolidating species observations [${species_id}] ${idMap[species_id].number_observations} + ${species.number_observations}`);
                            idMap_1[species_id].number_observations += species.number_observations;
                        }
                        else {
                            set.push(idMap_1[species_id] = species);
                        }
                    });
                    return set;
                }, []);
            }
            if (consolidated.length && typeof (consolidated[0].number_observations) === 'number') {
                // sort by number_observations
                consolidated.sort(function (a, b) { return b.number_observations - a.number_observations; });
            }
            console.log('getAllSpeciesConsolidated.consolidated', consolidated.length);
            return consolidated;
        });
    };
    /**
     * Requests species data for a set of years and organizes the results into an instance of `SpeciesTaxonomicInfo`.
     *
     * @param params The base HttpParams to use when retrieving species (via /npn_portal/species/getSpeciesFilter.json)
     * @param years The years to request species for.
     */
    SpeciesService.prototype.getAllSpeciesHigher = function (params, years) {
        if (params === void 0) { params = new _angular_common_http__WEBPACK_IMPORTED_MODULE_2__["HttpParams"](); }
        if (years === void 0) { years = null; }
        return this.getAllSpeciesConsolidated(params, years)
            .then(function (species) {
            var gatherById = function (key) { return mapByNumericId(species, key); };
            var classIds = gatherById('class_id');
            var orderIds = gatherById('order_id');
            var familyIds = gatherById('family_id');
            var genusIds = gatherById('genus_id');
            return {
                species: species,
                classes: Object.keys(classIds).map(function (id) {
                    var _a = classIds[id], class_id = _a.class_id, class_name = _a.class_name, class_common_name = _a.class_common_name, kingdom = _a.kingdom;
                    return { class_id: class_id, class_name: class_name, class_common_name: class_common_name, kingdom: kingdom };
                })
                    .filter(function (r) { return !!r.class_id && !!r.class_name; } /* && !!r.class_common_name*/) // keep only complete records
                /*.sort((a,b) => a.class_common_name.localeCompare(b.class_common_name))*/ ,
                orders: Object.keys(orderIds).map(function (id) {
                    var _a = orderIds[id], order_id = _a.order_id, order_name = _a.order_name, order_common_name = _a.order_common_name, kingdom = _a.kingdom;
                    return { order_id: order_id, order_name: order_name, order_common_name: order_common_name, kingdom: kingdom };
                })
                    .filter(function (r) { return !!r.order_id && !!r.order_name; } /* && !!r.order_common_name*/) // keep only complete records
                /*.sort((a,b) => a.order_common_name.localeCompare(b.order_common_name))*/ ,
                families: Object.keys(familyIds).map(function (id) {
                    var _a = familyIds[id], family_id = _a.family_id, family_name = _a.family_name, family_common_name = _a.family_common_name, kingdom = _a.kingdom;
                    return { family_id: family_id, family_name: family_name, family_common_name: family_common_name, kingdom: kingdom };
                })
                    .filter(function (r) { return !!r.family_id && !!r.family_name; } /* && !!r.family_common_name*/) // keep only complete records
                /*.sort((a,b) => a.family_common_name.localeCompare(b.family_common_name))*/ ,
                genera: Object.keys(genusIds).map(function (id) {
                    var _a = genusIds[id], genus_id = _a.genus_id, genus = _a.genus, genus_common_name = _a.genus_common_name, kingdom = _a.kingdom;
                    return { genus_id: genus_id, genus: genus, genus_common_name: genus_common_name, kingdom: kingdom };
                })
                    .filter(function (r) { return !!r.genus_id && !!r.genus; } /* && !!r.family_common_name*/) // keep only complete records
                /*.sort((a,b) => a.family_common_name.localeCompare(b.family_common_name))*/
            };
        });
    };
    /**
     * Flatten a list of SpeciesPlots into the list of species_ids that they constitute.
     *
     * @param plots
     * @return {Promise<number []>} Promise resolved with the set of species_ids.
     */
    SpeciesService.prototype.getSpeciesIds = function (plots) {
        return this.getAllSpeciesHigher()
            .then(function (info) { return plots.reduce(function (ids, plot) {
            var addId = function (id) {
                if (ids.indexOf(id) === -1) {
                    ids.push(id);
                }
            };
            var keys = getSpeciesPlotKeys(plot);
            var taxId;
            switch (plot.speciesRank || _species__WEBPACK_IMPORTED_MODULE_3__["TaxonomicSpeciesRank"].SPECIES) {
                case _species__WEBPACK_IMPORTED_MODULE_3__["TaxonomicSpeciesRank"].SPECIES:
                    taxId = plot.species.species_id;
                    break;
                case _species__WEBPACK_IMPORTED_MODULE_3__["TaxonomicSpeciesRank"].CLASS:
                    taxId = plot.species.class_id;
                    break;
                case _species__WEBPACK_IMPORTED_MODULE_3__["TaxonomicSpeciesRank"].ORDER:
                    taxId = plot.species.order_id;
                    break;
                case _species__WEBPACK_IMPORTED_MODULE_3__["TaxonomicSpeciesRank"].FAMILY:
                    taxId = plot.species.family_id;
                    break;
                case _species__WEBPACK_IMPORTED_MODULE_3__["TaxonomicSpeciesRank"].GENUS:
                    taxId = plot.species.genus_id;
                    break;
            }
            // pull out all species that match and add them to the set
            info.species.filter(function (species) { return species[keys.speciesIdKey] == taxId; })
                .forEach(function (species) { return addId(species.species_id); });
            return ids;
        }, []); });
    };
    SpeciesService.prototype.generatePhenophaseTaxonomicInfo = function (phenophases) {
        var phenoClassIds = mapByNumericId(phenophases, 'pheno_class_id');
        return {
            phenophases: phenophases,
            classes: Object.keys(phenoClassIds).map(function (id) {
                var _a = phenoClassIds[id], pheno_class_id = _a.pheno_class_id, pheno_class_name = _a.pheno_class_name, pheno_class_sequence = _a.pheno_class_sequence;
                return { pheno_class_id: pheno_class_id, pheno_class_name: pheno_class_name, pheno_class_sequence: pheno_class_sequence };
            })
                .filter(function (r) { return !!r.pheno_class_id && !!r.pheno_class_name; })
                .sort(function (a, b) {
                if (a.pheno_class_sequence > b.pheno_class_sequence) {
                    return 1;
                }
                else if (a.pheno_class_sequence < b.pheno_class_sequence) {
                    return -1;
                }
                else {
                    return 0;
                }
            })
        };
    };
    SpeciesService.prototype._getPhenophases = function (species, rank, date) {
        var _this = this;
        var params = {};
        var url = rank === _species__WEBPACK_IMPORTED_MODULE_3__["TaxonomicSpeciesRank"].SPECIES
            ? this.serviceUtils.apiUrl('/npn_portal/phenophases/getPhenophasesForSpecies.json')
            : this.serviceUtils.apiUrl('/npn_portal/phenophases/getPhenophasesForTaxon.json');
        var o;
        switch (rank) {
            case _species__WEBPACK_IMPORTED_MODULE_3__["TaxonomicSpeciesRank"].SPECIES:
                o = species;
                params.species_id = o.species_id;
                break;
            case _species__WEBPACK_IMPORTED_MODULE_3__["TaxonomicSpeciesRank"].CLASS:
                o = species;
                params.class_id = o.class_id;
                break;
            case _species__WEBPACK_IMPORTED_MODULE_3__["TaxonomicSpeciesRank"].ORDER:
                o = species;
                params.order_id = o.order_id;
                break;
            case _species__WEBPACK_IMPORTED_MODULE_3__["TaxonomicSpeciesRank"].FAMILY:
                o = species;
                params.family_id = o.family_id;
                break;
            case _species__WEBPACK_IMPORTED_MODULE_3__["TaxonomicSpeciesRank"].GENUS:
                o = species;
                params.genus_id = o.genus_id;
                break;
        }
        if (date) {
            params.date = this.datePipe.transform(date, 'y-MM-dd');
        }
        else {
            params.return_all = true;
        }
        return this.serviceUtils.cachedGet(url, params)
            .then(function (phases) { return phases && phases.length
            ? _this.removeRedundantPhenophases(phases[0].phenophases)
            : []; });
    };
    SpeciesService.prototype._getPhenodefinitions = function (species, rank, date) {
        var _this = this;
        var params = {};
        var url = rank === _species__WEBPACK_IMPORTED_MODULE_3__["TaxonomicSpeciesRank"].SPECIES
            ? this.serviceUtils.apiUrl('/npn_portal/phenophases/getPhenophasesForSpecies.json')
            : this.serviceUtils.apiUrl('/npn_portal/phenophases/getPhenophasesForTaxon.json');
        var o;
        switch (rank) {
            case _species__WEBPACK_IMPORTED_MODULE_3__["TaxonomicSpeciesRank"].SPECIES:
                o = species;
                params.species_id = o.species_id;
                break;
            case _species__WEBPACK_IMPORTED_MODULE_3__["TaxonomicSpeciesRank"].CLASS:
                o = species;
                params.class_id = o.class_id;
                break;
            case _species__WEBPACK_IMPORTED_MODULE_3__["TaxonomicSpeciesRank"].ORDER:
                o = species;
                params.order_id = o.order_id;
                break;
            case _species__WEBPACK_IMPORTED_MODULE_3__["TaxonomicSpeciesRank"].FAMILY:
                o = species;
                params.family_id = o.family_id;
                break;
            case _species__WEBPACK_IMPORTED_MODULE_3__["TaxonomicSpeciesRank"].GENUS:
                o = species;
                params.genus_id = o.genus_id;
                break;
        }
        if (date) {
            params.date = this.datePipe.transform(date, 'y-MM-dd');
        }
        else {
            params.return_all = true;
        }
        return this.serviceUtils.cachedGet(url, params)
            .then(function (phases) { return phases && phases.length
            ? _this.removeRedundantPhenodefinitions(phases[0].phenophases)
            : []; });
    };
    SpeciesService.prototype.getAllPhenophases = function (species, rank) {
        return this._getPhenophases(species, rank);
    };
    SpeciesService.prototype.getAllPhenodefinitions = function (species, rank) {
        return this._getPhenodefinitions(species, rank);
    };
    SpeciesService.prototype.getPhenophasesForDate = function (species, rank, date) {
        return this._getPhenophases(species, rank, date);
    };
    SpeciesService.prototype.getPhenodefinitionsForDate = function (species, rank, date) {
        return this._getPhenodefinitions(species, rank, date);
    };
    SpeciesService.prototype.getPhenophasesForYear = function (species, rank, year) {
        var _this = this;
        var jan1 = new Date(year, 0, 1), dec31 = new Date(year, 11, 31);
        return Promise.all([
            this.getPhenophasesForDate(species, rank, jan1),
            this.getPhenophasesForDate(species, rank, dec31)
        ]).then(function (lists) { return _this.mergeRedundantPhenophaseLists(lists); });
    };
    SpeciesService.prototype.getPhenodefinitionsForYear = function (species, rank, year) {
        var _this = this;
        var jan1 = new Date(year, 0, 1), dec31 = new Date(year, 11, 31);
        return Promise.all([
            this.getPhenodefinitionsForDate(species, rank, jan1),
            this.getPhenodefinitionsForDate(species, rank, dec31)
        ]).then(function (lists) { return _this.mergeRedundantPhenodefinitionLists(lists); });
    };
    SpeciesService.prototype.getPhenophasesForYears = function (species, rank, years) {
        var _this = this;
        return Promise.all(years.map(function (y) { return _this.getPhenophasesForYear(species, rank, y); }))
            .then(function (lists) { return _this.mergeRedundantPhenophaseLists(lists); });
    };
    SpeciesService.prototype.getPhenodefinitionsForYears = function (species, rank, years) {
        var _this = this;
        return Promise.all(years.map(function (y) { return _this.getPhenodefinitionsForYear(species, rank, y); }))
            .then(function (lists) { return _this.mergeRedundantPhenodefinitionLists(lists); });
    };
    SpeciesService.prototype.getPhenophasesContiguousYears = function (species, rank, startYear, endYear) {
        if (startYear) {
            if (startYear && !endYear) {
                throw new Error('Missing end year.');
            }
            if (startYear > endYear) {
                throw new Error('start year cannot be greater than end');
            }
            var years = [startYear], i = startYear;
            while (i++ < endYear) {
                years.push(i);
            }
            return this.getPhenophasesForYears(species, rank, years);
        }
        return this.getAllPhenophases(species, rank);
    };
    SpeciesService.prototype.removeRedundantPhenophases = function (list) {
        var seen = [];
        return list.filter(function (pp) {
            if (seen[pp.phenophase_id]) {
                return false;
            }
            seen[pp.phenophase_id] = pp;
            return true;
        });
    };
    SpeciesService.prototype.removeRedundantPhenodefinitions = function (list) {
        var seen = {};
        return list.filter(function (pp) {
            if (seen[pp.phenophase_id]) {
                return false;
            }
            seen[pp.phenophase_id] = pp;
            return true;
        });
    };
    SpeciesService.prototype.mergeRedundantPhenophaseLists = function (lists) {
        return this.removeRedundantPhenophases(lists.reduce(function (arr, l) {
            return arr.concat(l);
        }, []));
    };
    SpeciesService.prototype.mergeRedundantPhenodefinitionLists = function (lists) {
        return this.removeRedundantPhenodefinitions(lists.reduce(function (arr, l) {
            return arr.concat(l);
        }, []));
    };
    SpeciesService = __decorate([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Injectable"])(),
        __metadata("design:paramtypes", [_npn_service_utils_service__WEBPACK_IMPORTED_MODULE_5__["NpnServiceUtils"], _angular_common__WEBPACK_IMPORTED_MODULE_1__["DatePipe"]])
    ], SpeciesService);
    return SpeciesService;
}());



/***/ }),

/***/ "../npn/common/src/lib/common/species.ts":
/*!***********************************************!*\
  !*** ../npn/common/src/lib/common/species.ts ***!
  \***********************************************/
/*! exports provided: TaxonomicSpeciesRank */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "TaxonomicSpeciesRank", function() { return TaxonomicSpeciesRank; });
var TaxonomicSpeciesRank;
(function (TaxonomicSpeciesRank) {
    TaxonomicSpeciesRank["SPECIES"] = "species";
    TaxonomicSpeciesRank["GENUS"] = "genus";
    TaxonomicSpeciesRank["FAMILY"] = "family";
    TaxonomicSpeciesRank["ORDER"] = "order";
    TaxonomicSpeciesRank["CLASS"] = "class";
})(TaxonomicSpeciesRank || (TaxonomicSpeciesRank = {}));


/***/ }),

/***/ "../npn/common/src/lib/common/static-color.ts":
/*!****************************************************!*\
  !*** ../npn/common/src/lib/common/static-color.ts ***!
  \****************************************************/
/*! exports provided: STATIC_COLORS, getStaticColor */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "STATIC_COLORS", function() { return STATIC_COLORS; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "getStaticColor", function() { return getStaticColor; });
var STATIC_COLORS = [
    '#1f77b4', '#ff7f0e', '#2ca02c', '#d62728', '#222299', '#c51b8a', '#8c564b', '#637939', '#843c39',
    '#5254a3', '#636363',
    '#bcbd22', '#7b4173', '#e7ba52', '#222299', '#f03b20', '#1b9e77', '#e377c2', '#ef8a62', '#91cf60', '#9467bd'
];
/**
 * Fetches a color by numeric index.  The domain of colors is finite so if the
 * index overflows the array then it will wrap around as necessary.
 * I.e. if index=colors.length+1 index=0
 * @param index The numeric index to fetch a color for.
 */
function getStaticColor(index) {
    return STATIC_COLORS[index % STATIC_COLORS.length];
}


/***/ }),

/***/ "../npn/common/src/lib/common/station.service.ts":
/*!*******************************************************!*\
  !*** ../npn/common/src/lib/common/station.service.ts ***!
  \*******************************************************/
/*! exports provided: StationService */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "StationService", function() { return StationService; });
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @angular/core */ "../../node_modules/@angular/core/fesm5/core.js");
/* harmony import */ var _npn_service_utils_service__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./npn-service-utils.service */ "../npn/common/src/lib/common/npn-service-utils.service.ts");
var __decorate = (undefined && undefined.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (undefined && undefined.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};


var StationService = /** @class */ (function () {
    function StationService(serviceUtils) {
        this.serviceUtils = serviceUtils;
    }
    StationService.prototype.getStation = function (stationId) {
        // fetching an individual station is rather rare, not using the cache
        // since if a user is poking around how likely is it they will click the same
        // station marker repeatedly?
        return this.serviceUtils.get(this.serviceUtils.apiUrl('/npn_portal/stations/getStationDetails.json'), { ids: "" + stationId })
            .then(function (results) { return results && results.length ? results[0] : null; });
    };
    StationService = __decorate([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Injectable"])(),
        __metadata("design:paramtypes", [_npn_service_utils_service__WEBPACK_IMPORTED_MODULE_1__["NpnServiceUtils"]])
    ], StationService);
    return StationService;
}());



/***/ }),

/***/ "../npn/common/src/lib/gridded/boundary.service.ts":
/*!*********************************************************!*\
  !*** ../npn/common/src/lib/gridded/boundary.service.ts ***!
  \*********************************************************/
/*! exports provided: BoundaryService */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "BoundaryService", function() { return BoundaryService; });
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @angular/core */ "../../node_modules/@angular/core/fesm5/core.js");
/* harmony import */ var _common__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../common */ "../npn/common/src/lib/common/index.ts");
/* harmony import */ var rxjs__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! rxjs */ "../../node_modules/rxjs/_esm5/index.js");
var __assign = (undefined && undefined.__assign) || Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
        s = arguments[i];
        for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
            t[p] = s[p];
    }
    return t;
};
var __decorate = (undefined && undefined.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (undefined && undefined.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};



var BOUNDARY_API_ROOT = '/v0/boundaries';
var BoundaryService = /** @class */ (function () {
    function BoundaryService(serviceUtils) {
        this.serviceUtils = serviceUtils;
        this._boundaryCache = {};
    }
    BoundaryService.prototype.getBoundaryTypes = function () {
        return Object(rxjs__WEBPACK_IMPORTED_MODULE_2__["from"])(this.serviceUtils.cachedGet(this.serviceUtils.dataApiUrl2(BOUNDARY_API_ROOT + "/types")));
    };
    BoundaryService.prototype.getBoundaries = function (typeId) {
        if (!this._boundaryCache[typeId]) {
            this._boundaryCache[typeId] = this.serviceUtils.get(this.serviceUtils.dataApiUrl2("" + BOUNDARY_API_ROOT), { type_id: "\"" + typeId + "\"" })
                .then(function (boundaries) { return (boundaries || []).sort(function (a, b) { return a.name.localeCompare(b.name); }); });
        }
        return Object(rxjs__WEBPACK_IMPORTED_MODULE_2__["from"])(this._boundaryCache[typeId]);
    };
    BoundaryService.prototype.boundariesToFeatureCollection = function (boundaries) {
        return {
            type: 'FeatureCollection',
            features: boundaries.map(function (b) { return ({
                type: 'Feature',
                geometry: b.full.geometry,
                properties: __assign({}, b, { full: undefined })
            }); })
        };
    };
    BoundaryService = __decorate([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Injectable"])(),
        __metadata("design:paramtypes", [_common__WEBPACK_IMPORTED_MODULE_1__["NpnServiceUtils"]])
    ], BoundaryService);
    return BoundaryService;
}());



/***/ }),

/***/ "../npn/common/src/lib/gridded/default-map-layer-legend.ts":
/*!*****************************************************************!*\
  !*** ../npn/common/src/lib/gridded/default-map-layer-legend.ts ***!
  \*****************************************************************/
/*! exports provided: DefaultMapLayerLegend */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "DefaultMapLayerLegend", function() { return DefaultMapLayerLegend; });
/* harmony import */ var _wms_map_layer_legend__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./wms-map-layer-legend */ "../npn/common/src/lib/gridded/wms-map-layer-legend.ts");
var __extends = (undefined && undefined.__extends) || (function () {
    var extendStatics = Object.setPrototypeOf ||
        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();

var DefaultMapLayerLegend = /** @class */ (function (_super) {
    __extends(DefaultMapLayerLegend, _super);
    function DefaultMapLayerLegend(griddedPipes) {
        var _this = _super.call(this, null, // no corresponding layer so no gridded functionality
        griddedPipes, [
            { quantity: -9999, color: '', original_label: '', label: '' },
            { quantity: 0, color: 'rgb(62,38,168)', original_label: '', label: 'Jan' },
            { quantity: 32, color: 'rgb(71,64,227)', original_label: '', label: 'Feb' },
            { quantity: 60, color: 'rgb(70,96,252)', original_label: '', label: 'Mar' },
            { quantity: 91, color: 'rgb(47,130,249)', original_label: '', label: 'Apr' },
            { quantity: 121, color: 'rgb(35,160,229)', original_label: '', label: 'May' },
            { quantity: 152, color: 'rgb(2,183,204)', original_label: '', label: 'Jun' },
            { quantity: 182, color: 'rgb(46,196,164)', original_label: '', label: 'Jul' },
            { quantity: 213, color: 'rgb(101,205,110)', original_label: '', label: 'Aug' },
            { quantity: 244, color: 'rgb(182,197,50)', original_label: '', label: 'Sep' },
            { quantity: 274, color: 'rgb(244,186,58)', original_label: '', label: 'Oct' },
            { quantity: 305, color: 'rgb(249,216,44)', original_label: '', label: 'Nov' },
            { quantity: 335, color: 'rgb(249,251,21)', original_label: '', label: 'Dec' },
        ], {
            name: 'Default',
            legend_label_filter: {
                name: 'legendDoy'
            }
        }, null // styleDefinition
        ) || this;
        _this.griddedPipes = griddedPipes;
        return _this;
    }
    Object.defineProperty(DefaultMapLayerLegend.prototype, "layerName", {
        get: function () {
            return 'no-layer';
        },
        enumerable: true,
        configurable: true
    });
    return DefaultMapLayerLegend;
}(_wms_map_layer_legend__WEBPACK_IMPORTED_MODULE_0__["WmsMapLayerLegend"]));

/*
https://bl.ocks.org/pstuffa/3393ff2711a53975040077b7453781a9
schemeCategory20
rgb(174,199,232) // light blue
rgb(255,187,120) // light orange
rgb(152,223,138) // light green
rgb(255,152,150) // ligth red
rgb(197,176,213) // light purple
rgb(196,156,148) // light brown
rgb(247, 182, 210) // light pink
rgb(199, 199, 199) // light grey
rgb(219, 219, 141) // light green 2
rgb(158, 218, 229) // light aqua
 */ 


/***/ }),

/***/ "../npn/common/src/lib/gridded/google-feature-bounds.ts":
/*!**************************************************************!*\
  !*** ../npn/common/src/lib/gridded/google-feature-bounds.ts ***!
  \**************************************************************/
/*! exports provided: googleFeatureBounds */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "googleFeatureBounds", function() { return googleFeatureBounds; });
// this may not be the best or final home for this functionality...
function googleFeatureBounds(feature) {
    var geo = feature.getGeometry(), type = geo.getType();
    /*if(!type || /LineString/.test(type)) {
        // TODO ? generate bounds of a [Multi]LineString?
    } else {*/
    if (type && /Polygon/.test(type)) {
        var bounds = new google.maps.LatLngBounds(), arr = geo.getArray(), rings = type === 'Polygon' ?
            arr :
            arr.reduce(function (c, p) {
                c.push(p.getArray()[0]);
                return c;
            }, []), i, j;
        for (i = 0; i < rings.length; i++) {
            var ringArr = rings[i].getArray();
            for (j = 0; j < ringArr.length; j++) {
                bounds.extend(new google.maps.LatLng(ringArr[j].lat(), ringArr[j].lng()));
            }
        }
        return bounds;
    }
}


/***/ }),

/***/ "../npn/common/src/lib/gridded/gridded-common.ts":
/*!*******************************************************!*\
  !*** ../npn/common/src/lib/gridded/gridded-common.ts ***!
  \*******************************************************/
/*! exports provided: MAP_STYLES, parseExtentDate, MapLayerType, MapLayerServiceType, MapLayerExtentType, CATEGORY_PEST, CATEGORY_TEMP_ACCUM_30_YR_AVG, CATEGORY_TEMP_ACCUM_CURRENT, CATEGORY_TEMP_ACCUM_CURRENT_AK, CATEGORY_TEMP_ACCUM_DAILY_ANOM, CATEGORY_SIX_HIST_ANNUAL, CATEGORY_SIX_CURRENT_YEAR, CATEGORY_SIX_CURRENT_YEAR_AK, CATEGORY_SIX_DAILY_ANOM, CATEGORY_SIX_30_YR_AVG, MAP_LAYERS, WMS_VERSION, BOX_SIZE, BASE_WMS_ARGS, GriddedUrls */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "MAP_STYLES", function() { return MAP_STYLES; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "parseExtentDate", function() { return parseExtentDate; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "MapLayerType", function() { return MapLayerType; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "MapLayerServiceType", function() { return MapLayerServiceType; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "MapLayerExtentType", function() { return MapLayerExtentType; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "CATEGORY_PEST", function() { return CATEGORY_PEST; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "CATEGORY_TEMP_ACCUM_30_YR_AVG", function() { return CATEGORY_TEMP_ACCUM_30_YR_AVG; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "CATEGORY_TEMP_ACCUM_CURRENT", function() { return CATEGORY_TEMP_ACCUM_CURRENT; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "CATEGORY_TEMP_ACCUM_CURRENT_AK", function() { return CATEGORY_TEMP_ACCUM_CURRENT_AK; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "CATEGORY_TEMP_ACCUM_DAILY_ANOM", function() { return CATEGORY_TEMP_ACCUM_DAILY_ANOM; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "CATEGORY_SIX_HIST_ANNUAL", function() { return CATEGORY_SIX_HIST_ANNUAL; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "CATEGORY_SIX_CURRENT_YEAR", function() { return CATEGORY_SIX_CURRENT_YEAR; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "CATEGORY_SIX_CURRENT_YEAR_AK", function() { return CATEGORY_SIX_CURRENT_YEAR_AK; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "CATEGORY_SIX_DAILY_ANOM", function() { return CATEGORY_SIX_DAILY_ANOM; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "CATEGORY_SIX_30_YR_AVG", function() { return CATEGORY_SIX_30_YR_AVG; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "MAP_LAYERS", function() { return MAP_LAYERS; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "WMS_VERSION", function() { return WMS_VERSION; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "BOX_SIZE", function() { return BOX_SIZE; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "BASE_WMS_ARGS", function() { return BASE_WMS_ARGS; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "GriddedUrls", function() { return GriddedUrls; });
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @angular/core */ "../../node_modules/@angular/core/fesm5/core.js");
/* harmony import */ var _common_index__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../common/index */ "../npn/common/src/lib/common/index.ts");
var __decorate = (undefined && undefined.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (undefined && undefined.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var __param = (undefined && undefined.__param) || function (paramIndex, decorator) {
    return function (target, key) { decorator(target, key, paramIndex); }
};


var MAP_STYLES = [{
        featureType: 'poi',
        elementType: 'labels',
        stylers: [{ visibility: 'off' }]
    }, {
        featureType: 'transit.station',
        elementType: 'labels',
        stylers: [{ visibility: 'off' }]
    },
    {
        featureType: 'poi.park',
        stylers: [{ visibility: 'off' }]
    },
    {
        featureType: 'landscape',
        stylers: [{ visibility: 'off' }]
    }];
var EXTENT_DATE_FMT_REGEX = /^(\d\d\d\d)-0?(\d+)-0?(\d+)/;
function parseExtentDate(s) {
    var match = EXTENT_DATE_FMT_REGEX.exec(s.replace(/T.*$/, '')), year = parseInt(match[1]), month = parseInt(match[2]) - 1, day = parseInt(match[3]);
    return new Date(year, month, day);
}
var MapLayerType;
(function (MapLayerType) {
    MapLayerType["STANDARD"] = "standard";
    MapLayerType["PEST"] = "pest";
})(MapLayerType || (MapLayerType = {}));
var MapLayerServiceType;
(function (MapLayerServiceType) {
    MapLayerServiceType["WMS"] = "wms";
    MapLayerServiceType["WCS"] = "wcs";
})(MapLayerServiceType || (MapLayerServiceType = {}));
;
var MapLayerExtentType;
(function (MapLayerExtentType) {
    MapLayerExtentType["DATE"] = "date";
    MapLayerExtentType["YEAR"] = "year";
    MapLayerExtentType["DOY"] = "doy";
})(MapLayerExtentType || (MapLayerExtentType = {}));
var CATEGORY_PEST = 'Pheno Forecasts';
var CATEGORY_TEMP_ACCUM_30_YR_AVG = 'Temperature Accumulations, Daily 30-year Average';
var CATEGORY_TEMP_ACCUM_CURRENT = 'Temperature Accumulations, Current Day';
var CATEGORY_TEMP_ACCUM_CURRENT_AK = 'Temperature Accumulations, Current Day, Alaska';
var CATEGORY_TEMP_ACCUM_DAILY_ANOM = 'Temperature Accumulations, Daily Anomaly';
var CATEGORY_SIX_HIST_ANNUAL = 'Spring Indices, Historical Annual';
var CATEGORY_SIX_CURRENT_YEAR = 'Spring Indices, Current Year';
var CATEGORY_SIX_CURRENT_YEAR_AK = 'Spring Indices, Current Year, Alaska';
var CATEGORY_SIX_DAILY_ANOM = 'Spring Indices, Daily Anomaly';
var CATEGORY_SIX_30_YR_AVG = 'Spring Indices, 30-Year Average';
/**
 * Holds all current supported map layers broken down by category.  This structure
 * originated with the original visualization tool and is very meaningful in that
 * commonality in configuration can be configured on the parent category for a given
 * layer and optionally over-ridden below that (for this like pipes to translate values to
 * strings, etc.).
 *
 * IMPORTANT: See `visualizations/map/consolidated-map-layer-control.component.ts`
 * for the temp accumulations and six layers that code relies on the order
 * of the indexes of the nested layers for those two sets so do NOT change that
 * here.
 */
var MAP_LAYERS = {
    "description": "",
    "categories": [{
            "name": CATEGORY_PEST,
            "supports_data": false,
            "layerBasis": "gdd:agdd_50f",
            "legend_label_filter": {
                "name": "legendGddUnits",
                "args": [false]
            },
            "gridded_label_filter": {
                "name": "legendGddUnits",
                "args": [true]
            },
            type: MapLayerType.PEST,
            "layers": [{
                    name: 'apple_maggot',
                    title: 'Apple Maggot',
                    abstract: 'Apple maggot larvae cause damage to ripening fruit. If left untreated, these pest insects can spread across the entire tree. These insects primarily affect apple trees, but can also impact plum, apricot, pear, cherry and hawthorn trees. <a href="https://www.usanpn.org/data/forecasts/Apple_maggot" target="_blank">Learn more</a>',
                    meta: {
                        agddDefaultThreshold: 900
                    }
                }, {
                    name: 'asian_longhorned_beetle',
                    title: 'Asian Longhorned Beetle',
                    abstract: 'As a generalist pest, Asian longhorned beetle poses a great potential threat to eastern forests. It is currently contained in three small quarantined areas (a fourth was recently eradicated). Burning firewood where you buy it is critical to stopping the spread of this pest. <a href="https://www.usanpn.org/data/forecasts/Asian_Longhorned_beetle" target="_blank">Learn more</a>',
                    meta: {
                        agddSupports30YearAvg: false,
                        agddDefaultThreshold: 690
                    }
                }, {
                    name: 'bagworm',
                    title: 'Bagworm',
                    abstract: 'Bagworm caterpillars defoliate over 50 families of evergreen and deciduous trees and shrubs, primarily arborvitae, juniper, pine, and spruce. Stripping of leaves and needles is most noticeable in uppermost parts of plants. If left untreated, these pests are capable of extensive defoliation which can cause branch dieback or death. <a href="https://www.usanpn.org/data/forecasts/Bagworm" target="_blank">Learn more</a>',
                    meta: {
                        agddDefaultThreshold: 600
                    }
                }, {
                    name: 'bronze_birch_borer',
                    title: 'Bronze Birch Borer',
                    abstract: 'Bronze birch borer frequently kills birch trees by boring into the wood. <a href="https://www.usanpn.org/data/forecasts/Bronze_birch_borer" target="_blank">Learn more</a>',
                    meta: {
                        agddDefaultThreshold: 450
                    }
                }, {
                    name: 'precipitation:buffelgrass_prism',
                    title: 'Buffelgrass',
                    abstract: 'Winter moth is a non-native insect pest that causes damage to deciduous trees, particularly maples and oaks. <a href="https://www.usanpn.org/data/forecasts/Winter_moth" target="_blank">Learn more</a>'
                }, {
                    name: 'eastern_tent_caterpillar',
                    title: 'Eastern Tent Caterpillar',
                    abstract: 'Eastern Tent Caterpillars are a native moth and while they can defoliate trees, the trees rarely die as a consequence. <a href="https://www.usanpn.org/data/forecasts/Eastern_tent_caterpillar" target="_blank">Learn more</a>',
                    meta: {
                        agddSupports30YearAvg: false,
                        agddDefaultThreshold: 90
                    }
                }, {
                    name: 'emerald_ash_borer',
                    title: 'Emerald Ash Borer',
                    abstract: 'Emerald ash borer is a beetle that causes significant harm to ash trees throughout the eastern United States. <a href="https://www.usanpn.org/data/forecasts/EAB" target="_blank">Learn more</a>',
                    meta: {
                        agddDefaultThreshold: 450
                    }
                }, {
                    name: 'gypsy_moth',
                    title: 'Gypsy Moth',
                    abstract: 'European gypsy moth caterpillars feed on deciduous trees, causing major defoliation and tree mortality. They are considered one of the worst forest pests in the United States. <a href="https://www.usanpn.org/data/forecasts/Gypsy_moth" target="_blank">Learn more</a>',
                    meta: {
                        agddSupports30YearAvg: false,
                        agddBaseTemp: 37.4,
                        agddDefaultThreshold: 571
                    }
                }, {
                    name: 'hemlock_woolly_adelgid',
                    layerBasis: 'gdd:agdd',
                    title: 'Hemlock Woolly Adelgid',
                    abstract: 'Hemlock woolly adelgid can be deadly to hemlock trees and, in the eastern United States, lacks enemies that keep their populations in check. Researchers wish to identify the optimal window to release insect predators; you can support this effort by observing hemlock woolly adelgid life cycle stages using Natureâ€™s Notebook. <a href="https://www.usanpn.org/data/forecasts/HWA" target="_blank">Learn more</a>'
                }, {
                    name: 'magnolia_scale',
                    title: 'Magnolia Scale',
                    abstract: 'Magnolia scale is a pest native to the Eastern United States that affects magnolia trees and tulip trees. They cause stress to their host trees by removing sap which can lead to yellowing leaves, twig dieback, and even death. <a href="https://www.usanpn.org/data/forecasts/Magnolia_scale" target="_blank">Learn more</a>',
                    meta: {
                        agddDefaultThreshold: 1938
                    }
                }, {
                    name: 'lilac_borer',
                    title: 'Lilac Borer',
                    abstract: 'Lilac borer is a clear-wing moth that can damage lilac, ash, and privet trees and shrubs by burrowing into the heartwood. <a href="https://www.usanpn.org/data/forecasts/Lilac_borer" target="_blank">Learn more</a>',
                    meta: {
                        agddDefaultThreshold: 500
                    }
                }, {
                    name: 'pine_needle_scale',
                    title: 'Pine Needle Scale',
                    abstract: 'Pine needle scale is a native pest that affects ornamental pines and Christmas tree plantations. <a href="https://www.usanpn.org/data/forecasts/Pine_needle_scale" target="_blank">Learn more</a>',
                    meta: {
                        agddSupports30YearAvg: false,
                        agddDefaultThreshold: 298
                    }
                }, {
                    name: 'winter_moth',
                    title: 'Winter Moth',
                    abstract: 'Winter moth is a non-native insect pest that causes damage to deciduous trees, particularly maples and oaks. <a href="https://www.usanpn.org/data/forecasts/Winter_moth" target="_blank">Learn more</a>',
                    meta: {
                        agddDefaultThreshold: 20
                    }
                }]
        }, {
            "name": CATEGORY_TEMP_ACCUM_30_YR_AVG,
            "supports_data": false,
            "legend_label_filter": {
                "name": "legendGddUnits",
                "args": [false]
            },
            "gridded_label_filter": {
                "name": "legendGddUnits",
                "args": [true]
            },
            "extent_default_filter": {
                "name": "agddDefaultTodayElevation"
            },
            "legend_units": "Growing Degree Days",
            "legend_delimiter_every": 2000,
            "layers": [{
                    "name": "gdd:30yr_avg_agdd"
                }, {
                    "name": "gdd:30yr_avg_agdd_50f"
                }]
        }, {
            "name": CATEGORY_TEMP_ACCUM_CURRENT,
            "supports_data": false,
            "legend_label_filter": {
                "name": "legendGddUnits",
                "args": [false]
            },
            "gridded_label_filter": {
                "name": "legendGddUnits",
                "args": [true]
            },
            "extent_default_filter": {
                "name": "agddDefaultTodayTime"
            },
            "legend_units": "Growing Degree Days",
            "legend_delimiter_every": 2000,
            "supports_time_series": true,
            "layers": [{
                    "name": "gdd:agdd"
                }, {
                    "name": "gdd:agdd_50f"
                }]
        }, {
            "name": CATEGORY_TEMP_ACCUM_CURRENT_AK,
            "supports_data": false,
            "legend_label_filter": {
                "name": "legendGddUnits",
                "args": [false]
            },
            "gridded_label_filter": {
                "name": "legendGddUnits",
                "args": [true]
            },
            "extent_values_filter": {
                "name": "extentDates",
                "args": [null, "today"]
            },
            "legend_units": "Growing Degree Days",
            "legend_delimiter_every": 2000,
            "layers": [{
                    "name": "gdd:agdd_alaska"
                }, {
                    "name": "gdd:agdd_alaska_50f"
                }]
        }, {
            "name": CATEGORY_TEMP_ACCUM_DAILY_ANOM,
            "supports_data": false,
            "legend_label_filter": {
                "name": "legendAgddAnomaly",
                "args": [false]
            },
            "gridded_label_filter": {
                "name": "legendAgddAnomaly",
                "args": [true]
            },
            "extent_default_filter": {
                "name": "agddDefaultTodayTime"
            },
            "legend_units": "Growing Degree Days",
            "legend_delimiter_every": 100,
            "layers": [{
                    "name": "gdd:agdd_anomaly"
                }, {
                    "name": "gdd:agdd_anomaly_50f"
                }]
        }, {
            "name": CATEGORY_SIX_HIST_ANNUAL,
            "legend_label_filter": {
                "name": "legendDoy"
            },
            "current_year_only": true,
            "layers": [{
                    "name": "si-x:average_leaf_prism"
                }, {
                    "name": "si-x:average_bloom_prism"
                }, {
                    "name": "si-x:arnoldred_leaf_prism"
                }, {
                    "name": "si-x:arnoldred_bloom_prism"
                }, {
                    "name": "si-x:lilac_leaf_prism"
                }, {
                    "name": "si-x:lilac_bloom_prism"
                }, {
                    "name": "si-x:zabelli_leaf_prism"
                }, {
                    "name": "si-x:zabelli_bloom_prism"
                }]
        }, {
            "name": CATEGORY_SIX_CURRENT_YEAR,
            "legend_label_filter": {
                "name": "legendDoy"
            },
            "extent_default_filter": {
                "name": "agddDefaultTodayTime"
            },
            "current_year_only": true,
            "layers": [{
                    "name": "si-x:average_leaf_ncep"
                }, {
                    "name": "si-x:average_bloom_ncep"
                }, {
                    "name": "si-x:arnoldred_leaf_ncep"
                }, {
                    "name": "si-x:arnoldred_bloom_ncep"
                }, {
                    "name": "si-x:lilac_leaf_ncep"
                }, {
                    "name": "si-x:lilac_bloom_ncep"
                }, {
                    "name": "si-x:zabelli_leaf_ncep"
                }, {
                    "name": "si-x:zabelli_bloom_ncep"
                }]
        }, {
            "name": CATEGORY_SIX_CURRENT_YEAR_AK,
            "legend_label_filter": {
                "name": "legendDoy"
            },
            "extent_values_filter": {
                "name": "extentDates",
                "args": [null, "today"]
            },
            "current_year_only": true,
            "layers": [{
                    "name": "si-x:average_leaf_ncep_alaska"
                }, {
                    "name": "si-x:average_bloom_ncep_alaska"
                }, {
                    "name": "si-x:arnoldred_leaf_ncep_alaska"
                }, {
                    "name": "si-x:arnoldred_bloom_ncep_alaska"
                }, {
                    "name": "si-x:lilac_leaf_ncep_alaska"
                }, {
                    "name": "si-x:lilac_bloom_ncep_alaska"
                }, {
                    "name": "si-x:zabelli_leaf_ncep_alaska"
                }, {
                    "name": "si-x:zabelli_bloom_ncep_alaska"
                }]
        }, {
            "name": CATEGORY_SIX_DAILY_ANOM,
            "supports_data": false,
            "legend_label_filter": {
                "name": "legendSixAnomaly"
            },
            "extent_default_filter": {
                "name": "agddDefaultTodayTime"
            },
            "layers": [{
                    "name": "si-x:leaf_anomaly"
                }, {
                    "name": "si-x:bloom_anomaly"
                }]
        }, {
            "name": CATEGORY_SIX_30_YR_AVG,
            "legend_label_filter": {
                "name": "legendDoy"
            },
            "extent_default_filter": {
                "name": "agddDefaultTodayElevation"
            },
            "layers": [{
                    "name": "si-x:30yr_avg_six_leaf"
                }, {
                    "name": "si-x:30yr_avg_six_bloom"
                }]
        }]
};
// not safe to change since the capabilities document format changes based on version
// so a version change -may- require code changes wrt interpreting the document
var WMS_VERSION = '1.1.1';
var BOX_SIZE = 256;
var BASE_WMS_ARGS = {
    service: 'WMS',
    request: 'GetMap',
    version: WMS_VERSION,
    layers: undefined,
    styles: '',
    format: 'image/png',
    transparent: true,
    height: BOX_SIZE,
    width: BOX_SIZE,
    srs: 'EPSG:3857' // 'EPSG:4326'
};
var GriddedUrls = /** @class */ (function () {
    function GriddedUrls(config) {
        this.config = config;
        this.geoServerUrl = config.geoServerRoot;
        this.wmsBaseUrl = this.geoServerUrl + "/wms";
        this.wmsCapabilitiesUrl = this.wmsBaseUrl + "?service=wms&version=" + WMS_VERSION + "&request=GetCapabilities";
    }
    GriddedUrls = __decorate([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Injectable"])(),
        __param(0, Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Inject"])(_common_index__WEBPACK_IMPORTED_MODULE_1__["NPN_CONFIGURATION"])),
        __metadata("design:paramtypes", [_common_index__WEBPACK_IMPORTED_MODULE_1__["NpnConfiguration"]])
    ], GriddedUrls);
    return GriddedUrls;
}());



/***/ }),

/***/ "../npn/common/src/lib/gridded/index.ts":
/*!**********************************************!*\
  !*** ../npn/common/src/lib/gridded/index.ts ***!
  \**********************************************/
/*! exports provided: MapLayerLegendComponent, GriddedPipeProvider, DoyTxType, NpnGriddedModule, MapLayer, encodeHttpParams, srsConversion, NpnMapLayerService, MapLayerLegend, DESTINATION_POINT, WcsDataService, GriddedInfoWindowHandler, googleFeatureBounds, MAP_STYLES, parseExtentDate, MapLayerType, MapLayerServiceType, MapLayerExtentType, CATEGORY_PEST, CATEGORY_TEMP_ACCUM_30_YR_AVG, CATEGORY_TEMP_ACCUM_CURRENT, CATEGORY_TEMP_ACCUM_CURRENT_AK, CATEGORY_TEMP_ACCUM_DAILY_ANOM, CATEGORY_SIX_HIST_ANNUAL, CATEGORY_SIX_CURRENT_YEAR, CATEGORY_SIX_CURRENT_YEAR_AK, CATEGORY_SIX_DAILY_ANOM, CATEGORY_SIX_30_YR_AVG, MAP_LAYERS, WMS_VERSION, BOX_SIZE, BASE_WMS_ARGS, GriddedUrls, WmsMapLayer, WmsMapLayerLegend, PestMapLayer, PestMapLayerLegend, DefaultMapLayerLegend, BoundaryService */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _public_api__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./public_api */ "../npn/common/src/lib/gridded/public_api.ts");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "MapLayerLegendComponent", function() { return _public_api__WEBPACK_IMPORTED_MODULE_0__["MapLayerLegendComponent"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "GriddedPipeProvider", function() { return _public_api__WEBPACK_IMPORTED_MODULE_0__["GriddedPipeProvider"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "DoyTxType", function() { return _public_api__WEBPACK_IMPORTED_MODULE_0__["DoyTxType"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "NpnGriddedModule", function() { return _public_api__WEBPACK_IMPORTED_MODULE_0__["NpnGriddedModule"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "MapLayer", function() { return _public_api__WEBPACK_IMPORTED_MODULE_0__["MapLayer"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "encodeHttpParams", function() { return _public_api__WEBPACK_IMPORTED_MODULE_0__["encodeHttpParams"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "srsConversion", function() { return _public_api__WEBPACK_IMPORTED_MODULE_0__["srsConversion"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "NpnMapLayerService", function() { return _public_api__WEBPACK_IMPORTED_MODULE_0__["NpnMapLayerService"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "MapLayerLegend", function() { return _public_api__WEBPACK_IMPORTED_MODULE_0__["MapLayerLegend"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "DESTINATION_POINT", function() { return _public_api__WEBPACK_IMPORTED_MODULE_0__["DESTINATION_POINT"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "WcsDataService", function() { return _public_api__WEBPACK_IMPORTED_MODULE_0__["WcsDataService"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "GriddedInfoWindowHandler", function() { return _public_api__WEBPACK_IMPORTED_MODULE_0__["GriddedInfoWindowHandler"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "googleFeatureBounds", function() { return _public_api__WEBPACK_IMPORTED_MODULE_0__["googleFeatureBounds"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "MAP_STYLES", function() { return _public_api__WEBPACK_IMPORTED_MODULE_0__["MAP_STYLES"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "parseExtentDate", function() { return _public_api__WEBPACK_IMPORTED_MODULE_0__["parseExtentDate"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "MapLayerType", function() { return _public_api__WEBPACK_IMPORTED_MODULE_0__["MapLayerType"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "MapLayerServiceType", function() { return _public_api__WEBPACK_IMPORTED_MODULE_0__["MapLayerServiceType"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "MapLayerExtentType", function() { return _public_api__WEBPACK_IMPORTED_MODULE_0__["MapLayerExtentType"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "CATEGORY_PEST", function() { return _public_api__WEBPACK_IMPORTED_MODULE_0__["CATEGORY_PEST"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "CATEGORY_TEMP_ACCUM_30_YR_AVG", function() { return _public_api__WEBPACK_IMPORTED_MODULE_0__["CATEGORY_TEMP_ACCUM_30_YR_AVG"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "CATEGORY_TEMP_ACCUM_CURRENT", function() { return _public_api__WEBPACK_IMPORTED_MODULE_0__["CATEGORY_TEMP_ACCUM_CURRENT"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "CATEGORY_TEMP_ACCUM_CURRENT_AK", function() { return _public_api__WEBPACK_IMPORTED_MODULE_0__["CATEGORY_TEMP_ACCUM_CURRENT_AK"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "CATEGORY_TEMP_ACCUM_DAILY_ANOM", function() { return _public_api__WEBPACK_IMPORTED_MODULE_0__["CATEGORY_TEMP_ACCUM_DAILY_ANOM"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "CATEGORY_SIX_HIST_ANNUAL", function() { return _public_api__WEBPACK_IMPORTED_MODULE_0__["CATEGORY_SIX_HIST_ANNUAL"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "CATEGORY_SIX_CURRENT_YEAR", function() { return _public_api__WEBPACK_IMPORTED_MODULE_0__["CATEGORY_SIX_CURRENT_YEAR"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "CATEGORY_SIX_CURRENT_YEAR_AK", function() { return _public_api__WEBPACK_IMPORTED_MODULE_0__["CATEGORY_SIX_CURRENT_YEAR_AK"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "CATEGORY_SIX_DAILY_ANOM", function() { return _public_api__WEBPACK_IMPORTED_MODULE_0__["CATEGORY_SIX_DAILY_ANOM"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "CATEGORY_SIX_30_YR_AVG", function() { return _public_api__WEBPACK_IMPORTED_MODULE_0__["CATEGORY_SIX_30_YR_AVG"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "MAP_LAYERS", function() { return _public_api__WEBPACK_IMPORTED_MODULE_0__["MAP_LAYERS"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "WMS_VERSION", function() { return _public_api__WEBPACK_IMPORTED_MODULE_0__["WMS_VERSION"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "BOX_SIZE", function() { return _public_api__WEBPACK_IMPORTED_MODULE_0__["BOX_SIZE"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "BASE_WMS_ARGS", function() { return _public_api__WEBPACK_IMPORTED_MODULE_0__["BASE_WMS_ARGS"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "GriddedUrls", function() { return _public_api__WEBPACK_IMPORTED_MODULE_0__["GriddedUrls"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "WmsMapLayer", function() { return _public_api__WEBPACK_IMPORTED_MODULE_0__["WmsMapLayer"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "WmsMapLayerLegend", function() { return _public_api__WEBPACK_IMPORTED_MODULE_0__["WmsMapLayerLegend"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "PestMapLayer", function() { return _public_api__WEBPACK_IMPORTED_MODULE_0__["PestMapLayer"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "PestMapLayerLegend", function() { return _public_api__WEBPACK_IMPORTED_MODULE_0__["PestMapLayerLegend"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "DefaultMapLayerLegend", function() { return _public_api__WEBPACK_IMPORTED_MODULE_0__["DefaultMapLayerLegend"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "BoundaryService", function() { return _public_api__WEBPACK_IMPORTED_MODULE_0__["BoundaryService"]; });




/***/ }),

/***/ "../npn/common/src/lib/gridded/map-layer-legend.component.scss":
/*!*********************************************************************!*\
  !*** ../npn/common/src/lib/gridded/map-layer-legend.component.scss ***!
  \*********************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = ":host {\n  display: block; }\n  :host.standard {\n    height: 125px; }\n  :host.pest {\n    height: 200px;\n    width: 460px !important; }\n  :host.pest.emerald_ash_borer {\n      height: 245px; }\n  :host.pest.hemlock_woolly_adelgid {\n      height: 175px; }\n  :host.pest.precipitation_buffelgrass_prism {\n      height: 100px; }\n  :host.no-layer {\n    height: 95px; }\n  .gridded-legend {\n  width: 100%;\n  height: 100%; }\n"

/***/ }),

/***/ "../npn/common/src/lib/gridded/map-layer-legend.component.ts":
/*!*******************************************************************!*\
  !*** ../npn/common/src/lib/gridded/map-layer-legend.component.ts ***!
  \*******************************************************************/
/*! exports provided: MapLayerLegendComponent */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "MapLayerLegendComponent", function() { return MapLayerLegendComponent; });
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @angular/core */ "../../node_modules/@angular/core/fesm5/core.js");
/* harmony import */ var _map_layer_legend__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./map-layer-legend */ "../npn/common/src/lib/gridded/map-layer-legend.ts");
/* harmony import */ var d3__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! d3 */ "../../node_modules/d3/index.js");
var __decorate = (undefined && undefined.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (undefined && undefined.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};



var MapLayerLegendComponent = /** @class */ (function () {
    function MapLayerLegendComponent(rootElement) {
        this.rootElement = rootElement;
    }
    Object.defineProperty(MapLayerLegendComponent.prototype, "legendClass", {
        get: function () {
            var _a = this.legend, layerType = _a.layerType, layerName = _a.layerName;
            return (layerType || '') + " " + (layerName ? layerName.replace(/:/g, '_') : '');
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(MapLayerLegendComponent.prototype, "minLegendWidth", {
        get: function () {
            return this.legend.ldef.minLegendWidth || null;
        },
        enumerable: true,
        configurable: true
    });
    MapLayerLegendComponent.prototype.ngAfterViewInit = function () {
        this.svg = d3__WEBPACK_IMPORTED_MODULE_2__["select"](this.rootElement.nativeElement).select('svg');
    };
    MapLayerLegendComponent.prototype.ngOnChanges = function (changes) {
        var _this = this;
        setTimeout(function () { return _this.redraw(); });
    };
    MapLayerLegendComponent.prototype.redraw = function () {
        if (this.svg) {
            this.svg.selectAll('g').remove();
            if (this.legend) {
                this.legend.redraw(this.svg, this.legendTitle);
            }
        }
    };
    __decorate([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Input"])(),
        __metadata("design:type", String)
    ], MapLayerLegendComponent.prototype, "legendTitle", void 0);
    __decorate([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Input"])(),
        __metadata("design:type", _map_layer_legend__WEBPACK_IMPORTED_MODULE_1__["MapLayerLegend"])
    ], MapLayerLegendComponent.prototype, "legend", void 0);
    __decorate([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["HostBinding"])('class'),
        __metadata("design:type", Object),
        __metadata("design:paramtypes", [])
    ], MapLayerLegendComponent.prototype, "legendClass", null);
    __decorate([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["HostBinding"])('style.min-width'),
        __metadata("design:type", String),
        __metadata("design:paramtypes", [])
    ], MapLayerLegendComponent.prototype, "minLegendWidth", null);
    __decorate([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["HostListener"])('window:resize'),
        __metadata("design:type", Function),
        __metadata("design:paramtypes", []),
        __metadata("design:returntype", void 0)
    ], MapLayerLegendComponent.prototype, "redraw", null);
    MapLayerLegendComponent = __decorate([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Component"])({
            selector: 'map-layer-legend',
            template: "\n    <svg class=\"gridded-legend\"></svg>\n    ",
            styles: [__webpack_require__(/*! ./map-layer-legend.component.scss */ "../npn/common/src/lib/gridded/map-layer-legend.component.scss")]
        }),
        __metadata("design:paramtypes", [_angular_core__WEBPACK_IMPORTED_MODULE_0__["ElementRef"]])
    ], MapLayerLegendComponent);
    return MapLayerLegendComponent;
}());



/***/ }),

/***/ "../npn/common/src/lib/gridded/map-layer-legend.ts":
/*!*********************************************************!*\
  !*** ../npn/common/src/lib/gridded/map-layer-legend.ts ***!
  \*********************************************************/
/*! exports provided: MapLayerLegend */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "MapLayerLegend", function() { return MapLayerLegend; });
/* harmony import */ var jquery__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! jquery */ "../../node_modules/jquery/dist/jquery.js");
/* harmony import */ var jquery__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(jquery__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _gridded_common__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./gridded-common */ "../npn/common/src/lib/gridded/gridded-common.ts");
/* harmony import */ var rxjs_operators__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! rxjs/operators */ "../../node_modules/rxjs/_esm5/operators/index.js");

var $jq = jquery__WEBPACK_IMPORTED_MODULE_0__;


var IDENTITY = function (d) { return d; };
var MapLayerLegend = /** @class */ (function () {
    function MapLayerLegend(wcsDataService, griddedPipes, color_map, 
    /*
    NOTE: per the original implementation which binds extents directly into the definition this is public
    may want to later revisit some abstraction, used externally via WmsMapLegendComponent
     */
    ldef, styleDefinition) {
        var _this = this;
        this.wcsDataService = wcsDataService;
        this.griddedPipes = griddedPipes;
        this.color_map = color_map;
        this.ldef = ldef;
        this.styleDefinition = styleDefinition;
        console.log('MapLayerLegend.color_map', color_map);
        console.log('MapLayerLegend.ldef', ldef);
        console.log('MapLayerLegend.styleDefinition', styleDefinition);
        var get_filter = function (filter_def) {
            var pipe = _this.griddedPipes.get(filter_def.name);
            if (!pipe) {
                console.error("MapLayerLegend: Unable to find pipe named " + filter_def.name);
            }
            return function (l, q) {
                var args = [q];
                if (filter_def.args) {
                    args = args.concat(filter_def.args);
                }
                return pipe.transform.apply(pipe, args);
            };
        };
        this.lformat = ldef.legend_label_filter ? get_filter(ldef.legend_label_filter) : IDENTITY;
        if (ldef.name == 'precipitation:buffelgrass_prism') {
            var gridded_label_filter_clone = Object.assign({}, ldef.gridded_label_filter);
            gridded_label_filter_clone.name = 'legendBuffelgrassUnits';
            this.gformat = ldef.gridded_label_filter ? get_filter(gridded_label_filter_clone) : undefined;
        }
        else {
            this.gformat = ldef.gridded_label_filter ? get_filter(ldef.gridded_label_filter) : undefined;
        }
        var data;
        if (Array.isArray(color_map)) {
            data = color_map;
        }
        else {
            var entries = color_map.find('ColorMapEntry');
            if (entries.length === 0) {
                entries = color_map.find('sld\\:ColorMapEntry');
            }
            data = entries.toArray().reduce(function (arr, entry, i) {
                var e = $jq(entry), q = parseFloat(e.attr('quantity')), l = e.attr('label');
                arr.push({
                    color: e.attr('color'),
                    quantity: q,
                    original_label: l,
                    label: i === 0 ? l : _this.lformat(l, q) // why the special case for index 0?
                });
                return arr;
            }, []);
        }
        this.title_data = data[0];
        this.data = data.slice(1);
    }
    MapLayerLegend.prototype.setLayer = function (l) {
        this.layer = l;
        return this;
    };
    MapLayerLegend.prototype.getLayer = function () {
        return this.layer;
    };
    Object.defineProperty(MapLayerLegend.prototype, "layerType", {
        get: function () {
            return this.layer
                ? this.layer.layerType
                : null;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(MapLayerLegend.prototype, "layerName", {
        get: function () {
            return this.layer
                ? this.layer.layerName
                : null;
        },
        enumerable: true,
        configurable: true
    });
    MapLayerLegend.prototype.getData = function () {
        return this.data;
    };
    MapLayerLegend.prototype.getStyleDefinition = function () {
        return this.styleDefinition;
    };
    MapLayerLegend.prototype.getTitle = function () {
        return this.title_data.label;
    };
    MapLayerLegend.prototype.getColors = function () {
        return this.data.map(function (d) { return d.color; });
    };
    MapLayerLegend.prototype.getQuantities = function () {
        return this.data.map(function (d) { return d.quantity; });
    };
    MapLayerLegend.prototype.getLabels = function () {
        return this.data.map(function (d) { return d.label; });
    };
    MapLayerLegend.prototype.getOriginalLabels = function () {
        return this.data.map(function (d) { return d.original_label; });
    };
    MapLayerLegend.prototype.formatPointData = function (q) {
        return (this.gformat || this.lformat)(q, q);
    };
    MapLayerLegend.prototype.getPointData = function (q) {
        var i, d, n;
        for (i = 0; i < this.data.length; i++) {
            d = this.data[i];
            n = (i + 1) < this.data.length ? this.data[i + 1] : undefined;
            if (q == d.quantity) {
                return d;
            }
            if (n && q >= d.quantity && q < n.quantity) {
                return d;
            }
        }
    };
    MapLayerLegend.prototype.getGriddedPointData = function (latLng) {
        var _this = this;
        var augment = function (params) {
            if (_this.layer.extent && _this.layer.extent.current) {
                _this.layer.extent.current.addToParams(params, _gridded_common__WEBPACK_IMPORTED_MODULE_1__["MapLayerServiceType"].WCS);
            }
        };
        return this.wcsDataService.getGriddedData(this.layer.layerBasis, latLng, 5, augment).pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_2__["map"])(function (tuples) {
            console.log("MapLayerLegend: gridded tuples", tuples);
            var point = tuples && tuples.length ? tuples[0] : undefined;
            if (point === -9999 || isNaN(point)) {
                return null;
            }
            var legendData = _this.getPointData(point);
            var formatted = _this.formatPointData(point);
            var result = { point: point, legendData: legendData, formatted: formatted };
            console.log('MapLayerLegend: gridded result', result);
            return result;
        }));
    };
    return MapLayerLegend;
}());



/***/ }),

/***/ "../npn/common/src/lib/gridded/map-layer.ts":
/*!**************************************************!*\
  !*** ../npn/common/src/lib/gridded/map-layer.ts ***!
  \**************************************************/
/*! exports provided: MapLayer, encodeHttpParams, srsConversion */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "MapLayer", function() { return MapLayer; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "encodeHttpParams", function() { return encodeHttpParams; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "srsConversion", function() { return srsConversion; });
/* harmony import */ var _gridded_common__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./gridded-common */ "../npn/common/src/lib/gridded/gridded-common.ts");

var MapLayer = /** @class */ (function () {
    function MapLayer(map, layer_def, layerService) {
        this.map = map;
        this.layer_def = layer_def;
        this.layerService = layerService;
        this.opacity = 0.75;
        this.griddedPipes = layerService.griddedPipes;
        this.griddedUrls = layerService.griddedUrls;
    }
    /**
     * Callers are responsible for turning a layer off
     * before switching the underlying map and turning it back on.
     *
     * @param map The new map.
     */
    MapLayer.prototype.setMap = function (map) {
        this.map = map;
    };
    MapLayer.prototype.getMap = function () {
        return this.map;
    };
    Object.defineProperty(MapLayer.prototype, "layerDefinition", {
        get: function () { return this.layer_def; },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(MapLayer.prototype, "layerBasis", {
        get: function () {
            if (this.layerName == "precipitation:buffelgrass_prism")
                return this.layerName;
            return this.layer_def && this.layer_def.layerBasis
                ? this.layer_def.layerBasis
                : this.layerName;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(MapLayer.prototype, "layerName", {
        get: function () {
            return this.layer_def
                ? this.layer_def.name
                : null;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(MapLayer.prototype, "layerType", {
        get: function () {
            return this.layer_def && this.layer_def.type
                ? this.layer_def.type
                : _gridded_common__WEBPACK_IMPORTED_MODULE_0__["MapLayerType"].STANDARD;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(MapLayer.prototype, "extent", {
        get: function () {
            return this.layer_def
                ? this.layer_def.extent
                : null;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(MapLayer.prototype, "extentType", {
        get: function () {
            return (this.layer_def && this.layer_def.extent)
                ? this.layer_def.extent.type
                : null;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(MapLayer.prototype, "title", {
        get: function () {
            return (this.layer_def && this.layer_def.title)
                ? this.layer_def.title // this.layer_def.title.replace(/^(.*?)\s+-\s+(.*)$/,'$2')
                : undefined;
        },
        enumerable: true,
        configurable: true
    });
    MapLayer.prototype.hasAbstract = function () {
        return this.layer_def
            ? !!this.layer_def.abstract
            : false;
    };
    MapLayer.prototype.getAbstract = function () {
        return (this.layer_def && this.layer_def.abstract)
            ? this.layer_def.abstract.replace(/\s*developer notes.*$/i, '')
            : undefined;
    };
    MapLayer.prototype.getLegend = function () {
        var _this = this;
        return this.layer_def
            ? this.layerService.getLegend(this.layer_def)
                .then(function (legend) { return legend.setLayer(_this); })
            : Promise.resolve(null);
    };
    /**
     * Sets the current opacity (0-1) for this layer.
     * Sub-classes will over-ride to pass along the value
     */
    MapLayer.prototype.setOpacity = function (opacity) { this.opacity = opacity; };
    /** Gets the current opacity for this layer. */
    MapLayer.prototype.getOpacity = function () { return this.opacity; };
    return MapLayer;
}());

// NOTE: this function replaces all encoded spaces (%20) with '+'
// this is perhaps a kludge solution to the fact that %20 is three chars while + is one
// and for some map layers sending a value for sld_body using %20 can result in
// overflowing the maximum length of a URI breaking thos emaps.  This is a simple 
// workaround to that issue.
function encodeHttpParams(params) {
    if (!params) {
        return '';
    }
    var parts = [];
    Object.keys(params).forEach(function (k) {
        if (params[k]) {
            var ok = encodeURIComponent(k), ov = encodeURIComponent(params[k]).replace(/%20/g, '+');
            parts.push(ok + "=" + ov);
        }
    });
    return parts.join('&');
}
// this code converts coordinates from ESPG:4326 to ESPG:3857, it originated @
// http://gis.stackexchange.com/questions/52188/google-maps-wms-layer-with-3857
// that author stated it came from StackOverflow which I tried to find to attribute properly but could not.
// the issue here is that if requests are sent to the map service with ESPG:4326 coordinates everything
// appears accurate when tightly zoomed however as you zoom out beyond a certain point the layers begin to
// migrate north, the farther zoomed out the more drastic the migration (e.g. from Mexico into N. Canada)
// while dealing in traditional lat/lng for google maps they are actually projected in 3857 (metres, not meters).
// the main thing is that 4326 coordinates are projected onto a sphere/ellipsoid while 3857 are translated to
// a flat surface.
// unfortunately while google maps projection must be performing such transformations it doesn't expose this ability.
function srsConversion(latLng) {
    if ((Math.abs(latLng.lng()) > 180 || Math.abs(latLng.lat()) > 90)) {
        return;
    }
    var num = latLng.lng() * 0.017453292519943295;
    var x = 6378137.0 * num;
    var a = latLng.lat() * 0.017453292519943295;
    return { lng: x, lat: 3189068.5 * Math.log((1.0 + Math.sin(a)) / (1.0 - Math.sin(a))) };
}


/***/ }),

/***/ "../npn/common/src/lib/gridded/npn-gridded.module.ts":
/*!***********************************************************!*\
  !*** ../npn/common/src/lib/gridded/npn-gridded.module.ts ***!
  \***********************************************************/
/*! exports provided: NpnGriddedModule */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "NpnGriddedModule", function() { return NpnGriddedModule; });
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @angular/core */ "../../node_modules/@angular/core/fesm5/core.js");
/* harmony import */ var _angular_common__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @angular/common */ "../../node_modules/@angular/common/fesm5/common.js");
/* harmony import */ var _angular_forms__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @angular/forms */ "../../node_modules/@angular/forms/fesm5/forms.js");
/* harmony import */ var _angular_material__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @angular/material */ "../../node_modules/@angular/material/esm5/material.es5.js");
/* harmony import */ var _npn_map_layer_service__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./npn-map-layer.service */ "../npn/common/src/lib/gridded/npn-map-layer.service.ts");
/* harmony import */ var _common_index__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../common/index */ "../npn/common/src/lib/common/index.ts");
/* harmony import */ var _map_layer_legend_component__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./map-layer-legend.component */ "../npn/common/src/lib/gridded/map-layer-legend.component.ts");
/* harmony import */ var _supports_opacity_control_component__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./supports-opacity-control.component */ "../npn/common/src/lib/gridded/supports-opacity-control.component.ts");
/* harmony import */ var _gridded_common__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ./gridded-common */ "../npn/common/src/lib/gridded/gridded-common.ts");
/* harmony import */ var _wcs_data_service__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ./wcs-data.service */ "../npn/common/src/lib/gridded/wcs-data.service.ts");
/* harmony import */ var _boundary_service__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ./boundary.service */ "../npn/common/src/lib/gridded/boundary.service.ts");
/* harmony import */ var _pipes__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! ./pipes */ "../npn/common/src/lib/gridded/pipes.ts");
var __decorate = (undefined && undefined.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};












var NpnGriddedModule = /** @class */ (function () {
    function NpnGriddedModule() {
    }
    NpnGriddedModule = __decorate([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["NgModule"])({
            imports: [
                _angular_forms__WEBPACK_IMPORTED_MODULE_2__["FormsModule"], _angular_forms__WEBPACK_IMPORTED_MODULE_2__["ReactiveFormsModule"],
                _angular_material__WEBPACK_IMPORTED_MODULE_3__["MatSliderModule"],
                _angular_material__WEBPACK_IMPORTED_MODULE_3__["MatSelectModule"],
                _common_index__WEBPACK_IMPORTED_MODULE_5__["NpnCommonModule"]
            ],
            declarations: [
                _map_layer_legend_component__WEBPACK_IMPORTED_MODULE_6__["MapLayerLegendComponent"],
                _supports_opacity_control_component__WEBPACK_IMPORTED_MODULE_7__["SupportsOpacityControl"],
                _pipes__WEBPACK_IMPORTED_MODULE_11__["LegendBuffelgrassUnitsPipe"], _pipes__WEBPACK_IMPORTED_MODULE_11__["LegendGddUnitsPipe"], _pipes__WEBPACK_IMPORTED_MODULE_11__["AgddDefaultTodayElevationPipe"], _pipes__WEBPACK_IMPORTED_MODULE_11__["LegendAgddAnomalyPipe"],
                _pipes__WEBPACK_IMPORTED_MODULE_11__["AgddDefaultTodayTimePipe"], _pipes__WEBPACK_IMPORTED_MODULE_11__["LegendSixAnomalyPipe"], _pipes__WEBPACK_IMPORTED_MODULE_11__["LegendDoyPipe"], _pipes__WEBPACK_IMPORTED_MODULE_11__["ExtentDatesPipe"],
                _pipes__WEBPACK_IMPORTED_MODULE_11__["ThirtyYearAvgDayOfYearPipe"],
            ],
            exports: [
                _map_layer_legend_component__WEBPACK_IMPORTED_MODULE_6__["MapLayerLegendComponent"],
                _supports_opacity_control_component__WEBPACK_IMPORTED_MODULE_7__["SupportsOpacityControl"],
            ],
            providers: [
                _angular_common__WEBPACK_IMPORTED_MODULE_1__["DatePipe"], _angular_common__WEBPACK_IMPORTED_MODULE_1__["DecimalPipe"],
                _pipes__WEBPACK_IMPORTED_MODULE_11__["LegendBuffelgrassUnitsPipe"], _pipes__WEBPACK_IMPORTED_MODULE_11__["LegendGddUnitsPipe"], _pipes__WEBPACK_IMPORTED_MODULE_11__["AgddDefaultTodayElevationPipe"], _pipes__WEBPACK_IMPORTED_MODULE_11__["LegendAgddAnomalyPipe"],
                _pipes__WEBPACK_IMPORTED_MODULE_11__["AgddDefaultTodayTimePipe"], _pipes__WEBPACK_IMPORTED_MODULE_11__["LegendSixAnomalyPipe"], _pipes__WEBPACK_IMPORTED_MODULE_11__["LegendDoyPipe"], _pipes__WEBPACK_IMPORTED_MODULE_11__["ExtentDatesPipe"],
                _pipes__WEBPACK_IMPORTED_MODULE_11__["ThirtyYearAvgDayOfYearPipe"], _pipes__WEBPACK_IMPORTED_MODULE_11__["GriddedPipeProvider"],
                _npn_map_layer_service__WEBPACK_IMPORTED_MODULE_4__["NpnMapLayerService"],
                _gridded_common__WEBPACK_IMPORTED_MODULE_8__["GriddedUrls"],
                _wcs_data_service__WEBPACK_IMPORTED_MODULE_9__["WcsDataService"],
                _boundary_service__WEBPACK_IMPORTED_MODULE_10__["BoundaryService"]
            ]
        })
    ], NpnGriddedModule);
    return NpnGriddedModule;
}());



/***/ }),

/***/ "../npn/common/src/lib/gridded/npn-map-layer.service.ts":
/*!**************************************************************!*\
  !*** ../npn/common/src/lib/gridded/npn-map-layer.service.ts ***!
  \**************************************************************/
/*! exports provided: NpnMapLayerService */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "NpnMapLayerService", function() { return NpnMapLayerService; });
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @angular/core */ "../../node_modules/@angular/core/fesm5/core.js");
/* harmony import */ var jquery__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! jquery */ "../../node_modules/jquery/dist/jquery.js");
/* harmony import */ var jquery__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(jquery__WEBPACK_IMPORTED_MODULE_1__);
/* harmony import */ var _common_index__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../common/index */ "../npn/common/src/lib/common/index.ts");
/* harmony import */ var _gridded_common__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./gridded-common */ "../npn/common/src/lib/gridded/gridded-common.ts");
/* harmony import */ var _pest_map_layer__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./pest-map-layer */ "../npn/common/src/lib/gridded/pest-map-layer.ts");
/* harmony import */ var _wms_map_layer__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./wms-map-layer */ "../npn/common/src/lib/gridded/wms-map-layer.ts");
/* harmony import */ var _pipes__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./pipes */ "../npn/common/src/lib/gridded/pipes.ts");
/* harmony import */ var _pest_map_layer_legend__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./pest-map-layer-legend */ "../npn/common/src/lib/gridded/pest-map-layer-legend.ts");
/* harmony import */ var _wms_map_layer_legend__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ./wms-map-layer-legend */ "../npn/common/src/lib/gridded/wms-map-layer-legend.ts");
/* harmony import */ var _wcs_data_service__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ./wcs-data.service */ "../npn/common/src/lib/gridded/wcs-data.service.ts");
/* harmony import */ var _default_map_layer_legend__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ./default-map-layer-legend */ "../npn/common/src/lib/gridded/default-map-layer-legend.ts");
/* harmony import */ var _agm_core__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! @agm/core */ "../../node_modules/@agm/core/index.js");
var __assign = (undefined && undefined.__assign) || Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
        s = arguments[i];
        for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
            t[p] = s[p];
    }
    return t;
};
var __decorate = (undefined && undefined.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (undefined && undefined.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};


var $jq = jquery__WEBPACK_IMPORTED_MODULE_1__;

// TODO MAP_LAYERS here has been coded into the application
// it may differ from the FWS apps to the vis-tool???
// depending on how that shakes out perhaps a "provider" Injectable
// that individual apps then wire into this service instance??









var DEEP_COPY = function (o) { return JSON.parse(JSON.stringify(o)); };
var NpnMapLayerService = /** @class */ (function () {
    function NpnMapLayerService(serviceUtils, wcsDataService, griddedPipes, griddedUrls, mapsApiLoader) {
        this.serviceUtils = serviceUtils;
        this.wcsDataService = wcsDataService;
        this.griddedPipes = griddedPipes;
        this.griddedUrls = griddedUrls;
        this.mapsApiLoader = mapsApiLoader;
        this.legends = {};
    }
    NpnMapLayerService.prototype.newLayer = function (map, layerName) {
        var _this = this;
        return this.mapsApiLoader.load()
            .then(function () { return _this.getLayerDefinition(layerName)
            .then(function (layerDef) {
            if (layerDef) {
                switch (layerDef.type || _gridded_common__WEBPACK_IMPORTED_MODULE_3__["MapLayerType"].STANDARD) {
                    case _gridded_common__WEBPACK_IMPORTED_MODULE_3__["MapLayerType"].STANDARD:
                        return new _wms_map_layer__WEBPACK_IMPORTED_MODULE_5__["WmsMapLayer"](map, layerDef, _this);
                    case _gridded_common__WEBPACK_IMPORTED_MODULE_3__["MapLayerType"].PEST:
                        {
                            if (layerDef.name == 'precipitation:buffelgrass_prism')
                                return new _wms_map_layer__WEBPACK_IMPORTED_MODULE_5__["WmsMapLayer"](map, layerDef, _this);
                            else
                                return new _pest_map_layer__WEBPACK_IMPORTED_MODULE_4__["PestMapLayer"](map, layerDef, _this);
                        }
                }
            }
        }); });
    };
    NpnMapLayerService.prototype.getDefaultLegend = function () {
        var key = 'DEFAULT';
        if (this.legends[key]) {
            return this.legends[key];
        }
        return (this.legends[key] = new _default_map_layer_legend__WEBPACK_IMPORTED_MODULE_10__["DefaultMapLayerLegend"](this.griddedPipes));
    };
    // this is separate from WmsLayer itself because FWS apps use
    // legends separate from layers (for now).  If the clipped stuff
    // is worked into a sub-class of NpnMapLayer then this should likely
    // move into the layer implementation itself.
    NpnMapLayerService.prototype.getLegend = function (input) {
        var _this = this;
        var definition = typeof (input) === 'string'
            ? this.getLayerDefinition(input)
            : Promise.resolve(input);
        return definition.then(function (layerDef) {
            var layerBasis = layerDef.layerBasis;
            var layerName = layerDef.name;
            if (layerName == 'precipitation:buffelgrass_prism') {
                layerBasis = layerName;
            }
            if (_this.legends[layerName]) {
                return Promise.resolve(_this.legends[layerName]);
            }
            return _this.serviceUtils.cachedGet(_this.griddedUrls.wmsBaseUrl, {
                service: 'wms',
                request: 'GetStyles',
                version: _gridded_common__WEBPACK_IMPORTED_MODULE_3__["WMS_VERSION"],
                layers: layerBasis || layerName
            }, true /* as text*/)
                .then(function (xml) {
                var legend_data = $jq($jq.parseXML(xml));
                var findChildren = function (tagName, jqParent) {
                    var found = jqParent.find(tagName);
                    return found.length === 0
                        ? jqParent.find('sld\\:' + tagName) // FF
                        : found;
                };
                var userStyles = findChildren('UserStyle', legend_data);
                var userStyleElm = !!layerBasis
                    ? userStyles.toArray().reduce(function (found, e) {
                        if (found) {
                            return found;
                        }
                        var styleName = findChildren('Name', $jq(e)).first().text();
                        return styleName === layerName || styleName == 'buffelgrass_inches' ? e : null;
                    }, null)
                    : userStyles.toArray()[0];
                var color_map = findChildren('ColorMap', $jq(userStyleElm));
                var l;
                if (color_map.length !== 0) {
                    switch (layerDef.type || _gridded_common__WEBPACK_IMPORTED_MODULE_3__["MapLayerType"].STANDARD) {
                        case _gridded_common__WEBPACK_IMPORTED_MODULE_3__["MapLayerType"].STANDARD:
                            l = new _wms_map_layer_legend__WEBPACK_IMPORTED_MODULE_8__["WmsMapLayerLegend"](_this.wcsDataService, _this.griddedPipes, $jq(color_map.toArray()[0]), layerDef, legend_data);
                            break;
                        case _gridded_common__WEBPACK_IMPORTED_MODULE_3__["MapLayerType"].PEST:
                            l = new _pest_map_layer_legend__WEBPACK_IMPORTED_MODULE_7__["PestMapLayerLegend"](_this.wcsDataService, _this.griddedPipes, $jq(color_map.toArray()[0]), layerDef, legend_data);
                            break;
                    }
                }
                return _this.legends[layerName] = l;
            });
        });
    };
    NpnMapLayerService.prototype.getLayerOverrides = function () {
        var _this = this;
        var url = 'assets/npn-map-layer-overrides.json';
        return this.serviceUtils.cachedGet(url)
            // on any error (e.g. 404 not fond) return an empty document (cached to avoid subsequent failures)
            .catch(function (err) { return _this.serviceUtils.cachedSet(url, {}); });
    };
    NpnMapLayerService.prototype.getLayerDefinitions = function () {
        var _this = this;
        function mergeLayersIntoConfig(wms_layer_defs, overrides) {
            var result = DEEP_COPY(_gridded_common__WEBPACK_IMPORTED_MODULE_3__["MAP_LAYERS"]), base_description = result.description;
            result.categories.forEach(function (category) {
                // layers can inherit config like filters (if all in common) from
                // the base category
                var base_config = DEEP_COPY(category);
                delete base_config.name;
                delete base_config.layers;
                base_config.description = base_config.description || base_description;
                category.layers = category.layers.map(function (l) {
                    var base_copy = DEEP_COPY(base_config);
                    return __assign({}, base_copy, wms_layer_defs[l.name], l, overrides[l.name] || {});
                });
            });
            return result;
        }
        if (this.layerDefs) {
            return Promise.resolve(this.layerDefs);
        }
        return Promise.all([
            this.serviceUtils.cachedGet(this.griddedUrls.wmsCapabilitiesUrl, null, true /*as text*/),
            this.getLayerOverrides()
        ]).then(function (results) {
            var xml = results[0], overrides = results[1];
            var wms_capabilities = $jq($jq.parseXML(xml));
            console.debug('WmsMapLayerService:capabilities', wms_capabilities);
            var wms_layer_defs = _this._getLayers(wms_capabilities.find('Layer'));
            console.debug('WmsMapLayerService:wms layer definitions', wms_layer_defs);
            console.debug('WmsMapLayerService:wms layer overrides', overrides);
            _this.layerDefs = mergeLayersIntoConfig(wms_layer_defs, overrides);
            console.debug('WmsMapLayerService:layer definitions', _this.layerDefs);
            return _this.layerDefs;
        });
    };
    NpnMapLayerService.prototype.getLayerDefinition = function (layerName) {
        return this.getLayerDefinitions()
            .then(function (definitions) {
            var layerMap = definitions.categories.reduce(function (map, c) {
                c.layers.forEach(function (l) {
                    map[l.name] = l;
                });
                return map;
            }, {});
            return layerMap[layerName];
        });
    };
    // private functions used to parse layer info out of WMS Capabilities response
    // remain instance functions since they use some injected services
    // returns an associative array of machine name layer to layer definition
    NpnMapLayerService.prototype._getLayers = function (layers) {
        var _this = this;
        if (!layers || layers.length < 2) { // 1st layer is parent, children are the real layers
            return;
        }
        // make it a normal array, not a jQuery one
        var ls = [];
        layers.slice(1).each(function (i, o) {
            ls.push(o);
        });
        return ls.map(function (l) { return _this._layerToObject(l); }).reduce(function (map, l) {
            map[l.name] = l;
            return map;
        }, {});
    };
    NpnMapLayerService.prototype._layerToObject = function (layer) {
        var l = $jq(layer), o = {
            name: l.find('Name').first().text(),
            // redmine #761
            title: l.find('Title').first().text().replace(/\((.+?)\)/g, ''),
            abstract: l.find('Abstract').first().text(),
            bbox: this._parseBoundingBox(l.find('EX_GeographicBoundingBox').first()),
            style: this._parseStyle(l.find('Style').first()),
            extent: this._parseExtent(l.find('Extent').first()) // TODO see unmigrated code below
        };
        if (!o.bbox) {
            o.bbox = this._parseLatLonBoundingBox(l.find('LatLonBoundingBox').first());
        }
        return o;
    };
    NpnMapLayerService.prototype._parseStyle = function (style) {
        var s = $jq(style);
        return {
            name: s.find('Name').first().text(),
            // redmine #761
            title: s.find('Title').first().text().replace(/\((.+?)\)/g, ''),
            legend: s.find('OnlineResource').attr('xlink:href') // not very specific...
        };
    };
    NpnMapLayerService.prototype._parseLatLonBoundingBox = function (bb) {
        if (bb.length) {
            var bbox_1 = {
                westBoundLongitude: parseFloat(bb.attr('minx')),
                eastBoundLongitude: parseFloat(bb.attr('maxx')),
                southBoundLatitude: parseFloat(bb.attr('miny')),
                northBoundLatitude: parseFloat(bb.attr('maxy')),
                getBounds: function () {
                    return new google.maps.LatLngBounds(new google.maps.LatLng(bbox_1.southBoundLatitude, bbox_1.westBoundLongitude), // sw
                    new google.maps.LatLng(bbox_1.northBoundLatitude, bbox_1.eastBoundLongitude) // ne
                    );
                }
            };
            return bbox_1;
        }
    };
    NpnMapLayerService.prototype._parseBoundingBox = function (bb) {
        if (bb.length) {
            var bbox_2 = {
                westBoundLongitude: parseFloat(bb.find('westBoundLongitude').text()),
                eastBoundLongitude: parseFloat(bb.find('eastBoundLongitude').text()),
                southBoundLatitude: parseFloat(bb.find('southBoundLatitude').text()),
                northBoundLatitude: parseFloat(bb.find('northBoundLatitude').text()),
                getBounds: function () {
                    return new google.maps.LatLngBounds(new google.maps.LatLng(bbox_2.southBoundLatitude, bbox_2.westBoundLongitude), // sw
                    new google.maps.LatLng(bbox_2.northBoundLatitude, bbox_2.eastBoundLongitude) // ne
                    );
                }
            };
            // some bounding boxes seem to be messed up with lat/lons of 0 && -1
            // so if any of those numbers occur throw away the bounding box.
            return ![bbox_2.westBoundLongitude, bbox_2.eastBoundLongitude, bbox_2.southBoundLatitude, bbox_2.northBoundLatitude].reduce(function (v, n) {
                return v || (n === 0 || n === -1);
            }, false) ? bbox_2 : undefined;
        }
    };
    // represents an extent value of month/day/year
    NpnMapLayerService.prototype._dateExtentValue = function (value, dateFmt) {
        var d = Object(_gridded_common__WEBPACK_IMPORTED_MODULE_3__["parseExtentDate"])(value);
        return {
            value: value,
            date: d,
            label: this.griddedPipes.get('date').transform(d, (dateFmt || 'longDate')),
            addToParams: function (params, serviceType) {
                switch (serviceType) {
                    case _gridded_common__WEBPACK_IMPORTED_MODULE_3__["MapLayerServiceType"].WMS:
                        params.time = value;
                        break;
                    case _gridded_common__WEBPACK_IMPORTED_MODULE_3__["MapLayerServiceType"].WCS:
                        params.subset = params.subset || [];
                        params.subset.push("http://www.opengis.net/def/axis/OGC/0/time(\"" + value + "\")");
                        break;
                }
            }
        };
    };
    // represents an extent value of day of year
    NpnMapLayerService.prototype._doyExtentValue = function (value) {
        return {
            value: value,
            label: this.griddedPipes.get('thirtyYearAvgDayOfYear').transform(value),
            addToParams: function (params, serviceType) {
                switch (serviceType) {
                    case _gridded_common__WEBPACK_IMPORTED_MODULE_3__["MapLayerServiceType"].WMS:
                        params.elevation = value;
                        break;
                    case _gridded_common__WEBPACK_IMPORTED_MODULE_3__["MapLayerServiceType"].WCS:
                        params.subset = params.subset || [];
                        params.subset.push("http://www.opengis.net/def/axis/OGC/0/elevation(" + value + ")");
                        break;
                }
            }
        };
    };
    NpnMapLayerService.prototype._parseExtent = function (extent) {
        var _this = this;
        var e = $jq(extent), content = e.text(), dfltValue = e.attr('default'), dflt, values, name = e.attr('name'), start, end, yearFmt = 'yyyy', i;
        if (!name || !content) {
            return undefined;
        }
        function findDefault(current, value) {
            return current || (value.value == dfltValue ? value : undefined);
        }
        if (name === 'time') {
            if (content.indexOf('/') === -1) { // for now skip <lower>/<upper>/<resolution>
                values = content.split(',').map(function (d) { return _this._dateExtentValue(d); });
                // ugh
                dfltValue = dfltValue.replace(/0Z/, '0.000Z'); // extent values in ms preceision but not the default...
                dflt = values.reduce(findDefault, undefined);
                return {
                    label: 'Date',
                    type: _gridded_common__WEBPACK_IMPORTED_MODULE_3__["MapLayerExtentType"].DATE,
                    current: dflt,
                    values: values
                };
            }
            else {
                values = /^([^\/]+)\/(.*)\/P1Y$/.exec(content);
                if (values && values.length === 3) {
                    start = this._dateExtentValue(values[1], yearFmt);
                    end = this._dateExtentValue(values[2], yearFmt);
                    if (end.date.getFullYear() > start.date.getFullYear()) { // should never happen but to be safe
                        values = [start];
                        for (i = start.date.getFullYear() + 1; i < end.date.getFullYear(); i++) {
                            values.push(this._dateExtentValue(i + '-01-01T00:00:00.000Z', yearFmt));
                        }
                        values.push(end);
                        return {
                            label: 'Year',
                            type: _gridded_common__WEBPACK_IMPORTED_MODULE_3__["MapLayerExtentType"].YEAR,
                            current: end,
                            values: values
                        };
                    }
                }
            }
        }
        else if (name === 'elevation') {
            values = content.split(',').map(function (e) { return _this._doyExtentValue(e); });
            dflt = values.reduce(findDefault, undefined);
            return {
                label: 'Day of Year',
                type: _gridded_common__WEBPACK_IMPORTED_MODULE_3__["MapLayerExtentType"].DOY,
                current: dflt,
                values: values
            };
        }
    };
    NpnMapLayerService = __decorate([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Injectable"])(),
        __metadata("design:paramtypes", [_common_index__WEBPACK_IMPORTED_MODULE_2__["NpnServiceUtils"],
            _wcs_data_service__WEBPACK_IMPORTED_MODULE_9__["WcsDataService"],
            _pipes__WEBPACK_IMPORTED_MODULE_6__["GriddedPipeProvider"],
            _gridded_common__WEBPACK_IMPORTED_MODULE_3__["GriddedUrls"],
            _agm_core__WEBPACK_IMPORTED_MODULE_11__["MapsAPILoader"]])
    ], NpnMapLayerService);
    return NpnMapLayerService;
}());



/***/ }),

/***/ "../npn/common/src/lib/gridded/pest-map-layer-legend.ts":
/*!**************************************************************!*\
  !*** ../npn/common/src/lib/gridded/pest-map-layer-legend.ts ***!
  \**************************************************************/
/*! exports provided: PestMapLayerLegend */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "PestMapLayerLegend", function() { return PestMapLayerLegend; });
/* harmony import */ var _map_layer_legend__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./map-layer-legend */ "../npn/common/src/lib/gridded/map-layer-legend.ts");
/* harmony import */ var rxjs__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! rxjs */ "../../node_modules/rxjs/_esm5/index.js");
/* harmony import */ var rxjs_operators__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! rxjs/operators */ "../../node_modules/rxjs/_esm5/operators/index.js");
var __extends = (undefined && undefined.__extends) || (function () {
    var extendStatics = Object.setPrototypeOf ||
        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();



var PestMapLayerLegend = /** @class */ (function (_super) {
    __extends(PestMapLayerLegend, _super);
    function PestMapLayerLegend() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    PestMapLayerLegend.prototype.getGriddedPointData = function (latLng) {
        var _this = this;
        if (this.layerName == 'precipitation:buffelgrass_prism')
            return _super.prototype.getGriddedPointData.call(this, latLng);
        var layer = this.getLayer();
        return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["from"])(layer.getPestDescription())
            .pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_2__["switchMap"])(function (pest) {
            if (pest && pest.lowerThreshold && pest.startMonthDay && pest.agddMethod) {
                // special case WRT gridded data for this pest.
                var params = {
                    climateProvider: 'NCEP',
                    temperatureUnit: 'fahrenheit',
                    startDate: layer.extent.current.date.getFullYear() + ("-" + pest.startMonthDay),
                    endDate: layer.extent.current.date.toISOString().replace(/T.*$/, ''),
                    latitude: "" + latLng.lat(),
                    longitude: "" + latLng.lng()
                };
                if (!pest.upperThreshold) {
                    params.base = "" + pest.lowerThreshold;
                }
                else {
                    params.lowerThreshold = "" + pest.lowerThreshold;
                    params.upperThreshold = "" + pest.upperThreshold;
                }
                return Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["from"])(_this.wcsDataService.serviceUtils.get(_this.wcsDataService.serviceUtils.dataApiUrl("/v0/agdd/" + pest.agddMethod + "/pointTimeSeries"), params)).pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_2__["map"])(function (response) {
                    var timeSeries = response.timeSeries;
                    if (timeSeries) {
                        var point = timeSeries.length
                            ? timeSeries[timeSeries.length - 1].agdd
                            : 0;
                        var legendData = _this.getPointData(point);
                        var formatted = _this.formatPointData(point);
                        var result = { point: point, legendData: legendData, formatted: formatted };
                        console.log('PestMapLayerLegend: custom gridded result', result);
                        return result;
                    }
                    return null;
                }));
            }
            return _super.prototype.getGriddedPointData.call(_this, latLng);
        }));
    };
    PestMapLayerLegend.prototype.redraw = function (svg, legendTitle) {
        var legend = this;
        var width = parseFloat(svg.style('width').replace('px', '')), height = parseFloat(svg.style('height').replace('px', '')), 
        // only data w/out 'ignore' in them
        data = legend.getData().filter(function (d) { return d.original_label.indexOf('ignore') === -1; }), cell_width = 20, cell_height = 20;
        console.debug('PestMapLegend.svg dimensions', width, height);
        console.debug('PestMapLegend.legend cell width', cell_width);
        console.debug('PestMapLegend.data', data);
        var g = svg.append('g'), cell = g.selectAll('g.cell')
            .data(data)
            .enter()
            .append('g')
            .attr('class', 'cell')
            .attr('transform', function (d, i) { return 'translate(' + 0 + ',' + (i * cell_width) + ')'; });
        // add the  colored legend boxes.
        cell.append('rect')
            .attr('height', cell_height)
            .attr('width', cell_width)
            .style('stroke', 'black')
            .style('stroke-width', '1px')
            .style('fill', function (d) { return d.color; })
            .append('title').text(function (d) { return "" + d.quantity; });
        // add the labels
        cell.append('text')
            .attr('dx', '2.4em')
            .attr('dy', (cell_width / 1.5))
            .style('text-anchor', 'start')
            .text(function (d) { return d.original_label; });
        function label_cell(cell, label, anchor) {
            cell.append('text')
                .attr('dx', '2.4em')
                .attr('dy', (cell_width / 1.5) /*cell_height+tick_length+(2*tick_padding)*/) // need to know line height of text
                .style('text-anchor', anchor)
                .text(label);
        }
        var legendHeight = cell_height * data.length;
        /* TODO, this won't work no such element, and doesn't seem appropriate as we should futz with the size of the SVG
        var pLegend = document.getElementsByClassName('pest-legend');
        pLegend[0].style.height = legendHeight + 48 + 10 +'px';
        if(legend.pest == 'Hemlock Woolly Adelgid') {
            pLegend[0].style.width = 445 + 'px';
        } else {
            pLegend[0].style.width = 350 + 'px';
        }
        // pLegend[0].style.width = 405 + 'px';
        */
        var treatmentMethod = null;
        if (['emerald_ash_borer', 'lilac_borer', 'apple_maggot'].indexOf(legend.ldef.name) !== -1) {
            treatmentMethod = 'Window for Managing Adults';
        }
        else if (legend.ldef.name === 'winter_moth') {
            treatmentMethod = 'Window for Managing Caterpillars';
        }
        if (treatmentMethod) {
            svg.append('g').append('text').attr('dx', 5)
                .attr('dy', 20 + legendHeight)
                .attr('font-size', '16px')
                .attr('text-anchor', 'right').text(legend.ldef.title + ' Forecast' + ', ' + legend.ldef.extent.current.label);
            svg.append('g').append('text').attr('dx', 5)
                .attr('dy', 38 + legendHeight)
                .attr('font-size', '14px')
                .attr('text-anchor', 'right').text(treatmentMethod);
            svg.append('g').append('text').attr('dx', 5)
                .attr('dy', 54 + legendHeight)
                .attr('font-size', '11px')
                .attr('text-anchor', 'right').text('USA National Phenology Network, www.usanpn.org');
        }
        else {
            svg.append('g').append('text').attr('dx', 5)
                .attr('dy', 30 + legendHeight)
                .attr('font-size', '16px')
                .attr('text-anchor', 'right').text(legend.ldef.title + ' Forecast' + ', ' + legend.ldef.extent.current.label);
            svg.append('g').append('text').attr('dx', 5)
                .attr('dy', 48 + legendHeight)
                .attr('font-size', '11px')
                .attr('text-anchor', 'right').text('USA National Phenology Network, www.usanpn.org');
        }
    };
    return PestMapLayerLegend;
}(_map_layer_legend__WEBPACK_IMPORTED_MODULE_0__["MapLayerLegend"]));



/***/ }),

/***/ "../npn/common/src/lib/gridded/pest-map-layer.ts":
/*!*******************************************************!*\
  !*** ../npn/common/src/lib/gridded/pest-map-layer.ts ***!
  \*******************************************************/
/*! exports provided: PestMapLayer */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "PestMapLayer", function() { return PestMapLayer; });
/* harmony import */ var _gridded_common__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./gridded-common */ "../npn/common/src/lib/gridded/gridded-common.ts");
/* harmony import */ var _map_layer__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./map-layer */ "../npn/common/src/lib/gridded/map-layer.ts");
/* harmony import */ var _visualizations_vis_selection__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../visualizations/vis-selection */ "../npn/common/src/lib/visualizations/vis-selection.ts");
var __extends = (undefined && undefined.__extends) || (function () {
    var extendStatics = Object.setPrototypeOf ||
        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();



/**
 * Wrapper for google.maps.GroundOverlay creation/interaction to allow
 * the on/off methods of the PestMapLayer to be synchronous even though
 * the creating of the underlying GroundOverlay is asynchronous.
 * I.e. the app may want to turn "off" a layer before it's actually "on"
 */
var GroundOverlayWrapper = /** @class */ (function () {
    function GroundOverlayWrapper(data, opacity, map) {
        var _this = this;
        this.opacity = opacity;
        this.map = map;
        this.overlayReady = new Promise(function (resolve) { return _this.overlayReadyResolver = resolve; });
        data.then(function (response) {
            var bbox = response.bbox, clippedImage = response.clippedImage;
            var west = bbox[0], south = bbox[1], east = bbox[2], north = bbox[3];
            var overlay = new google.maps.GroundOverlay(clippedImage, { north: north, south: south, east: east, west: west }, { clickable: false });
            overlay.setOpacity(_this.opacity);
            overlay.setMap(_this.map);
            _this.overlayReadyResolver(overlay);
        });
    }
    GroundOverlayWrapper.prototype.on = function () {
        var _this = this;
        this.overlayReady.then(function (overlay) { return overlay.setMap(_this.map); });
    };
    GroundOverlayWrapper.prototype.off = function () {
        this.overlayReady.then(function (overlay) { return overlay.setMap(null); });
    };
    GroundOverlayWrapper.prototype.setOpacity = function (opacity) {
        var _this = this;
        this.overlayReady.then(function (overlay) { return overlay.setOpacity(_this.opacity = opacity); });
    };
    return GroundOverlayWrapper;
}());
var PestMapLayer = /** @class */ (function (_super) {
    __extends(PestMapLayer, _super);
    function PestMapLayer(map, layer_def, layerService) {
        var _this = _super.call(this, map, layer_def, layerService) || this;
        _this.map = map;
        _this.layer_def = layer_def;
        _this.layerService = layerService;
        var currentValue = _this.newExtentValue(new Date()).value;
        var minDateMillis = new Date(new Date().getFullYear() - 1, 0, 1).getTime();
        var maxDateMillis = new Date(new Date().getTime() + (6 * _visualizations_vis_selection__WEBPACK_IMPORTED_MODULE_2__["ONE_DAY_MILLIS"])).getTime();
        var values = [];
        var cMillis = minDateMillis;
        while (cMillis <= maxDateMillis) {
            var d = new Date(cMillis);
            values.push(_this.newExtentValue(d));
            cMillis += _visualizations_vis_selection__WEBPACK_IMPORTED_MODULE_2__["ONE_DAY_MILLIS"];
        }
        layer_def.extent = {
            current: values.reduce(function (found, v) { return found || (v.value === currentValue ? v : undefined); }, undefined),
            label: 'Date',
            type: _gridded_common__WEBPACK_IMPORTED_MODULE_0__["MapLayerExtentType"].DATE,
            values: values
        };
        console.log('PestMapLayer.extent', layer_def.extent);
        return _this;
    }
    PestMapLayer.prototype.newExtentValue = function (date) {
        date.setHours(0, 0, 0, 0);
        var value = date.toISOString().replace(/T.*Z$/, 'T00:00:00.000Z');
        return {
            value: value,
            date: date,
            label: date.toLocaleString('en-us', { month: 'long' }) + " " + date.getDate() + ", " + date.getFullYear(),
            addToParams: function (params, serviceType) {
                switch (serviceType) {
                    case _gridded_common__WEBPACK_IMPORTED_MODULE_0__["MapLayerServiceType"].WMS:
                        params.date = value.substring(0, 10);
                        break;
                    case _gridded_common__WEBPACK_IMPORTED_MODULE_0__["MapLayerServiceType"].WCS:
                        params.subset = params.subset || [];
                        params.subset.push("http://www.opengis.net/def/axis/OGC/0/time(\"" + value + "\")");
                        break;
                }
            }
        };
    };
    PestMapLayer.prototype.setOpacity = function (opacity) {
        this.opacity = opacity;
        if (this.overlay) {
            this.overlay.setOpacity(opacity);
        }
    };
    PestMapLayer.prototype._on = function () {
        var params = {
            species: this.layer_def.title
        };
        this.layer_def.extent.current.addToParams(params, _gridded_common__WEBPACK_IMPORTED_MODULE_0__["MapLayerServiceType"].WMS);
        this.overlay = new GroundOverlayWrapper(this.layerService.serviceUtils.get(this.layerService.serviceUtils.dataApiUrl('/v0/agdd/pestMap'), params), this.opacity, this.map);
        this.overlay.on();
        return this;
    };
    PestMapLayer.prototype.on = function () {
        //TODO Analytics.trackEvent('gridded-layer','on',this.title);
        return this._on();
    };
    PestMapLayer.prototype._off = function () {
        if (this.overlay) {
            this.overlay.off();
            this.overlay = null;
        }
        return this;
    };
    PestMapLayer.prototype.off = function () {
        //TODO Analytics.trackEvent('gridded-layer','off',this.title);
        return this._off();
    };
    PestMapLayer.prototype.bounce = function () {
        return this._off()._on();
    };
    PestMapLayer.prototype.getPestDescription = function () {
        var species = this.title;
        return this.layerService.serviceUtils.cachedGet(this.layerService.serviceUtils.dataApiUrl('/v0/agdd/pestDescriptions')).then(function (descriptions) { return descriptions.find(function (d) { return d.species === species; }); });
    };
    PestMapLayer.prototype.getTimeSeriesUrl = function () {
        var _this = this;
        return this.getPestDescription()
            .then(function (pest) { return _this.layerService.serviceUtils.dataApiUrl("/v0/agdd/" + (pest.agddMethod || 'simple') + "/pointTimeSeries"); });
    };
    return PestMapLayer;
}(_map_layer__WEBPACK_IMPORTED_MODULE_1__["MapLayer"]));



/***/ }),

/***/ "../npn/common/src/lib/gridded/pipes.ts":
/*!**********************************************!*\
  !*** ../npn/common/src/lib/gridded/pipes.ts ***!
  \**********************************************/
/*! exports provided: LegendGddUnitsPipe, LegendBuffelgrassUnitsPipe, AgddDefaultTodayElevationPipe, LegendAgddAnomalyPipe, AgddDefaultTodayTimePipe, LegendSixAnomalyPipe, LegendDoyPipe, ExtentDatesPipe, DoyTxType, ThirtyYearAvgDayOfYearPipe, GriddedPipeProvider */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "LegendGddUnitsPipe", function() { return LegendGddUnitsPipe; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "LegendBuffelgrassUnitsPipe", function() { return LegendBuffelgrassUnitsPipe; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "AgddDefaultTodayElevationPipe", function() { return AgddDefaultTodayElevationPipe; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "LegendAgddAnomalyPipe", function() { return LegendAgddAnomalyPipe; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "AgddDefaultTodayTimePipe", function() { return AgddDefaultTodayTimePipe; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "LegendSixAnomalyPipe", function() { return LegendSixAnomalyPipe; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "LegendDoyPipe", function() { return LegendDoyPipe; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ExtentDatesPipe", function() { return ExtentDatesPipe; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "DoyTxType", function() { return DoyTxType; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ThirtyYearAvgDayOfYearPipe", function() { return ThirtyYearAvgDayOfYearPipe; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "GriddedPipeProvider", function() { return GriddedPipeProvider; });
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @angular/core */ "../../node_modules/@angular/core/fesm5/core.js");
/* harmony import */ var _angular_common__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @angular/common */ "../../node_modules/@angular/common/fesm5/common.js");
/* harmony import */ var _gridded_common__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./gridded-common */ "../npn/common/src/lib/gridded/gridded-common.ts");
/* harmony import */ var _visualizations_vis_selection__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../visualizations/vis-selection */ "../npn/common/src/lib/visualizations/vis-selection.ts");
var __decorate = (undefined && undefined.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (undefined && undefined.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};




var ONE_DAY = (24 * 60 * 60 * 1000);
var JAN_ONE_2010 = new Date(2010, 0);
var JAN_ONE_THIS_YEAR = new Date((new Date()).getFullYear(), 0);
var LegendGddUnitsPipe = /** @class */ (function () {
    function LegendGddUnitsPipe(decimalPipe) {
        this.decimalPipe = decimalPipe;
    }
    LegendGddUnitsPipe.prototype.transform = function (n, includeUnits) {
        return this.decimalPipe.transform(n, '1.0-0') + (includeUnits ? ' AGDD' : '');
    };
    LegendGddUnitsPipe = __decorate([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Pipe"])({ name: 'legendGddUnits' }),
        __metadata("design:paramtypes", [_angular_common__WEBPACK_IMPORTED_MODULE_1__["DecimalPipe"]])
    ], LegendGddUnitsPipe);
    return LegendGddUnitsPipe;
}());

var LegendBuffelgrassUnitsPipe = /** @class */ (function () {
    function LegendBuffelgrassUnitsPipe(decimalPipe) {
        this.decimalPipe = decimalPipe;
    }
    LegendBuffelgrassUnitsPipe.prototype.transform = function (n, includeUnits) {
        return this.decimalPipe.transform(n, '1.0-2') + (includeUnits ? ' INCHES' : '');
    };
    LegendBuffelgrassUnitsPipe = __decorate([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Pipe"])({ name: 'legendBuffelgrassUnits' }),
        __metadata("design:paramtypes", [_angular_common__WEBPACK_IMPORTED_MODULE_1__["DecimalPipe"]])
    ], LegendBuffelgrassUnitsPipe);
    return LegendBuffelgrassUnitsPipe;
}());

var AgddDefaultTodayElevationPipe = /** @class */ (function () {
    function AgddDefaultTodayElevationPipe(datePipe) {
        this.datePipe = datePipe;
    }
    AgddDefaultTodayElevationPipe.prototype.transform = function (values) {
        var todayLabel = this.datePipe.transform(new Date(), 'MMMM d');
        return (values || []).reduce(function (dflt, v) {
            return dflt || (v.label == todayLabel ? v : undefined);
        }, undefined);
    };
    AgddDefaultTodayElevationPipe = __decorate([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Pipe"])({ name: 'agddDefaultTodayElevation' }),
        __metadata("design:paramtypes", [_angular_common__WEBPACK_IMPORTED_MODULE_1__["DatePipe"]])
    ], AgddDefaultTodayElevationPipe);
    return AgddDefaultTodayElevationPipe;
}());

var LegendAgddAnomalyPipe = /** @class */ (function () {
    function LegendAgddAnomalyPipe(decimalPipe) {
        this.decimalPipe = decimalPipe;
    }
    LegendAgddAnomalyPipe.prototype.transform = function (n, includeUnits) {
        if (n === 0) {
            return 'No Difference';
        }
        var lt = n < 0;
        return this.decimalPipe.transform(Math.abs(n), '1.0') + (includeUnits ? ' AGDD ' : ' ') + (lt ? '<' : '>') + ' Avg';
    };
    LegendAgddAnomalyPipe = __decorate([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Pipe"])({ name: 'legendAgddAnomaly' }),
        __metadata("design:paramtypes", [_angular_common__WEBPACK_IMPORTED_MODULE_1__["DecimalPipe"]])
    ], LegendAgddAnomalyPipe);
    return LegendAgddAnomalyPipe;
}());

var AgddDefaultTodayTimePipe = /** @class */ (function () {
    function AgddDefaultTodayTimePipe(datePipe) {
        this.datePipe = datePipe;
    }
    AgddDefaultTodayTimePipe.prototype.transform = function (values) {
        var todayLabel = this.datePipe.transform(new Date(), 'MMMM d, y');
        return (values || []).reduce(function (dflt, v) {
            return dflt || (v.label == todayLabel ? v : undefined);
        }, undefined);
    };
    ;
    AgddDefaultTodayTimePipe = __decorate([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Pipe"])({ name: 'agddDefaultTodayTime' }),
        __metadata("design:paramtypes", [_angular_common__WEBPACK_IMPORTED_MODULE_1__["DatePipe"]])
    ], AgddDefaultTodayTimePipe);
    return AgddDefaultTodayTimePipe;
}());

var LegendSixAnomalyPipe = /** @class */ (function () {
    function LegendSixAnomalyPipe() {
    }
    LegendSixAnomalyPipe.prototype.transform = function (n) {
        if (n === 0) {
            return 'No Difference';
        }
        var lt = n < 0, abs = Math.abs(n);
        return abs + ' Days ' + (lt ? 'Early' : 'Late');
    };
    ;
    LegendSixAnomalyPipe = __decorate([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Pipe"])({ name: 'legendSixAnomaly' })
    ], LegendSixAnomalyPipe);
    return LegendSixAnomalyPipe;
}());

var LegendDoyPipe = /** @class */ (function () {
    function LegendDoyPipe(datePipe) {
        this.datePipe = datePipe;
    }
    LegendDoyPipe.prototype.transform = function (doy, fmt, current_year) {
        doy = Math.round(doy);
        if (doy === 0) {
            doy = 1;
        }
        fmt = fmt || 'MMM d'; // e.g. Jan 1
        return this.datePipe.transform(new Date((current_year ? JAN_ONE_THIS_YEAR : JAN_ONE_2010).getTime() + ((doy - 1) * ONE_DAY)), fmt);
    };
    LegendDoyPipe = __decorate([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Pipe"])({ name: 'legendDoy' }),
        __metadata("design:paramtypes", [_angular_common__WEBPACK_IMPORTED_MODULE_1__["DatePipe"]])
    ], LegendDoyPipe);
    return LegendDoyPipe;
}());

var ExtentDatesPipe = /** @class */ (function () {
    function ExtentDatesPipe(datePipe) {
        this.datePipe = datePipe;
    }
    ExtentDatesPipe.prototype.toTime = function (s) {
        var d = new Date();
        if (s === 'yesterday' || s === 'today' || s === 'tomorrow') {
            if (s === 'yesterday') {
                d.setTime(d.getTime() - ONE_DAY);
            }
            else if (s === 'tomorrow') {
                d.setTime(d.getTime() + ONE_DAY);
            }
            s = this.datePipe.transform(d, 'yyyy-MM-dd 00:00:00');
        }
        else if (s.indexOf('T') === -1) {
            s = d.getFullYear() + '-' + s + ' 00:00:00';
        }
        return Object(_gridded_common__WEBPACK_IMPORTED_MODULE_2__["parseExtentDate"])(s).getTime();
    };
    ExtentDatesPipe.prototype.transform = function (arr, after, before) {
        var a = after ? this.toTime(after) : undefined, b = before ? this.toTime(before) : undefined;
        if (a || b) {
            arr = arr.filter(function (d) {
                var t = Object(_gridded_common__WEBPACK_IMPORTED_MODULE_2__["parseExtentDate"])(d).getTime();
                return (!a || (a && t > a)) && (!b || (b && t < b));
            });
        }
        return arr;
    };
    ExtentDatesPipe = __decorate([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Pipe"])({ name: 'extentDates' }),
        __metadata("design:paramtypes", [_angular_common__WEBPACK_IMPORTED_MODULE_1__["DatePipe"]])
    ], ExtentDatesPipe);
    return ExtentDatesPipe;
}());

var DoyTxType;
(function (DoyTxType) {
    DoyTxType["DATE"] = "date";
    DoyTxType["DOY_STRING"] = "doy";
    DoyTxType["LABEL"] = "label";
})(DoyTxType || (DoyTxType = {}));
var DOY_LABEL_FMT = 'MMMM d';
var ThirtyYearAvgDayOfYearPipe = /** @class */ (function () {
    function ThirtyYearAvgDayOfYearPipe(datePipe) {
        this.datePipe = datePipe;
    }
    ThirtyYearAvgDayOfYearPipe.prototype.transform = function (input, txTo) {
        if (txTo === void 0) { txTo = DoyTxType.LABEL; }
        if (typeof (input) === 'string') {
            var doy = parseFloat(input);
            if (!isNaN(doy)) {
                input = new Date(JAN_ONE_2010.getTime() + ((doy - 1) * ONE_DAY));
            }
        }
        if (input instanceof Date) {
            switch (txTo) {
                case DoyTxType.DATE:
                    return input;
                case DoyTxType.LABEL:
                    return this.datePipe.transform(input, DOY_LABEL_FMT);
                case DoyTxType.DOY_STRING:
                    if (input.getFullYear() !== 2010) {
                        input.setFullYear(2010);
                    }
                    input.setHours(0, 0, 0, 0);
                    var diff = input.getTime() - JAN_ONE_2010.getTime();
                    var doy = (diff / _visualizations_vis_selection__WEBPACK_IMPORTED_MODULE_3__["ONE_DAY_MILLIS"]) + 1.0;
                    return doy.toFixed(1);
            }
        }
        console.warn("ThirtyYearAvgDayOfYearPipe.transform unexpected input for translation to \"" + txTo + "\"", input);
        return input;
    };
    ThirtyYearAvgDayOfYearPipe = __decorate([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Pipe"])({ name: 'thirtyYearAvgDayOfYear' }),
        __metadata("design:paramtypes", [_angular_common__WEBPACK_IMPORTED_MODULE_1__["DatePipe"]])
    ], ThirtyYearAvgDayOfYearPipe);
    return ThirtyYearAvgDayOfYearPipe;
}());

var GriddedPipeProvider = /** @class */ (function () {
    function GriddedPipeProvider(extentDates, legendDoy, legendSixAnomaly, agddDefaultTodayTime, legendAgddAnomaly, agddDefaultTodayElevation, legendGddUnits, legendBuffelgrassUnits, thirtyYearAvgDayOfYear, date) {
        this.extentDates = extentDates;
        this.legendDoy = legendDoy;
        this.legendSixAnomaly = legendSixAnomaly;
        this.agddDefaultTodayTime = agddDefaultTodayTime;
        this.legendAgddAnomaly = legendAgddAnomaly;
        this.agddDefaultTodayElevation = agddDefaultTodayElevation;
        this.legendGddUnits = legendGddUnits;
        this.legendBuffelgrassUnits = legendBuffelgrassUnits;
        this.thirtyYearAvgDayOfYear = thirtyYearAvgDayOfYear;
        this.date = date;
        this.pipes = {};
        this.pipes.extentDates = extentDates;
        this.pipes.legendDoy = legendDoy;
        this.pipes.legendSixAnomaly = legendSixAnomaly;
        this.pipes.agddDefaultTodayTime = agddDefaultTodayTime;
        this.pipes.legendAgddAnomaly = legendAgddAnomaly;
        this.pipes.agddDefaultTodayElevation = agddDefaultTodayElevation;
        this.pipes.legendGddUnits = legendGddUnits;
        this.pipes.legendBuffelgrassUnits = legendBuffelgrassUnits;
        this.pipes.thirtyYearAvgDayOfYear = thirtyYearAvgDayOfYear;
        this.pipes.date = date;
    }
    GriddedPipeProvider.prototype.get = function (pipeName) {
        return this.pipes[pipeName];
    };
    GriddedPipeProvider = __decorate([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Injectable"])(),
        __metadata("design:paramtypes", [ExtentDatesPipe,
            LegendDoyPipe,
            LegendSixAnomalyPipe,
            AgddDefaultTodayTimePipe,
            LegendAgddAnomalyPipe,
            AgddDefaultTodayElevationPipe,
            LegendGddUnitsPipe,
            LegendBuffelgrassUnitsPipe,
            ThirtyYearAvgDayOfYearPipe,
            _angular_common__WEBPACK_IMPORTED_MODULE_1__["DatePipe"]])
    ], GriddedPipeProvider);
    return GriddedPipeProvider;
}());



/***/ }),

/***/ "../npn/common/src/lib/gridded/public_api.ts":
/*!***************************************************!*\
  !*** ../npn/common/src/lib/gridded/public_api.ts ***!
  \***************************************************/
/*! exports provided: MapLayerLegendComponent, GriddedPipeProvider, DoyTxType, NpnGriddedModule, MapLayer, encodeHttpParams, srsConversion, NpnMapLayerService, MapLayerLegend, DESTINATION_POINT, WcsDataService, GriddedInfoWindowHandler, googleFeatureBounds, MAP_STYLES, parseExtentDate, MapLayerType, MapLayerServiceType, MapLayerExtentType, CATEGORY_PEST, CATEGORY_TEMP_ACCUM_30_YR_AVG, CATEGORY_TEMP_ACCUM_CURRENT, CATEGORY_TEMP_ACCUM_CURRENT_AK, CATEGORY_TEMP_ACCUM_DAILY_ANOM, CATEGORY_SIX_HIST_ANNUAL, CATEGORY_SIX_CURRENT_YEAR, CATEGORY_SIX_CURRENT_YEAR_AK, CATEGORY_SIX_DAILY_ANOM, CATEGORY_SIX_30_YR_AVG, MAP_LAYERS, WMS_VERSION, BOX_SIZE, BASE_WMS_ARGS, GriddedUrls, WmsMapLayer, WmsMapLayerLegend, PestMapLayer, PestMapLayerLegend, DefaultMapLayerLegend, BoundaryService */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _npn_gridded_module__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./npn-gridded.module */ "../npn/common/src/lib/gridded/npn-gridded.module.ts");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "NpnGriddedModule", function() { return _npn_gridded_module__WEBPACK_IMPORTED_MODULE_0__["NpnGriddedModule"]; });

/* harmony import */ var _map_layer__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./map-layer */ "../npn/common/src/lib/gridded/map-layer.ts");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "MapLayer", function() { return _map_layer__WEBPACK_IMPORTED_MODULE_1__["MapLayer"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "encodeHttpParams", function() { return _map_layer__WEBPACK_IMPORTED_MODULE_1__["encodeHttpParams"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "srsConversion", function() { return _map_layer__WEBPACK_IMPORTED_MODULE_1__["srsConversion"]; });

/* harmony import */ var _npn_map_layer_service__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./npn-map-layer.service */ "../npn/common/src/lib/gridded/npn-map-layer.service.ts");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "NpnMapLayerService", function() { return _npn_map_layer_service__WEBPACK_IMPORTED_MODULE_2__["NpnMapLayerService"]; });

/* harmony import */ var _map_layer_legend__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./map-layer-legend */ "../npn/common/src/lib/gridded/map-layer-legend.ts");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "MapLayerLegend", function() { return _map_layer_legend__WEBPACK_IMPORTED_MODULE_3__["MapLayerLegend"]; });

/* harmony import */ var _wcs_data_service__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./wcs-data.service */ "../npn/common/src/lib/gridded/wcs-data.service.ts");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "DESTINATION_POINT", function() { return _wcs_data_service__WEBPACK_IMPORTED_MODULE_4__["DESTINATION_POINT"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "WcsDataService", function() { return _wcs_data_service__WEBPACK_IMPORTED_MODULE_4__["WcsDataService"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "GriddedInfoWindowHandler", function() { return _wcs_data_service__WEBPACK_IMPORTED_MODULE_4__["GriddedInfoWindowHandler"]; });

/* harmony import */ var _map_layer_legend_component__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./map-layer-legend.component */ "../npn/common/src/lib/gridded/map-layer-legend.component.ts");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "MapLayerLegendComponent", function() { return _map_layer_legend_component__WEBPACK_IMPORTED_MODULE_5__["MapLayerLegendComponent"]; });

/* harmony import */ var _google_feature_bounds__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./google-feature-bounds */ "../npn/common/src/lib/gridded/google-feature-bounds.ts");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "googleFeatureBounds", function() { return _google_feature_bounds__WEBPACK_IMPORTED_MODULE_6__["googleFeatureBounds"]; });

/* harmony import */ var _gridded_common__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./gridded-common */ "../npn/common/src/lib/gridded/gridded-common.ts");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "MAP_STYLES", function() { return _gridded_common__WEBPACK_IMPORTED_MODULE_7__["MAP_STYLES"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "parseExtentDate", function() { return _gridded_common__WEBPACK_IMPORTED_MODULE_7__["parseExtentDate"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "MapLayerType", function() { return _gridded_common__WEBPACK_IMPORTED_MODULE_7__["MapLayerType"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "MapLayerServiceType", function() { return _gridded_common__WEBPACK_IMPORTED_MODULE_7__["MapLayerServiceType"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "MapLayerExtentType", function() { return _gridded_common__WEBPACK_IMPORTED_MODULE_7__["MapLayerExtentType"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "CATEGORY_PEST", function() { return _gridded_common__WEBPACK_IMPORTED_MODULE_7__["CATEGORY_PEST"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "CATEGORY_TEMP_ACCUM_30_YR_AVG", function() { return _gridded_common__WEBPACK_IMPORTED_MODULE_7__["CATEGORY_TEMP_ACCUM_30_YR_AVG"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "CATEGORY_TEMP_ACCUM_CURRENT", function() { return _gridded_common__WEBPACK_IMPORTED_MODULE_7__["CATEGORY_TEMP_ACCUM_CURRENT"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "CATEGORY_TEMP_ACCUM_CURRENT_AK", function() { return _gridded_common__WEBPACK_IMPORTED_MODULE_7__["CATEGORY_TEMP_ACCUM_CURRENT_AK"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "CATEGORY_TEMP_ACCUM_DAILY_ANOM", function() { return _gridded_common__WEBPACK_IMPORTED_MODULE_7__["CATEGORY_TEMP_ACCUM_DAILY_ANOM"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "CATEGORY_SIX_HIST_ANNUAL", function() { return _gridded_common__WEBPACK_IMPORTED_MODULE_7__["CATEGORY_SIX_HIST_ANNUAL"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "CATEGORY_SIX_CURRENT_YEAR", function() { return _gridded_common__WEBPACK_IMPORTED_MODULE_7__["CATEGORY_SIX_CURRENT_YEAR"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "CATEGORY_SIX_CURRENT_YEAR_AK", function() { return _gridded_common__WEBPACK_IMPORTED_MODULE_7__["CATEGORY_SIX_CURRENT_YEAR_AK"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "CATEGORY_SIX_DAILY_ANOM", function() { return _gridded_common__WEBPACK_IMPORTED_MODULE_7__["CATEGORY_SIX_DAILY_ANOM"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "CATEGORY_SIX_30_YR_AVG", function() { return _gridded_common__WEBPACK_IMPORTED_MODULE_7__["CATEGORY_SIX_30_YR_AVG"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "MAP_LAYERS", function() { return _gridded_common__WEBPACK_IMPORTED_MODULE_7__["MAP_LAYERS"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "WMS_VERSION", function() { return _gridded_common__WEBPACK_IMPORTED_MODULE_7__["WMS_VERSION"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "BOX_SIZE", function() { return _gridded_common__WEBPACK_IMPORTED_MODULE_7__["BOX_SIZE"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "BASE_WMS_ARGS", function() { return _gridded_common__WEBPACK_IMPORTED_MODULE_7__["BASE_WMS_ARGS"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "GriddedUrls", function() { return _gridded_common__WEBPACK_IMPORTED_MODULE_7__["GriddedUrls"]; });

/* harmony import */ var _pipes__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ./pipes */ "../npn/common/src/lib/gridded/pipes.ts");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "GriddedPipeProvider", function() { return _pipes__WEBPACK_IMPORTED_MODULE_8__["GriddedPipeProvider"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "DoyTxType", function() { return _pipes__WEBPACK_IMPORTED_MODULE_8__["DoyTxType"]; });

/* harmony import */ var _wms_map_layer__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ./wms-map-layer */ "../npn/common/src/lib/gridded/wms-map-layer.ts");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "WmsMapLayer", function() { return _wms_map_layer__WEBPACK_IMPORTED_MODULE_9__["WmsMapLayer"]; });

/* harmony import */ var _wms_map_layer_legend__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ./wms-map-layer-legend */ "../npn/common/src/lib/gridded/wms-map-layer-legend.ts");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "WmsMapLayerLegend", function() { return _wms_map_layer_legend__WEBPACK_IMPORTED_MODULE_10__["WmsMapLayerLegend"]; });

/* harmony import */ var _pest_map_layer__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! ./pest-map-layer */ "../npn/common/src/lib/gridded/pest-map-layer.ts");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "PestMapLayer", function() { return _pest_map_layer__WEBPACK_IMPORTED_MODULE_11__["PestMapLayer"]; });

/* harmony import */ var _pest_map_layer_legend__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! ./pest-map-layer-legend */ "../npn/common/src/lib/gridded/pest-map-layer-legend.ts");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "PestMapLayerLegend", function() { return _pest_map_layer_legend__WEBPACK_IMPORTED_MODULE_12__["PestMapLayerLegend"]; });

/* harmony import */ var _default_map_layer_legend__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! ./default-map-layer-legend */ "../npn/common/src/lib/gridded/default-map-layer-legend.ts");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "DefaultMapLayerLegend", function() { return _default_map_layer_legend__WEBPACK_IMPORTED_MODULE_13__["DefaultMapLayerLegend"]; });

/* harmony import */ var _boundary_service__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(/*! ./boundary.service */ "../npn/common/src/lib/gridded/boundary.service.ts");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "BoundaryService", function() { return _boundary_service__WEBPACK_IMPORTED_MODULE_14__["BoundaryService"]; });

//export * from './wms-map-layer';

















/***/ }),

/***/ "../npn/common/src/lib/gridded/supports-opacity-control.component.ts":
/*!***************************************************************************!*\
  !*** ../npn/common/src/lib/gridded/supports-opacity-control.component.ts ***!
  \***************************************************************************/
/*! exports provided: SupportsOpacityControl */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "SupportsOpacityControl", function() { return SupportsOpacityControl; });
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @angular/core */ "../../node_modules/@angular/core/fesm5/core.js");
var __decorate = (undefined && undefined.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (undefined && undefined.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};

var SupportsOpacityControl = /** @class */ (function () {
    function SupportsOpacityControl() {
        this.opacity = 100;
    }
    SupportsOpacityControl.prototype.opacityChanged = function () {
        if (this.supportsOpacity) {
            this.supportsOpacity.setOpacity(this.opacity / 100.0);
        }
    };
    SupportsOpacityControl.prototype.ngOnChanges = function (changes) {
        console.log('SupportsOpacityControl.ngOnchanges', changes);
        if (changes.supportsOpacity && changes.supportsOpacity.currentValue) {
            this.opacity = Math.round(changes.supportsOpacity.currentValue.getOpacity() * 100);
        }
    };
    __decorate([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Input"])(),
        __metadata("design:type", Object)
    ], SupportsOpacityControl.prototype, "supportsOpacity", void 0);
    SupportsOpacityControl = __decorate([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Component"])({
            selector: 'supports-opacity-control',
            template: "\n    <label>Opacity\n        <mat-slider min=\"0\" max=\"100\" step=\"1\" tickInterval=\"25\" [thumbLabel]=\"opacity\" [(ngModel)]=\"opacity\" (change)=\"opacityChanged()\" [disabled]=\"!supportsOpacity\"></mat-slider>\n    </label>\n    "
        })
    ], SupportsOpacityControl);
    return SupportsOpacityControl;
}());



/***/ }),

/***/ "../npn/common/src/lib/gridded/wcs-data.service.ts":
/*!*********************************************************!*\
  !*** ../npn/common/src/lib/gridded/wcs-data.service.ts ***!
  \*********************************************************/
/*! exports provided: DESTINATION_POINT, WcsDataService, GriddedInfoWindowHandler */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "DESTINATION_POINT", function() { return DESTINATION_POINT; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "WcsDataService", function() { return WcsDataService; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "GriddedInfoWindowHandler", function() { return GriddedInfoWindowHandler; });
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @angular/core */ "../../node_modules/@angular/core/fesm5/core.js");
/* harmony import */ var rxjs_operators__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! rxjs/operators */ "../../node_modules/rxjs/_esm5/operators/index.js");
/* harmony import */ var _angular_common_http__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @angular/common/http */ "../../node_modules/@angular/common/fesm5/http.js");
/* harmony import */ var jquery__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! jquery */ "../../node_modules/jquery/dist/jquery.js");
/* harmony import */ var jquery__WEBPACK_IMPORTED_MODULE_3___default = /*#__PURE__*/__webpack_require__.n(jquery__WEBPACK_IMPORTED_MODULE_3__);
/* harmony import */ var _common_index__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../common/index */ "../npn/common/src/lib/common/index.ts");
var __decorate = (undefined && undefined.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (undefined && undefined.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};




var $jq = jquery__WEBPACK_IMPORTED_MODULE_3__;

var TO_RADIANS = function (degrees) { return degrees * Math.PI / 180; };
var TO_DEGREES = function (radians) { return radians * 180 / Math.PI; };
var DESTINATION_POINT = function (latLng, brng, dist) {
    // 0=N,90=E,180=S,270=W dist in km
    dist = dist / 6371;
    brng = TO_RADIANS(brng);
    var lat1 = TO_RADIANS(latLng.lat()), lon1 = TO_RADIANS(latLng.lng());
    var lat2 = Math.asin(Math.sin(lat1) * Math.cos(dist) +
        Math.cos(lat1) * Math.sin(dist) * Math.cos(brng));
    var lon2 = lon1 + Math.atan2(Math.sin(brng) * Math.sin(dist) *
        Math.cos(lat1), Math.cos(dist) - Math.sin(lat1) *
        Math.sin(lat2));
    if (isNaN(lat2) || isNaN(lon2)) {
        return null;
    }
    return new google.maps.LatLng(TO_DEGREES(lat2), TO_DEGREES(lon2));
};
var WcsDataService = /** @class */ (function () {
    function WcsDataService(serviceUtils) {
        this.serviceUtils = serviceUtils;
    }
    WcsDataService.prototype.newInfoWindowHandler = function (map) {
        return new GriddedInfoWindowHandler(this, map);
    };
    // NOTE: the original from the npn-vis-tool passed in a layer object and augmented
    // WCS parameters based on its extent.  At the moment full layers are not in use
    // and don't exist for the set of current components.  All usage at the moment
    // ties back to the ClippedWmsMapSelection class so look there when the time comes
    WcsDataService.prototype.getGriddedData = function (layerName, latLng, gridSize, paramsAugment) {
        var edges = [0, 80, 180, 270].map(function (bearing) { return DESTINATION_POINT(latLng, bearing, (gridSize / 2)); });
        var wcsArgs = {
            service: 'WCS',
            request: 'GetCoverage',
            version: '2.0.1',
            coverageId: layerName.replace(':', '__'),
            format: 'application/gml+xml',
            subset: []
        };
        // add edges
        wcsArgs.subset.push('http://www.opengis.net/def/axis/OGC/0/Long(' + [edges[3].lng(), edges[1].lng()].join(',') + ')');
        wcsArgs.subset.push('http://www.opengis.net/def/axis/OGC/0/Lat(' + [edges[2].lat(), edges[0].lat()].join(',') + ')');
        // date extent example...
        // http://www.opengis.net/def/axis/OGC/0/time("2018-01-31T00:00:00.000Z")
        if (paramsAugment) {
            paramsAugment(wcsArgs);
        }
        console.log('wcsArgs', wcsArgs);
        /*
        TODO re-test issue post Angular 6
        // see: https://github.com/angular/angular/issues/11058
        // will need to change when upgrading Angular version and moving to HttpClient
        let urlParams:URLSearchParams = new URLSearchParams('',new GhQueryEncoder());
        */
        var params = new _angular_common_http__WEBPACK_IMPORTED_MODULE_2__["HttpParams"]({ encoder: new CustomEncoder() });
        Object.keys(wcsArgs).filter(function (key) { return key !== 'subset'; }).forEach(function (key) { return params = params.set(key, wcsArgs[key]); });
        wcsArgs.subset.forEach(function (v) { return params = params.append('subset', v); });
        return this.serviceUtils.http.get(this.serviceUtils.config.geoServerRoot + "/wcs", { params: params, responseType: 'text' })
            .pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_1__["map"])(function (response) {
            var wcsData = $jq($jq.parseXML(response)), tuples = wcsData.find('tupleList').text();
            return tuples ?
                tuples.trim().split(' ').map(function (t) { return parseFloat(t); }) :
                [];
        }));
    };
    WcsDataService = __decorate([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Injectable"])(),
        __metadata("design:paramtypes", [_common_index__WEBPACK_IMPORTED_MODULE_4__["NpnServiceUtils"]])
    ], WcsDataService);
    return WcsDataService;
}());

var CustomEncoder = /** @class */ (function () {
    function CustomEncoder() {
    }
    CustomEncoder.prototype.encodeKey = function (key) {
        return encodeURIComponent(key);
    };
    CustomEncoder.prototype.encodeValue = function (value) {
        return encodeURIComponent(value);
    };
    CustomEncoder.prototype.decodeKey = function (key) {
        return decodeURIComponent(key);
    };
    CustomEncoder.prototype.decodeValue = function (value) {
        return decodeURIComponent(value);
    };
    return CustomEncoder;
}());
/*
class GhQueryEncoder extends QueryEncoder {
    encodeKey(k: string): string {
        k = super.encodeKey(k);
        return k.replace(/\+/gi, '%2B');
    }
    encodeValue(v: string): string {
        v = super.encodeKey(v);
        return v.replace(/\+/gi, '%2B');
    }
}
*/
/**
 * IMPORTANT: This is code that came from the legacy application and is currently still used by some FWS
 * applications (clipped-wms-map).  The functionality has been re-implemented within `MapLayerLegend`
 * and this class should probably be re-visited/removed
 */
var GriddedInfoWindowHandler = /** @class */ (function () {
    function GriddedInfoWindowHandler(dataService, map) {
        this.dataService = dataService;
        this.map = map;
    }
    GriddedInfoWindowHandler.prototype.open = function (latLng, layerName, legend, paramsAugment) {
        var _this = this;
        this.dataService.getGriddedData(layerName, latLng, 5, paramsAugment)
            .subscribe(function (tuples) {
            console.log('GriddedInfoWindowHandler.tuples', tuples);
            var point = tuples && tuples.length ? tuples[0] : undefined;
            if (point === -9999 || isNaN(point)) {
                console.log("GriddedInfoWindowHandler: received -9999 or Nan (" + point + ") ignoring");
                return;
            }
            var html = "<div id=\"griddedPointInfoWindow\">";
            var legendPoint = legend.getPointData(point);
            if (legendPoint) {
                html += "<div class=\"gridded-legend-color\" style=\"background-color: " + legendPoint.color + ";\">&nbsp;</div>";
            }
            html += "<div class=\"gridded-point-data\">" + legend.formatPointData(point) + "</div>";
            html += "</div>";
            if (!_this.infoWindow) {
                _this.infoWindow = new google.maps.InfoWindow({
                    maxWidth: 200,
                    content: 'contents'
                });
            }
            _this.infoWindow.setContent(html);
            _this.infoWindow.setPosition(latLng);
            _this.infoWindow.open(_this.map);
        });
    };
    GriddedInfoWindowHandler.prototype.close = function () {
        if (this.infoWindow) {
            this.infoWindow.close();
        }
    };
    return GriddedInfoWindowHandler;
}());



/***/ }),

/***/ "../npn/common/src/lib/gridded/wms-map-layer-legend.ts":
/*!*************************************************************!*\
  !*** ../npn/common/src/lib/gridded/wms-map-layer-legend.ts ***!
  \*************************************************************/
/*! exports provided: WmsMapLayerLegend */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "WmsMapLayerLegend", function() { return WmsMapLayerLegend; });
/* harmony import */ var d3__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! d3 */ "../../node_modules/d3/index.js");
/* harmony import */ var _map_layer_legend__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./map-layer-legend */ "../npn/common/src/lib/gridded/map-layer-legend.ts");
var __extends = (undefined && undefined.__extends) || (function () {
    var extendStatics = Object.setPrototypeOf ||
        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();


var WmsMapLayerLegend = /** @class */ (function (_super) {
    __extends(WmsMapLayerLegend, _super);
    function WmsMapLayerLegend() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    WmsMapLayerLegend.prototype.redraw = function (svg, legendTitle) {
        var legend = this;
        if (svg) {
            svg.selectAll('g').remove();
        }
        if (!legend || !svg) {
            return;
        }
        var width = parseFloat(svg.style('width').replace('px', '')), height = parseFloat(svg.style('height').replace('px', '')), data = legend.getData(), mid_idx = Math.floor(data.length / 2), cell_width = width / data.length, cell_height = 30, top_pad = 2;
        console.debug('WmsMapLegend.svg dimensions', width, height);
        console.debug('WmsMapLegend.legend cell width', cell_width);
        var g = svg.append('g'), cell = g.selectAll('g.cell')
            .data(data)
            .enter()
            .append('g')
            .attr('class', function (d, i) {
            return 'cell' +
                ((i === 0) ? ' first' :
                    ((i === mid_idx) ? ' middle' :
                        ((i === data.length - 1) ? ' last' : '')));
        })
            .attr('transform', function (d, i) { return 'translate(' + (i * cell_width) + ',' + top_pad + ')'; })
            .append('rect')
            .attr('height', cell_height)
            .attr('width', cell_width)
            .style('stroke', 'black')
            .style('stroke-width', '1px')
            .style('fill', function (d, i) { return d.color; });
        if (legend.ldef.legend_delimiter_every) {
            var every_1 = legend.ldef.legend_delimiter_every, running_total_1 = 0, separators_1 = data.map(function (d, i) {
                if ((i + 1) === data.length) {
                    return true;
                }
                running_total_1 += (data[i + 1].quantity - data[i].quantity);
                if (running_total_1 >= every_1) {
                    running_total_1 = 0;
                    return true;
                }
                return false;
            }), top_bottom_1 = [(cell_width + 1), cell_height, (cell_width + 1), cell_height].join(','), //{ stroke-dasharray: $w,$h,$w,$h }
            top_right_bottom_1 = [((cell_width * 2) + cell_height), cell_height].join(','), //{ stroke-dasharray: (($w*2)+$h),$h }
            top_left_bottom_1 = [(cell_width + 1), cell_height, (cell_width + cell_height + 1), 0].join(','); ////{ stroke-dasharray: $w,$h,($w+$h),0 }
            console.debug('WmsMapLegend.legend_delimiter_every', every_1);
            cell.style('stroke-dasharray', function (d, i) {
                if (i === 0) {
                    return separators_1[i] ? undefined : top_left_bottom_1;
                }
                return separators_1[i] ? top_right_bottom_1 : top_bottom_1;
            })
                // top_bottom removes the left/right borders which leaves a little whitespace
                // which looks odd so in cases where there is no right border increase a cell's width
                // by 1px to cover that gap
                .attr('width', function (d, i) {
                var w = parseFloat(d3__WEBPACK_IMPORTED_MODULE_0__["select"](this).attr('width'));
                if (i === 0) {
                    return separators_1[i] ? w : w + 1;
                }
                return separators_1[i] ? w : w + 1;
            });
            g.selectAll('g.cell').append('line')
                .attr('stroke', function (d, i) { return separators_1[i] ? 'black' : 'none'; })
                .attr('stroke-width', 2)
                .attr('x1', cell_width - 1)
                .attr('x2', cell_width - 1)
                .attr('y1', 0)
                .attr('y2', cell_height);
        }
        cell.append('title').text(function (d) { return d.label; });
        var tick_length = 5, tick_padding = 3;
        function label_cell(cell, label, anchor) {
            var tick_start = (top_pad + cell_height + tick_padding);
            cell.append('line')
                .attr('x1', (cell_width / 2))
                .attr('y1', tick_start)
                .attr('x2', (cell_width / 2))
                .attr('y2', tick_start + tick_length)
                .attr('stroke', 'black')
                .attr('stroke-width', '1');
            cell.append('text')
                .attr('dx', (cell_width / 2))
                .attr('dy', '4em' /*cell_height+tick_length+(2*tick_padding)*/) // need to know line height of text
                .style('text-anchor', anchor)
                .text(label);
        }
        label_cell(svg.select('g.cell.first'), data[0].label, 'start');
        label_cell(svg.select('g.cell.middle'), data[mid_idx].label, 'middle');
        label_cell(svg.select('g.cell.last'), data[data.length - 1].label, 'end');
        if (legend.ldef.legend_units) {
            svg.append('g')
                .append('text')
                .attr('dx', (width / 2))
                .attr('dy', 75 + top_pad)
                .attr('text-anchor', 'middle')
                .text(legend.ldef.legend_units);
        }
        // if given an explicit title use it o/w use the info from the
        // legend definition, etc.
        var legend_title;
        if (legendTitle) {
            legend_title = legendTitle;
        }
        else {
            legend_title = legend.ldef.title;
            if (legend.ldef.extent && legend.ldef.extent.current) {
                legend_title += ", " + legend.ldef.extent.current.label;
            }
        }
        if (!!legend_title) {
            svg.append('g').append('text').attr('dx', 5)
                .attr('dy', 100 + top_pad)
                .attr('font-size', '18px')
                .attr('text-anchor', 'right').text(legend_title);
        }
        svg.append('g').append('text').attr('dx', 5)
            .attr('dy', (!!legend_title ? 118 : 85) + top_pad)
            .attr('font-size', '11px')
            .attr('text-anchor', 'right').text('USA National Phenology Network, www.usanpn.org');
    };
    return WmsMapLayerLegend;
}(_map_layer_legend__WEBPACK_IMPORTED_MODULE_1__["MapLayerLegend"]));



/***/ }),

/***/ "../npn/common/src/lib/gridded/wms-map-layer.ts":
/*!******************************************************!*\
  !*** ../npn/common/src/lib/gridded/wms-map-layer.ts ***!
  \******************************************************/
/*! exports provided: WmsMapLayer */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "WmsMapLayer", function() { return WmsMapLayer; });
/* harmony import */ var _gridded_common__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./gridded-common */ "../npn/common/src/lib/gridded/gridded-common.ts");
/* harmony import */ var _map_layer__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./map-layer */ "../npn/common/src/lib/gridded/map-layer.ts");
/* harmony import */ var jquery__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! jquery */ "../../node_modules/jquery/dist/jquery.js");
/* harmony import */ var jquery__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(jquery__WEBPACK_IMPORTED_MODULE_2__);
var __extends = (undefined && undefined.__extends) || (function () {
    var extendStatics = Object.setPrototypeOf ||
        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __assign = (undefined && undefined.__assign) || Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
        s = arguments[i];
        for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
            t[p] = s[p];
    }
    return t;
};



var $jq = jquery__WEBPACK_IMPORTED_MODULE_2__;
var WmsMapLayer = /** @class */ (function (_super) {
    __extends(WmsMapLayer, _super);
    //[x: string]: any; // allow arbitrary properties
    function WmsMapLayer(map, layer_def, layerService) {
        var _this = _super.call(this, map, layer_def, layerService) || this;
        _this.map = map;
        _this.layer_def = layer_def;
        _this.layerService = layerService;
        if (layer_def.extent_values_filter) {
            console.debug('layer ' + layer_def.name + ' has an extent_values_filter, processing', layer_def.extent_values_filter);
            var valuesPipe = _this.griddedPipes.get(layer_def.extent_values_filter.name), extentValues = layer_def.extent.values.map(function (e) { return e.value; }), filterArgs = [extentValues].concat(layer_def.extent_values_filter.args || []), filteredValues_1 = valuesPipe.transform.apply(valuesPipe, filterArgs);
            console.debug('filteredValues', (filteredValues_1.length > 1 ? (filteredValues_1[0] + '...' + filteredValues_1[filteredValues_1.length - 1]) : filteredValues_1));
            layer_def.extent.values = layer_def.extent.values.filter(function (v) {
                return filteredValues_1.indexOf(v.value) !== -1;
            });
            if (layer_def.extent.current && filteredValues_1.indexOf(layer_def.extent.current.value) === -1) {
                console.debug('current extent value has become invalid, replacing with last option');
                layer_def.extent.current = layer_def.extent.values.length ? layer_def.extent.values[layer_def.extent.values.length - 1] : undefined;
            }
        }
        if (layer_def.extent_default_filter) {
            console.debug('layer ' + layer_def.name + ' has an extent_default_filter, processing', layer_def.extent_default_filter);
            var defaultPipe = _this.griddedPipes.get(layer_def.extent_default_filter.name), defaultFilterArgs = [layer_def.extent.values].concat(layer_def.extent_default_filter.values || []);
            layer_def.extent.current = defaultPipe.transform.apply(defaultPipe, defaultFilterArgs) || layer_def.extent.current;
            console.debug('resulting default value', layer_def.extent.current);
        }
        /*
        if(layer_def.description) {
            layer_def.$description = $sce.trustAsHtml(layer_def.description);
        }*/
        _this.wmsArgs = __assign({}, _gridded_common__WEBPACK_IMPORTED_MODULE_0__["BASE_WMS_ARGS"], { layers: layer_def.name });
        _this.googleLayer = new google.maps.ImageMapType({
            getTileUrl: function (coord, zoom) {
                var proj = _this.map.getProjection(), zfactor = Math.pow(2, zoom), top = proj.fromPointToLatLng(new google.maps.Point(coord.x * _gridded_common__WEBPACK_IMPORTED_MODULE_0__["BOX_SIZE"] / zfactor, coord.y * _gridded_common__WEBPACK_IMPORTED_MODULE_0__["BOX_SIZE"] / zfactor)), bot = proj.fromPointToLatLng(new google.maps.Point((coord.x + 1) * _gridded_common__WEBPACK_IMPORTED_MODULE_0__["BOX_SIZE"] / zfactor, (coord.y + 1) * _gridded_common__WEBPACK_IMPORTED_MODULE_0__["BOX_SIZE"] / zfactor)), ctop = Object(_map_layer__WEBPACK_IMPORTED_MODULE_1__["srsConversion"])(top), cbot = Object(_map_layer__WEBPACK_IMPORTED_MODULE_1__["srsConversion"])(bot), base = {};
                if (_this.extent && _this.extent.current) {
                    _this.extent.current.addToParams(base, _gridded_common__WEBPACK_IMPORTED_MODULE_0__["MapLayerServiceType"].WMS);
                }
                var args = { bbox: [ctop.lng, cbot.lat, cbot.lng, ctop.lat].join(',') };
                if (_this.sldBody) {
                    args.sld_body = _this.sldBody;
                }
                var all_args = __assign({}, base, _this.wmsArgs, args);
                return _this.griddedUrls.wmsBaseUrl + '?' + Object(_map_layer__WEBPACK_IMPORTED_MODULE_1__["encodeHttpParams"])(all_args);
            },
            tileSize: new google.maps.Size(_gridded_common__WEBPACK_IMPORTED_MODULE_0__["BOX_SIZE"], _gridded_common__WEBPACK_IMPORTED_MODULE_0__["BOX_SIZE"]),
            //isPng: true,
            name: (layer_def.title || layer_def.name)
        });
        _this.googleLayer.setOpacity(_this.opacity);
        return _this;
    }
    WmsMapLayer.prototype.setOpacity = function (opacity) {
        this.opacity = opacity;
        if (this.googleLayer) {
            this.googleLayer.setOpacity(opacity);
        }
    };
    WmsMapLayer.prototype.on = function () {
        //TODO Analytics.trackEvent('gridded-layer','on',this.title);
        this.map.overlayMapTypes.push(this.googleLayer);
        return this;
    };
    WmsMapLayer.prototype.off = function () {
        if (this.map.overlayMapTypes.getLength()) {
            //TODO Analytics.trackEvent('gridded-layer','off',this.title);
            this.map.overlayMapTypes.pop();
        }
        // TODO deal with pest map which is a google.maps.GroundOverlay
        return this;
    };
    WmsMapLayer.prototype.bounce = function () {
        if (this.map.overlayMapTypes.getLength()) {
            this.map.overlayMapTypes.pop();
        }
        this.map.overlayMapTypes.push(this.googleLayer);
        return this;
    };
    /**
     * Sets the style to pass to the WMS service, used to limit the layer to a range.
     *
     * @param style The new style (XML as a stirng)
     */
    WmsMapLayer.prototype.setStyle = function (style) {
        if (style !== this.sldBody) { // avoid off/on if nothing is changing
            if (style) {
                console.debug('style:', style);
            }
            this.sldBody = style;
            this.bounce();
        }
    };
    /**
     * @returns The style range if any was set.
     */
    WmsMapLayer.prototype.getStyleRange = function () {
        return this.styleRange;
    };
    /**
     * Sets the style range to pass along to the server.
     *
     * @param range The new style range.
     */
    WmsMapLayer.prototype.setStyleRange = function (range) {
        var _this = this;
        if (!(this.styleRange = range)) {
            this.setStyle(undefined);
            return Promise.resolve();
        }
        return this.getLegend().then(function (legend) {
            var styleDef = legend.getStyleDefinition(), data = legend.getData(), minQ = data[range[0]].quantity, maxQ = data[range[1]].quantity, $styleDef = $jq(styleDef);
            var colors = $styleDef.find('ColorMapEntry');
            var colorMap = $styleDef.find('ColorMap');
            // only want the first style assosiated with the layer
            // todo: instead of picking first style, generalize to pick by name
            while (styleDef[0].firstElementChild.firstElementChild.children.length > 2) {
                styleDef[0].firstElementChild.firstElementChild.removeChild(styleDef[0].firstElementChild.firstElementChild.lastChild);
            }
            if (colors.length === 0) {
                colors = $styleDef.find('sld\\:ColorMapEntry'); // FF
            }
            if (colorMap.length === 0) {
                colorMap = $styleDef.find('sld\\:ColorMap'); // FF
            }
            if (colorMap) {
                colorMap.attr('type', 'intervals');
            }
            colors.each(function () {
                var cme = $jq(this), q = parseInt(cme.attr('quantity'));
                /*if(q === -9999) {
                    cme.attr('opacity','0.0');
                    //cme.remove();
                } else {*/
                cme.attr('opacity', (q > minQ && q <= maxQ) ? '1.0' : '0.0');
                /*}*/
            });
            _this.setStyle(xmlToString(styleDef[0]));
        });
    };
    return WmsMapLayer;
}(_map_layer__WEBPACK_IMPORTED_MODULE_1__["MapLayer"]));

function xmlToString(xmlData) {
    var xmlString;
    if (window.ActiveXObject) {
        xmlString = xmlData.xml; // MSIE
    }
    else {
        xmlString = (new XMLSerializer()).serializeToString(xmlData);
    }
    return xmlString;
}


/***/ }),

/***/ "../npn/common/src/lib/index.ts":
/*!**************************************!*\
  !*** ../npn/common/src/lib/index.ts ***!
  \**************************************/
/*! exports provided: NpnCommonModule, NPN_BASE_HREF, CacheService, NetworkService, StationService, getStaticColor, DoyPipe, LegendDoyPipe, NpnServiceUtils, MapLayerLegendComponent, GriddedPipeProvider, DoyTxType, VisSelection, NetworkAwareVisSelection, StationAwareVisSelection, VisualizationSelectionFactory, NpnLibModule, TaxonomicSpeciesRank, Phenophase, TaxonomicPhenophaseRank, STATIC_COLORS, getSpeciesPlotKeys, SpeciesService, SpeciesTitlePipe, TaxonomicSpeciesTitlePipe, newGuid, NpnConfiguration, NPN_CONFIGURATION, detectIE, MonitorsDestroy, SpeciesTitleFormat, APPLICATION_SETTINGS, NpnGriddedModule, MapLayer, encodeHttpParams, srsConversion, NpnMapLayerService, MapLayerLegend, DESTINATION_POINT, WcsDataService, GriddedInfoWindowHandler, googleFeatureBounds, MAP_STYLES, parseExtentDate, MapLayerType, MapLayerServiceType, MapLayerExtentType, CATEGORY_PEST, CATEGORY_TEMP_ACCUM_30_YR_AVG, CATEGORY_TEMP_ACCUM_CURRENT, CATEGORY_TEMP_ACCUM_CURRENT_AK, CATEGORY_TEMP_ACCUM_DAILY_ANOM, CATEGORY_SIX_HIST_ANNUAL, CATEGORY_SIX_CURRENT_YEAR, CATEGORY_SIX_CURRENT_YEAR_AK, CATEGORY_SIX_DAILY_ANOM, CATEGORY_SIX_30_YR_AVG, MAP_LAYERS, WMS_VERSION, BOX_SIZE, BASE_WMS_ARGS, GriddedUrls, WmsMapLayer, WmsMapLayerLegend, PestMapLayer, PestMapLayerLegend, DefaultMapLayerLegend, BoundaryService, VisualizationsModule, CalendarSelection, CalendarSelectionFactory, CalendarComponent, CalendarControlComponent, ScatterPlotSelection, AXIS, ScatterPlotSelectionFactory, ScatterPlotComponent, ScatterPlotControls, ClippedWmsMapSelection, ClippedWmsMapSelectionFactory, ClippedWmsMapControl, ClippedWmsMapComponent, ClippedWmsMapStatisticsComponent, ClippedStatValuePipe, ActivityCurve, INTERPOLATE, ACTIVITY_CURVE_KINGDOM_METRICS, ActivityFrequency, ACTIVITY_FREQUENCY_MONTHLY, ACTIVITY_FREQUENCY_BIWEEKLY, ACTIVITY_FREQUENCY_WEEKLY, ACTIVITY_FREQUENCIES, ActivityCurvesSelection, ActivityCurvesSelectionFactory, ActivityCurvesComponent, ACTIVITY_CURVES_INTERPOLATES, ActivityCurvesControlComponent, CurveControlComponent, ObserverActivityVisMode, ObserverActivitySelection, ObserverActivitySelectionFactory, ObserverActivityComponent, ObserverActivityControl, ObservationFrequencySelection, ObservationFrequencySelectionFactory, ObservationFrequencyComponent, ObservationFrequencyControl, CATEGORY_PESTS, CATEGORY_TEMP_ACCUMULATIONS, DATA_FUNC, AGDD_COLORS, DEFAULT_AGDD_LAYER_CATEGORY, DEFAULT_AGDD_LAYER_NAME, AgddTimeSeriesSelection, AgddTimeSeriesSelectionFactory, AgddTimeSeriesComponent, AgddTsMapLayerControl, MapSelection, MapSelectionFactory, MapVisualizationComponent, MAP_VIS_SVG_PATHS, MapVisMarker, ExtentControl, ExtentDateControl, ExtentDoyControl, ExtentYearControl, GriddedRangeSliderControl, ConsolidatedMapLayerControlComponent, PestMapLayerControlComponent, TempAccumMapLayerControlComponent, SpringIndexMapLayerControlComponent, MapVisualizationMarkerIw, YearRangeInputComponent, HigherSpeciesPhenophaseInputComponent */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _public_api__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./public_api */ "../npn/common/src/lib/public_api.ts");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "NpnCommonModule", function() { return _public_api__WEBPACK_IMPORTED_MODULE_0__["NpnCommonModule"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "NPN_BASE_HREF", function() { return _public_api__WEBPACK_IMPORTED_MODULE_0__["NPN_BASE_HREF"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "CacheService", function() { return _public_api__WEBPACK_IMPORTED_MODULE_0__["CacheService"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "NetworkService", function() { return _public_api__WEBPACK_IMPORTED_MODULE_0__["NetworkService"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "StationService", function() { return _public_api__WEBPACK_IMPORTED_MODULE_0__["StationService"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "getStaticColor", function() { return _public_api__WEBPACK_IMPORTED_MODULE_0__["getStaticColor"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "DoyPipe", function() { return _public_api__WEBPACK_IMPORTED_MODULE_0__["DoyPipe"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "LegendDoyPipe", function() { return _public_api__WEBPACK_IMPORTED_MODULE_0__["LegendDoyPipe"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "NpnServiceUtils", function() { return _public_api__WEBPACK_IMPORTED_MODULE_0__["NpnServiceUtils"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "MapLayerLegendComponent", function() { return _public_api__WEBPACK_IMPORTED_MODULE_0__["MapLayerLegendComponent"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "GriddedPipeProvider", function() { return _public_api__WEBPACK_IMPORTED_MODULE_0__["GriddedPipeProvider"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "DoyTxType", function() { return _public_api__WEBPACK_IMPORTED_MODULE_0__["DoyTxType"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "VisSelection", function() { return _public_api__WEBPACK_IMPORTED_MODULE_0__["VisSelection"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "NetworkAwareVisSelection", function() { return _public_api__WEBPACK_IMPORTED_MODULE_0__["NetworkAwareVisSelection"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "StationAwareVisSelection", function() { return _public_api__WEBPACK_IMPORTED_MODULE_0__["StationAwareVisSelection"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "VisualizationSelectionFactory", function() { return _public_api__WEBPACK_IMPORTED_MODULE_0__["VisualizationSelectionFactory"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "NpnLibModule", function() { return _public_api__WEBPACK_IMPORTED_MODULE_0__["NpnLibModule"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "TaxonomicSpeciesRank", function() { return _public_api__WEBPACK_IMPORTED_MODULE_0__["TaxonomicSpeciesRank"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "Phenophase", function() { return _public_api__WEBPACK_IMPORTED_MODULE_0__["Phenophase"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "TaxonomicPhenophaseRank", function() { return _public_api__WEBPACK_IMPORTED_MODULE_0__["TaxonomicPhenophaseRank"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "STATIC_COLORS", function() { return _public_api__WEBPACK_IMPORTED_MODULE_0__["STATIC_COLORS"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "getSpeciesPlotKeys", function() { return _public_api__WEBPACK_IMPORTED_MODULE_0__["getSpeciesPlotKeys"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "SpeciesService", function() { return _public_api__WEBPACK_IMPORTED_MODULE_0__["SpeciesService"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "SpeciesTitlePipe", function() { return _public_api__WEBPACK_IMPORTED_MODULE_0__["SpeciesTitlePipe"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "TaxonomicSpeciesTitlePipe", function() { return _public_api__WEBPACK_IMPORTED_MODULE_0__["TaxonomicSpeciesTitlePipe"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "newGuid", function() { return _public_api__WEBPACK_IMPORTED_MODULE_0__["newGuid"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "NpnConfiguration", function() { return _public_api__WEBPACK_IMPORTED_MODULE_0__["NpnConfiguration"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "NPN_CONFIGURATION", function() { return _public_api__WEBPACK_IMPORTED_MODULE_0__["NPN_CONFIGURATION"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "detectIE", function() { return _public_api__WEBPACK_IMPORTED_MODULE_0__["detectIE"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "MonitorsDestroy", function() { return _public_api__WEBPACK_IMPORTED_MODULE_0__["MonitorsDestroy"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "SpeciesTitleFormat", function() { return _public_api__WEBPACK_IMPORTED_MODULE_0__["SpeciesTitleFormat"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "APPLICATION_SETTINGS", function() { return _public_api__WEBPACK_IMPORTED_MODULE_0__["APPLICATION_SETTINGS"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "NpnGriddedModule", function() { return _public_api__WEBPACK_IMPORTED_MODULE_0__["NpnGriddedModule"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "MapLayer", function() { return _public_api__WEBPACK_IMPORTED_MODULE_0__["MapLayer"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "encodeHttpParams", function() { return _public_api__WEBPACK_IMPORTED_MODULE_0__["encodeHttpParams"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "srsConversion", function() { return _public_api__WEBPACK_IMPORTED_MODULE_0__["srsConversion"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "NpnMapLayerService", function() { return _public_api__WEBPACK_IMPORTED_MODULE_0__["NpnMapLayerService"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "MapLayerLegend", function() { return _public_api__WEBPACK_IMPORTED_MODULE_0__["MapLayerLegend"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "DESTINATION_POINT", function() { return _public_api__WEBPACK_IMPORTED_MODULE_0__["DESTINATION_POINT"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "WcsDataService", function() { return _public_api__WEBPACK_IMPORTED_MODULE_0__["WcsDataService"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "GriddedInfoWindowHandler", function() { return _public_api__WEBPACK_IMPORTED_MODULE_0__["GriddedInfoWindowHandler"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "googleFeatureBounds", function() { return _public_api__WEBPACK_IMPORTED_MODULE_0__["googleFeatureBounds"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "MAP_STYLES", function() { return _public_api__WEBPACK_IMPORTED_MODULE_0__["MAP_STYLES"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "parseExtentDate", function() { return _public_api__WEBPACK_IMPORTED_MODULE_0__["parseExtentDate"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "MapLayerType", function() { return _public_api__WEBPACK_IMPORTED_MODULE_0__["MapLayerType"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "MapLayerServiceType", function() { return _public_api__WEBPACK_IMPORTED_MODULE_0__["MapLayerServiceType"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "MapLayerExtentType", function() { return _public_api__WEBPACK_IMPORTED_MODULE_0__["MapLayerExtentType"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "CATEGORY_PEST", function() { return _public_api__WEBPACK_IMPORTED_MODULE_0__["CATEGORY_PEST"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "CATEGORY_TEMP_ACCUM_30_YR_AVG", function() { return _public_api__WEBPACK_IMPORTED_MODULE_0__["CATEGORY_TEMP_ACCUM_30_YR_AVG"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "CATEGORY_TEMP_ACCUM_CURRENT", function() { return _public_api__WEBPACK_IMPORTED_MODULE_0__["CATEGORY_TEMP_ACCUM_CURRENT"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "CATEGORY_TEMP_ACCUM_CURRENT_AK", function() { return _public_api__WEBPACK_IMPORTED_MODULE_0__["CATEGORY_TEMP_ACCUM_CURRENT_AK"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "CATEGORY_TEMP_ACCUM_DAILY_ANOM", function() { return _public_api__WEBPACK_IMPORTED_MODULE_0__["CATEGORY_TEMP_ACCUM_DAILY_ANOM"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "CATEGORY_SIX_HIST_ANNUAL", function() { return _public_api__WEBPACK_IMPORTED_MODULE_0__["CATEGORY_SIX_HIST_ANNUAL"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "CATEGORY_SIX_CURRENT_YEAR", function() { return _public_api__WEBPACK_IMPORTED_MODULE_0__["CATEGORY_SIX_CURRENT_YEAR"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "CATEGORY_SIX_CURRENT_YEAR_AK", function() { return _public_api__WEBPACK_IMPORTED_MODULE_0__["CATEGORY_SIX_CURRENT_YEAR_AK"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "CATEGORY_SIX_DAILY_ANOM", function() { return _public_api__WEBPACK_IMPORTED_MODULE_0__["CATEGORY_SIX_DAILY_ANOM"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "CATEGORY_SIX_30_YR_AVG", function() { return _public_api__WEBPACK_IMPORTED_MODULE_0__["CATEGORY_SIX_30_YR_AVG"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "MAP_LAYERS", function() { return _public_api__WEBPACK_IMPORTED_MODULE_0__["MAP_LAYERS"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "WMS_VERSION", function() { return _public_api__WEBPACK_IMPORTED_MODULE_0__["WMS_VERSION"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "BOX_SIZE", function() { return _public_api__WEBPACK_IMPORTED_MODULE_0__["BOX_SIZE"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "BASE_WMS_ARGS", function() { return _public_api__WEBPACK_IMPORTED_MODULE_0__["BASE_WMS_ARGS"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "GriddedUrls", function() { return _public_api__WEBPACK_IMPORTED_MODULE_0__["GriddedUrls"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "WmsMapLayer", function() { return _public_api__WEBPACK_IMPORTED_MODULE_0__["WmsMapLayer"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "WmsMapLayerLegend", function() { return _public_api__WEBPACK_IMPORTED_MODULE_0__["WmsMapLayerLegend"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "PestMapLayer", function() { return _public_api__WEBPACK_IMPORTED_MODULE_0__["PestMapLayer"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "PestMapLayerLegend", function() { return _public_api__WEBPACK_IMPORTED_MODULE_0__["PestMapLayerLegend"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "DefaultMapLayerLegend", function() { return _public_api__WEBPACK_IMPORTED_MODULE_0__["DefaultMapLayerLegend"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "BoundaryService", function() { return _public_api__WEBPACK_IMPORTED_MODULE_0__["BoundaryService"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "VisualizationsModule", function() { return _public_api__WEBPACK_IMPORTED_MODULE_0__["VisualizationsModule"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "CalendarSelection", function() { return _public_api__WEBPACK_IMPORTED_MODULE_0__["CalendarSelection"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "CalendarSelectionFactory", function() { return _public_api__WEBPACK_IMPORTED_MODULE_0__["CalendarSelectionFactory"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "CalendarComponent", function() { return _public_api__WEBPACK_IMPORTED_MODULE_0__["CalendarComponent"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "CalendarControlComponent", function() { return _public_api__WEBPACK_IMPORTED_MODULE_0__["CalendarControlComponent"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "ScatterPlotSelection", function() { return _public_api__WEBPACK_IMPORTED_MODULE_0__["ScatterPlotSelection"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "AXIS", function() { return _public_api__WEBPACK_IMPORTED_MODULE_0__["AXIS"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "ScatterPlotSelectionFactory", function() { return _public_api__WEBPACK_IMPORTED_MODULE_0__["ScatterPlotSelectionFactory"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "ScatterPlotComponent", function() { return _public_api__WEBPACK_IMPORTED_MODULE_0__["ScatterPlotComponent"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "ScatterPlotControls", function() { return _public_api__WEBPACK_IMPORTED_MODULE_0__["ScatterPlotControls"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "ClippedWmsMapSelection", function() { return _public_api__WEBPACK_IMPORTED_MODULE_0__["ClippedWmsMapSelection"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "ClippedWmsMapSelectionFactory", function() { return _public_api__WEBPACK_IMPORTED_MODULE_0__["ClippedWmsMapSelectionFactory"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "ClippedWmsMapControl", function() { return _public_api__WEBPACK_IMPORTED_MODULE_0__["ClippedWmsMapControl"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "ClippedWmsMapComponent", function() { return _public_api__WEBPACK_IMPORTED_MODULE_0__["ClippedWmsMapComponent"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "ClippedWmsMapStatisticsComponent", function() { return _public_api__WEBPACK_IMPORTED_MODULE_0__["ClippedWmsMapStatisticsComponent"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "ClippedStatValuePipe", function() { return _public_api__WEBPACK_IMPORTED_MODULE_0__["ClippedStatValuePipe"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "ActivityCurve", function() { return _public_api__WEBPACK_IMPORTED_MODULE_0__["ActivityCurve"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "INTERPOLATE", function() { return _public_api__WEBPACK_IMPORTED_MODULE_0__["INTERPOLATE"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "ACTIVITY_CURVE_KINGDOM_METRICS", function() { return _public_api__WEBPACK_IMPORTED_MODULE_0__["ACTIVITY_CURVE_KINGDOM_METRICS"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "ActivityFrequency", function() { return _public_api__WEBPACK_IMPORTED_MODULE_0__["ActivityFrequency"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "ACTIVITY_FREQUENCY_MONTHLY", function() { return _public_api__WEBPACK_IMPORTED_MODULE_0__["ACTIVITY_FREQUENCY_MONTHLY"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "ACTIVITY_FREQUENCY_BIWEEKLY", function() { return _public_api__WEBPACK_IMPORTED_MODULE_0__["ACTIVITY_FREQUENCY_BIWEEKLY"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "ACTIVITY_FREQUENCY_WEEKLY", function() { return _public_api__WEBPACK_IMPORTED_MODULE_0__["ACTIVITY_FREQUENCY_WEEKLY"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "ACTIVITY_FREQUENCIES", function() { return _public_api__WEBPACK_IMPORTED_MODULE_0__["ACTIVITY_FREQUENCIES"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "ActivityCurvesSelection", function() { return _public_api__WEBPACK_IMPORTED_MODULE_0__["ActivityCurvesSelection"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "ActivityCurvesSelectionFactory", function() { return _public_api__WEBPACK_IMPORTED_MODULE_0__["ActivityCurvesSelectionFactory"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "ActivityCurvesComponent", function() { return _public_api__WEBPACK_IMPORTED_MODULE_0__["ActivityCurvesComponent"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "ACTIVITY_CURVES_INTERPOLATES", function() { return _public_api__WEBPACK_IMPORTED_MODULE_0__["ACTIVITY_CURVES_INTERPOLATES"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "ActivityCurvesControlComponent", function() { return _public_api__WEBPACK_IMPORTED_MODULE_0__["ActivityCurvesControlComponent"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "CurveControlComponent", function() { return _public_api__WEBPACK_IMPORTED_MODULE_0__["CurveControlComponent"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "ObserverActivityVisMode", function() { return _public_api__WEBPACK_IMPORTED_MODULE_0__["ObserverActivityVisMode"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "ObserverActivitySelection", function() { return _public_api__WEBPACK_IMPORTED_MODULE_0__["ObserverActivitySelection"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "ObserverActivitySelectionFactory", function() { return _public_api__WEBPACK_IMPORTED_MODULE_0__["ObserverActivitySelectionFactory"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "ObserverActivityComponent", function() { return _public_api__WEBPACK_IMPORTED_MODULE_0__["ObserverActivityComponent"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "ObserverActivityControl", function() { return _public_api__WEBPACK_IMPORTED_MODULE_0__["ObserverActivityControl"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "ObservationFrequencySelection", function() { return _public_api__WEBPACK_IMPORTED_MODULE_0__["ObservationFrequencySelection"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "ObservationFrequencySelectionFactory", function() { return _public_api__WEBPACK_IMPORTED_MODULE_0__["ObservationFrequencySelectionFactory"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "ObservationFrequencyComponent", function() { return _public_api__WEBPACK_IMPORTED_MODULE_0__["ObservationFrequencyComponent"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "ObservationFrequencyControl", function() { return _public_api__WEBPACK_IMPORTED_MODULE_0__["ObservationFrequencyControl"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "CATEGORY_PESTS", function() { return _public_api__WEBPACK_IMPORTED_MODULE_0__["CATEGORY_PESTS"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "CATEGORY_TEMP_ACCUMULATIONS", function() { return _public_api__WEBPACK_IMPORTED_MODULE_0__["CATEGORY_TEMP_ACCUMULATIONS"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "DATA_FUNC", function() { return _public_api__WEBPACK_IMPORTED_MODULE_0__["DATA_FUNC"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "AGDD_COLORS", function() { return _public_api__WEBPACK_IMPORTED_MODULE_0__["AGDD_COLORS"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "DEFAULT_AGDD_LAYER_CATEGORY", function() { return _public_api__WEBPACK_IMPORTED_MODULE_0__["DEFAULT_AGDD_LAYER_CATEGORY"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "DEFAULT_AGDD_LAYER_NAME", function() { return _public_api__WEBPACK_IMPORTED_MODULE_0__["DEFAULT_AGDD_LAYER_NAME"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "AgddTimeSeriesSelection", function() { return _public_api__WEBPACK_IMPORTED_MODULE_0__["AgddTimeSeriesSelection"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "AgddTimeSeriesSelectionFactory", function() { return _public_api__WEBPACK_IMPORTED_MODULE_0__["AgddTimeSeriesSelectionFactory"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "AgddTimeSeriesComponent", function() { return _public_api__WEBPACK_IMPORTED_MODULE_0__["AgddTimeSeriesComponent"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "AgddTsMapLayerControl", function() { return _public_api__WEBPACK_IMPORTED_MODULE_0__["AgddTsMapLayerControl"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "MapSelection", function() { return _public_api__WEBPACK_IMPORTED_MODULE_0__["MapSelection"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "MapSelectionFactory", function() { return _public_api__WEBPACK_IMPORTED_MODULE_0__["MapSelectionFactory"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "MapVisualizationComponent", function() { return _public_api__WEBPACK_IMPORTED_MODULE_0__["MapVisualizationComponent"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "MAP_VIS_SVG_PATHS", function() { return _public_api__WEBPACK_IMPORTED_MODULE_0__["MAP_VIS_SVG_PATHS"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "MapVisMarker", function() { return _public_api__WEBPACK_IMPORTED_MODULE_0__["MapVisMarker"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "ExtentControl", function() { return _public_api__WEBPACK_IMPORTED_MODULE_0__["ExtentControl"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "ExtentDateControl", function() { return _public_api__WEBPACK_IMPORTED_MODULE_0__["ExtentDateControl"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "ExtentDoyControl", function() { return _public_api__WEBPACK_IMPORTED_MODULE_0__["ExtentDoyControl"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "ExtentYearControl", function() { return _public_api__WEBPACK_IMPORTED_MODULE_0__["ExtentYearControl"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "GriddedRangeSliderControl", function() { return _public_api__WEBPACK_IMPORTED_MODULE_0__["GriddedRangeSliderControl"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "ConsolidatedMapLayerControlComponent", function() { return _public_api__WEBPACK_IMPORTED_MODULE_0__["ConsolidatedMapLayerControlComponent"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "PestMapLayerControlComponent", function() { return _public_api__WEBPACK_IMPORTED_MODULE_0__["PestMapLayerControlComponent"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "TempAccumMapLayerControlComponent", function() { return _public_api__WEBPACK_IMPORTED_MODULE_0__["TempAccumMapLayerControlComponent"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "SpringIndexMapLayerControlComponent", function() { return _public_api__WEBPACK_IMPORTED_MODULE_0__["SpringIndexMapLayerControlComponent"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "MapVisualizationMarkerIw", function() { return _public_api__WEBPACK_IMPORTED_MODULE_0__["MapVisualizationMarkerIw"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "YearRangeInputComponent", function() { return _public_api__WEBPACK_IMPORTED_MODULE_0__["YearRangeInputComponent"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "HigherSpeciesPhenophaseInputComponent", function() { return _public_api__WEBPACK_IMPORTED_MODULE_0__["HigherSpeciesPhenophaseInputComponent"]; });




/***/ }),

/***/ "../npn/common/src/lib/npn-lib.module.ts":
/*!***********************************************!*\
  !*** ../npn/common/src/lib/npn-lib.module.ts ***!
  \***********************************************/
/*! exports provided: NpnLibModule */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "NpnLibModule", function() { return NpnLibModule; });
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @angular/core */ "../../node_modules/@angular/core/fesm5/core.js");
/* harmony import */ var _angular_common_http__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @angular/common/http */ "../../node_modules/@angular/common/fesm5/http.js");
/* harmony import */ var _visualizations__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./visualizations */ "../npn/common/src/lib/visualizations/index.ts");
/* harmony import */ var _common__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./common */ "../npn/common/src/lib/common/index.ts");
/* harmony import */ var _angular_forms__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @angular/forms */ "../../node_modules/@angular/forms/fesm5/forms.js");
var __decorate = (undefined && undefined.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};





var NpnLibModule = /** @class */ (function () {
    function NpnLibModule() {
    }
    NpnLibModule = __decorate([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["NgModule"])({
            declarations: [],
            imports: [
                _common__WEBPACK_IMPORTED_MODULE_3__["NpnCommonModule"],
                _visualizations__WEBPACK_IMPORTED_MODULE_2__["VisualizationsModule"],
                _angular_common_http__WEBPACK_IMPORTED_MODULE_1__["HttpClientModule"],
                _angular_forms__WEBPACK_IMPORTED_MODULE_4__["FormsModule"]
            ]
        })
    ], NpnLibModule);
    return NpnLibModule;
}());



/***/ }),

/***/ "../npn/common/src/lib/public_api.ts":
/*!*******************************************!*\
  !*** ../npn/common/src/lib/public_api.ts ***!
  \*******************************************/
/*! exports provided: NpnCommonModule, NPN_BASE_HREF, CacheService, NetworkService, StationService, getStaticColor, DoyPipe, LegendDoyPipe, NpnServiceUtils, MapLayerLegendComponent, GriddedPipeProvider, DoyTxType, VisSelection, NetworkAwareVisSelection, StationAwareVisSelection, VisualizationSelectionFactory, NpnLibModule, TaxonomicSpeciesRank, Phenophase, TaxonomicPhenophaseRank, STATIC_COLORS, getSpeciesPlotKeys, SpeciesService, SpeciesTitlePipe, TaxonomicSpeciesTitlePipe, newGuid, NpnConfiguration, NPN_CONFIGURATION, detectIE, MonitorsDestroy, SpeciesTitleFormat, APPLICATION_SETTINGS, NpnGriddedModule, MapLayer, encodeHttpParams, srsConversion, NpnMapLayerService, MapLayerLegend, DESTINATION_POINT, WcsDataService, GriddedInfoWindowHandler, googleFeatureBounds, MAP_STYLES, parseExtentDate, MapLayerType, MapLayerServiceType, MapLayerExtentType, CATEGORY_PEST, CATEGORY_TEMP_ACCUM_30_YR_AVG, CATEGORY_TEMP_ACCUM_CURRENT, CATEGORY_TEMP_ACCUM_CURRENT_AK, CATEGORY_TEMP_ACCUM_DAILY_ANOM, CATEGORY_SIX_HIST_ANNUAL, CATEGORY_SIX_CURRENT_YEAR, CATEGORY_SIX_CURRENT_YEAR_AK, CATEGORY_SIX_DAILY_ANOM, CATEGORY_SIX_30_YR_AVG, MAP_LAYERS, WMS_VERSION, BOX_SIZE, BASE_WMS_ARGS, GriddedUrls, WmsMapLayer, WmsMapLayerLegend, PestMapLayer, PestMapLayerLegend, DefaultMapLayerLegend, BoundaryService, VisualizationsModule, CalendarSelection, CalendarSelectionFactory, CalendarComponent, CalendarControlComponent, ScatterPlotSelection, AXIS, ScatterPlotSelectionFactory, ScatterPlotComponent, ScatterPlotControls, ClippedWmsMapSelection, ClippedWmsMapSelectionFactory, ClippedWmsMapControl, ClippedWmsMapComponent, ClippedWmsMapStatisticsComponent, ClippedStatValuePipe, ActivityCurve, INTERPOLATE, ACTIVITY_CURVE_KINGDOM_METRICS, ActivityFrequency, ACTIVITY_FREQUENCY_MONTHLY, ACTIVITY_FREQUENCY_BIWEEKLY, ACTIVITY_FREQUENCY_WEEKLY, ACTIVITY_FREQUENCIES, ActivityCurvesSelection, ActivityCurvesSelectionFactory, ActivityCurvesComponent, ACTIVITY_CURVES_INTERPOLATES, ActivityCurvesControlComponent, CurveControlComponent, ObserverActivityVisMode, ObserverActivitySelection, ObserverActivitySelectionFactory, ObserverActivityComponent, ObserverActivityControl, ObservationFrequencySelection, ObservationFrequencySelectionFactory, ObservationFrequencyComponent, ObservationFrequencyControl, CATEGORY_PESTS, CATEGORY_TEMP_ACCUMULATIONS, DATA_FUNC, AGDD_COLORS, DEFAULT_AGDD_LAYER_CATEGORY, DEFAULT_AGDD_LAYER_NAME, AgddTimeSeriesSelection, AgddTimeSeriesSelectionFactory, AgddTimeSeriesComponent, AgddTsMapLayerControl, MapSelection, MapSelectionFactory, MapVisualizationComponent, MAP_VIS_SVG_PATHS, MapVisMarker, ExtentControl, ExtentDateControl, ExtentDoyControl, ExtentYearControl, GriddedRangeSliderControl, ConsolidatedMapLayerControlComponent, PestMapLayerControlComponent, TempAccumMapLayerControlComponent, SpringIndexMapLayerControlComponent, MapVisualizationMarkerIw, YearRangeInputComponent, HigherSpeciesPhenophaseInputComponent */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _common_public_api__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./common/public_api */ "../npn/common/src/lib/common/public_api.ts");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "NpnCommonModule", function() { return _common_public_api__WEBPACK_IMPORTED_MODULE_0__["NpnCommonModule"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "NPN_BASE_HREF", function() { return _common_public_api__WEBPACK_IMPORTED_MODULE_0__["NPN_BASE_HREF"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "CacheService", function() { return _common_public_api__WEBPACK_IMPORTED_MODULE_0__["CacheService"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "NetworkService", function() { return _common_public_api__WEBPACK_IMPORTED_MODULE_0__["NetworkService"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "StationService", function() { return _common_public_api__WEBPACK_IMPORTED_MODULE_0__["StationService"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "getStaticColor", function() { return _common_public_api__WEBPACK_IMPORTED_MODULE_0__["getStaticColor"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "DoyPipe", function() { return _common_public_api__WEBPACK_IMPORTED_MODULE_0__["DoyPipe"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "LegendDoyPipe", function() { return _common_public_api__WEBPACK_IMPORTED_MODULE_0__["LegendDoyPipe"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "NpnServiceUtils", function() { return _common_public_api__WEBPACK_IMPORTED_MODULE_0__["NpnServiceUtils"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "TaxonomicSpeciesRank", function() { return _common_public_api__WEBPACK_IMPORTED_MODULE_0__["TaxonomicSpeciesRank"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "Phenophase", function() { return _common_public_api__WEBPACK_IMPORTED_MODULE_0__["Phenophase"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "TaxonomicPhenophaseRank", function() { return _common_public_api__WEBPACK_IMPORTED_MODULE_0__["TaxonomicPhenophaseRank"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "STATIC_COLORS", function() { return _common_public_api__WEBPACK_IMPORTED_MODULE_0__["STATIC_COLORS"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "getSpeciesPlotKeys", function() { return _common_public_api__WEBPACK_IMPORTED_MODULE_0__["getSpeciesPlotKeys"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "SpeciesService", function() { return _common_public_api__WEBPACK_IMPORTED_MODULE_0__["SpeciesService"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "SpeciesTitlePipe", function() { return _common_public_api__WEBPACK_IMPORTED_MODULE_0__["SpeciesTitlePipe"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "TaxonomicSpeciesTitlePipe", function() { return _common_public_api__WEBPACK_IMPORTED_MODULE_0__["TaxonomicSpeciesTitlePipe"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "newGuid", function() { return _common_public_api__WEBPACK_IMPORTED_MODULE_0__["newGuid"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "NpnConfiguration", function() { return _common_public_api__WEBPACK_IMPORTED_MODULE_0__["NpnConfiguration"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "NPN_CONFIGURATION", function() { return _common_public_api__WEBPACK_IMPORTED_MODULE_0__["NPN_CONFIGURATION"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "detectIE", function() { return _common_public_api__WEBPACK_IMPORTED_MODULE_0__["detectIE"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "MonitorsDestroy", function() { return _common_public_api__WEBPACK_IMPORTED_MODULE_0__["MonitorsDestroy"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "SpeciesTitleFormat", function() { return _common_public_api__WEBPACK_IMPORTED_MODULE_0__["SpeciesTitleFormat"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "APPLICATION_SETTINGS", function() { return _common_public_api__WEBPACK_IMPORTED_MODULE_0__["APPLICATION_SETTINGS"]; });

/* harmony import */ var _gridded_public_api__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./gridded/public_api */ "../npn/common/src/lib/gridded/public_api.ts");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "MapLayerLegendComponent", function() { return _gridded_public_api__WEBPACK_IMPORTED_MODULE_1__["MapLayerLegendComponent"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "GriddedPipeProvider", function() { return _gridded_public_api__WEBPACK_IMPORTED_MODULE_1__["GriddedPipeProvider"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "DoyTxType", function() { return _gridded_public_api__WEBPACK_IMPORTED_MODULE_1__["DoyTxType"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "NpnGriddedModule", function() { return _gridded_public_api__WEBPACK_IMPORTED_MODULE_1__["NpnGriddedModule"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "MapLayer", function() { return _gridded_public_api__WEBPACK_IMPORTED_MODULE_1__["MapLayer"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "encodeHttpParams", function() { return _gridded_public_api__WEBPACK_IMPORTED_MODULE_1__["encodeHttpParams"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "srsConversion", function() { return _gridded_public_api__WEBPACK_IMPORTED_MODULE_1__["srsConversion"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "NpnMapLayerService", function() { return _gridded_public_api__WEBPACK_IMPORTED_MODULE_1__["NpnMapLayerService"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "MapLayerLegend", function() { return _gridded_public_api__WEBPACK_IMPORTED_MODULE_1__["MapLayerLegend"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "DESTINATION_POINT", function() { return _gridded_public_api__WEBPACK_IMPORTED_MODULE_1__["DESTINATION_POINT"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "WcsDataService", function() { return _gridded_public_api__WEBPACK_IMPORTED_MODULE_1__["WcsDataService"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "GriddedInfoWindowHandler", function() { return _gridded_public_api__WEBPACK_IMPORTED_MODULE_1__["GriddedInfoWindowHandler"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "googleFeatureBounds", function() { return _gridded_public_api__WEBPACK_IMPORTED_MODULE_1__["googleFeatureBounds"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "MAP_STYLES", function() { return _gridded_public_api__WEBPACK_IMPORTED_MODULE_1__["MAP_STYLES"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "parseExtentDate", function() { return _gridded_public_api__WEBPACK_IMPORTED_MODULE_1__["parseExtentDate"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "MapLayerType", function() { return _gridded_public_api__WEBPACK_IMPORTED_MODULE_1__["MapLayerType"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "MapLayerServiceType", function() { return _gridded_public_api__WEBPACK_IMPORTED_MODULE_1__["MapLayerServiceType"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "MapLayerExtentType", function() { return _gridded_public_api__WEBPACK_IMPORTED_MODULE_1__["MapLayerExtentType"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "CATEGORY_PEST", function() { return _gridded_public_api__WEBPACK_IMPORTED_MODULE_1__["CATEGORY_PEST"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "CATEGORY_TEMP_ACCUM_30_YR_AVG", function() { return _gridded_public_api__WEBPACK_IMPORTED_MODULE_1__["CATEGORY_TEMP_ACCUM_30_YR_AVG"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "CATEGORY_TEMP_ACCUM_CURRENT", function() { return _gridded_public_api__WEBPACK_IMPORTED_MODULE_1__["CATEGORY_TEMP_ACCUM_CURRENT"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "CATEGORY_TEMP_ACCUM_CURRENT_AK", function() { return _gridded_public_api__WEBPACK_IMPORTED_MODULE_1__["CATEGORY_TEMP_ACCUM_CURRENT_AK"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "CATEGORY_TEMP_ACCUM_DAILY_ANOM", function() { return _gridded_public_api__WEBPACK_IMPORTED_MODULE_1__["CATEGORY_TEMP_ACCUM_DAILY_ANOM"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "CATEGORY_SIX_HIST_ANNUAL", function() { return _gridded_public_api__WEBPACK_IMPORTED_MODULE_1__["CATEGORY_SIX_HIST_ANNUAL"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "CATEGORY_SIX_CURRENT_YEAR", function() { return _gridded_public_api__WEBPACK_IMPORTED_MODULE_1__["CATEGORY_SIX_CURRENT_YEAR"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "CATEGORY_SIX_CURRENT_YEAR_AK", function() { return _gridded_public_api__WEBPACK_IMPORTED_MODULE_1__["CATEGORY_SIX_CURRENT_YEAR_AK"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "CATEGORY_SIX_DAILY_ANOM", function() { return _gridded_public_api__WEBPACK_IMPORTED_MODULE_1__["CATEGORY_SIX_DAILY_ANOM"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "CATEGORY_SIX_30_YR_AVG", function() { return _gridded_public_api__WEBPACK_IMPORTED_MODULE_1__["CATEGORY_SIX_30_YR_AVG"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "MAP_LAYERS", function() { return _gridded_public_api__WEBPACK_IMPORTED_MODULE_1__["MAP_LAYERS"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "WMS_VERSION", function() { return _gridded_public_api__WEBPACK_IMPORTED_MODULE_1__["WMS_VERSION"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "BOX_SIZE", function() { return _gridded_public_api__WEBPACK_IMPORTED_MODULE_1__["BOX_SIZE"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "BASE_WMS_ARGS", function() { return _gridded_public_api__WEBPACK_IMPORTED_MODULE_1__["BASE_WMS_ARGS"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "GriddedUrls", function() { return _gridded_public_api__WEBPACK_IMPORTED_MODULE_1__["GriddedUrls"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "WmsMapLayer", function() { return _gridded_public_api__WEBPACK_IMPORTED_MODULE_1__["WmsMapLayer"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "WmsMapLayerLegend", function() { return _gridded_public_api__WEBPACK_IMPORTED_MODULE_1__["WmsMapLayerLegend"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "PestMapLayer", function() { return _gridded_public_api__WEBPACK_IMPORTED_MODULE_1__["PestMapLayer"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "PestMapLayerLegend", function() { return _gridded_public_api__WEBPACK_IMPORTED_MODULE_1__["PestMapLayerLegend"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "DefaultMapLayerLegend", function() { return _gridded_public_api__WEBPACK_IMPORTED_MODULE_1__["DefaultMapLayerLegend"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "BoundaryService", function() { return _gridded_public_api__WEBPACK_IMPORTED_MODULE_1__["BoundaryService"]; });

/* harmony import */ var _visualizations_public_api__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./visualizations/public_api */ "../npn/common/src/lib/visualizations/public_api.ts");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "VisSelection", function() { return _visualizations_public_api__WEBPACK_IMPORTED_MODULE_2__["VisSelection"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "NetworkAwareVisSelection", function() { return _visualizations_public_api__WEBPACK_IMPORTED_MODULE_2__["NetworkAwareVisSelection"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "StationAwareVisSelection", function() { return _visualizations_public_api__WEBPACK_IMPORTED_MODULE_2__["StationAwareVisSelection"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "VisualizationSelectionFactory", function() { return _visualizations_public_api__WEBPACK_IMPORTED_MODULE_2__["VisualizationSelectionFactory"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "VisualizationsModule", function() { return _visualizations_public_api__WEBPACK_IMPORTED_MODULE_2__["VisualizationsModule"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "CalendarSelection", function() { return _visualizations_public_api__WEBPACK_IMPORTED_MODULE_2__["CalendarSelection"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "CalendarSelectionFactory", function() { return _visualizations_public_api__WEBPACK_IMPORTED_MODULE_2__["CalendarSelectionFactory"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "CalendarComponent", function() { return _visualizations_public_api__WEBPACK_IMPORTED_MODULE_2__["CalendarComponent"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "CalendarControlComponent", function() { return _visualizations_public_api__WEBPACK_IMPORTED_MODULE_2__["CalendarControlComponent"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "ScatterPlotSelection", function() { return _visualizations_public_api__WEBPACK_IMPORTED_MODULE_2__["ScatterPlotSelection"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "AXIS", function() { return _visualizations_public_api__WEBPACK_IMPORTED_MODULE_2__["AXIS"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "ScatterPlotSelectionFactory", function() { return _visualizations_public_api__WEBPACK_IMPORTED_MODULE_2__["ScatterPlotSelectionFactory"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "ScatterPlotComponent", function() { return _visualizations_public_api__WEBPACK_IMPORTED_MODULE_2__["ScatterPlotComponent"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "ScatterPlotControls", function() { return _visualizations_public_api__WEBPACK_IMPORTED_MODULE_2__["ScatterPlotControls"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "ClippedWmsMapSelection", function() { return _visualizations_public_api__WEBPACK_IMPORTED_MODULE_2__["ClippedWmsMapSelection"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "ClippedWmsMapSelectionFactory", function() { return _visualizations_public_api__WEBPACK_IMPORTED_MODULE_2__["ClippedWmsMapSelectionFactory"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "ClippedWmsMapControl", function() { return _visualizations_public_api__WEBPACK_IMPORTED_MODULE_2__["ClippedWmsMapControl"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "ClippedWmsMapComponent", function() { return _visualizations_public_api__WEBPACK_IMPORTED_MODULE_2__["ClippedWmsMapComponent"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "ClippedWmsMapStatisticsComponent", function() { return _visualizations_public_api__WEBPACK_IMPORTED_MODULE_2__["ClippedWmsMapStatisticsComponent"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "ClippedStatValuePipe", function() { return _visualizations_public_api__WEBPACK_IMPORTED_MODULE_2__["ClippedStatValuePipe"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "ActivityCurve", function() { return _visualizations_public_api__WEBPACK_IMPORTED_MODULE_2__["ActivityCurve"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "INTERPOLATE", function() { return _visualizations_public_api__WEBPACK_IMPORTED_MODULE_2__["INTERPOLATE"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "ACTIVITY_CURVE_KINGDOM_METRICS", function() { return _visualizations_public_api__WEBPACK_IMPORTED_MODULE_2__["ACTIVITY_CURVE_KINGDOM_METRICS"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "ActivityFrequency", function() { return _visualizations_public_api__WEBPACK_IMPORTED_MODULE_2__["ActivityFrequency"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "ACTIVITY_FREQUENCY_MONTHLY", function() { return _visualizations_public_api__WEBPACK_IMPORTED_MODULE_2__["ACTIVITY_FREQUENCY_MONTHLY"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "ACTIVITY_FREQUENCY_BIWEEKLY", function() { return _visualizations_public_api__WEBPACK_IMPORTED_MODULE_2__["ACTIVITY_FREQUENCY_BIWEEKLY"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "ACTIVITY_FREQUENCY_WEEKLY", function() { return _visualizations_public_api__WEBPACK_IMPORTED_MODULE_2__["ACTIVITY_FREQUENCY_WEEKLY"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "ACTIVITY_FREQUENCIES", function() { return _visualizations_public_api__WEBPACK_IMPORTED_MODULE_2__["ACTIVITY_FREQUENCIES"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "ActivityCurvesSelection", function() { return _visualizations_public_api__WEBPACK_IMPORTED_MODULE_2__["ActivityCurvesSelection"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "ActivityCurvesSelectionFactory", function() { return _visualizations_public_api__WEBPACK_IMPORTED_MODULE_2__["ActivityCurvesSelectionFactory"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "ActivityCurvesComponent", function() { return _visualizations_public_api__WEBPACK_IMPORTED_MODULE_2__["ActivityCurvesComponent"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "ACTIVITY_CURVES_INTERPOLATES", function() { return _visualizations_public_api__WEBPACK_IMPORTED_MODULE_2__["ACTIVITY_CURVES_INTERPOLATES"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "ActivityCurvesControlComponent", function() { return _visualizations_public_api__WEBPACK_IMPORTED_MODULE_2__["ActivityCurvesControlComponent"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "CurveControlComponent", function() { return _visualizations_public_api__WEBPACK_IMPORTED_MODULE_2__["CurveControlComponent"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "ObserverActivityVisMode", function() { return _visualizations_public_api__WEBPACK_IMPORTED_MODULE_2__["ObserverActivityVisMode"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "ObserverActivitySelection", function() { return _visualizations_public_api__WEBPACK_IMPORTED_MODULE_2__["ObserverActivitySelection"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "ObserverActivitySelectionFactory", function() { return _visualizations_public_api__WEBPACK_IMPORTED_MODULE_2__["ObserverActivitySelectionFactory"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "ObserverActivityComponent", function() { return _visualizations_public_api__WEBPACK_IMPORTED_MODULE_2__["ObserverActivityComponent"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "ObserverActivityControl", function() { return _visualizations_public_api__WEBPACK_IMPORTED_MODULE_2__["ObserverActivityControl"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "ObservationFrequencySelection", function() { return _visualizations_public_api__WEBPACK_IMPORTED_MODULE_2__["ObservationFrequencySelection"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "ObservationFrequencySelectionFactory", function() { return _visualizations_public_api__WEBPACK_IMPORTED_MODULE_2__["ObservationFrequencySelectionFactory"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "ObservationFrequencyComponent", function() { return _visualizations_public_api__WEBPACK_IMPORTED_MODULE_2__["ObservationFrequencyComponent"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "ObservationFrequencyControl", function() { return _visualizations_public_api__WEBPACK_IMPORTED_MODULE_2__["ObservationFrequencyControl"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "CATEGORY_PESTS", function() { return _visualizations_public_api__WEBPACK_IMPORTED_MODULE_2__["CATEGORY_PESTS"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "CATEGORY_TEMP_ACCUMULATIONS", function() { return _visualizations_public_api__WEBPACK_IMPORTED_MODULE_2__["CATEGORY_TEMP_ACCUMULATIONS"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "DATA_FUNC", function() { return _visualizations_public_api__WEBPACK_IMPORTED_MODULE_2__["DATA_FUNC"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "AGDD_COLORS", function() { return _visualizations_public_api__WEBPACK_IMPORTED_MODULE_2__["AGDD_COLORS"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "DEFAULT_AGDD_LAYER_CATEGORY", function() { return _visualizations_public_api__WEBPACK_IMPORTED_MODULE_2__["DEFAULT_AGDD_LAYER_CATEGORY"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "DEFAULT_AGDD_LAYER_NAME", function() { return _visualizations_public_api__WEBPACK_IMPORTED_MODULE_2__["DEFAULT_AGDD_LAYER_NAME"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "AgddTimeSeriesSelection", function() { return _visualizations_public_api__WEBPACK_IMPORTED_MODULE_2__["AgddTimeSeriesSelection"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "AgddTimeSeriesSelectionFactory", function() { return _visualizations_public_api__WEBPACK_IMPORTED_MODULE_2__["AgddTimeSeriesSelectionFactory"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "AgddTimeSeriesComponent", function() { return _visualizations_public_api__WEBPACK_IMPORTED_MODULE_2__["AgddTimeSeriesComponent"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "AgddTsMapLayerControl", function() { return _visualizations_public_api__WEBPACK_IMPORTED_MODULE_2__["AgddTsMapLayerControl"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "MapSelection", function() { return _visualizations_public_api__WEBPACK_IMPORTED_MODULE_2__["MapSelection"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "MapSelectionFactory", function() { return _visualizations_public_api__WEBPACK_IMPORTED_MODULE_2__["MapSelectionFactory"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "MapVisualizationComponent", function() { return _visualizations_public_api__WEBPACK_IMPORTED_MODULE_2__["MapVisualizationComponent"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "MAP_VIS_SVG_PATHS", function() { return _visualizations_public_api__WEBPACK_IMPORTED_MODULE_2__["MAP_VIS_SVG_PATHS"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "MapVisMarker", function() { return _visualizations_public_api__WEBPACK_IMPORTED_MODULE_2__["MapVisMarker"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "ExtentControl", function() { return _visualizations_public_api__WEBPACK_IMPORTED_MODULE_2__["ExtentControl"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "ExtentDateControl", function() { return _visualizations_public_api__WEBPACK_IMPORTED_MODULE_2__["ExtentDateControl"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "ExtentDoyControl", function() { return _visualizations_public_api__WEBPACK_IMPORTED_MODULE_2__["ExtentDoyControl"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "ExtentYearControl", function() { return _visualizations_public_api__WEBPACK_IMPORTED_MODULE_2__["ExtentYearControl"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "GriddedRangeSliderControl", function() { return _visualizations_public_api__WEBPACK_IMPORTED_MODULE_2__["GriddedRangeSliderControl"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "ConsolidatedMapLayerControlComponent", function() { return _visualizations_public_api__WEBPACK_IMPORTED_MODULE_2__["ConsolidatedMapLayerControlComponent"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "PestMapLayerControlComponent", function() { return _visualizations_public_api__WEBPACK_IMPORTED_MODULE_2__["PestMapLayerControlComponent"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "TempAccumMapLayerControlComponent", function() { return _visualizations_public_api__WEBPACK_IMPORTED_MODULE_2__["TempAccumMapLayerControlComponent"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "SpringIndexMapLayerControlComponent", function() { return _visualizations_public_api__WEBPACK_IMPORTED_MODULE_2__["SpringIndexMapLayerControlComponent"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "MapVisualizationMarkerIw", function() { return _visualizations_public_api__WEBPACK_IMPORTED_MODULE_2__["MapVisualizationMarkerIw"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "YearRangeInputComponent", function() { return _visualizations_public_api__WEBPACK_IMPORTED_MODULE_2__["YearRangeInputComponent"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "HigherSpeciesPhenophaseInputComponent", function() { return _visualizations_public_api__WEBPACK_IMPORTED_MODULE_2__["HigherSpeciesPhenophaseInputComponent"]; });

/* harmony import */ var _npn_lib_module__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./npn-lib.module */ "../npn/common/src/lib/npn-lib.module.ts");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "NpnLibModule", function() { return _npn_lib_module__WEBPACK_IMPORTED_MODULE_3__["NpnLibModule"]; });







/***/ }),

/***/ "../npn/common/src/lib/visualizations/activity-curves/activity-curve.ts":
/*!******************************************************************************!*\
  !*** ../npn/common/src/lib/visualizations/activity-curves/activity-curve.ts ***!
  \******************************************************************************/
/*! exports provided: ActivityCurve, INTERPOLATE, ACTIVITY_CURVE_KINGDOM_METRICS */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ActivityCurve", function() { return ActivityCurve; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "INTERPOLATE", function() { return INTERPOLATE; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ACTIVITY_CURVE_KINGDOM_METRICS", function() { return ACTIVITY_CURVE_KINGDOM_METRICS; });
/* harmony import */ var _vis_selection__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../vis-selection */ "../npn/common/src/lib/visualizations/vis-selection.ts");
/* harmony import */ var _common__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../common */ "../npn/common/src/lib/common/index.ts");
/* harmony import */ var d3__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! d3 */ "../../node_modules/d3/index.js");
var __decorate = (undefined && undefined.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (undefined && undefined.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};



var ActivityCurve = /** @class */ (function () {
    function ActivityCurve() {
        this.childId = 0;
    }
    Object.defineProperty(ActivityCurve.prototype, "children", {
        get: function () {
            return this._children || [];
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(ActivityCurve.prototype, "curveId", {
        get: function () {
            return this.id + "-" + this.childId;
        },
        enumerable: true,
        configurable: true
    });
    ActivityCurve.prototype.copy = function (childIndex) {
        var copy = new ActivityCurve();
        copy.id = this.id;
        copy.childId = childIndex;
        copy.color = this.color;
        copy.orient = this.orient;
        copy.speciesRank = this.speciesRank;
        copy._species = this._species;
        copy._metric = this._metric;
        copy.phenophaseRank = this.phenophaseRank;
        copy._phenophase = this._phenophase;
        copy._year = this._year;
        copy._color = this._color;
        copy.selection = this.selection;
        return copy;
    };
    Object.defineProperty(ActivityCurve.prototype, "external", {
        get: function () { return _vis_selection__WEBPACK_IMPORTED_MODULE_0__["GET_EXTERNAL"].apply(this, arguments); },
        set: function (o) { _vis_selection__WEBPACK_IMPORTED_MODULE_0__["SET_EXTERNAL"].apply(this, arguments); },
        enumerable: true,
        configurable: true
    });
    ActivityCurve.prototype.reset = function () {
        delete this.$data;
        delete this.$metricData;
        this.children.forEach(function (c) {
            delete c.$data;
            delete c.$metricData;
        });
    };
    ActivityCurve.prototype.updateCheck = function (requiresUpdate) {
        if (this.selection && this.isValid()) {
            if (!this.plotted() || requiresUpdate) {
                this.selection.update();
            }
            else {
                this.selection.redraw();
            }
        }
    };
    Object.defineProperty(ActivityCurve.prototype, "year", {
        get: function () {
            return this._year;
        },
        set: function (y) {
            this.reset();
            this._year = y;
            this.children.forEach(function (c) { return c._year = y; });
            this.updateCheck(true);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(ActivityCurve.prototype, "phenophase", {
        get: function () {
            return this._phenophase;
        },
        set: function (p) {
            this.reset();
            this._phenophase = p;
            this.children.forEach(function (c) { return c._phenophase = p; });
            this.updateCheck(true);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(ActivityCurve.prototype, "color", {
        get: function () {
            return this._color;
        },
        set: function (c) {
            this._color = c;
            this.updateCheck(false);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(ActivityCurve.prototype, "metric", {
        get: function () {
            return this._metric;
        },
        set: function (m) {
            delete this.$metricData;
            this._metric = m;
            this.children.forEach(function (c) {
                delete c.$metricData;
                c._metric = m;
            });
            this.updateCheck();
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(ActivityCurve.prototype, "species", {
        get: function () {
            return this._species;
        },
        set: function (s) {
            this.reset();
            this._species = s;
            this.children.forEach(function (c) { return c._species = s; });
            this.phenophase = undefined;
            this._metrics = this._species && this._species.kingdom
                ? (ACTIVITY_CURVE_KINGDOM_METRICS[this._species.kingdom] || [])
                : [];
            this._originalMetrics = this._metrics;
            if (this._metric && this._metrics.indexOf(this._metric) === -1) {
                // previous metric has become invalid
                this.metric = undefined;
            }
            if (this._metrics.length && !this._metric) {
                this.metric = this._metrics[0];
            }
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(ActivityCurve.prototype, "validMetrics", {
        get: function () {
            return (this._metrics || []);
        },
        enumerable: true,
        configurable: true
    });
    /**
     * Puts all valid metrics back if they were overridden
     */
    ActivityCurve.prototype.overrideValidMetricsReset = function () {
        this._metrics = this._originalMetrics;
    };
    /**
     * Change which metrics are selectable.  This codes does NOT validate
     * the input it should only ever be a subset of the originally valid
     * metrics.
     *
     * @param valid The new set of valid metrics.
     */
    ActivityCurve.prototype.overrideValidMetrics = function (valid) {
        this._metrics = valid;
        if (this._metric && this._metrics.indexOf(this._metric) === -1) {
            // previous metric has become invalid
            delete this._metric;
            if (this.selection) {
                this.selection.redraw();
            }
        }
    };
    /**
     * @return The metric label for the curve axis.
     */
    ActivityCurve.prototype.axisLabel = function () {
        return this.metric ? this.metric.label : '?';
    };
    ActivityCurve.prototype.doyDataValue = function () {
        var self = this, data = self.data(), value, d, i;
        if (self.doyFocus && data) {
            for (i = 0; i < data.length; i++) {
                d = data[i];
                if (self.doyFocus >= d.start_doy && self.doyFocus <= d.end_doy) {
                    value = (self.metric.valueFormat || IDENTITY)(d[self.metric.id]);
                    if (d[self.metric.sampleSize] !== -9999) {
                        value += ' N:' + d[self.metric.sampleSize];
                    }
                    return value;
                }
            }
        }
    };
    /**
     * @return Formatted label for the legend.
     */
    ActivityCurve.prototype.legendLabel = function (includeMetric) {
        var doyFocusValue = this.doyDataValue();
        var pp = this.phenophase;
        return this.year + ": " +
            SPECIES_TITLE(this.species, this.speciesRank) + ' - ' + (pp.phenophase_name || pp.pheno_class_name) +
            (includeMetric ? " (" + this.metric.label + ")" : '') +
            (this._group ? " (" + this._group.label + ")" : '') +
            (typeof (doyFocusValue) !== 'undefined' ? " [" + doyFocusValue + "]" : '');
    };
    /**
     * @return The metric id.
     */
    ActivityCurve.prototype.metricId = function () {
        return this.metric ? this.metric.id : undefined;
    };
    ActivityCurve.prototype.group = function (g) {
        this._group = g;
        return this;
    };
    ActivityCurve.prototype.data = function (_) {
        if (arguments.length) {
            delete this.$data;
            delete this.$metricData;
            if (_) {
                _.forEach(function (d) {
                    d.start_doy = DOY(d.start_date);
                    d.end_doy = DOY(d.end_date);
                });
                _.sort(function (a, b) {
                    return a.start_doy - b.start_doy;
                });
                this.$data = _;
            }
            return this;
        }
        var self = this, data = self.$data;
        if (data && self.metric) {
            // avoid re-filtering with UI updates, store the result and re-use until
            // something changes
            if (!self.$metricData) {
                if (!self.metric.sampleSize) {
                    console.warn('Metric does not define a sampleSize property, cannot filter out invalid data points.');
                }
                data = data.filter(function (d) {
                    if (self.metric.sampleSize && d[self.metric.sampleSize] === -9999) {
                        //console.log('SAMPLE_SIZE filter.');
                        return false;
                    }
                    return d[self.metric.id] !== -9999;
                });
                if (data.length !== self.$data.length) {
                    console.debug('filtered out ' + (self.$data.length - data.length) + '/' + self.$data.length + ' of -9999 records for metric ', self.metric);
                }
                /*
                if(data.length === 26) { // simulate situation for development bi-weekly data
                    //console.log('DEBUG CODE MODIFYING DATA!!');
                    // create a single isolated data point and three separate curves
                    // [0-9] [11] [13-19] [21-25]
                    data = data.filter(function(d,i) {
                        return (i !== 10 && i !== 12 && i !== 20);
                    });
                }*/
                self.$metricData = data;
            }
            else {
                data = self.$metricData;
            }
        }
        return data;
    };
    ActivityCurve.prototype.endDate = function (year) {
        var now = new Date();
        if (year === now.getFullYear()) {
            return this.selection.datePipe.transform(now, 'yyyy-MM-dd');
        }
        return year + '-12-31';
    };
    /**
     * Load data for this curve, or curves.  This function will return
     * multiple curves if its selection is using grouping.  In that case the
     * returned curves will be copies of this curve with the corresponding data populated
     * on them.  Changes to this curve (what to plot, year, etc.) will ripple down into
     * the curve copies so when rendered (via draw) on a visualization they will update.
     *
     * @param baseParams
     */
    ActivityCurve.prototype.loadData = function (baseParams) {
        var _this = this;
        var curveParams = baseParams
            .set('start_date', this.year + "-01-01")
            .set('end_date', this.endDate(this.year));
        var keys = Object(_common__WEBPACK_IMPORTED_MODULE_1__["getSpeciesPlotKeys"])(this);
        curveParams = curveParams.set(keys.speciesIdKey + "[0]", "" + this.species[keys.speciesIdKey]);
        if ((this.speciesRank || _common__WEBPACK_IMPORTED_MODULE_1__["TaxonomicSpeciesRank"].SPECIES) !== _common__WEBPACK_IMPORTED_MODULE_1__["TaxonomicSpeciesRank"].SPECIES) {
            curveParams = curveParams.set('taxonomy_aggregate', '1');
        }
        curveParams = curveParams.set(keys.phenophaseIdKey + "[0]", "" + this.phenophase[keys.phenophaseIdKey]);
        if (this.phenophaseRank === _common__WEBPACK_IMPORTED_MODULE_1__["TaxonomicPhenophaseRank"].CLASS) {
            curveParams = curveParams.set('pheno_class_aggregate', '1');
        }
        var apiUrl = this.selection.serviceUtils.apiUrl('/npn_portal/observations/getMagnitudeData.json');
        if (this.selection.groups && this.selection.groups.length) {
            return this.selection.toGroupHttpParams(curveParams)
                .then(function (groupParams) {
                // parallel arrays
                _this._children = groupParams.map(function (gp, i) { return _this.copy(i); });
                return Promise.all(_this._children.map(function (curve, i) { return _this.selection.serviceUtils
                    .cachedPost(apiUrl, groupParams[i].params.toString())
                    .then(function (data) { return curve.group(groupParams[i].group).data(data); }); }));
            });
        }
        else {
            return this.selection.serviceUtils
                .cachedPost(apiUrl, curveParams.toString())
                .then(function (data) { return [_this.data(data)]; });
        }
    };
    ActivityCurve.prototype.axis = function () {
        var y = this.y(), ticks = y.ticks(), // default is ~10 ticks
        orient = this.orient || 'left', axis = orient === 'left' ? d3__WEBPACK_IMPORTED_MODULE_2__["axisLeft"](y) : d3__WEBPACK_IMPORTED_MODULE_2__["axisRight"](y);
        if (ticks.length) {
            // replace the final tick with the top of the y domain
            // that -would- have been generated and use them explicitly
            // this can result in ticks stacked on on another if too close
            //ticks.push(y.domain()[1]);
            // this often results in a larger space between the two topmost ticks
            ticks[ticks.length - 1] = y.domain()[1];
            axis.tickValues(ticks);
        }
        return axis;
    };
    ActivityCurve.prototype.x = function (_) {
        if (arguments.length) {
            this.$x = _;
            return this;
        }
        return this.$x;
    };
    ActivityCurve.prototype.y = function (_) {
        if (arguments.length) {
            this.$y = _;
            return this;
        }
        return this.$y;
    };
    ActivityCurve.prototype.isValid = function () {
        return !!this.species &&
            !!this.phenophase &&
            !!this.year &&
            !!this.metric;
    };
    ActivityCurve.prototype.plotted = function () {
        // not keeping track of a flag but curves are plotted if they
        // are valid and have data
        var data = this.data();
        if (this.isValid() && !!data) {
            return true; // this curve is plotted
        }
        // plotted if any children are plotted
        return this.children.reduce(function (plotted, child) { return (plotted || (child.plotted ? true : false)); }, false);
    };
    ActivityCurve.prototype.shouldRevisualize = function () {
        return this.isValid() && !this.data();
    };
    ActivityCurve.prototype.domain = function () {
        var self = this, data = self.data(), extents;
        if (data && self.metric) {
            extents = d3__WEBPACK_IMPORTED_MODULE_2__["extent"](data, function (d) {
                return d[self.metric.id];
            });
            if (extents[0] > 0) {
                // typically data sets will contain 0 but really always want the
                // lower extent of any y axis to be zero so make it so
                extents[0] = 0;
            }
            else if (extents[0] < 0) {
                // this shouldn't happen but don't futz with the domain in this
                // case or the graph would go wonky
                console.warn('negative domain start for metric', extents, self.metric);
            }
            return extents;
        }
    };
    /**
     * Searches this curve's data for a data point nearest to a doy.
     *
     * @param doy The doy to find the nearest data to.
     * @returns ActivityCurveMagnitudeData or undefined
     */
    ActivityCurve.prototype.nearest = function (doy) {
        var data = this.data();
        return data.reduce(function (found, md) { return (found || (doy >= md.start_doy && doy <= md.end_doy ? md : undefined)); }, undefined);
    };
    ActivityCurve.prototype.draw = function (chart) {
        var self = this, data = self.data(), datas = [[]], x, y, i, d, dn, line, r = 3;
        chart.selectAll("g.curve.curve-" + self.curveId).remove();
        var g = chart.append('g')
            .attr('class', "curve curve-" + self.curveId);
        if (data && data.length) {
            // detect any gaps in the data, break it into multiple curves/points
            // to plot
            for (i = 0; i < data.length; i++) {
                d = data[i];
                dn = (i + 1) < data.length ? data[i + 1] : undefined;
                datas[datas.length - 1].push(d);
                if (dn && dn.start_doy !== (d.end_doy + 1)) {
                    datas.push([]); // there's a gap in the data, start another curve or point
                }
            }
            x = self.x();
            y = self.y();
            var x_functor_1 = function (d) { return x(d.start_doy + Math.round((d.end_doy - d.start_doy) / 2)); }, y_functor_1 = function (d) { return y(d[self.metric.id]); };
            line = d3__WEBPACK_IMPORTED_MODULE_2__["line"]();
            switch (self.selection.interpolate) {
                case INTERPOLATE.monotone:
                    line.curve(d3__WEBPACK_IMPORTED_MODULE_2__["curveMonotoneX"]);
                    break;
                case INTERPOLATE.stepAfter:
                    line.curve(d3__WEBPACK_IMPORTED_MODULE_2__["curveStepAfter"]);
                    break;
                case INTERPOLATE.linear:
                    line.curve(d3__WEBPACK_IMPORTED_MODULE_2__["curveLinear"]);
                    break;
            }
            line.x(x_functor_1);
            line.y(y_functor_1);
            console.debug('ActivityCurve.draw', self.species, self.phenophase, self.year, self.metric, self.domain(), y.domain());
            console.debug('draw.datas', datas);
            datas.forEach(function (curve_data, i) {
                if (curve_data.length === 1 || self.selection.dataPoints) {
                    curve_data.forEach(function (d) {
                        g.append('circle')
                            .attr('class', 'curve-point curve-point-' + self.curveId)
                            .attr('r', r)
                            .attr('fill', self.color)
                            .attr('cx', x_functor_1(d))
                            .attr('cy', y_functor_1(d));
                    });
                }
                if (curve_data.length > 1) {
                    g.append('path')
                        .attr('class', 'curve curve-' + self.curveId)
                        .attr('fill', 'none')
                        .attr('stroke', self.color)
                        .attr('stroke-linejoin', 'round')
                        .attr('stroke-linecap', 'round')
                        .attr('stroke-width', 1.5)
                        .attr('d', line(curve_data));
                }
            });
        }
    };
    __decorate([
        Object(_vis_selection__WEBPACK_IMPORTED_MODULE_0__["selectionProperty"])(),
        __metadata("design:type", Number)
    ], ActivityCurve.prototype, "id", void 0);
    __decorate([
        Object(_vis_selection__WEBPACK_IMPORTED_MODULE_0__["selectionProperty"])(),
        __metadata("design:type", String)
    ], ActivityCurve.prototype, "speciesRank", void 0);
    __decorate([
        Object(_vis_selection__WEBPACK_IMPORTED_MODULE_0__["selectionProperty"])(),
        __metadata("design:type", Object)
    ], ActivityCurve.prototype, "_species", void 0);
    __decorate([
        Object(_vis_selection__WEBPACK_IMPORTED_MODULE_0__["selectionProperty"])({
            ser: function (d) { return d; },
            des: function (d) {
                // when deserializing re-align with the actual metric object
                // so equality checks elsewhere work.
                return !!d
                    ? ALL_METRICS.find(function (m) { return m.id === d.id; })
                    : d;
            }
        }),
        __metadata("design:type", Object)
    ], ActivityCurve.prototype, "_metric", void 0);
    __decorate([
        Object(_vis_selection__WEBPACK_IMPORTED_MODULE_0__["selectionProperty"])(),
        __metadata("design:type", String)
    ], ActivityCurve.prototype, "phenophaseRank", void 0);
    __decorate([
        Object(_vis_selection__WEBPACK_IMPORTED_MODULE_0__["selectionProperty"])(),
        __metadata("design:type", Object)
    ], ActivityCurve.prototype, "_phenophase", void 0);
    __decorate([
        Object(_vis_selection__WEBPACK_IMPORTED_MODULE_0__["selectionProperty"])(),
        __metadata("design:type", Number)
    ], ActivityCurve.prototype, "_year", void 0);
    __decorate([
        Object(_vis_selection__WEBPACK_IMPORTED_MODULE_0__["selectionProperty"])(),
        __metadata("design:type", String)
    ], ActivityCurve.prototype, "_color", void 0);
    return ActivityCurve;
}());

var INTERPOLATE;
(function (INTERPOLATE) {
    INTERPOLATE[INTERPOLATE["linear"] = 0] = "linear";
    INTERPOLATE[INTERPOLATE["stepAfter"] = 1] = "stepAfter";
    INTERPOLATE[INTERPOLATE["monotone"] = 2] = "monotone";
})(INTERPOLATE || (INTERPOLATE = {}));
;
var DECIMAL = function (v) { return v.toFixed(2); };
var IDENTITY = function (o) { return o; };
var SPECIES_TITLE_PIPE = new _common__WEBPACK_IMPORTED_MODULE_1__["TaxonomicSpeciesTitlePipe"](new _common__WEBPACK_IMPORTED_MODULE_1__["SpeciesTitlePipe"]());
var SPECIES_TITLE = function (item, rank) { return SPECIES_TITLE_PIPE.transform(item, rank); };
var DOY_PIPE = new _common__WEBPACK_IMPORTED_MODULE_1__["DoyPipe"]();
var DOY = function (date, ignoreLeapYear) { return DOY_PIPE.transform(date, ignoreLeapYear); };
var COMMON_METRICS = [{
        id: 'num_yes_records',
        sampleSize: 'status_records_sample_size',
        label: 'Total Yes Records'
    }, {
        id: 'proportion_yes_records',
        sampleSize: 'status_records_sample_size',
        label: 'Proportion Yes Records',
        valueFormat: DECIMAL,
        proportion: true
    }];
var ACTIVITY_CURVE_KINGDOM_METRICS = {
    Plantae: COMMON_METRICS.concat([{
            id: 'numindividuals_with_yes_record',
            sampleSize: 'individuals_sample_size',
            label: 'Total Individuals with Yes Records'
        }, {
            id: 'proportion_individuals_with_yes_record',
            sampleSize: 'individuals_sample_size',
            label: 'Proportion Individuals with Yes Records',
            valueFormat: DECIMAL,
            proportion: true
        }]),
    Animalia: COMMON_METRICS.concat([{
            id: 'numsites_with_yes_record',
            sampleSize: 'sites_sample_size',
            label: 'Total Sites with Yes Records'
        }, {
            id: 'proportion_sites_with_yes_record',
            sampleSize: 'sites_sample_size',
            label: 'Proportion Sites with Yes Records',
            valueFormat: DECIMAL,
            proportion: true
        }, {
            id: 'total_numanimals_in-phase',
            sampleSize: 'in-phase_site_visits_sample_size',
            label: 'Total Animals In Phase'
        },
        {
            id: 'mean_numanimals_in-phase',
            sampleSize: 'in-phase_site_visits_sample_size',
            label: 'Animals In Phase',
            valueFormat: DECIMAL
        }, {
            id: 'mean_numanimals_in-phase_per_hr',
            sampleSize: 'in-phase_per_hr_sites_sample_size',
            label: 'Animals In Phase per Hour',
            valueFormat: DECIMAL
        }, {
            id: 'mean_numanimals_in-phase_per_hr_per_acre',
            sampleSize: 'phase_per_hr_per_acre_sites_sample_size',
            label: 'Animals In Phase per Hour per Acre',
            valueFormat: DECIMAL
        }])
};
var ALL_METRICS = Object.keys(ACTIVITY_CURVE_KINGDOM_METRICS).reduce(function (arr, key) {
    ACTIVITY_CURVE_KINGDOM_METRICS[key]
        .filter(function (metric) { return arr.indexOf(metric) === -1; })
        .forEach(function (metric) { return arr.push(metric); });
    return arr;
}, []);


/***/ }),

/***/ "../npn/common/src/lib/visualizations/activity-curves/activity-curves-control.component.ts":
/*!*************************************************************************************************!*\
  !*** ../npn/common/src/lib/visualizations/activity-curves/activity-curves-control.component.ts ***!
  \*************************************************************************************************/
/*! exports provided: ACTIVITY_CURVES_INTERPOLATES, ActivityCurvesControlComponent */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ACTIVITY_CURVES_INTERPOLATES", function() { return ACTIVITY_CURVES_INTERPOLATES; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ActivityCurvesControlComponent", function() { return ActivityCurvesControlComponent; });
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @angular/core */ "../../node_modules/@angular/core/fesm5/core.js");
/* harmony import */ var _activity_curve__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./activity-curve */ "../npn/common/src/lib/visualizations/activity-curves/activity-curve.ts");
/* harmony import */ var _activity_curves_selection__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./activity-curves-selection */ "../npn/common/src/lib/visualizations/activity-curves/activity-curves-selection.ts");
/* harmony import */ var _common__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../common */ "../npn/common/src/lib/common/index.ts");
/* harmony import */ var _fortawesome_pro_light_svg_icons__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @fortawesome/pro-light-svg-icons */ "../../node_modules/@fortawesome/pro-light-svg-icons/index.es.js");
var __decorate = (undefined && undefined.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (undefined && undefined.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};





var ACTIVITY_CURVES_INTERPOLATES = [{
        value: _activity_curve__WEBPACK_IMPORTED_MODULE_1__["INTERPOLATE"].linear,
        label: 'Linear'
    }, {
        value: _activity_curve__WEBPACK_IMPORTED_MODULE_1__["INTERPOLATE"].monotone,
        label: 'Monotone',
    }, {
        value: _activity_curve__WEBPACK_IMPORTED_MODULE_1__["INTERPOLATE"].stepAfter,
        label: 'Step after'
    }];
var ActivityCurvesControlComponent = /** @class */ (function () {
    function ActivityCurvesControlComponent() {
        this.frequencies = _activity_curves_selection__WEBPACK_IMPORTED_MODULE_2__["ACTIVITY_FREQUENCIES"];
        this.interpolates = ACTIVITY_CURVES_INTERPOLATES;
        this.faExclamationTriangle = _fortawesome_pro_light_svg_icons__WEBPACK_IMPORTED_MODULE_4__["faExclamationTriangle"];
    }
    ActivityCurvesControlComponent.prototype.addCurve = function () {
        var curve = new _activity_curve__WEBPACK_IMPORTED_MODULE_1__["ActivityCurve"]();
        curve.id = this.selection.curves.length;
        curve.color = _common__WEBPACK_IMPORTED_MODULE_3__["STATIC_COLORS"][curve.id];
        curve.selection = this.selection;
        this.selection.curves.push(curve);
    };
    ActivityCurvesControlComponent.prototype.removeCurve = function (i) {
        this.selection.curves.splice(i, 1);
        this.selection.update();
        this.speciesMetricChange();
    };
    ActivityCurvesControlComponent.prototype.speciesMetricChange = function () {
        // need to prevent more than two metrics being selected
        var curves = this.selection.curves || [];
        var selectedMetrics = [];
        curves.forEach(function (c) {
            c.overrideValidMetricsReset();
            if (selectedMetrics.length === 2) {
                var valid_1 = c.validMetrics;
                c.overrideValidMetrics(selectedMetrics.filter(function (m) { return valid_1.indexOf(m) !== -1; }));
            }
            else if (c.metric && selectedMetrics.indexOf(c.metric) === -1) {
                selectedMetrics.push(c.metric);
            }
        });
    };
    __decorate([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Input"])(),
        __metadata("design:type", _activity_curves_selection__WEBPACK_IMPORTED_MODULE_2__["ActivityCurvesSelection"])
    ], ActivityCurvesControlComponent.prototype, "selection", void 0);
    ActivityCurvesControlComponent = __decorate([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Component"])({
            selector: 'activity-curves-control',
            template: "\n    <div *ngIf=\"!selection.canAddPlot\" class=\"max-plots-reached\"><fa-icon [icon]=\"faExclamationTriangle\"></fa-icon> One more curve would exceed the maximum of {{selection.MAX_PLOTS}} allowed</div>\n    <div class=\"curve mat-elevation-z1\" *ngFor=\"let curve of selection.curves; index as i\">\n        <label>Curve #{{i+1}}</label>\n        <curve-selection-control\n            [selection]=\"selection\"\n            [curve]=\"curve\"\n            [required]=\"i === 0\"\n            [gatherColor]=\"true\"\n            (onSpeciesChange)=\"speciesMetricChange($event)\"\n            (onMetricChange)=\"speciesMetricChange($event)\">\n            </curve-selection-control>\n        <div class=\"action-holder\">\n            <button *ngIf=\"selection.curves.length > 1\" mat-button (click)=\"removeCurve(i)\">Remove curve</button>\n            <button *ngIf=\"i === selection.curves.length-1\" mat-button (click)=\"addCurve()\" [disabled]=\"!selection.canAddPlot\">Add curve</button>\n        </div>\n    </div>\n    <div class=\"curve-common\">\n        <mat-form-field class=\"date-interval\">\n            <mat-select placeholder=\"Date Interval\" [(ngModel)]=\"selection.frequency\">\n                <mat-option *ngFor=\"let f of frequencies\" [value]=\"f\">{{f.label}}</mat-option>\n            </mat-select>\n        </mat-form-field>\n\n        <mat-form-field class=\"line-interpolateion\">\n            <mat-select placeholder=\"Line Interpolation\" [(ngModel)]=\"selection.interpolate\">\n                <mat-option *ngFor=\"let i of interpolates\" [value]=\"i.value\">{{i.label}}</mat-option>\n            </mat-select>\n        </mat-form-field>\n\n        <mat-checkbox [(ngModel)]=\"selection.dataPoints\">Show data points</mat-checkbox>\n    </div>\n    ",
            styles: ["\n        .curve,\n        .curve-common {\n            display: flex;\n            align-items: center;\n            margin: 2px 2px 5px 2px;\n            padding: 4px;\n        }\n        .curve-common {\n            margin-top: 10px;\n        }\n        .curve >label {\n            white-space: nowrap;\n        }\n        .curve >label:after {\n            content: ':';\n            margin-right: 10px;\n        }\n        .curve >.action-holder {\n            display: flex;\n            flex-direction: column;\n        }\n        .date-interval {\n            width: 125px;\n        }\n        .line-interpolateion {\n            width: 150px;\n        }\n        .action-holder {\n            margin: 10px 0px;\n            text-align: right;\n        }\n    "]
        })
    ], ActivityCurvesControlComponent);
    return ActivityCurvesControlComponent;
}());



/***/ }),

/***/ "../npn/common/src/lib/visualizations/activity-curves/activity-curves-selection-factory.service.ts":
/*!*********************************************************************************************************!*\
  !*** ../npn/common/src/lib/visualizations/activity-curves/activity-curves-selection-factory.service.ts ***!
  \*********************************************************************************************************/
/*! exports provided: ActivityCurvesSelectionFactory */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ActivityCurvesSelectionFactory", function() { return ActivityCurvesSelectionFactory; });
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @angular/core */ "../../node_modules/@angular/core/fesm5/core.js");
/* harmony import */ var _angular_common__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @angular/common */ "../../node_modules/@angular/common/fesm5/common.js");
/* harmony import */ var _common__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../common */ "../npn/common/src/lib/common/index.ts");
/* harmony import */ var _activity_curves_selection__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./activity-curves-selection */ "../npn/common/src/lib/visualizations/activity-curves/activity-curves-selection.ts");
var __decorate = (undefined && undefined.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (undefined && undefined.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};




var ActivityCurvesSelectionFactory = /** @class */ (function () {
    function ActivityCurvesSelectionFactory(serviceUtils, datePipe, speciesService, networkService) {
        this.serviceUtils = serviceUtils;
        this.datePipe = datePipe;
        this.speciesService = speciesService;
        this.networkService = networkService;
    }
    ActivityCurvesSelectionFactory.prototype.newSelection = function () {
        return new _activity_curves_selection__WEBPACK_IMPORTED_MODULE_3__["ActivityCurvesSelection"](this.serviceUtils, this.datePipe, this.speciesService, this.networkService);
    };
    ActivityCurvesSelectionFactory = __decorate([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Injectable"])(),
        __metadata("design:paramtypes", [_common__WEBPACK_IMPORTED_MODULE_2__["NpnServiceUtils"],
            _angular_common__WEBPACK_IMPORTED_MODULE_1__["DatePipe"],
            _common__WEBPACK_IMPORTED_MODULE_2__["SpeciesService"],
            _common__WEBPACK_IMPORTED_MODULE_2__["NetworkService"]])
    ], ActivityCurvesSelectionFactory);
    return ActivityCurvesSelectionFactory;
}());



/***/ }),

/***/ "../npn/common/src/lib/visualizations/activity-curves/activity-curves-selection.ts":
/*!*****************************************************************************************!*\
  !*** ../npn/common/src/lib/visualizations/activity-curves/activity-curves-selection.ts ***!
  \*****************************************************************************************/
/*! exports provided: ActivityFrequency, ACTIVITY_FREQUENCY_MONTHLY, ACTIVITY_FREQUENCY_BIWEEKLY, ACTIVITY_FREQUENCY_WEEKLY, ACTIVITY_FREQUENCIES, ActivityCurvesSelection */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ActivityFrequency", function() { return ActivityFrequency; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ACTIVITY_FREQUENCY_MONTHLY", function() { return ACTIVITY_FREQUENCY_MONTHLY; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ACTIVITY_FREQUENCY_BIWEEKLY", function() { return ACTIVITY_FREQUENCY_BIWEEKLY; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ACTIVITY_FREQUENCY_WEEKLY", function() { return ACTIVITY_FREQUENCY_WEEKLY; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ACTIVITY_FREQUENCIES", function() { return ACTIVITY_FREQUENCIES; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ActivityCurvesSelection", function() { return ActivityCurvesSelection; });
/* harmony import */ var _angular_common_http__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @angular/common/http */ "../../node_modules/@angular/common/fesm5/http.js");
/* harmony import */ var _common__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../common */ "../npn/common/src/lib/common/index.ts");
/* harmony import */ var _activity_curve__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./activity-curve */ "../npn/common/src/lib/visualizations/activity-curves/activity-curve.ts");
/* harmony import */ var _vis_selection__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../vis-selection */ "../npn/common/src/lib/visualizations/vis-selection.ts");
var __extends = (undefined && undefined.__extends) || (function () {
    var extendStatics = Object.setPrototypeOf ||
        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __assign = (undefined && undefined.__assign) || Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
        s = arguments[i];
        for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
            t[p] = s[p];
    }
    return t;
};
var __decorate = (undefined && undefined.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (undefined && undefined.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};




var ActivityFrequency = /** @class */ (function () {
    function ActivityFrequency() {
    }
    return ActivityFrequency;
}());

var ACTIVITY_FREQUENCY_MONTHLY = {
    value: 'months',
    label: 'Monthly'
};
var ACTIVITY_FREQUENCY_BIWEEKLY = {
    value: 14,
    label: 'Bi-weekly'
};
var ACTIVITY_FREQUENCY_WEEKLY = {
    value: 7,
    label: 'Weekly'
};
var ACTIVITY_FREQUENCIES = [
    ACTIVITY_FREQUENCY_MONTHLY,
    ACTIVITY_FREQUENCY_BIWEEKLY,
    ACTIVITY_FREQUENCY_WEEKLY
];
// @dynamic
var ActivityCurvesSelection = /** @class */ (function (_super) {
    __extends(ActivityCurvesSelection, _super);
    function ActivityCurvesSelection(serviceUtils, datePipe, speciesService, networkService) {
        var _this = _super.call(this, serviceUtils, networkService) || this;
        _this.serviceUtils = serviceUtils;
        _this.datePipe = datePipe;
        _this.speciesService = speciesService;
        _this.networkService = networkService;
        _this.$supportsPop = true;
        _this.$class = 'ActivityCurvesSelection';
        _this.defaultInterpolate = _activity_curve__WEBPACK_IMPORTED_MODULE_2__["INTERPOLATE"].monotone;
        _this._interpolate = _activity_curve__WEBPACK_IMPORTED_MODULE_2__["INTERPOLATE"].monotone;
        _this._dataPoints = true;
        _this.defaultFrequency = ACTIVITY_FREQUENCIES[0];
        _this._frequency = ACTIVITY_FREQUENCIES[0];
        /** The maximum number of plots we want to allow. */
        _this.MAX_PLOTS = 6;
        // create a default empty curve
        var curve0 = new _activity_curve__WEBPACK_IMPORTED_MODULE_2__["ActivityCurve"]();
        curve0.color = _common__WEBPACK_IMPORTED_MODULE_1__["STATIC_COLORS"][0];
        curve0.id = 0;
        _this.curves = [curve0];
        return _this;
    }
    Object.defineProperty(ActivityCurvesSelection.prototype, "canAddPlot", {
        /**
         * Indicates whether or not adding one more plot will result in a visualization exceeding
         * the maximum number of allowed plots.
         */
        get: function () {
            var groups = this.groups ? this.groups.length : 0;
            var next_plots = (this._curves ? this._curves.length : 0) + 1;
            var next_count = groups ? (groups * next_plots) : next_plots;
            return next_count <= this.MAX_PLOTS;
        },
        enumerable: true,
        configurable: true
    });
    ActivityCurvesSelection.prototype.toPOPInput = function (input) {
        var _this = this;
        if (input === void 0) { input = __assign({}, _vis_selection__WEBPACK_IMPORTED_MODULE_3__["BASE_POP_INPUT"]); }
        return _super.prototype.toPOPInput.call(this, input)
            .then(function (input) {
            var yearRange = _this.validCurves.reduce(function (range, curve) {
                if (!range) {
                    return [curve.year, curve.year];
                }
                if (curve.year < range[0]) {
                    range[0] = curve.year;
                }
                if (curve.year > range[1]) {
                    range[1] = curve.year;
                }
                return range;
            }, undefined);
            if (yearRange) {
                input.startDate = yearRange[0] + "-01-01";
                input.endDate = yearRange[1] + "-12-31";
            }
            return _this.speciesService.getSpeciesIds(_this.validCurves)
                .then(function (ids) {
                input.species = ids;
                return input;
            });
        });
    };
    ActivityCurvesSelection.prototype.hasValidCurve = function () {
        return this.validCurves.length > 0;
    };
    ActivityCurvesSelection.prototype.isValid = function () {
        return typeof (this._interpolate) === 'number' && // is a numeric based enum with a 0
            !!this._frequency &&
            this.hasValidCurve();
    };
    ActivityCurvesSelection.prototype.updateCheck = function (requiresUpdate) {
        var anyValid = this.hasValidCurve();
        var anyPlotted = this.curves.reduce(function (plotted, curve) { return (plotted || curve.plotted()); }, false);
        if (requiresUpdate) {
            if (anyValid) {
                this.update();
            }
        }
        else {
            if (anyValid && anyPlotted) {
                this.redraw();
            }
            else if (anyValid) {
                this.update();
            }
        }
    };
    Object.defineProperty(ActivityCurvesSelection.prototype, "frequency", {
        get: function () {
            return this._frequency;
        },
        set: function (f) {
            this._frequency = f;
            // any change in frequency invalidates any data held by curves
            (this._curves || []).forEach(function (c) {
                c._frequency = f;
                c.data(null);
            });
            this.updateCheck(true);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(ActivityCurvesSelection.prototype, "interpolate", {
        get: function () {
            return this._interpolate;
        },
        set: function (i) {
            this._interpolate = i;
            this.updateCheck();
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(ActivityCurvesSelection.prototype, "dataPoints", {
        get: function () {
            return this._dataPoints;
        },
        set: function (dp) {
            this._dataPoints = dp;
            this.updateCheck(false);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(ActivityCurvesSelection.prototype, "curves", {
        get: function () {
            return this._curves;
        },
        set: function (cs) {
            var _this = this;
            this._curves = cs;
            (this._curves || []).forEach(function (c) { return c.selection = _this; });
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(ActivityCurvesSelection.prototype, "validCurves", {
        get: function () {
            return (this._curves || []).filter(function (c) { return c.isValid(); });
        },
        enumerable: true,
        configurable: true
    });
    /**
     * Load all the curves and their data.  It's ipmortant to understand that this function
     * may return more curves than are defined on the selection and the resulting curves may
     * not be references to those held on this selection.
     */
    ActivityCurvesSelection.prototype.loadCurves = function () {
        var _this = this;
        this.working = true;
        return this.toURLSearchParams(new _angular_common_http__WEBPACK_IMPORTED_MODULE_0__["HttpParams"]()
            .set('request_src', 'npn-vis-activity-curves')
            .set('frequency', "" + this.frequency.value)).then(function (baseParams) {
            var promises = _this.curves
                .filter(function (c) { return c.data(null).isValid(); })
                .map(function (c) { return c.loadData(baseParams); });
            return Promise.all(promises)
                .then(function (curves) {
                _this.working = false;
                var toPlot = curves.reduce(function (arr, list) { return arr.concat(list); }, []);
                if (_this.groups && _this.groups.length) {
                    toPlot.forEach(function (curve, index) { return curve.color = Object(_common__WEBPACK_IMPORTED_MODULE_1__["getStaticColor"])(index); });
                }
                return toPlot;
            })
                .catch(function (err) {
                _this.working = false;
                //throw err;
                _this.handleError(err);
                return [];
            });
        });
    };
    ActivityCurvesSelection.prototype.handleError = function (error) {
        console.error('ERROR', error);
    };
    __decorate([
        Object(_vis_selection__WEBPACK_IMPORTED_MODULE_3__["selectionProperty"])(),
        __metadata("design:type", String)
    ], ActivityCurvesSelection.prototype, "$class", void 0);
    __decorate([
        Object(_vis_selection__WEBPACK_IMPORTED_MODULE_3__["selectionProperty"])(),
        __metadata("design:type", Number)
    ], ActivityCurvesSelection.prototype, "_interpolate", void 0);
    __decorate([
        Object(_vis_selection__WEBPACK_IMPORTED_MODULE_3__["selectionProperty"])(),
        __metadata("design:type", Boolean)
    ], ActivityCurvesSelection.prototype, "_dataPoints", void 0);
    __decorate([
        Object(_vis_selection__WEBPACK_IMPORTED_MODULE_3__["selectionProperty"])({
            ser: function (d) { return d; },
            des: function (d) {
                // when deserializing re-align with the actual metric object
                // so equality checks elsewhere work.
                return !!d
                    ? ACTIVITY_FREQUENCIES.find(function (af) { return d.value === af.value; })
                    : d;
            }
        }),
        __metadata("design:type", ActivityFrequency)
    ], ActivityCurvesSelection.prototype, "_frequency", void 0);
    __decorate([
        Object(_vis_selection__WEBPACK_IMPORTED_MODULE_3__["selectionProperty"])({
            ser: function (d) { return d ? d.external : undefined; },
            des: function (d) {
                var ac = new _activity_curve__WEBPACK_IMPORTED_MODULE_2__["ActivityCurve"]();
                ac.external = d;
                return ac;
            }
        }),
        __metadata("design:type", Array)
    ], ActivityCurvesSelection.prototype, "_curves", void 0);
    return ActivityCurvesSelection;
}(_vis_selection__WEBPACK_IMPORTED_MODULE_3__["StationAwareVisSelection"]));



/***/ }),

/***/ "../npn/common/src/lib/visualizations/activity-curves/activity-curves.component.ts":
/*!*****************************************************************************************!*\
  !*** ../npn/common/src/lib/visualizations/activity-curves/activity-curves.component.ts ***!
  \*****************************************************************************************/
/*! exports provided: ActivityCurvesComponent */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ActivityCurvesComponent", function() { return ActivityCurvesComponent; });
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @angular/core */ "../../node_modules/@angular/core/fesm5/core.js");
/* harmony import */ var _angular_flex_layout__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @angular/flex-layout */ "../../node_modules/@angular/flex-layout/esm5/flex-layout.es5.js");
/* harmony import */ var _common__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../common */ "../npn/common/src/lib/common/index.ts");
/* harmony import */ var _vis_selection__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../vis-selection */ "../npn/common/src/lib/visualizations/vis-selection.ts");
/* harmony import */ var _svg_visualization_base_component__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../svg-visualization-base.component */ "../npn/common/src/lib/visualizations/svg-visualization-base.component.ts");
/* harmony import */ var _activity_curves_selection__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./activity-curves-selection */ "../npn/common/src/lib/visualizations/activity-curves/activity-curves-selection.ts");
/* harmony import */ var d3_axis__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! d3-axis */ "../../node_modules/d3-axis/index.js");
/* harmony import */ var d3_scale__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! d3-scale */ "../../node_modules/d3-scale/index.js");
/* harmony import */ var d3__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! d3 */ "../../node_modules/d3/index.js");
var __extends = (undefined && undefined.__extends) || (function () {
    var extendStatics = Object.setPrototypeOf ||
        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __decorate = (undefined && undefined.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (undefined && undefined.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};









var ROOT_DATE = new Date(2010, 0);
var D3_DATE_FMT = d3__WEBPACK_IMPORTED_MODULE_8__["timeFormat"]('%m/%d');
var DATE_FMT = function (d) {
    var time = ((d - 1) * _vis_selection__WEBPACK_IMPORTED_MODULE_3__["ONE_DAY_MILLIS"]) + ROOT_DATE.getTime(), date = new Date(time);
    return D3_DATE_FMT(date);
};
var PAD_DOMAIN = function (d, metric) {
    if (d && d.length === 2) {
        d = [d[0], (d[1] * 1.05)];
        if (metric && metric.proportion && d[1] > 1) {
            d[1] = 1.0; // don't allow proportions to overflow for clarity.
        }
    }
    return d;
};
var DOY_INTERVAL_TICK = function (interval) {
    var doy = 1, ticks = [];
    while (doy <= 365) {
        ticks.push(doy);
        doy += interval;
    }
    return ticks;
};
var X_TICK_CFG = {
    7: {
        rotate: 45,
        values: DOY_INTERVAL_TICK(14)
    },
    14: {
        rotate: 45,
        values: DOY_INTERVAL_TICK(28)
    },
    months: {
        values: [1, 32, 60, 91, 121, 152, 182, 213, 244, 274, 305, 335]
    }
};
var DEFAULT_TOP_MARGIN = 80;
var LEGEND_VPAD = 4;
var MARGIN_VPAD = 10;
var ActivityCurvesComponent = /** @class */ (function (_super) {
    __extends(ActivityCurvesComponent, _super);
    function ActivityCurvesComponent(rootElement, media, legendDoyPipe) {
        var _this = _super.call(this, rootElement, media) || this;
        _this.rootElement = rootElement;
        _this.media = media;
        _this.legendDoyPipe = legendDoyPipe;
        _this.filename = 'activity-curves.png';
        _this.margins = { top: DEFAULT_TOP_MARGIN, left: 80, right: 80, bottom: 80 };
        return _this;
    }
    Object.defineProperty(ActivityCurvesComponent.prototype, "curves", {
        get: function () {
            return (this._curves || []).filter(function (c) { return c.isValid(); });
        },
        enumerable: true,
        configurable: true
    });
    /**
     * Organizes the valid curves into a map of metric to curves using that metric.
     */
    ActivityCurvesComponent.prototype.byMetric = function () {
        return this.curves.reduce(function (map, c) {
            map[c.metric.id] = map[c.metric.id] || {
                metric: c.metric,
                curves: []
            };
            map[c.metric.id].curves.push(c);
            return map;
        }, {});
    };
    /**
     * Tests to see if the curves are all using the same metric.
     */
    ActivityCurvesComponent.prototype.usingCommonMetric = function () {
        var curves = this.curves;
        // could be byMetric().length === 1 but this could be more performant
        return curves.length > 0
            // all curves using same metric.
            ? curves.reduce(function (metric, curve) { return metric === curve.metric ? metric : undefined; }, curves[0].metric)
            : undefined;
    };
    ActivityCurvesComponent.prototype.newY = function () {
        var sizing = this.sizing;
        return Object(d3_scale__WEBPACK_IMPORTED_MODULE_7__["scaleLinear"])().range([sizing.height, 0]).domain([0, 100]);
    };
    ActivityCurvesComponent.prototype.updateLegend = function () {
        var _this = this;
        var _a = this, chart = _a.chart, sizing = _a.sizing, selection = _a.selection;
        chart.select('.legend').remove();
        var commonMetric = this.usingCommonMetric();
        var legend = chart.append('g')
            .attr('class', 'legend')
            // the 150 below was picked just based on the site of the 'Activity Curves' title
            .attr('transform', "translate(90,-" + (sizing.margin.top - 10) + ")") // relative to the chart, not the svg
            .style('font-size', '1em');
        var r = 5;
        this.curves.filter(function (c) { return c.plotted(); })
            .forEach(function (curve, index) {
            var yTrans = (((index + 1) * _this.baseFontSize()) + (index * LEGEND_VPAD));
            var legendItem = legend.append('g')
                .attr('class', "legend-item curve-" + curve.id + " row-" + index)
                .attr('transform', "translate(0," + yTrans + ")");
            legendItem.append('circle')
                .attr('r', r)
                .attr('fill', curve.color);
            legendItem.append('text')
                .style('font-size', _this.baseFontSize(true))
                .attr('x', (2 * r))
                .attr('y', (r / 2))
                .text(curve.legendLabel(!commonMetric));
        });
    };
    ActivityCurvesComponent.prototype.hover = function () {
        var _this = this;
        var svg = this.svg, selection = this.selection, sizing = this.sizing, self = this, x = this.x;
        var hover = svg.append('g')
            .attr('transform', 'translate(' + sizing.margin.left + ',' + sizing.margin.top + ')')
            .style('display', 'none');
        var hoverLine = hover.append('line')
            .attr('class', 'focus')
            .attr('fill', 'none')
            .attr('stroke', 'green')
            .attr('stroke-width', 1)
            .attr('x1', 0)
            .attr('y1', 0)
            .attr('x2', 0)
            .attr('y2', sizing.height), hoverDoy = hover.append('text')
            .attr('class', 'focus-doy')
            .attr('y', 10)
            .attr('x', 0)
            .text('hover doy');
        var focusOff = function () {
            _this.curves.forEach(function (c) { delete c.doyFocus; });
            hover.style('display', 'none');
            _this.updateLegend();
        }, focusOn = function () {
            // only turn on if something has been plotted
            if (_this.curves.reduce(function (plotted, c) {
                return plotted || c.plotted();
            }, false)) {
                hover.style('display', null);
            }
        };
        // left as function due to d3's use of `this`
        function updateFocus() {
            var coords = d3__WEBPACK_IMPORTED_MODULE_8__["mouse"](this), xCoord = coords[0], yCoord = coords[1], doy = Math.round(x.invert(xCoord)), dataPoint = self.curves.reduce(function (dp, curve) {
                if (!dp && curve.plotted()) {
                    dp = curve.nearest(doy);
                }
                return dp;
            }, undefined);
            hoverLine.attr('transform', 'translate(' + xCoord + ')');
            hoverDoy
                .style('text-anchor', doy < 324 ? 'start' : 'end')
                .attr('x', xCoord + (10 * (doy < 324 ? 1 : -1)))
                .text(dataPoint ?
                self.legendDoyPipe.transform(dataPoint.start_doy) + ' - ' + self.legendDoyPipe.transform(dataPoint.end_doy) :
                self.legendDoyPipe.transform(doy));
            self.curves.forEach(function (c) { c.doyFocus = doy; });
            self.updateLegend();
        }
        svg.append('rect')
            .attr('class', 'overlay')
            .attr('transform', 'translate(' + this.margins.left + ',' + this.margins.top + ')')
            .style('fill', 'none')
            .style('pointer-events', 'all')
            .attr('x', 0)
            .attr('y', 0)
            .attr('width', sizing.width)
            .attr('height', sizing.height)
            .on('mouseover', focusOn)
            .on('mouseout', focusOff)
            .on('mousemove', updateFocus);
    };
    ActivityCurvesComponent.prototype.reset = function () {
        var _this = this;
        // make room for the legend based on the number of plots
        this.margins.top = DEFAULT_TOP_MARGIN;
        var fontSize = this.baseFontSize();
        if (this.selection) {
            var plotCount = this.curves.filter(function (c) { return c.plotted(); }).length;
            if (plotCount) {
                this.margins.top = ((plotCount + 1) * fontSize) + (plotCount * LEGEND_VPAD) + MARGIN_VPAD;
            }
        }
        _super.prototype.reset.call(this);
        var chart = this.chart, sizing = this.sizing;
        this.x = Object(d3_scale__WEBPACK_IMPORTED_MODULE_7__["scaleLinear"])().range([0, sizing.width]).domain([1, 365]);
        this.xAxis = Object(d3_axis__WEBPACK_IMPORTED_MODULE_6__["axisBottom"])(this.x).tickFormat(DATE_FMT);
        this.curves.forEach(function (c) { return c.x(_this.x).y(_this.newY()); });
        var titleFontSize = 18;
        var titleDy = this.margins.top - titleFontSize - fontSize;
        this.chart.append('g')
            .attr('class', 'chart-title')
            .append('text')
            .attr('y', '0')
            .attr('dy', "-" + titleDy)
            .attr('x', '0')
            .attr('dx', '-3em')
            .style('text-anchor', 'start')
            .style('font-size', titleFontSize + "px")
            .text('Activity Curves');
        this.commonUpdates();
    };
    ActivityCurvesComponent.prototype.update = function () {
        var _this = this;
        this.reset();
        this.selection.loadCurves().then(function (curves) {
            _this._curves = curves;
            _this.reset();
            _this.redraw();
        });
    };
    ActivityCurvesComponent.prototype.redrawSvg = function () {
        var _this = this;
        var chart = this.chart, sizing = this.sizing, selection = this.selection;
        chart.selectAll('g .axis').remove();
        var mapped = this.byMetric();
        var metricIds = Object.keys(mapped);
        metricIds.forEach(function (metricId) {
            var metric = mapped[metricId].metric;
            var curves = mapped[metricId].curves;
            // build domain that encapsulates all curves using a given metric
            var domain = d3__WEBPACK_IMPORTED_MODULE_8__["extent"](curves.reduce(function (arr, c) { return arr.concat(c.domain()); }, []));
            var y = _this.newY().domain(PAD_DOMAIN(domain, metric));
            curves.forEach(function (c) { return c.y(y); });
        });
        metricIds.forEach(function (metricId, index) {
            var orientation = index === 0 ? 'left' : 'right';
            var primaryCurve = mapped[metricId].curves[0];
            primaryCurve.orient = orientation;
            chart.append('g')
                .attr('class', "y axis " + orientation + " " + metricId)
                .attr('transform', "translate(" + (orientation === 'left' ? 0 : sizing.width) + ")")
                .call(primaryCurve.axis())
                .append('text')
                .attr('class', 'axis-title')
                .attr('transform', 'rotate(-90)')
                .attr('y', '0')
                .attr('dy', (orientation === 'left' ? '-' : '') + "4em")
                .attr('x', -1 * (sizing.height / 2)) // looks odd but to move in the Y we need to change X because of transform
                .style('text-anchor', 'middle')
                .attr('fill', '#000')
                .text(primaryCurve.axisLabel());
        });
        var xTickConfig = X_TICK_CFG[(selection.frequency || selection.defaultFrequency).value];
        this.xAxis.tickValues(xTickConfig.values);
        chart.append('g')
            .attr('class', 'x axis')
            .attr('transform', 'translate(0,' + sizing.height + ')')
            .call(this.xAxis)
            .append('text')
            .attr('y', '0')
            .attr('dy', '3em')
            .attr('x', (sizing.width / 2))
            .attr('class', 'axis-label')
            .style('text-anchor', 'middle')
            .text('Date');
        if (xTickConfig.rotate) {
            chart.selectAll('g.x.axis g.tick text')
                .style('text-anchor', 'end')
                .attr('transform', 'rotate(-' + xTickConfig.rotate + ')');
            chart.selectAll('g.x.axis .axis-label')
                .attr('dy', '4em');
        }
        // if a given metric just has a single curve then color its axis to match
        metricIds.forEach(function (metricId) {
            var curves = mapped[metricId].curves;
            if (curves.length === 1) {
                var axis_1 = chart.select("g.y.axis." + metricId);
                ['g.tick text', 'text.axis-title'].forEach(function (subSelect) { return axis_1.selectAll(subSelect).style('fill', curves[0].color); });
            }
        });
        this.commonUpdates();
        // draw the curves
        this.curves.forEach(function (c) { return c.draw(chart); });
        this.updateLegend();
        this.hover();
    };
    __decorate([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Input"])(),
        __metadata("design:type", _activity_curves_selection__WEBPACK_IMPORTED_MODULE_5__["ActivityCurvesSelection"])
    ], ActivityCurvesComponent.prototype, "selection", void 0);
    ActivityCurvesComponent = __decorate([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Component"])({
            selector: 'activity-curves',
            template: __webpack_require__(/*! ../svg-visualization-base.component.html */ "../npn/common/src/lib/visualizations/svg-visualization-base.component.html"),
            styles: [__webpack_require__(/*! ../svg-visualization-base.component.scss */ "../npn/common/src/lib/visualizations/svg-visualization-base.component.scss")]
        }),
        __metadata("design:paramtypes", [_angular_core__WEBPACK_IMPORTED_MODULE_0__["ElementRef"], _angular_flex_layout__WEBPACK_IMPORTED_MODULE_1__["ObservableMedia"], _common__WEBPACK_IMPORTED_MODULE_2__["LegendDoyPipe"]])
    ], ActivityCurvesComponent);
    return ActivityCurvesComponent;
}(_svg_visualization_base_component__WEBPACK_IMPORTED_MODULE_4__["SvgVisualizationBaseComponent"]));



/***/ }),

/***/ "../npn/common/src/lib/visualizations/activity-curves/curve-control.component.ts":
/*!***************************************************************************************!*\
  !*** ../npn/common/src/lib/visualizations/activity-curves/curve-control.component.ts ***!
  \***************************************************************************************/
/*! exports provided: CurveControlComponent */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "CurveControlComponent", function() { return CurveControlComponent; });
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @angular/core */ "../../node_modules/@angular/core/fesm5/core.js");
/* harmony import */ var _angular_forms__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @angular/forms */ "../../node_modules/@angular/forms/fesm5/forms.js");
/* harmony import */ var _common__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../common */ "../npn/common/src/lib/common/index.ts");
/* harmony import */ var _activity_curve__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./activity-curve */ "../npn/common/src/lib/visualizations/activity-curves/activity-curve.ts");
/* harmony import */ var _activity_curves_selection__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./activity-curves-selection */ "../npn/common/src/lib/visualizations/activity-curves/activity-curves-selection.ts");
/* harmony import */ var rxjs_operators__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! rxjs/operators */ "../../node_modules/rxjs/_esm5/operators/index.js");
var __extends = (undefined && undefined.__extends) || (function () {
    var extendStatics = Object.setPrototypeOf ||
        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __decorate = (undefined && undefined.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (undefined && undefined.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};






var CurveControlComponent = /** @class */ (function (_super) {
    __extends(CurveControlComponent, _super);
    function CurveControlComponent() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        _this.gatherColor = false;
        _this.required = true;
        _this.disabled = false;
        _this.onSpeciesChange = new _angular_core__WEBPACK_IMPORTED_MODULE_0__["EventEmitter"]();
        _this.onMetricChange = new _angular_core__WEBPACK_IMPORTED_MODULE_0__["EventEmitter"]();
        _this.validYears = (function () {
            var thisYear = (new Date()).getFullYear(), years = [], c = 2010;
            while (c <= thisYear) {
                years.push(c++);
            }
            return years.reverse();
        })();
        return _this;
    }
    Object.defineProperty(CurveControlComponent.prototype, "metric", {
        get: function () {
            return this.curve.metric;
        },
        set: function (metric) {
            var oldValue = this.curve.metric;
            var newValue = this.curve.metric = metric;
            this.onMetricChange.next({ oldValue: oldValue, newValue: newValue });
        },
        enumerable: true,
        configurable: true
    });
    CurveControlComponent.prototype.ngOnInit = function () {
        var _this = this;
        this.selection.pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_5__["filter"])(function (event) { return event === "scope_change" /* SCOPE_CHANGE */; }), Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_5__["debounceTime"])(500), Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_5__["takeUntil"])(this.componentDestroyed)).subscribe(function () { return _this.updateCriteria(); });
        this.yearControl = new _angular_forms__WEBPACK_IMPORTED_MODULE_1__["FormControl"](this.curve.year, /*Validators.required*/ function (c) {
            if (_this.required && !c.value) {
                return {
                    required: true
                };
            }
            return null;
        });
        if (this.disabled) {
            this.yearControl.disable();
        }
        this.yearControl.valueChanges
            .pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_5__["takeUntil"])(this.componentDestroyed))
            .subscribe(function (y) {
            _this.curve.year = y;
            _this.updateCriteria();
        });
        setTimeout(function () { return _this.updateCriteria(); });
    };
    CurveControlComponent.prototype.updateCriteria = function () {
        this.criteria = {
            years: this.curve.year ? [this.curve.year] : [],
            stationIds: this.selection.getStationIds()
        };
    };
    CurveControlComponent.prototype.ngOnChanges = function (changes) {
        if (changes.disabled && this.yearControl) {
            if (changes.disabled.currentValue) {
                this.yearControl.disable();
            }
            else {
                this.yearControl.enable();
            }
        }
    };
    Object.defineProperty(CurveControlComponent.prototype, "speciesInputDisabled", {
        get: function () {
            return this.disabled || !this.curve.year;
        },
        enumerable: true,
        configurable: true
    });
    __decorate([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Input"])(),
        __metadata("design:type", Boolean)
    ], CurveControlComponent.prototype, "gatherColor", void 0);
    __decorate([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Input"])(),
        __metadata("design:type", Boolean)
    ], CurveControlComponent.prototype, "required", void 0);
    __decorate([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Input"])(),
        __metadata("design:type", Boolean)
    ], CurveControlComponent.prototype, "disabled", void 0);
    __decorate([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Input"])(),
        __metadata("design:type", _activity_curves_selection__WEBPACK_IMPORTED_MODULE_4__["ActivityCurvesSelection"])
    ], CurveControlComponent.prototype, "selection", void 0);
    __decorate([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Input"])(),
        __metadata("design:type", _activity_curve__WEBPACK_IMPORTED_MODULE_3__["ActivityCurve"])
    ], CurveControlComponent.prototype, "curve", void 0);
    __decorate([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Output"])(),
        __metadata("design:type", Object)
    ], CurveControlComponent.prototype, "onSpeciesChange", void 0);
    __decorate([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Output"])(),
        __metadata("design:type", Object)
    ], CurveControlComponent.prototype, "onMetricChange", void 0);
    CurveControlComponent = __decorate([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Component"])({
            selector: 'curve-selection-control',
            template: "\n    <mat-form-field class=\"year-input\">\n        <mat-select [placeholder]=\"'Year'+(required ? ' *':'')\" [formControl]=\"yearControl\">\n            <mat-option *ngFor=\"let y of validYears\" [value]=\"y\">{{y}}</mat-option>\n        </mat-select>\n        <mat-error *ngIf=\"yearControl.errors && yearControl.errors.required\">Year is required</mat-error>\n    </mat-form-field>\n\n    <higher-species-phenophase-input\n        [gatherColor]=\"gatherColor\"\n        [selection]=\"selection\"\n        [criteria]=\"criteria\"\n        [(plot)]=\"curve\"\n        [disabled]=\"speciesInputDisabled\"\n        [required]=\"required\"\n        (plotChange)=\"onSpeciesChange.next($event)\">\n    </higher-species-phenophase-input>\n\n    <mat-form-field class=\"metric-input\">\n        <mat-select placeholder=\"Metric\" [(ngModel)]=\"metric\" [disabled]=\"!curve.validMetrics.length\" [disabled]=\"disabled\">\n            <mat-option *ngFor=\"let m of curve.validMetrics\" [value]=\"m\">{{m.label}}</mat-option>\n        </mat-select>\n    </mat-form-field>\n    ",
            styles: ["\n        .year-input {\n            width: 75px;\n        }\n        .metric-input {\n            width: 255px;\n        }\n    "]
        })
    ], CurveControlComponent);
    return CurveControlComponent;
}(_common__WEBPACK_IMPORTED_MODULE_2__["MonitorsDestroy"]));



/***/ }),

/***/ "../npn/common/src/lib/visualizations/activity-curves/index.ts":
/*!*********************************************************************!*\
  !*** ../npn/common/src/lib/visualizations/activity-curves/index.ts ***!
  \*********************************************************************/
/*! exports provided: ActivityCurve, INTERPOLATE, ACTIVITY_CURVE_KINGDOM_METRICS, ActivityFrequency, ACTIVITY_FREQUENCY_MONTHLY, ACTIVITY_FREQUENCY_BIWEEKLY, ACTIVITY_FREQUENCY_WEEKLY, ACTIVITY_FREQUENCIES, ActivityCurvesSelection, ActivityCurvesSelectionFactory, ActivityCurvesComponent, ACTIVITY_CURVES_INTERPOLATES, ActivityCurvesControlComponent, CurveControlComponent */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _public_api__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./public_api */ "../npn/common/src/lib/visualizations/activity-curves/public_api.ts");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "ActivityCurve", function() { return _public_api__WEBPACK_IMPORTED_MODULE_0__["ActivityCurve"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "INTERPOLATE", function() { return _public_api__WEBPACK_IMPORTED_MODULE_0__["INTERPOLATE"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "ACTIVITY_CURVE_KINGDOM_METRICS", function() { return _public_api__WEBPACK_IMPORTED_MODULE_0__["ACTIVITY_CURVE_KINGDOM_METRICS"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "ActivityFrequency", function() { return _public_api__WEBPACK_IMPORTED_MODULE_0__["ActivityFrequency"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "ACTIVITY_FREQUENCY_MONTHLY", function() { return _public_api__WEBPACK_IMPORTED_MODULE_0__["ACTIVITY_FREQUENCY_MONTHLY"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "ACTIVITY_FREQUENCY_BIWEEKLY", function() { return _public_api__WEBPACK_IMPORTED_MODULE_0__["ACTIVITY_FREQUENCY_BIWEEKLY"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "ACTIVITY_FREQUENCY_WEEKLY", function() { return _public_api__WEBPACK_IMPORTED_MODULE_0__["ACTIVITY_FREQUENCY_WEEKLY"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "ACTIVITY_FREQUENCIES", function() { return _public_api__WEBPACK_IMPORTED_MODULE_0__["ACTIVITY_FREQUENCIES"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "ActivityCurvesSelection", function() { return _public_api__WEBPACK_IMPORTED_MODULE_0__["ActivityCurvesSelection"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "ActivityCurvesSelectionFactory", function() { return _public_api__WEBPACK_IMPORTED_MODULE_0__["ActivityCurvesSelectionFactory"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "ActivityCurvesComponent", function() { return _public_api__WEBPACK_IMPORTED_MODULE_0__["ActivityCurvesComponent"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "ACTIVITY_CURVES_INTERPOLATES", function() { return _public_api__WEBPACK_IMPORTED_MODULE_0__["ACTIVITY_CURVES_INTERPOLATES"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "ActivityCurvesControlComponent", function() { return _public_api__WEBPACK_IMPORTED_MODULE_0__["ActivityCurvesControlComponent"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "CurveControlComponent", function() { return _public_api__WEBPACK_IMPORTED_MODULE_0__["CurveControlComponent"]; });




/***/ }),

/***/ "../npn/common/src/lib/visualizations/activity-curves/public_api.ts":
/*!**************************************************************************!*\
  !*** ../npn/common/src/lib/visualizations/activity-curves/public_api.ts ***!
  \**************************************************************************/
/*! exports provided: ActivityCurve, INTERPOLATE, ACTIVITY_CURVE_KINGDOM_METRICS, ActivityFrequency, ACTIVITY_FREQUENCY_MONTHLY, ACTIVITY_FREQUENCY_BIWEEKLY, ACTIVITY_FREQUENCY_WEEKLY, ACTIVITY_FREQUENCIES, ActivityCurvesSelection, ActivityCurvesSelectionFactory, ActivityCurvesComponent, ACTIVITY_CURVES_INTERPOLATES, ActivityCurvesControlComponent, CurveControlComponent */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _activity_curve__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./activity-curve */ "../npn/common/src/lib/visualizations/activity-curves/activity-curve.ts");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "ActivityCurve", function() { return _activity_curve__WEBPACK_IMPORTED_MODULE_0__["ActivityCurve"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "INTERPOLATE", function() { return _activity_curve__WEBPACK_IMPORTED_MODULE_0__["INTERPOLATE"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "ACTIVITY_CURVE_KINGDOM_METRICS", function() { return _activity_curve__WEBPACK_IMPORTED_MODULE_0__["ACTIVITY_CURVE_KINGDOM_METRICS"]; });

/* harmony import */ var _activity_curves_selection__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./activity-curves-selection */ "../npn/common/src/lib/visualizations/activity-curves/activity-curves-selection.ts");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "ActivityFrequency", function() { return _activity_curves_selection__WEBPACK_IMPORTED_MODULE_1__["ActivityFrequency"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "ACTIVITY_FREQUENCY_MONTHLY", function() { return _activity_curves_selection__WEBPACK_IMPORTED_MODULE_1__["ACTIVITY_FREQUENCY_MONTHLY"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "ACTIVITY_FREQUENCY_BIWEEKLY", function() { return _activity_curves_selection__WEBPACK_IMPORTED_MODULE_1__["ACTIVITY_FREQUENCY_BIWEEKLY"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "ACTIVITY_FREQUENCY_WEEKLY", function() { return _activity_curves_selection__WEBPACK_IMPORTED_MODULE_1__["ACTIVITY_FREQUENCY_WEEKLY"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "ACTIVITY_FREQUENCIES", function() { return _activity_curves_selection__WEBPACK_IMPORTED_MODULE_1__["ACTIVITY_FREQUENCIES"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "ActivityCurvesSelection", function() { return _activity_curves_selection__WEBPACK_IMPORTED_MODULE_1__["ActivityCurvesSelection"]; });

/* harmony import */ var _activity_curves_selection_factory_service__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./activity-curves-selection-factory.service */ "../npn/common/src/lib/visualizations/activity-curves/activity-curves-selection-factory.service.ts");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "ActivityCurvesSelectionFactory", function() { return _activity_curves_selection_factory_service__WEBPACK_IMPORTED_MODULE_2__["ActivityCurvesSelectionFactory"]; });

/* harmony import */ var _activity_curves_component__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./activity-curves.component */ "../npn/common/src/lib/visualizations/activity-curves/activity-curves.component.ts");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "ActivityCurvesComponent", function() { return _activity_curves_component__WEBPACK_IMPORTED_MODULE_3__["ActivityCurvesComponent"]; });

/* harmony import */ var _activity_curves_control_component__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./activity-curves-control.component */ "../npn/common/src/lib/visualizations/activity-curves/activity-curves-control.component.ts");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "ACTIVITY_CURVES_INTERPOLATES", function() { return _activity_curves_control_component__WEBPACK_IMPORTED_MODULE_4__["ACTIVITY_CURVES_INTERPOLATES"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "ActivityCurvesControlComponent", function() { return _activity_curves_control_component__WEBPACK_IMPORTED_MODULE_4__["ActivityCurvesControlComponent"]; });

/* harmony import */ var _curve_control_component__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./curve-control.component */ "../npn/common/src/lib/visualizations/activity-curves/curve-control.component.ts");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "CurveControlComponent", function() { return _curve_control_component__WEBPACK_IMPORTED_MODULE_5__["CurveControlComponent"]; });









/***/ }),

/***/ "../npn/common/src/lib/visualizations/agdd-time-series/agdd-time-series-selection.factory.ts":
/*!***************************************************************************************************!*\
  !*** ../npn/common/src/lib/visualizations/agdd-time-series/agdd-time-series-selection.factory.ts ***!
  \***************************************************************************************************/
/*! exports provided: AgddTimeSeriesSelectionFactory */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "AgddTimeSeriesSelectionFactory", function() { return AgddTimeSeriesSelectionFactory; });
/* harmony import */ var _npn_common_common__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @npn/common/common */ "../npn/common/src/lib/common/index.ts");
/* harmony import */ var _agdd_time_series_selection__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./agdd-time-series-selection */ "../npn/common/src/lib/visualizations/agdd-time-series/agdd-time-series-selection.ts");
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @angular/core */ "../../node_modules/@angular/core/fesm5/core.js");
/* harmony import */ var _npn_common_gridded__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @npn/common/gridded */ "../npn/common/src/lib/gridded/index.ts");
var __decorate = (undefined && undefined.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (undefined && undefined.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};




var AgddTimeSeriesSelectionFactory = /** @class */ (function () {
    function AgddTimeSeriesSelectionFactory(layerService, serviceUtils) {
        this.layerService = layerService;
        this.serviceUtils = serviceUtils;
    }
    AgddTimeSeriesSelectionFactory.prototype.newSelection = function () {
        return new _agdd_time_series_selection__WEBPACK_IMPORTED_MODULE_1__["AgddTimeSeriesSelection"](this.layerService, this.serviceUtils);
    };
    AgddTimeSeriesSelectionFactory = __decorate([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_2__["Injectable"])(),
        __metadata("design:paramtypes", [_npn_common_gridded__WEBPACK_IMPORTED_MODULE_3__["NpnMapLayerService"], _npn_common_common__WEBPACK_IMPORTED_MODULE_0__["NpnServiceUtils"]])
    ], AgddTimeSeriesSelectionFactory);
    return AgddTimeSeriesSelectionFactory;
}());



/***/ }),

/***/ "../npn/common/src/lib/visualizations/agdd-time-series/agdd-time-series-selection.ts":
/*!*******************************************************************************************!*\
  !*** ../npn/common/src/lib/visualizations/agdd-time-series/agdd-time-series-selection.ts ***!
  \*******************************************************************************************/
/*! exports provided: CATEGORY_PESTS, CATEGORY_TEMP_ACCUMULATIONS, DATA_FUNC, AGDD_COLORS, DEFAULT_AGDD_LAYER_CATEGORY, DEFAULT_AGDD_LAYER_NAME, AgddTimeSeriesSelection */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "CATEGORY_PESTS", function() { return CATEGORY_PESTS; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "CATEGORY_TEMP_ACCUMULATIONS", function() { return CATEGORY_TEMP_ACCUMULATIONS; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "DATA_FUNC", function() { return DATA_FUNC; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "AGDD_COLORS", function() { return AGDD_COLORS; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "DEFAULT_AGDD_LAYER_CATEGORY", function() { return DEFAULT_AGDD_LAYER_CATEGORY; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "DEFAULT_AGDD_LAYER_NAME", function() { return DEFAULT_AGDD_LAYER_NAME; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "AgddTimeSeriesSelection", function() { return AgddTimeSeriesSelection; });
/* harmony import */ var _vis_selection__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../vis-selection */ "../npn/common/src/lib/visualizations/vis-selection.ts");
/* harmony import */ var d3__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! d3 */ "../../node_modules/d3/index.js");
/* harmony import */ var _npn_common_gridded__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @npn/common/gridded */ "../npn/common/src/lib/gridded/index.ts");
/* harmony import */ var rxjs__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! rxjs */ "../../node_modules/rxjs/_esm5/index.js");
var __extends = (undefined && undefined.__extends) || (function () {
    var extendStatics = Object.setPrototypeOf ||
        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __assign = (undefined && undefined.__assign) || Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
        s = arguments[i];
        for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
            t[p] = s[p];
    }
    return t;
};
var __decorate = (undefined && undefined.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (undefined && undefined.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};




var CATEGORY_PESTS = _npn_common_gridded__WEBPACK_IMPORTED_MODULE_2__["CATEGORY_PEST"];
var CATEGORY_TEMP_ACCUMULATIONS = 'Daily Temperature Accumulations';
var DATE_FORMAT = d3__WEBPACK_IMPORTED_MODULE_1__["timeFormat"]('%Y-%m-%d');
var DATA_FUNC = function (d) { return !!d.agdd ? d.agdd : d.point_value; };
var DOY_MAP = function (data) { return data.reduce(function (map, d) {
    map[d.doy] = DATA_FUNC(d);
    return map;
}, {}); };
var COERCE_TIME_SERIES_RESPONSE = function (data) {
    if (data && Array.isArray(data.timeSeries)) { // pointTimeSeries response
        return data.timeSeries;
    }
    if (data && !Array.isArray(data)) {
        console.warn('HANDLE_TIME_SERIES_RESPONSE data not array');
        return [];
    }
    return data;
};
var AGDD_COLORS = {
    average: 'black',
    selected: 'blue',
    previous: 'orange',
    forecast: 'red'
};
var GDD_AGDD_LAYER_NAME = 'gdd:agdd';
var DEFAULT_AGDD_LAYER_CATEGORY = CATEGORY_TEMP_ACCUMULATIONS;
var DEFAULT_AGDD_LAYER_NAME = GDD_AGDD_LAYER_NAME;
var AgddTimeSeriesSelection = /** @class */ (function (_super) {
    __extends(AgddTimeSeriesSelection, _super);
    function AgddTimeSeriesSelection(layerService, serviceUtils) {
        var _this = _super.call(this) || this;
        _this.layerService = layerService;
        _this.serviceUtils = serviceUtils;
        _this.$class = 'AgddTimeSeriesSelection';
        _this._layerCategory = DEFAULT_AGDD_LAYER_CATEGORY;
        _this._layerName = DEFAULT_AGDD_LAYER_NAME;
        _this._showLastYear = false;
        _this.thresholdCeiling = 20000;
        return _this;
    }
    AgddTimeSeriesSelection.prototype.isValid = function () {
        return !!this._layerName && !!this.latLng && this.latLng.length === 2;
    };
    AgddTimeSeriesSelection.prototype.monitorLayerChange = function () {
        if (!this._monitorLayerChange) {
            this._monitorLayerChange = new rxjs__WEBPACK_IMPORTED_MODULE_3__["Subject"]();
        }
        return this._monitorLayerChange;
    };
    AgddTimeSeriesSelection.prototype.endMonitorLayerChange = function () {
        if (this._monitorLayerChange) {
            this._monitorLayerChange.complete();
            this._monitorLayerChange = undefined;
        }
    };
    Object.defineProperty(AgddTimeSeriesSelection.prototype, "layerName", {
        get: function () { return this._layerName; },
        set: function (l) {
            this._layerName = l;
            if (this.layer && this.layer.layerName !== l) {
                this.layer.off(); // shouldn't be necessary
                this._getLayer = undefined;
                this.layer = undefined;
                this.legend = null;
                this._start = undefined;
                this._end = undefined;
                this._selectedData = undefined;
                this._averageData = undefined;
                this._previousData = undefined;
                this._timeSeriesUrl = undefined;
                this._selectedParamsBasis = undefined;
                // let the layer initially dictate threshold
                delete this._threshold;
            }
            if (this._monitorLayerChange) {
                this._monitorLayerChange.next(this._layerName);
            }
            this.update();
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(AgddTimeSeriesSelection.prototype, "layerCategory", {
        get: function () { return this._layerCategory; },
        set: function (s) {
            this._layerCategory = s;
            //this.layerName = null;
        },
        enumerable: true,
        configurable: true
    });
    AgddTimeSeriesSelection.prototype.updateExtentValue = function () {
        var _this = this;
        if (this.layer && this._extentValue) {
            var newValue = this.layer.extent.values.reduce(function (found, v) { return found || (v.value === _this._extentValue ? v : undefined); }, undefined);
            if (newValue && this.layer.extent.current !== newValue) {
                this.layer.extent.current = newValue;
                if (this.layer.getMap()) {
                    this.layer.bounce();
                }
            }
        }
    };
    Object.defineProperty(AgddTimeSeriesSelection.prototype, "extentValue", {
        get: function () { return this._extentValue; },
        set: function (v) {
            // technically changes to extent that result in a year
            // change require an update, but during population
            // of layer/extent, etc. the selection should be paused
            // "end" date changed as a result.
            if (v !== this._extentValue) {
                this._extentValue = v;
                this._start = undefined;
                this._end = undefined;
                this._selectedData = undefined;
                this._averageData = undefined;
                this._previousData = undefined;
                this.updateExtentValue();
                this.update();
            }
        },
        enumerable: true,
        configurable: true
    });
    AgddTimeSeriesSelection.prototype.getLayer = function () {
        var _this = this;
        if (!this.layerName) {
            return Promise.reject();
        }
        if (!this._getLayer) {
            this._getLayer = this.layerService.newLayer(null, this.layerName)
                .then(function (layer) { return _this.layer = layer; })
                .then(function (layer) {
                _this.updateExtentValue();
                // on aside get legend but still return layer
                layer.getLegend().then(function (l) { return _this.legend = l; });
                return layer;
            });
        }
        return this._getLayer;
    };
    Object.defineProperty(AgddTimeSeriesSelection.prototype, "baseTemp", {
        /**
         * The base temperature value for the underlying layer.
         * This code assumes that only a certain subset of layers
         * are suitable for this visualization.
         */
        get: function () {
            var base = 32;
            if (this.layer) {
                base = this.layer.layerBasis === GDD_AGDD_LAYER_NAME ? 32 : 50;
                var meta = this.layer.layerDefinition.meta;
                // special cases
                if (meta && meta.agddBaseTemp) {
                    base = meta.agddBaseTemp;
                }
            }
            return base;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(AgddTimeSeriesSelection.prototype, "end", {
        /**
         * Fetches the end date for pulling the time series.
         * If the current layer extent is for this year then
         * the end will be the maximum available extent date
         * otherwise 12/31 of the extent year.
         */
        get: function () {
            if (!this._end) {
                var layer = this.layer;
                if (!layer) {
                    return new Date((new Date).getFullYear(), 11, 31);
                }
                var current = layer.extent.current.date;
                var extentYear = current.getFullYear();
                if (extentYear === (new Date()).getFullYear()) {
                    // end is the maximum extent
                    this._end = new Date(layer.extent.values[layer.extent.values.length - 1].date.getTime());
                }
                else {
                    // dec 31 of the extent year
                    this._end = new Date(extentYear, 11, 31);
                }
            }
            return this._end;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(AgddTimeSeriesSelection.prototype, "start", {
        get: function () {
            var layer = this.layer;
            if (!layer) {
                // don't cache
                return new Date(this.end.getFullYear(), 0, 1);
            }
            return this._start || (this._start = new Date(this.end.getFullYear(), 0, 1));
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(AgddTimeSeriesSelection.prototype, "timeSeriesUrl", {
        get: function () {
            if (!this._timeSeriesUrl) {
                this._timeSeriesUrl = this.layer instanceof _npn_common_gridded__WEBPACK_IMPORTED_MODULE_2__["PestMapLayer"]
                    ? this.layer.getTimeSeriesUrl()
                    : Promise.resolve(this.serviceUtils.dataApiUrl("/v0/agdd/simple/pointTimeSeries"));
            }
            return this._timeSeriesUrl;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(AgddTimeSeriesSelection.prototype, "show30YearAverage", {
        get: function () {
            if (this.layer) {
                var meta = this.layer.layerDefinition.meta;
                if (meta && typeof (meta.agddSupports30YearAvg) === 'boolean') {
                    return meta.agddSupports30YearAvg;
                }
            }
            return true;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(AgddTimeSeriesSelection.prototype, "threshold", {
        get: function () {
            if (this._threshold) {
                return this._threshold;
            }
            if (this.layer) {
                var meta = this.layer.layerDefinition.meta;
                if (meta && typeof (meta.agddDefaultThreshold) === 'number') {
                    return meta.agddDefaultThreshold;
                }
            }
            return 1000;
        },
        set: function (t) {
            this._threshold = t;
            this.redraw();
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(AgddTimeSeriesSelection.prototype, "latLng", {
        get: function () { return this._latLng; },
        set: function (ltlng) {
            this._latLng = ltlng;
            this._selectedData = undefined;
            this._averageData = undefined;
            this._previousData = undefined;
            this.update();
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(AgddTimeSeriesSelection.prototype, "lastYearValid", {
        /** Whether or not the range of the time series can support previous data. */
        get: function () {
            return (this.start.getFullYear() - 1) >= 2016; // time series data starts in 2016
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(AgddTimeSeriesSelection.prototype, "showLastYear", {
        get: function () {
            if (this.layer) {
                return this.lastYearValid ? this._showLastYear : false;
            }
            return this._showLastYear;
        },
        set: function (b) {
            this._showLastYear = b;
            this.update();
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(AgddTimeSeriesSelection.prototype, "doy", {
        // controls visually how much of the year is drawn on the visualization
        // e.g. allows for zooming in on the beginning of a year
        get: function () { return this._doy || 365; },
        set: function (d) {
            this._doy = d;
            // this is kind of a workaround but redraws update
            // the bounds of the axes and for some reason inconsistently
            // lines go wonky, resize re-writes the entire visualization
            // and the problem does not occur then
            // doing this since not sufficient time to better understand.
            //this.redraw();
            this.resize();
        },
        enumerable: true,
        configurable: true
    });
    AgddTimeSeriesSelection.prototype.averageData = function () {
        if (!this._averageData) {
            var _a = this.latLng, latitude = _a[0], longitude = _a[1];
            // this doesn't feel quite robust enough
            var layer = this.baseTemp === 32 ? 'gdd:30yr_avg_agdd' : 'gdd:30yr_avg_agdd_50f';
            this._averageData = this.serviceUtils.get(this.serviceUtils.apiUrl('/npn_portal/stations/getTimeSeries.json'), { latitude: latitude, longitude: longitude, layer: layer })
                .then(COERCE_TIME_SERIES_RESPONSE)
                .then(function (data) { return ({
                data: data,
                doyMap: DOY_MAP(data),
                year: '30-year Average',
                color: AGDD_COLORS.average
            }); });
        }
        return this._averageData;
    };
    Object.defineProperty(AgddTimeSeriesSelection.prototype, "selectedParamsBasis", {
        get: function () {
            var _this = this;
            if (!this._selectedParamsBasis) {
                return this._selectedParamsBasis = this.layer instanceof _npn_common_gridded__WEBPACK_IMPORTED_MODULE_2__["PestMapLayer"]
                    ? this.layer.getPestDescription()
                        .then(function (pest) {
                        var lowerThreshold = pest.lowerThreshold, upperThreshold = pest.upperThreshold, base = pest.base;
                        lowerThreshold = lowerThreshold || 0;
                        upperThreshold = upperThreshold || 0;
                        base = base || lowerThreshold || _this.baseTemp;
                        return { lowerThreshold: lowerThreshold, upperThreshold: upperThreshold, base: base };
                    })
                    : Promise.resolve({
                        upperThreshold: 0,
                        lowerThreshold: 0,
                        base: this.baseTemp
                    });
            }
            return this._selectedParamsBasis;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(AgddTimeSeriesSelection.prototype, "selectedParams", {
        get: function () {
            var _this = this;
            var _a = this.latLng, latitude = _a[0], longitude = _a[1];
            var startDate = DATE_FORMAT(this.start);
            var start_date = startDate;
            var endDate = DATE_FORMAT(this.end);
            var end_date = endDate;
            return Promise.all([
                this.timeSeriesUrl,
                this.selectedParamsBasis
            ]).then(function (results) {
                var timeSeriesUrl = results[0], paramsBasis = results[1];
                var lowerThreshold = paramsBasis.lowerThreshold, upperThreshold = paramsBasis.upperThreshold, base = paramsBasis.base;
                // NOTE: some pests have a "base" but lowerThreshold is always being used here.
                // e.g. Bronze Birch Borer, Emerald Ash Borer
                return {
                    layer: _this.layer.layerBasis,
                    latitude: latitude, longitude: longitude,
                    climateProvider: 'NCEP',
                    temperatureUnit: 'fahrenheit',
                    timeSeriesUrl: timeSeriesUrl,
                    startDate: startDate, start_date: start_date,
                    endDate: endDate, end_date: end_date,
                    base: base,
                    lowerThreshold: lowerThreshold,
                    upperThreshold: upperThreshold
                };
            });
        },
        enumerable: true,
        configurable: true
    });
    AgddTimeSeriesSelection.prototype.selectedData = function () {
        var _this = this;
        if (!this._selectedData) {
            this._selectedData = Promise.all([
                this.timeSeriesUrl,
                this.selectedParams
            ]).then(function (results) {
                var timeSeriesUrl = results[0], selectedParams = results[1];
                return _this.serviceUtils.get(timeSeriesUrl, selectedParams)
                    .then(COERCE_TIME_SERIES_RESPONSE)
                    .then(function (data) { return ({
                    data: data,
                    doyMap: DOY_MAP(data),
                    year: _this.start.getFullYear(),
                    color: AGDD_COLORS.selected
                }); });
            });
        }
        return this._selectedData;
    };
    AgddTimeSeriesSelection.prototype.previousData = function () {
        var _this = this;
        if (!this._previousData) {
            var lastYear_1 = this.start.getFullYear() - 1;
            var start = new Date(lastYear_1, 0, 1);
            var end = new Date(lastYear_1, 11, 31);
            var startDate_1 = DATE_FORMAT(start);
            var start_date_1 = startDate_1;
            var endDate_1 = DATE_FORMAT(end);
            var end_date_1 = endDate_1;
            this._previousData = Promise.all([
                this.timeSeriesUrl,
                this.selectedParams
            ]).then(function (results) {
                var timeSeriesUrl = results[0], selectedParams = results[1];
                var params = __assign({}, selectedParams, { startDate: startDate_1, start_date: start_date_1, endDate: endDate_1, end_date: end_date_1 });
                return _this.serviceUtils.get(timeSeriesUrl, params)
                    .then(COERCE_TIME_SERIES_RESPONSE)
                    .then(function (data) { return ({
                    data: data,
                    doyMap: DOY_MAP(data),
                    year: lastYear_1,
                    color: AGDD_COLORS.previous
                }); });
            });
        }
        return this._previousData;
    };
    AgddTimeSeriesSelection.prototype.data = function () {
        var _this = this;
        this.working = true;
        return this.getLayer()
            .then(function (layer) {
            //this._latLng = [25.240821110543152,-80.56457375588832]; // TODO remove dev values.
            //this._showLastYear = true;
            var promises = [_this.selectedData()];
            if (_this.show30YearAverage) {
                promises.push(_this.averageData());
            }
            if (_this.showLastYear && _this.lastYearValid) {
                promises.push(_this.previousData());
            }
            return Promise.all(promises)
                .then(function (results) {
                var selected = results[0], average = results[1], previous = results[2];
                var forecast;
                if (_this.end.getFullYear() === (new Date()).getFullYear()) { // this may always be true depending on "end"
                    var todayFormatted_1 = DATE_FORMAT(new Date());
                    selected = __assign({}, selected, { data: selected.data.reduce(function (arr, d) {
                            if (!forecast) {
                                arr.push(d);
                                if (todayFormatted_1 === d.date) {
                                    // include the last day of the selected range in the forecast so the two connect on the graph
                                    forecast = {
                                        data: [d],
                                        year: _this.start.getFullYear() + " forecast",
                                        color: AGDD_COLORS.forecast
                                    };
                                }
                            }
                            else {
                                forecast.data.push(d);
                            }
                            return arr;
                        }, []) });
                    if (forecast) {
                        forecast.doyMap = DOY_MAP(forecast.data);
                    }
                }
                _this.working = false;
                return { average: average, selected: selected, forecast: forecast, previous: previous };
            });
        });
    };
    __decorate([
        Object(_vis_selection__WEBPACK_IMPORTED_MODULE_0__["selectionProperty"])(),
        __metadata("design:type", String)
    ], AgddTimeSeriesSelection.prototype, "$class", void 0);
    __decorate([
        Object(_vis_selection__WEBPACK_IMPORTED_MODULE_0__["selectionProperty"])(),
        __metadata("design:type", Array)
    ], AgddTimeSeriesSelection.prototype, "_latLng", void 0);
    __decorate([
        Object(_vis_selection__WEBPACK_IMPORTED_MODULE_0__["selectionProperty"])(),
        __metadata("design:type", String)
    ], AgddTimeSeriesSelection.prototype, "_layerCategory", void 0);
    __decorate([
        Object(_vis_selection__WEBPACK_IMPORTED_MODULE_0__["selectionProperty"])(),
        __metadata("design:type", String)
    ], AgddTimeSeriesSelection.prototype, "_layerName", void 0);
    __decorate([
        Object(_vis_selection__WEBPACK_IMPORTED_MODULE_0__["selectionProperty"])(),
        __metadata("design:type", String)
    ], AgddTimeSeriesSelection.prototype, "_extentValue", void 0);
    __decorate([
        Object(_vis_selection__WEBPACK_IMPORTED_MODULE_0__["selectionProperty"])(),
        __metadata("design:type", Boolean)
    ], AgddTimeSeriesSelection.prototype, "_showLastYear", void 0);
    __decorate([
        Object(_vis_selection__WEBPACK_IMPORTED_MODULE_0__["selectionProperty"])(),
        __metadata("design:type", Number)
    ], AgddTimeSeriesSelection.prototype, "_threshold", void 0);
    __decorate([
        Object(_vis_selection__WEBPACK_IMPORTED_MODULE_0__["selectionProperty"])(),
        __metadata("design:type", Number)
    ], AgddTimeSeriesSelection.prototype, "_doy", void 0);
    return AgddTimeSeriesSelection;
}(_vis_selection__WEBPACK_IMPORTED_MODULE_0__["VisSelection"]));



/***/ }),

/***/ "../npn/common/src/lib/visualizations/agdd-time-series/agdd-time-series.component.ts":
/*!*******************************************************************************************!*\
  !*** ../npn/common/src/lib/visualizations/agdd-time-series/agdd-time-series.component.ts ***!
  \*******************************************************************************************/
/*! exports provided: AgddTimeSeriesComponent */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "AgddTimeSeriesComponent", function() { return AgddTimeSeriesComponent; });
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @angular/core */ "../../node_modules/@angular/core/fesm5/core.js");
/* harmony import */ var _svg_visualization_base_component__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../svg-visualization-base.component */ "../npn/common/src/lib/visualizations/svg-visualization-base.component.ts");
/* harmony import */ var _agdd_time_series_selection__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./agdd-time-series-selection */ "../npn/common/src/lib/visualizations/agdd-time-series/agdd-time-series-selection.ts");
/* harmony import */ var _angular_flex_layout__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @angular/flex-layout */ "../../node_modules/@angular/flex-layout/esm5/flex-layout.es5.js");
/* harmony import */ var _vis_selection__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../vis-selection */ "../npn/common/src/lib/visualizations/vis-selection.ts");
/* harmony import */ var d3_axis__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! d3-axis */ "../../node_modules/d3-axis/index.js");
/* harmony import */ var d3_scale__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! d3-scale */ "../../node_modules/d3-scale/index.js");
/* harmony import */ var d3__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! d3 */ "../../node_modules/d3/index.js");
/* harmony import */ var _angular_common__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! @angular/common */ "../../node_modules/@angular/common/fesm5/common.js");
var __extends = (undefined && undefined.__extends) || (function () {
    var extendStatics = Object.setPrototypeOf ||
        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __decorate = (undefined && undefined.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (undefined && undefined.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};









var DEG_F = '\u00B0' + 'F';
var D3_DATE_FMT = d3__WEBPACK_IMPORTED_MODULE_7__["timeFormat"]('%m/%d');
var ROOT_DATE = new Date(2010, 0);
var DATE_FMT = function (d) {
    var time = ((d - 1) * _vis_selection__WEBPACK_IMPORTED_MODULE_4__["ONE_DAY_MILLIS"]) + ROOT_DATE.getTime(), date = new Date(time);
    return D3_DATE_FMT(date);
};
var AgddTimeSeriesComponent = /** @class */ (function (_super) {
    __extends(AgddTimeSeriesComponent, _super);
    function AgddTimeSeriesComponent(rootElement, media, decimalPipe) {
        var _this = _super.call(this, rootElement, media) || this;
        _this.rootElement = rootElement;
        _this.media = media;
        _this.decimalPipe = decimalPipe;
        _this.filename = 'agdd-time-series.png';
        _this.margins = { top: 80, left: 80, right: 30, bottom: 60 };
        return _this;
    }
    Object.defineProperty(AgddTimeSeriesComponent.prototype, "yMax", {
        get: function () { return this._yMax || 20000; },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(AgddTimeSeriesComponent.prototype, "line", {
        get: function () { return this._line || (function () { }); },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(AgddTimeSeriesComponent.prototype, "data", {
        get: function () { return this._data || {}; },
        enumerable: true,
        configurable: true
    });
    ;
    AgddTimeSeriesComponent.prototype.removeLines = function () {
        var _a = this, data = _a.data, chart = _a.chart;
        chart.selectAll('path.gdd').remove();
        Object.keys(data)
            .filter(function (key) { return !!data[key]; })
            .forEach(function (key) { return delete data[key].plotted; });
        this.updateLegend();
    };
    AgddTimeSeriesComponent.prototype.addLines = function () {
        var _a = this, data = _a.data, chart = _a.chart, line = _a.line;
        Object.keys(data)
            .filter(function (key) { return !!data[key]; })
            .forEach(function (key) {
            chart.append('path')
                .attr('class', 'gdd ' + key)
                .attr('fill', 'none')
                .attr('stroke', data[key].color)
                .attr('stroke-linejoin', 'round')
                .attr('stroke-linecap', 'round')
                .attr('stroke-width', 1.5)
                .attr('d', line(data[key].filtered || data[key].data));
            data[key].plotted = true;
        });
        this.updateLegend();
    };
    AgddTimeSeriesComponent.prototype.updateTitle = function () {
        //console.log('AGDD: updateTitle');
        var _a = this, chart = _a.chart, sizing = _a.sizing, selection = _a.selection;
        var title = chart.select('.chart-title');
        title.selectAll('*').remove();
        title.append('text')
            .attr('y', '0')
            .attr('dy', '-3em')
            .attr('x', (sizing.width / 2))
            .style('text-anchor', 'middle')
            .style('font-size', '18px').text('Accumulated Growing Degree Days');
        if (selection.latLng && selection.latLng.length === 2) {
            var _b = selection.latLng, lat = _b[0], lng = _b[1];
            title.append('text')
                .attr('y', '0')
                .attr('dy', '-1.8em')
                .attr('x', (sizing.width / 2))
                .style('text-anchor', 'middle')
                .style('font-size', '18px').text("(Lat: " + lat.toFixed(3) + ", Lon: " + lng.toFixed(3) + ") " + selection.baseTemp + DEG_F + " Base Temp");
        }
    };
    AgddTimeSeriesComponent.prototype.updateAxes = function () {
        // console.log('AGDD: updateAxes');
        this.removeLines();
        var _a = this, data = _a.data, chart = _a.chart, sizing = _a.sizing, y = _a.y, yAxis = _a.yAxis, x = _a.x, xAxis = _a.xAxis, selection = _a.selection;
        var yMax = this.yMax;
        var lineKeys = Object.keys(data).filter(function (key) { return !!data[key]; });
        if (lineKeys.length) {
            // calculate/re-calculate the y-axis domain so that the data fits nicely
            var maxes = lineKeys.reduce(function (arr, key) {
                arr.push(d3__WEBPACK_IMPORTED_MODULE_7__["max"]((data[key].filtered || data[key].data), _agdd_time_series_selection__WEBPACK_IMPORTED_MODULE_2__["DATA_FUNC"]));
                return arr;
            }, []);
            selection.thresholdCeiling = Math.round(yMax = d3__WEBPACK_IMPORTED_MODULE_7__["max"](maxes));
            yMax = yMax * 1.05;
            var doy_1 = selection.doy;
            // update x/y axis
            yAxis.scale(y.domain([0, yMax]));
            xAxis.scale(x.domain([1, doy_1]));
            // filter or unfilter the data depending on doy
            Object.keys(data)
                .filter(function (key) { return !!data[key]; })
                .forEach(function (key) { return data[key].filtered = doy_1 < 365
                ? data[key].filtered = data[key].data.filter(function (d) { return d.doy <= doy_1; })
                : undefined; });
            this.addLines();
            // update the position of the threshold line
            var yCoord = this.y(selection.threshold);
            this.thresholdLine
                .attr('y1', yCoord).attr('y2', yCoord)
                // hide the threshold line if it's off the axis
                .style('display', selection.threshold > selection.thresholdCeiling ? 'none' : null);
        }
        chart.selectAll('g .axis').remove();
        chart.append('g')
            .attr('class', 'y axis')
            .call(yAxis)
            .append('text')
            .attr('fill', '#000')
            .attr('transform', 'rotate(-90)')
            .attr('y', '0')
            .attr('dy', '-3.75em')
            .attr('x', -1 * (sizing.height / 2)) // looks odd but to move in the Y we need to change X because of transform
            .style('text-anchor', 'middle')
            .text('Accumulated Growing Degree Day Units (AGDDs)');
        chart.append('g')
            .attr('class', 'x axis')
            .attr('transform', 'translate(0,' + sizing.height + ')')
            .call(xAxis)
            .append('text')
            .attr('fill', '#000')
            .attr('y', '0')
            .attr('dy', '2.5em')
            .attr('x', (sizing.width / 2))
            .style('text-anchor', 'middle')
            .text('Date');
        this.commonUpdates();
    };
    AgddTimeSeriesComponent.prototype.updateLegend = function () {
        //console.log('AGDD: updateLegend');
        var chart = this.chart;
        chart.selectAll('g.legend').remove();
        var legend = chart.append('g')
            .attr('class', 'legend')
            .attr('transform', 'translate(30,-45)') // relative to the chart, not the svg
            .style('font-size', '1em');
        var rect = legend.append('rect')
            .style('fill', 'white')
            .style('stroke', 'black')
            .style('opacity', '0.8')
            .attr('width', 130)
            .attr('height', 60);
        var data = this.data, fontSize = 14, r = 5, vpad = 4, keys = ['average', 'selected', 'forecast', 'previous']; //Object.keys(data), hard coding to control order
        var plotCnt = keys.reduce(function (cnt, key) {
            var row;
            if (data[key] && data[key].plotted && (data[key].filtered || data[key].data).length) {
                row = legend.append('g')
                    .attr('class', 'legend-item ' + key)
                    .attr('transform', 'translate(10,' + (((cnt + 1) * fontSize) + (cnt * vpad)) + ')');
                row.append('circle')
                    .attr('r', r)
                    .attr('fill', data[key].color);
                row.append('text')
                    .style('font-size', fontSize + 'px')
                    .attr('x', (2 * r))
                    .attr('y', (r / 2))
                    .text(data[key].year);
                cnt++;
            }
            return cnt;
        }, 0);
        rect.style('display', plotCnt === 0 ? 'none' : null);
        if (plotCnt < 3) {
            rect.attr('height', 45);
        }
        else if (plotCnt > 3) {
            rect.attr('height', 80);
        }
    };
    AgddTimeSeriesComponent.prototype.hover = function () {
        var _this = this;
        var _a = this, svg = _a.svg, sizing = _a.sizing, x = _a.x, y = _a.y, yMax = _a.yMax;
        var self = this;
        var hover = svg.append('g')
            .attr('transform', 'translate(' + sizing.margin.left + ',' + sizing.margin.top + ')')
            .style('display', 'none');
        var hoverLine = hover.append('line')
            .attr('class', 'focus')
            .attr('fill', 'none')
            .attr('stroke', 'green')
            .attr('stroke-width', 1)
            .attr('x1', x(1))
            .attr('y1', y(0))
            .attr('x2', x(1))
            .attr('y2', y(yMax));
        var hoverInfoDy = '1.2em', hoverInfoX = 15, hoverInfo = hover.append('text')
            .attr('class', 'gdd-info')
            .attr('font-size', 16)
            .attr('y', 40), doyInfo = hoverInfo.append('tspan').attr('dy', '1em').attr('x', hoverInfoX), doyLabel = doyInfo.append('tspan').attr('class', 'gdd-label').text('DOY: '), doyValue = doyInfo.append('tspan').attr('class', 'gdd-value'), infoKeys = ['average', 'previous', 'selected', 'forecast'], infos = infoKeys.reduce(function (map, key) {
            map[key] = hoverInfo.append('tspan').attr('dy', hoverInfoDy).attr('x', hoverInfoX);
            return map;
        }, {}), infoLabels = infoKeys.reduce(function (map, key) {
            map[key] = infos[key]
                .append('tspan')
                .attr('class', 'gdd-label ' + key)
                .style('font-weight', 'bold')
                .style('fill', _agdd_time_series_selection__WEBPACK_IMPORTED_MODULE_2__["AGDD_COLORS"][key]);
            return map;
        }, {}), infoValues = infoKeys.reduce(function (map, key) {
            map[key] = infos[key].append('tspan').attr('class', 'gdd-value');
            return map;
        }, {}), infoDiffs = ['previous', 'forecast', 'selected'].reduce(function (map, key) {
            map[key] = infos[key].append('tspan').attr('class', 'gdd-diff');
            return map;
        }, {});
        function focusOff() {
            hover.style('display', 'none');
        }
        function focusOn() {
            hover.style('display', null);
        }
        var nuberFmt = function (n) { return _this.decimalPipe.transform(n, '1.0-0'); };
        // clear any "focus" values on existing data otherwise focus rings won't
        // show up after resize.
        infoKeys.filter(function (k) { return !!_this.data[k]; }).forEach(function (k) { return delete _this.data[k].focus; });
        function updateFocus() {
            var coords = d3__WEBPACK_IMPORTED_MODULE_7__["mouse"](this), data = self.data, xCoord = coords[0], doy = Math.round(x.invert(xCoord)), lineKeys = Object.keys(data).filter(function (k) { return !!data[k]; }), temps;
            hoverLine.attr('transform', 'translate(' + xCoord + ')');
            temps = lineKeys.reduce(function (map, key) {
                var temp;
                if (data[key].plotted) {
                    // get the value for doy
                    temp = data[key].doyMap[doy];
                    if (typeof (temp) !== 'undefined') {
                        map[key] = {
                            year: data[key].year,
                            gdd: temp
                        };
                        if (!data[key].focus) {
                            // create a focus ring for this line
                            data[key].focus = hover.append('circle')
                                .attr('r', 4.5)
                                .attr('fill', 'none')
                                .attr('stroke', 'steelblue');
                        }
                        data[key].focus
                            .style('display', null)
                            .attr('transform', 'translate(' + xCoord + ',' + y(temp) + ')');
                    }
                    else if (data[key].focus) {
                        // invalid doy, hide focus ring
                        data[key].focus.style('display', 'none');
                    }
                }
                return map;
            }, {});
            var idFunc = function (d) { return d.doy; };
            //console.debug('temps for doy '+doy,temps);
            doyValue.text(doy + " (" + DATE_FMT(doy) + ")");
            Object.keys(infos).forEach(function (key) {
                var temp, diff, avgDoy, diffDoy, text, i;
                if (temps[key]) {
                    infos[key].style('display', null);
                    infoLabels[key].text((temps[key].year || '30-year Average') + ': ');
                    temp = temps[key].gdd;
                    infoValues[key].text(nuberFmt(temp) + ' GDD');
                    if (infoDiffs[key] && temps.average != null) {
                        diff = temp - temps.average.gdd;
                        text = ' (' + (diff > 0 ? '+' : '') + nuberFmt(diff) + ' GDD';
                        // on what day did the current temperature happen
                        for (i = 0; i < data.average.data.length; i++) {
                            if (Object(_agdd_time_series_selection__WEBPACK_IMPORTED_MODULE_2__["DATA_FUNC"])(data.average.data[i]) > temp) {
                                avgDoy = idFunc(data.average.data[i]);
                                break;
                            }
                        }
                        // this can happen when the year being compared
                        // is now hotter than the average has ever been
                        // i.e. late in the year
                        if (avgDoy > 0 && avgDoy < 366) {
                            diffDoy = (avgDoy - doy);
                            text += '/' + (diffDoy > 0 ? '+' : '') + diffDoy + ' days';
                        }
                        text += ')';
                        infoDiffs[key]
                            .attr('class', 'gdd-diff ' + (diff > 0 ? 'above' : 'below'))
                            .style('fill', (diff > 0 ? 'red' : 'blue'))
                            .text(text);
                    }
                }
                else {
                    infos[key].style('display', 'none');
                }
            });
        }
        svg.append('rect')
            .attr('class', 'overlay')
            .attr('transform', 'translate(' + sizing.margin.left + ',' + sizing.margin.top + ')')
            .style('fill', 'none')
            .style('pointer-events', 'all')
            .attr('x', 0)
            .attr('y', 0)
            .attr('width', x(365))
            .attr('height', y(0))
            .on('mouseover', focusOn)
            .on('mouseout', focusOff)
            .on('mousemove', updateFocus);
    };
    AgddTimeSeriesComponent.prototype.redrawSvg = function () {
        //console.log('AGDD: redrawSvg');
        this.updateAxes();
        this.updateTitle();
    };
    AgddTimeSeriesComponent.prototype.reset = function () {
        var _this = this;
        //console.log('AGDD: reset');
        _super.prototype.reset.call(this);
        var _a = this, chart = _a.chart, sizing = _a.sizing, yMax = _a.yMax;
        chart.append('g').attr('class', 'chart-title');
        this.updateTitle();
        this.x = Object(d3_scale__WEBPACK_IMPORTED_MODULE_6__["scaleLinear"])().range([0, sizing.width]).domain([1, 365]);
        this.xAxis = Object(d3_axis__WEBPACK_IMPORTED_MODULE_5__["axisBottom"])(this.x).tickFormat(DATE_FMT);
        this.y = Object(d3_scale__WEBPACK_IMPORTED_MODULE_6__["scaleLinear"])().range([sizing.height, 0]).domain([0, yMax]);
        this.yAxis = Object(d3_axis__WEBPACK_IMPORTED_MODULE_5__["axisLeft"])(this.y);
        var line = d3__WEBPACK_IMPORTED_MODULE_7__["line"]();
        line.curve(d3__WEBPACK_IMPORTED_MODULE_7__["curveLinear"]);
        line.x(function (d) { return _this.x(d.doy); });
        line.y(function (d) { return typeof (d.agdd) === 'number' ? _this.y(d.agdd) : _this.y(d.point_value); });
        this._line = line;
        this.thresholdLine = chart.append('line')
            .attr('class', 'threshold')
            .attr('fill', 'none')
            .attr('stroke', 'green')
            .attr('stroke-width', 1)
            .attr('x1', this.x(1))
            .attr('y1', this.y(this.yMax))
            .attr('x2', this.x(365))
            .attr('y2', this.y(yMax))
            .style('display', 'none');
        this.hover();
        this.updateAxes();
        this.commonUpdates();
    };
    AgddTimeSeriesComponent.prototype.update = function () {
        var _this = this;
        //console.log('AGDD: update');
        this._data = undefined;
        this.reset(); // would like to be able to avoid but
        this.selection.data()
            .then(function (d) { return _this._data = d; })
            .then(function () {
            _this.reset();
            _this.redraw();
        });
    };
    __decorate([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Input"])(),
        __metadata("design:type", _agdd_time_series_selection__WEBPACK_IMPORTED_MODULE_2__["AgddTimeSeriesSelection"])
    ], AgddTimeSeriesComponent.prototype, "selection", void 0);
    AgddTimeSeriesComponent = __decorate([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Component"])({
            selector: 'agdd-time-series',
            template: __webpack_require__(/*! ../svg-visualization-base.component.html */ "../npn/common/src/lib/visualizations/svg-visualization-base.component.html"),
            styles: [__webpack_require__(/*! ../svg-visualization-base.component.scss */ "../npn/common/src/lib/visualizations/svg-visualization-base.component.scss")]
        }),
        __metadata("design:paramtypes", [_angular_core__WEBPACK_IMPORTED_MODULE_0__["ElementRef"], _angular_flex_layout__WEBPACK_IMPORTED_MODULE_3__["ObservableMedia"], _angular_common__WEBPACK_IMPORTED_MODULE_8__["DecimalPipe"]])
    ], AgddTimeSeriesComponent);
    return AgddTimeSeriesComponent;
}(_svg_visualization_base_component__WEBPACK_IMPORTED_MODULE_1__["SvgVisualizationBaseComponent"]));



/***/ }),

/***/ "../npn/common/src/lib/visualizations/agdd-time-series/agdd-ts-map-layer-control.component.ts":
/*!****************************************************************************************************!*\
  !*** ../npn/common/src/lib/visualizations/agdd-time-series/agdd-ts-map-layer-control.component.ts ***!
  \****************************************************************************************************/
/*! exports provided: AgddTsMapLayerControl */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "AgddTsMapLayerControl", function() { return AgddTsMapLayerControl; });
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @angular/core */ "../../node_modules/@angular/core/fesm5/core.js");
/* harmony import */ var _agdd_time_series_selection__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./agdd-time-series-selection */ "../npn/common/src/lib/visualizations/agdd-time-series/agdd-time-series-selection.ts");
/* harmony import */ var _npn_common_common__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @npn/common/common */ "../npn/common/src/lib/common/index.ts");
/* harmony import */ var rxjs_operators__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! rxjs/operators */ "../../node_modules/rxjs/_esm5/operators/index.js");
/* harmony import */ var _npn_common_gridded__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @npn/common/gridded */ "../npn/common/src/lib/gridded/index.ts");
var __extends = (undefined && undefined.__extends) || (function () {
    var extendStatics = Object.setPrototypeOf ||
        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __decorate = (undefined && undefined.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (undefined && undefined.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};





var AgddTsMapLayerControl = /** @class */ (function (_super) {
    __extends(AgddTsMapLayerControl, _super);
    function AgddTsMapLayerControl(layerService, zone) {
        var _this = _super.call(this) || this;
        _this.layerService = layerService;
        _this.zone = zone;
        _this.CATEGORY_PESTS = _agdd_time_series_selection__WEBPACK_IMPORTED_MODULE_1__["CATEGORY_PESTS"];
        _this.CATEGORY_TEMP_ACCUMULATIONS = _agdd_time_series_selection__WEBPACK_IMPORTED_MODULE_1__["CATEGORY_TEMP_ACCUMULATIONS"];
        _this.getMap = new Promise(function (resolve) { return _this.mapResolver = resolve; });
        return _this;
    }
    AgddTsMapLayerControl.prototype.ngOnInit = function () {
        var _this = this;
        this.layerService.getLayerDefinitions().then(function (defs) {
            _this.layerDefinitions = defs;
            _this.pests = _this.layerDefinitions.categories.find(function (c) { return c.name === _npn_common_gridded__WEBPACK_IMPORTED_MODULE_4__["CATEGORY_PEST"]; }).layers;
        });
        var _a = this, selection = _a.selection, componentDestroyed = _a.componentDestroyed;
        // would be nice to just watch the selection but updates only come through if a selection is valid
        componentDestroyed.subscribe(function () { return selection.endMonitorLayerChange(); });
        selection.monitorLayerChange().pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_3__["startWith"])(selection.layerName), Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_3__["takeUntil"])(componentDestroyed)).subscribe(function (layerName) {
            console.log("AgddTsMapLayerControl.layerName=" + layerName);
            if (_this.layer && _this.layer.layerName !== layerName) {
                _this.layer.off();
                _this.layer = undefined;
            }
            if (layerName && !_this.layer) {
                Promise.all([
                    _this.getMap,
                    selection.getLayer()
                ]).then(function (results) {
                    var map = results[0], layer = results[1];
                    layer.setMap(map);
                    layer.on();
                    _this.layer = layer;
                });
            }
        });
        this.getMap.then(function (map) {
            var updateLatLng = function (event) {
                console.log("AgddTsMapLayerControl.updateLatLng " + event.latLng.lat() + "," + event.latLng.lng());
                _this.zone.run(function () {
                    selection.latLng = [
                        event.latLng.lat(),
                        event.latLng.lng()
                    ];
                });
            };
            if (selection.latLng && selection.latLng.length === 2) {
                var latLng = selection.latLng;
                _this.marker = new google.maps.Marker({
                    map: map,
                    draggable: true,
                    position: new google.maps.LatLng(latLng[0], latLng[1])
                });
                _this.marker.addListener('dragend', updateLatLng);
            }
            google.maps.event.addListener(map, 'click', function (event) {
                if (!_this.marker) {
                    _this.marker = new google.maps.Marker({
                        map: map,
                        draggable: true,
                        position: event.latLng
                    });
                    _this.marker.addListener('dragend', updateLatLng);
                }
                _this.marker.setPosition(event.latLng);
                updateLatLng(event);
            });
        });
    };
    AgddTsMapLayerControl.prototype.ngOnChanges = function (changes) {
        if (changes && changes.map && changes.map.currentValue) {
            this.mapResolver(changes.map.currentValue);
        }
    };
    AgddTsMapLayerControl.prototype.categoryChange = function () {
        this.selection.layerName = this.selection.layerCategory === _agdd_time_series_selection__WEBPACK_IMPORTED_MODULE_1__["CATEGORY_PESTS"]
            ? this.pests[0].name
            : _agdd_time_series_selection__WEBPACK_IMPORTED_MODULE_1__["DEFAULT_AGDD_LAYER_NAME"];
    };
    __decorate([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Input"])(),
        __metadata("design:type", _agdd_time_series_selection__WEBPACK_IMPORTED_MODULE_1__["AgddTimeSeriesSelection"])
    ], AgddTsMapLayerControl.prototype, "selection", void 0);
    __decorate([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Input"])(),
        __metadata("design:type", Object)
    ], AgddTsMapLayerControl.prototype, "map", void 0);
    AgddTsMapLayerControl = __decorate([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Component"])({
            selector: 'agdd-ts-map-layer-control',
            template: "\n    <mat-form-field class=\"layer-category\">\n        <mat-select placeholder=\"Layer category\" [(ngModel)]=\"selection.layerCategory\" (selectionChange)=\"categoryChange()\">\n            <mat-option [value]=\"CATEGORY_PESTS\">{{CATEGORY_PESTS}}</mat-option>\n            <mat-option [value]=\"CATEGORY_TEMP_ACCUMULATIONS\">{{CATEGORY_TEMP_ACCUMULATIONS}}</mat-option>\n        </mat-select>\n    </mat-form-field>\n    <div [ngSwitch]=\"selection.layerCategory\" *ngIf=\"selection.layerCategory && layerDefinitions\">\n        <pest-map-layer-control *ngSwitchCase=\"CATEGORY_PESTS\" [selection]=\"selection\" [layerDefinitions]=\"layerDefinitions\"></pest-map-layer-control>\n        <temp-accum-map-layer-control *ngSwitchCase=\"CATEGORY_TEMP_ACCUMULATIONS\" [selection]=\"selection\" [layerDefinitions]=\"layerDefinitions\" agddTimeSeries=\"true\"></temp-accum-map-layer-control>\n    </div>\n    <div *ngIf=\"selection.layer\" class=\"layer-controls\">\n        <extent-control [selection]=\"selection\"></extent-control>\n        <supports-opacity-control [supportsOpacity]=\"selection.layer\"></supports-opacity-control>\n        <p *ngIf=\"selection.layer.hasAbstract()\" [innerHTML]=\"selection.layer.getAbstract()\"></p>\n    </div>\n    ",
            styles: ["\n    :host {\n        display: block;\n    }\n    mat-form-field.layer-category {\n        display: block;\n    }\n    .layer-controls {\n        width: 400px;\n    }\n    .layer-controls >p {\n        margin: 12px 0px 0px 0px;\n    }\n    "]
        }),
        __metadata("design:paramtypes", [_npn_common_gridded__WEBPACK_IMPORTED_MODULE_4__["NpnMapLayerService"], _angular_core__WEBPACK_IMPORTED_MODULE_0__["NgZone"]])
    ], AgddTsMapLayerControl);
    return AgddTsMapLayerControl;
}(_npn_common_common__WEBPACK_IMPORTED_MODULE_2__["MonitorsDestroy"]));



/***/ }),

/***/ "../npn/common/src/lib/visualizations/agdd-time-series/index.ts":
/*!**********************************************************************!*\
  !*** ../npn/common/src/lib/visualizations/agdd-time-series/index.ts ***!
  \**********************************************************************/
/*! exports provided: CATEGORY_PESTS, CATEGORY_TEMP_ACCUMULATIONS, DATA_FUNC, AGDD_COLORS, DEFAULT_AGDD_LAYER_CATEGORY, DEFAULT_AGDD_LAYER_NAME, AgddTimeSeriesSelection, AgddTimeSeriesSelectionFactory, AgddTimeSeriesComponent, AgddTsMapLayerControl */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _public_api__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./public_api */ "../npn/common/src/lib/visualizations/agdd-time-series/public_api.ts");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "CATEGORY_PESTS", function() { return _public_api__WEBPACK_IMPORTED_MODULE_0__["CATEGORY_PESTS"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "CATEGORY_TEMP_ACCUMULATIONS", function() { return _public_api__WEBPACK_IMPORTED_MODULE_0__["CATEGORY_TEMP_ACCUMULATIONS"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "DATA_FUNC", function() { return _public_api__WEBPACK_IMPORTED_MODULE_0__["DATA_FUNC"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "AGDD_COLORS", function() { return _public_api__WEBPACK_IMPORTED_MODULE_0__["AGDD_COLORS"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "DEFAULT_AGDD_LAYER_CATEGORY", function() { return _public_api__WEBPACK_IMPORTED_MODULE_0__["DEFAULT_AGDD_LAYER_CATEGORY"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "DEFAULT_AGDD_LAYER_NAME", function() { return _public_api__WEBPACK_IMPORTED_MODULE_0__["DEFAULT_AGDD_LAYER_NAME"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "AgddTimeSeriesSelection", function() { return _public_api__WEBPACK_IMPORTED_MODULE_0__["AgddTimeSeriesSelection"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "AgddTimeSeriesSelectionFactory", function() { return _public_api__WEBPACK_IMPORTED_MODULE_0__["AgddTimeSeriesSelectionFactory"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "AgddTimeSeriesComponent", function() { return _public_api__WEBPACK_IMPORTED_MODULE_0__["AgddTimeSeriesComponent"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "AgddTsMapLayerControl", function() { return _public_api__WEBPACK_IMPORTED_MODULE_0__["AgddTsMapLayerControl"]; });




/***/ }),

/***/ "../npn/common/src/lib/visualizations/agdd-time-series/public_api.ts":
/*!***************************************************************************!*\
  !*** ../npn/common/src/lib/visualizations/agdd-time-series/public_api.ts ***!
  \***************************************************************************/
/*! exports provided: CATEGORY_PESTS, CATEGORY_TEMP_ACCUMULATIONS, DATA_FUNC, AGDD_COLORS, DEFAULT_AGDD_LAYER_CATEGORY, DEFAULT_AGDD_LAYER_NAME, AgddTimeSeriesSelection, AgddTimeSeriesSelectionFactory, AgddTimeSeriesComponent, AgddTsMapLayerControl */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _agdd_time_series_selection__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./agdd-time-series-selection */ "../npn/common/src/lib/visualizations/agdd-time-series/agdd-time-series-selection.ts");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "CATEGORY_PESTS", function() { return _agdd_time_series_selection__WEBPACK_IMPORTED_MODULE_0__["CATEGORY_PESTS"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "CATEGORY_TEMP_ACCUMULATIONS", function() { return _agdd_time_series_selection__WEBPACK_IMPORTED_MODULE_0__["CATEGORY_TEMP_ACCUMULATIONS"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "DATA_FUNC", function() { return _agdd_time_series_selection__WEBPACK_IMPORTED_MODULE_0__["DATA_FUNC"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "AGDD_COLORS", function() { return _agdd_time_series_selection__WEBPACK_IMPORTED_MODULE_0__["AGDD_COLORS"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "DEFAULT_AGDD_LAYER_CATEGORY", function() { return _agdd_time_series_selection__WEBPACK_IMPORTED_MODULE_0__["DEFAULT_AGDD_LAYER_CATEGORY"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "DEFAULT_AGDD_LAYER_NAME", function() { return _agdd_time_series_selection__WEBPACK_IMPORTED_MODULE_0__["DEFAULT_AGDD_LAYER_NAME"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "AgddTimeSeriesSelection", function() { return _agdd_time_series_selection__WEBPACK_IMPORTED_MODULE_0__["AgddTimeSeriesSelection"]; });

/* harmony import */ var _agdd_time_series_selection_factory__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./agdd-time-series-selection.factory */ "../npn/common/src/lib/visualizations/agdd-time-series/agdd-time-series-selection.factory.ts");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "AgddTimeSeriesSelectionFactory", function() { return _agdd_time_series_selection_factory__WEBPACK_IMPORTED_MODULE_1__["AgddTimeSeriesSelectionFactory"]; });

/* harmony import */ var _agdd_time_series_component__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./agdd-time-series.component */ "../npn/common/src/lib/visualizations/agdd-time-series/agdd-time-series.component.ts");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "AgddTimeSeriesComponent", function() { return _agdd_time_series_component__WEBPACK_IMPORTED_MODULE_2__["AgddTimeSeriesComponent"]; });

/* harmony import */ var _agdd_ts_map_layer_control_component__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./agdd-ts-map-layer-control.component */ "../npn/common/src/lib/visualizations/agdd-time-series/agdd-ts-map-layer-control.component.ts");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "AgddTsMapLayerControl", function() { return _agdd_ts_map_layer_control_component__WEBPACK_IMPORTED_MODULE_3__["AgddTsMapLayerControl"]; });







/***/ }),

/***/ "../npn/common/src/lib/visualizations/calendar/calendar-control.component.ts":
/*!***********************************************************************************!*\
  !*** ../npn/common/src/lib/visualizations/calendar/calendar-control.component.ts ***!
  \***********************************************************************************/
/*! exports provided: CalendarControlComponent */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "CalendarControlComponent", function() { return CalendarControlComponent; });
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @angular/core */ "../../node_modules/@angular/core/fesm5/core.js");
/* harmony import */ var _calendar_selection__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./calendar-selection */ "../npn/common/src/lib/visualizations/calendar/calendar-selection.ts");
/* harmony import */ var rxjs_operators__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! rxjs/operators */ "../../node_modules/rxjs/_esm5/operators/index.js");
/* harmony import */ var _npn_common_common__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @npn/common/common */ "../npn/common/src/lib/common/index.ts");
/* harmony import */ var _fortawesome_pro_light_svg_icons__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @fortawesome/pro-light-svg-icons */ "../../node_modules/@fortawesome/pro-light-svg-icons/index.es.js");
var __extends = (undefined && undefined.__extends) || (function () {
    var extendStatics = Object.setPrototypeOf ||
        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __decorate = (undefined && undefined.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (undefined && undefined.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};





var THIS_YEAR = (new Date()).getFullYear();
var VALID_YEARS = (function () {
    var max = THIS_YEAR + 1, current = 1900, years = [];
    while (current < max) {
        years.push(current++);
    }
    return years;
})();
var CalendarControlComponent = /** @class */ (function (_super) {
    __extends(CalendarControlComponent, _super);
    function CalendarControlComponent() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        _this.maxYears = 5;
        _this.faExclamationTriangle = _fortawesome_pro_light_svg_icons__WEBPACK_IMPORTED_MODULE_4__["faExclamationTriangle"];
        return _this;
    }
    CalendarControlComponent.prototype.selectableYears = function (y) {
        var _this = this;
        if (y) {
            // validYears including y but excluding any others in the selection
            return VALID_YEARS.filter(function (yr) {
                return yr === y || _this.selection.years.indexOf(yr) === -1;
            });
        }
        return VALID_YEARS;
    };
    CalendarControlComponent.prototype.ngOnInit = function () {
        var _this = this;
        this.selection.pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_2__["filter"])(function (event) { return event === "scope_change" /* SCOPE_CHANGE */; }), Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_2__["debounceTime"])(500), Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_2__["takeUntil"])(this.componentDestroyed)).subscribe(function () { return _this.updateCriteria(); });
        if (this.selection.years.length === 0) {
            this.addYear();
        }
        if (this.selection.plots.length === 0) {
            this.addPlot();
        }
        setTimeout(function () { return _this.updateCriteria(); });
    };
    CalendarControlComponent.prototype.updateCriteria = function () {
        this.criteria = {
            years: this.selection.years,
            stationIds: this.selection.getStationIds()
        };
    };
    CalendarControlComponent.prototype.yearChange = function () {
        this.updateCriteria();
        this.selection.update();
    };
    CalendarControlComponent.prototype.redrawChange = function (change) {
        if (change && !change.oldValue && change.newValue) { // e.g. no color to a color means a plot that wasn't valid is now potentially valid.
            this.selection.update();
        }
        else {
            this.selection.redraw();
        }
    };
    CalendarControlComponent.prototype.addPlot = function () {
        this.selection.plots.push({});
    };
    CalendarControlComponent.prototype.removePlot = function (index) {
        this.selection.plots.splice(index, 1);
        this.selection.update();
    };
    CalendarControlComponent.prototype.addYear = function () {
        var y = THIS_YEAR;
        while (this.selection.years.indexOf(y) !== -1) {
            y--;
        }
        this.selection.years.push(y);
        this.yearChange();
    };
    CalendarControlComponent.prototype.removeYear = function (index) {
        this.selection.years.splice(index, 1);
        this.yearChange();
    };
    CalendarControlComponent.prototype.plotsValid = function () {
        return this.selection.plots.length === this.selection.validPlots.length;
    };
    __decorate([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Input"])(),
        __metadata("design:type", _calendar_selection__WEBPACK_IMPORTED_MODULE_1__["CalendarSelection"])
    ], CalendarControlComponent.prototype, "selection", void 0);
    CalendarControlComponent = __decorate([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Component"])({
            selector: 'calendar-control',
            template: "\n    <div *ngIf=\"!selection.canAddPlot\" class=\"max-plots-reached\"><fa-icon [icon]=\"faExclamationTriangle\"></fa-icon> One more year or species/phenophase combination would exceed the maximum of {{selection.MAX_PLOTS}} plots</div>\n    <div>\n        <div class=\"year-input-wrapper\" *ngFor=\"let plotYear of selection.years;index as idx\">\n            <mat-form-field class=\"year-input\">\n                <mat-select placeholder=\"Year {{idx+1}}\" [(ngModel)]=\"selection.years[idx]\" (ngModelChange)=\"yearChange()\" id=\"year_{{idx}}\">\n                    <mat-option *ngFor=\"let y of selectableYears(selection.years[idx])\" [value]=\"y\">{{y}}</mat-option>\n                </mat-select>\n            </mat-form-field>\n            <button *ngIf=\"selection.years?.length > 0\" mat-button class=\"remove-year\" (click)=\"removeYear(idx)\">Remove</button>\n            <button *ngIf=\"idx === (selection.years.length-1)\" mat-button class=\"add-year\" (click)=\"addYear()\" [disabled]=\"!selection.canAddPlot\">Add</button>\n        </div>\n    </div>\n\n    <div class=\"phenophase-input-wrapper\" *ngFor=\"let spi of selection.plots; index as idx\">\n        <higher-species-phenophase-input\n            gatherColor=\"true\"\n            [selection]=\"selection\"\n            [criteria]=\"criteria\"\n            [plot]=\"spi\"\n            (plotChange)=\"selection.update()\"></higher-species-phenophase-input>\n        <button *ngIf=\"idx > 0\" mat-button class=\"remove-plot\" (click)=\"removePlot(idx)\">Remove</button>\n        <button *ngIf=\"idx === (selection.plots.length-1)\" mat-button class=\"add-plot\" (click)=\"addPlot()\" [disabled]=\"!plotsValid() || !selection.canAddPlot\">Add</button>\n    </div>\n\n    <mat-checkbox [(ngModel)]=\"selection.negative\" (change)=\"redrawChange()\">Display negative data</mat-checkbox>\n\n    <label for=\"label-size-input\">Label size\n        <mat-slider id=\"label-size-input\" min=\"0\" max=\"10\" step=\"0.25\" [(ngModel)]=\"selection.fontSizeDelta\" (change)=\"redrawChange()\" [disabled]=\"!selection.isValid()\"></mat-slider>\n    </label>\n\n    <label for=\"label-position-input\">Label position\n        <mat-slider id=\"label-position-input\" min=\"0\" max=\"100\" step=\"1\" [(ngModel)]=\"selection.labelOffset\" (change)=\"redrawChange()\" [disabled]=\"!selection.isValid()\"></mat-slider>\n    </label>\n\n    <label for=\"label-band-size-input\">Band size\n        <mat-slider invert id=\"label-band-size-input\" min=\"0\" max=\"0.95\" step=\"0.05\" [(ngModel)]=\"selection.bandPadding\" (change)=\"redrawChange()\" [disabled]=\"!selection.isValid()\"></mat-slider>\n    </label>\n    ",
            styles: ["\n        .year-input-wrapper {\n            display: inline-block;\n            margin-right: 15px;\n        }\n        .year-input {\n            width: 60px;\n        }\n        .phenophase-input-wrapper {\n            display: block;\n        }\n        label[for=\"label-size-input\"] {\n            margin-left: 15px;\n        }\n    "]
        })
    ], CalendarControlComponent);
    return CalendarControlComponent;
}(_npn_common_common__WEBPACK_IMPORTED_MODULE_3__["MonitorsDestroy"]));



/***/ }),

/***/ "../npn/common/src/lib/visualizations/calendar/calendar-selection-factory.service.ts":
/*!*******************************************************************************************!*\
  !*** ../npn/common/src/lib/visualizations/calendar/calendar-selection-factory.service.ts ***!
  \*******************************************************************************************/
/*! exports provided: CalendarSelectionFactory */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "CalendarSelectionFactory", function() { return CalendarSelectionFactory; });
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @angular/core */ "../../node_modules/@angular/core/fesm5/core.js");
/* harmony import */ var _common__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../common */ "../npn/common/src/lib/common/index.ts");
/* harmony import */ var _calendar_selection__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./calendar-selection */ "../npn/common/src/lib/visualizations/calendar/calendar-selection.ts");
var __decorate = (undefined && undefined.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (undefined && undefined.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};



var CalendarSelectionFactory = /** @class */ (function () {
    function CalendarSelectionFactory(serviceUtils, speciesTitle, speciesService, networkService) {
        this.serviceUtils = serviceUtils;
        this.speciesTitle = speciesTitle;
        this.speciesService = speciesService;
        this.networkService = networkService;
        this.requestSrc = 'npn-vis-calendar';
    }
    CalendarSelectionFactory.prototype.newSelection = function () {
        return new _calendar_selection__WEBPACK_IMPORTED_MODULE_2__["CalendarSelection"](this.serviceUtils, this.speciesTitle, this.speciesService, this.networkService);
    };
    CalendarSelectionFactory = __decorate([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Injectable"])(),
        __metadata("design:paramtypes", [_common__WEBPACK_IMPORTED_MODULE_1__["NpnServiceUtils"],
            _common__WEBPACK_IMPORTED_MODULE_1__["TaxonomicSpeciesTitlePipe"],
            _common__WEBPACK_IMPORTED_MODULE_1__["SpeciesService"],
            _common__WEBPACK_IMPORTED_MODULE_1__["NetworkService"]])
    ], CalendarSelectionFactory);
    return CalendarSelectionFactory;
}());



/***/ }),

/***/ "../npn/common/src/lib/visualizations/calendar/calendar-selection.ts":
/*!***************************************************************************!*\
  !*** ../npn/common/src/lib/visualizations/calendar/calendar-selection.ts ***!
  \***************************************************************************/
/*! exports provided: CalendarSelection */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "CalendarSelection", function() { return CalendarSelection; });
/* harmony import */ var _observation_date_vis_selection__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../observation-date-vis-selection */ "../npn/common/src/lib/visualizations/observation-date-vis-selection.ts");
/* harmony import */ var _vis_selection__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../vis-selection */ "../npn/common/src/lib/visualizations/vis-selection.ts");
var __extends = (undefined && undefined.__extends) || (function () {
    var extendStatics = Object.setPrototypeOf ||
        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __decorate = (undefined && undefined.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (undefined && undefined.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};


var CalendarSelection = /** @class */ (function (_super) {
    __extends(CalendarSelection, _super);
    function CalendarSelection() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        _this.$class = 'CalendarSelection';
        _this.labelOffset = 4;
        _this.bandPadding = 0.5;
        _this.fontSizeDelta = 0;
        return _this;
    }
    CalendarSelection.prototype.isValid = function () {
        return typeof (this.labelOffset) === 'number' &&
            typeof (this.bandPadding) === 'number' &&
            typeof (this.fontSizeDelta) === 'number' &&
            _super.prototype.isValid.call(this);
    };
    __decorate([
        Object(_vis_selection__WEBPACK_IMPORTED_MODULE_1__["selectionProperty"])(),
        __metadata("design:type", String)
    ], CalendarSelection.prototype, "$class", void 0);
    __decorate([
        Object(_vis_selection__WEBPACK_IMPORTED_MODULE_1__["selectionProperty"])(),
        __metadata("design:type", Number)
    ], CalendarSelection.prototype, "labelOffset", void 0);
    __decorate([
        Object(_vis_selection__WEBPACK_IMPORTED_MODULE_1__["selectionProperty"])(),
        __metadata("design:type", Number)
    ], CalendarSelection.prototype, "bandPadding", void 0);
    __decorate([
        Object(_vis_selection__WEBPACK_IMPORTED_MODULE_1__["selectionProperty"])(),
        __metadata("design:type", Number)
    ], CalendarSelection.prototype, "fontSizeDelta", void 0);
    __decorate([
        Object(_vis_selection__WEBPACK_IMPORTED_MODULE_1__["selectionProperty"])(),
        __metadata("design:type", String)
    ], CalendarSelection.prototype, "monthFormat", void 0);
    return CalendarSelection;
}(_observation_date_vis_selection__WEBPACK_IMPORTED_MODULE_0__["ObservationDateVisSelection"]));



/***/ }),

/***/ "../npn/common/src/lib/visualizations/calendar/calendar.component.ts":
/*!***************************************************************************!*\
  !*** ../npn/common/src/lib/visualizations/calendar/calendar.component.ts ***!
  \***************************************************************************/
/*! exports provided: CalendarComponent */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "CalendarComponent", function() { return CalendarComponent; });
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @angular/core */ "../../node_modules/@angular/core/fesm5/core.js");
/* harmony import */ var _angular_flex_layout__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @angular/flex-layout */ "../../node_modules/@angular/flex-layout/esm5/flex-layout.es5.js");
/* harmony import */ var _vis_selection__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../vis-selection */ "../npn/common/src/lib/visualizations/vis-selection.ts");
/* harmony import */ var _calendar_selection__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./calendar-selection */ "../npn/common/src/lib/visualizations/calendar/calendar-selection.ts");
/* harmony import */ var _svg_visualization_base_component__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../svg-visualization-base.component */ "../npn/common/src/lib/visualizations/svg-visualization-base.component.ts");
/* harmony import */ var d3_axis__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! d3-axis */ "../../node_modules/d3-axis/index.js");
/* harmony import */ var d3_scale__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! d3-scale */ "../../node_modules/d3-scale/index.js");
/* harmony import */ var d3__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! d3 */ "../../node_modules/d3/index.js");
var __extends = (undefined && undefined.__extends) || (function () {
    var extendStatics = Object.setPrototypeOf ||
        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __decorate = (undefined && undefined.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (undefined && undefined.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};








var CalendarComponent = /** @class */ (function (_super) {
    __extends(CalendarComponent, _super);
    function CalendarComponent(rootElement, media) {
        var _this = _super.call(this, rootElement, media) || this;
        _this.rootElement = rootElement;
        _this.media = media;
        _this.filename = 'calendar.png';
        _this.margins = { top: 20, right: 35, bottom: 45, left: 35 };
        return _this;
    }
    // the doy of the first of each month doesn't change from year to year just what
    // day of the week days fall on so what year is used to calculate them is irrelevant
    CalendarComponent.prototype.xTickValues = function () {
        var firsts = [1], i, count = 1;
        for (i = 1; i < 12; i++) {
            var date = new Date(1900, i);
            // back up 1 day
            date.setTime(date.getTime() - _vis_selection__WEBPACK_IMPORTED_MODULE_2__["ONE_DAY_MILLIS"]);
            count += date.getDate();
            firsts.push(count);
        }
        return this.x.domain().filter(function (d) {
            return firsts.indexOf(d) !== -1;
        });
    };
    CalendarComponent.prototype.commonUpdates = function () {
        // forces all text to 14 px
        _super.prototype.commonUpdates.call(this);
        // labels are customizable in size
        var bw = this.y.bandwidth();
        var dy = -1 * ((bw / 2) + this.selection.labelOffset), labelFontSize = this.baseFontSize() + this.selection.fontSizeDelta;
        this.chart.selectAll('.y.axis text')
            .attr('x', 0)
            .attr('dy', dy)
            .attr('style', "text-anchor: start; font-size: " + labelFontSize + "px;");
    };
    CalendarComponent.prototype.getMonthFormat = function () {
        if (this.selection.monthFormat) {
            return this.selection.monthFormat;
        }
        if (this.sizing && this.sizing.width < 800) {
            return '%b';
        }
        return '%B';
    };
    CalendarComponent.prototype.reset = function () {
        var _this = this;
        _super.prototype.reset.call(this);
        this.processed = undefined;
        var chart = this.chart, sizing = this.sizing, d3_month_fmt = d3__WEBPACK_IMPORTED_MODULE_7__["timeFormat"](this.getMonthFormat());
        this.x = Object(d3_scale__WEBPACK_IMPORTED_MODULE_6__["scaleBand"])().range([0, sizing.width]).domain(d3__WEBPACK_IMPORTED_MODULE_7__["range"](1, 366))
            .paddingInner(-0.1).paddingOuter(0.5);
        this.xAxis = Object(d3_axis__WEBPACK_IMPORTED_MODULE_5__["axisBottom"])(this.x).tickValues(this.xTickValues())
            .tickFormat(function (i) {
            var date = new Date(1900, 0);
            date.setTime(date.getTime() + (_vis_selection__WEBPACK_IMPORTED_MODULE_2__["ONE_DAY_MILLIS"] * i));
            return d3_month_fmt(date);
        });
        this.y = Object(d3_scale__WEBPACK_IMPORTED_MODULE_6__["scaleBand"])().range([sizing.height, 0]).domain(d3__WEBPACK_IMPORTED_MODULE_7__["range"](0, 6)).paddingOuter(0.5);
        this.yAxis = Object(d3_axis__WEBPACK_IMPORTED_MODULE_5__["axisRight"])(this.y).tickSize(sizing.width).tickFormat(function (i) {
            return _this.processed && _this.processed.data && i < _this.processed.labels.length ?
                _this.processed.labels[i] : '';
        });
        chart.append('g')
            .attr('class', 'x axis')
            .attr('transform', 'translate(0,' + sizing.height + ')')
            .call(this.xAxis);
        chart.append('g')
            .attr('class', 'y axis')
            .call(this.yAxis);
        chart.selectAll('g .y.axis line')
            .style('stroke', '#777')
            .style('stroke-dasharray', '2,2');
        // hide y axis ticks and domain
        //chart.selectAll('g .y.axis .tick line').style('display','none');
        chart.selectAll('g .y.axis .domain').style('display', 'none');
        this.commonUpdates();
    };
    CalendarComponent.prototype.update = function () {
        var _this = this;
        this.reset();
        this.selection.getData().then(function (data) {
            _this.data = data;
            _this.redraw();
        })
            .catch(this.handleError);
    };
    CalendarComponent.prototype.redrawSvg = function () {
        var _this = this;
        if (!this.data) {
            return;
        }
        var processed = this.processed = this.selection.postProcessData(this.data);
        // update y axis
        this.y.paddingInner(this.selection.bandPadding);
        if (processed && processed.labels) {
            this.y.domain(d3__WEBPACK_IMPORTED_MODULE_7__["range"](0, processed.labels.length));
        }
        this.yAxis.scale(this.y);
        this.chart.selectAll('g .y.axis')
            .call(this.yAxis);
        this.chart.selectAll('.doy').remove();
        if (processed && processed.data) {
            var doys = this.chart.selectAll('.doy').data(processed.data, function (d) {
                var point = d; // why is this necessary
                return point.y + "-" + point.x + "-" + point.color;
            });
            doys = doys.enter().insert('line', ':first-child').attr('class', 'doy');
            var dx_1 = Math.ceil(this.x.bandwidth() / 2), dy_1 = this.y.bandwidth() / 2;
            doys.attr('x1', function (d) { return _this.x(d.x) - dx_1; })
                .attr('y1', function (d, i) { return _this.y(d.y) + dy_1; })
                .attr('x2', function (d) { return _this.x(d.x) + dx_1; })
                .attr('y2', function (d, i) { return _this.y(d.y) + dy_1; })
                .attr('doy-point', function (d) { return "(" + d.x + "," + d.y + ")"; })
                .attr('stroke', function (d) { return d.color; })
                .attr('stroke-width', "" + this.y.bandwidth())
                .append('title')
                .text(function (d) {
                return d.x; // x is the doy
            });
        }
        this.commonUpdates();
    };
    __decorate([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Input"])(),
        __metadata("design:type", _calendar_selection__WEBPACK_IMPORTED_MODULE_3__["CalendarSelection"])
    ], CalendarComponent.prototype, "selection", void 0);
    CalendarComponent = __decorate([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Component"])({
            selector: 'calendar',
            template: __webpack_require__(/*! ../svg-visualization-base.component.html */ "../npn/common/src/lib/visualizations/svg-visualization-base.component.html"),
            styles: [__webpack_require__(/*! ../svg-visualization-base.component.scss */ "../npn/common/src/lib/visualizations/svg-visualization-base.component.scss")]
        }),
        __metadata("design:paramtypes", [_angular_core__WEBPACK_IMPORTED_MODULE_0__["ElementRef"], _angular_flex_layout__WEBPACK_IMPORTED_MODULE_1__["ObservableMedia"]])
    ], CalendarComponent);
    return CalendarComponent;
}(_svg_visualization_base_component__WEBPACK_IMPORTED_MODULE_4__["SvgVisualizationBaseComponent"]));



/***/ }),

/***/ "../npn/common/src/lib/visualizations/calendar/index.ts":
/*!**************************************************************!*\
  !*** ../npn/common/src/lib/visualizations/calendar/index.ts ***!
  \**************************************************************/
/*! exports provided: CalendarSelection, CalendarSelectionFactory, CalendarComponent, CalendarControlComponent */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _public_api__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./public_api */ "../npn/common/src/lib/visualizations/calendar/public_api.ts");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "CalendarSelection", function() { return _public_api__WEBPACK_IMPORTED_MODULE_0__["CalendarSelection"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "CalendarSelectionFactory", function() { return _public_api__WEBPACK_IMPORTED_MODULE_0__["CalendarSelectionFactory"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "CalendarComponent", function() { return _public_api__WEBPACK_IMPORTED_MODULE_0__["CalendarComponent"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "CalendarControlComponent", function() { return _public_api__WEBPACK_IMPORTED_MODULE_0__["CalendarControlComponent"]; });




/***/ }),

/***/ "../npn/common/src/lib/visualizations/calendar/public_api.ts":
/*!*******************************************************************!*\
  !*** ../npn/common/src/lib/visualizations/calendar/public_api.ts ***!
  \*******************************************************************/
/*! exports provided: CalendarSelection, CalendarSelectionFactory, CalendarComponent, CalendarControlComponent */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _calendar_selection__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./calendar-selection */ "../npn/common/src/lib/visualizations/calendar/calendar-selection.ts");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "CalendarSelection", function() { return _calendar_selection__WEBPACK_IMPORTED_MODULE_0__["CalendarSelection"]; });

/* harmony import */ var _calendar_selection_factory_service__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./calendar-selection-factory.service */ "../npn/common/src/lib/visualizations/calendar/calendar-selection-factory.service.ts");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "CalendarSelectionFactory", function() { return _calendar_selection_factory_service__WEBPACK_IMPORTED_MODULE_1__["CalendarSelectionFactory"]; });

/* harmony import */ var _calendar_component__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./calendar.component */ "../npn/common/src/lib/visualizations/calendar/calendar.component.ts");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "CalendarComponent", function() { return _calendar_component__WEBPACK_IMPORTED_MODULE_2__["CalendarComponent"]; });

/* harmony import */ var _calendar_control_component__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./calendar-control.component */ "../npn/common/src/lib/visualizations/calendar/calendar-control.component.ts");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "CalendarControlComponent", function() { return _calendar_control_component__WEBPACK_IMPORTED_MODULE_3__["CalendarControlComponent"]; });







/***/ }),

/***/ "../npn/common/src/lib/visualizations/clipped-wms-map/clipped-wms-map-control.component.ts":
/*!*************************************************************************************************!*\
  !*** ../npn/common/src/lib/visualizations/clipped-wms-map/clipped-wms-map-control.component.ts ***!
  \*************************************************************************************************/
/*! exports provided: ClippedWmsMapControl */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ClippedWmsMapControl", function() { return ClippedWmsMapControl; });
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @angular/core */ "../../node_modules/@angular/core/fesm5/core.js");
/* harmony import */ var _clipped_wms_map_selection__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./clipped-wms-map-selection */ "../npn/common/src/lib/visualizations/clipped-wms-map/clipped-wms-map-selection.ts");
var __decorate = (undefined && undefined.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (undefined && undefined.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};


var ClippedWmsMapControl = /** @class */ (function () {
    function ClippedWmsMapControl() {
    }
    ClippedWmsMapControl.prototype.serviceChange = function () {
        this.validLayers = this.selection.validLayers;
        var selection = this.selection, layers = this.selection.validLayers;
        selection.layer = layers.length ? layers[0] : undefined;
        this.layerChange();
    };
    ClippedWmsMapControl.prototype.layerChange = function () {
        var selection = this.selection;
        if (selection.isValid()) {
            selection.update();
        }
        else {
            selection.reset();
        }
    };
    ClippedWmsMapControl.prototype.ngOnInit = function () {
        this.validServices = this.selection.validServices;
        this.serviceChange();
    };
    __decorate([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Input"])(),
        __metadata("design:type", _clipped_wms_map_selection__WEBPACK_IMPORTED_MODULE_1__["ClippedWmsMapSelection"])
    ], ClippedWmsMapControl.prototype, "selection", void 0);
    ClippedWmsMapControl = __decorate([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Component"])({
            selector: 'clipped-wms-map-control',
            template: "\n    <mat-form-field class=\"map-service-input\">\n        <mat-select placeholder=\"Map\" [(ngModel)]=\"selection.service\" (ngModelChange)=\"serviceChange()\">\n            <mat-option *ngFor=\"let s of validServices\" [value]=\"s.value\">{{s.label}}</mat-option>\n        </mat-select>\n    </mat-form-field>\n    <mat-form-field class=\"map-layer-input\">\n        <mat-select placeholder=\"Layer\" [(ngModel)]=\"selection.layer\" (ngModelChange)=\"layerChange()\">\n            <mat-option *ngFor=\"let l of validLayers\" [value]=\"l\">{{l.label}}</mat-option>\n        </mat-select>\n    </mat-form-field>\n    <mat-checkbox [(ngModel)]=\"selection.useBufferedBoundary\" (change)=\"layerChange()\">Use Buffered Boundary</mat-checkbox>\n    ",
            styles: ["\n        .map-service-input {\n            width: 225px;\n        }\n        .map-layer-input {\n            width: 155px;\n        }\n        mat-form-field {\n            padding-right: 10px;\n        }\n    "]
        })
    ], ClippedWmsMapControl);
    return ClippedWmsMapControl;
}());



/***/ }),

/***/ "../npn/common/src/lib/visualizations/clipped-wms-map/clipped-wms-map-selection-factory.ts":
/*!*************************************************************************************************!*\
  !*** ../npn/common/src/lib/visualizations/clipped-wms-map/clipped-wms-map-selection-factory.ts ***!
  \*************************************************************************************************/
/*! exports provided: ClippedWmsMapSelectionFactory */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ClippedWmsMapSelectionFactory", function() { return ClippedWmsMapSelectionFactory; });
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @angular/core */ "../../node_modules/@angular/core/fesm5/core.js");
/* harmony import */ var _angular_common__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @angular/common */ "../../node_modules/@angular/common/fesm5/common.js");
/* harmony import */ var _common__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../common */ "../npn/common/src/lib/common/index.ts");
/* harmony import */ var _gridded__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../gridded */ "../npn/common/src/lib/gridded/index.ts");
/* harmony import */ var _clipped_wms_map_selection__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./clipped-wms-map-selection */ "../npn/common/src/lib/visualizations/clipped-wms-map/clipped-wms-map-selection.ts");
var __decorate = (undefined && undefined.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (undefined && undefined.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};





var ClippedWmsMapSelectionFactory = /** @class */ (function () {
    function ClippedWmsMapSelectionFactory(serviceUtils, datePipe, layerService, dataService, networkService) {
        this.serviceUtils = serviceUtils;
        this.datePipe = datePipe;
        this.layerService = layerService;
        this.dataService = dataService;
        this.networkService = networkService;
    }
    ClippedWmsMapSelectionFactory.prototype.newSelection = function () {
        return new _clipped_wms_map_selection__WEBPACK_IMPORTED_MODULE_4__["ClippedWmsMapSelection"](this.serviceUtils, this.datePipe, this.layerService, this.dataService, this.networkService);
    };
    ClippedWmsMapSelectionFactory = __decorate([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Injectable"])(),
        __metadata("design:paramtypes", [_common__WEBPACK_IMPORTED_MODULE_2__["NpnServiceUtils"],
            _angular_common__WEBPACK_IMPORTED_MODULE_1__["DatePipe"],
            _gridded__WEBPACK_IMPORTED_MODULE_3__["NpnMapLayerService"],
            _gridded__WEBPACK_IMPORTED_MODULE_3__["WcsDataService"],
            _common__WEBPACK_IMPORTED_MODULE_2__["NetworkService"]])
    ], ClippedWmsMapSelectionFactory);
    return ClippedWmsMapSelectionFactory;
}());



/***/ }),

/***/ "../npn/common/src/lib/visualizations/clipped-wms-map/clipped-wms-map-selection.ts":
/*!*****************************************************************************************!*\
  !*** ../npn/common/src/lib/visualizations/clipped-wms-map/clipped-wms-map-selection.ts ***!
  \*****************************************************************************************/
/*! exports provided: ClippedWmsMapSelection */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ClippedWmsMapSelection", function() { return ClippedWmsMapSelection; });
/* harmony import */ var _vis_selection__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../vis-selection */ "../npn/common/src/lib/visualizations/vis-selection.ts");
/* harmony import */ var _gridded__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../gridded */ "../npn/common/src/lib/gridded/index.ts");
var __extends = (undefined && undefined.__extends) || (function () {
    var extendStatics = Object.setPrototypeOf ||
        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __decorate = (undefined && undefined.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (undefined && undefined.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};


var SIX_NODATA_DISCLAIMER = "This Refuge has not yet met the requirements for the Spring Leaf Index model. Check back later in the year.";
var SIX_LAYERS = [{
        id: 'current',
        label: 'Current Si-x leaf index',
        layerName: 'si-x:average_leaf_ncep',
        clippingService: 'si-x/area/clippedImage',
        statisticsService: 'si-x/area/statistics',
        noDataDisclaimer: SIX_NODATA_DISCLAIMER
    }, {
        id: 'forecast',
        label: '6-day forecast',
        layerName: 'si-x:average_leaf_ncep',
        clippingService: 'si-x/area/clippedImage',
        statisticsService: 'si-x/area/statistics',
        forecast: true,
        noDataDisclaimer: SIX_NODATA_DISCLAIMER
    }, {
        id: 'anomaly',
        label: 'Anomaly',
        layerName: 'si-x:leaf_anomaly',
        clippingService: 'si-x/anomaly/area/clippedImage',
        statisticsService: 'si-x/anomaly/area/statistics',
        noDataDisclaimer: SIX_NODATA_DISCLAIMER
    }];
var AGDD_LAYERS = [{
        id: 'current',
        label: 'Current AGDD',
        layerName: 'gdd:agdd',
        clippingService: 'agdd/area/clippedImage',
        statisticsService: 'agdd/area/statistics',
    }, {
        id: 'forecast',
        label: '6-day forecast',
        layerName: 'gdd:agdd',
        clippingService: 'agdd/area/clippedImage',
        statisticsService: 'agdd/area/statistics',
        forecast: true,
    }, {
        id: 'anomaly',
        label: 'Anomaly',
        layerName: 'gdd:agdd_anomaly',
        clippingService: 'agdd/anomaly/area/clippedImage',
        statisticsService: 'agdd/anomaly/area/statistics',
    }];
var ClippedWmsMapSelection = /** @class */ (function (_super) {
    __extends(ClippedWmsMapSelection, _super);
    function ClippedWmsMapSelection(serviceUtils, datePipe, mapLayerService, dataService, networkService) {
        var _this = _super.call(this, networkService) || this;
        _this.serviceUtils = serviceUtils;
        _this.datePipe = datePipe;
        _this.mapLayerService = mapLayerService;
        _this.dataService = dataService;
        _this.networkService = networkService;
        _this.$class = 'ClippedWmsMapSelection';
        _this.service = 'si-x'; // si-x || agdd
        _this.layer = SIX_LAYERS[0];
        _this.useBufferedBoundary = false;
        _this.forecastDays = 6;
        return _this;
    }
    ClippedWmsMapSelection.prototype.isValid = function () {
        return (this.service === 'si-x' || this.service === 'agdd') && !!this.layer && !!this.fwsBoundary;
    };
    Object.defineProperty(ClippedWmsMapSelection.prototype, "validServices", {
        get: function () {
            return [{
                    value: 'si-x',
                    label: 'Spring index'
                }, {
                    value: 'agdd',
                    label: 'Accumulated growing degree days'
                }];
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(ClippedWmsMapSelection.prototype, "validLayers", {
        get: function () {
            switch (this.service) {
                case 'si-x':
                    return SIX_LAYERS;
                case 'agdd':
                    return AGDD_LAYERS;
            }
            return [];
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(ClippedWmsMapSelection.prototype, "apiDate", {
        get: function () {
            // always "today" or 6 days in the future for forecast
            var d = this.explicitDate ?
                new Date(this.explicitDate.getTime()) : new Date();
            if (this.layer && this.layer.forecast) {
                d.setTime(d.getTime() + (this.forecastDays * _vis_selection__WEBPACK_IMPORTED_MODULE_0__["ONE_DAY_MILLIS"]));
            }
            return this.datePipe.transform(d, 'y-MM-dd');
        },
        enumerable: true,
        configurable: true
    });
    ClippedWmsMapSelection.prototype.getBoundary = function () {
        var _this = this;
        var url = this.serviceUtils.dataApiUrl('/v0/si-x/area/boundary');
        var params = {
            format: 'geojson',
            fwsBoundary: this.fwsBoundary
        };
        return this.serviceUtils.cachedGet(url, params)
            .then(function (response) {
            if (response && response.boundary) {
                return _this.serviceUtils.cachedGet(response.boundary, {});
            }
            throw new Error('missing boundary in response.');
        });
    };
    ClippedWmsMapSelection.prototype.getData = function () {
        var url = this.serviceUtils.dataApiUrl("/v0/" + this.layer.clippingService), params = {
            layerName: this.layer.layerName,
            fwsBoundary: this.fwsBoundary,
            date: this.apiDate,
            useBufferedBoundary: this.useBufferedBoundary,
            style: true,
            fileFormat: 'png'
        };
        return this.serviceUtils.cachedGet(url, params);
    };
    ClippedWmsMapSelection.prototype.getStatistics = function () {
        var url = this.serviceUtils.dataApiUrl("/v0/" + this.layer.statisticsService);
        var params = {
            layerName: this.layer.layerName,
            fwsBoundary: this.fwsBoundary,
            date: this.apiDate,
            useBufferedBoundary: this.useBufferedBoundary,
            useCache: this.serviceUtils.dataApiUseStatisticsCache
        };
        return this.serviceUtils.cachedGet(url, params)
            .then(function (stats) {
            // translate the date string to a date object.
            var dateParts = /^(\d{4})-(\d{2})-(\d{2})/.exec(stats.date);
            stats.date = new Date(parseInt(dateParts[1]), parseInt(dateParts[2]) - 1, parseInt(dateParts[3]));
            return stats;
        });
    };
    ClippedWmsMapSelection.prototype.getAllData = function () {
        return Promise.all([
            this.getData(),
            this.getBoundary(),
            this.getStatistics()
        ])
            .then(function (arr) { return ({
            data: arr[0],
            boundary: arr[1],
            statistics: arr[2]
        }); });
    };
    ClippedWmsMapSelection.prototype.fitBounds = function (map) {
        var bounds = undefined;
        if (this.data && this.data.data) {
            bounds = this.toBounds(this.data.data.bbox);
            if (bounds) {
                map.fitBounds(bounds);
            }
        }
        if (!bounds && this.features && this.features.length) {
            var allBounds = this.features.map(function (f) { return Object(_gridded__WEBPACK_IMPORTED_MODULE_1__["googleFeatureBounds"])(f); }).filter(function (b) { return !!b; });
            if (allBounds.length) {
                var bounds_1 = allBounds[0];
                if (allBounds.length > 1) {
                    // union in the others
                    allBounds.slice(1).forEach(function (b) { return bounds_1.union(b); });
                }
                map.fitBounds(bounds_1);
            }
        }
    };
    ClippedWmsMapSelection.prototype.resizeMap = function (map) {
        var _this = this;
        return new Promise(function (resolve) {
            _this.fitBounds(map);
            resolve();
        });
    };
    ClippedWmsMapSelection.prototype.removeFrom = function (map) {
        var _this = this;
        return new Promise(function (resolve) {
            if (_this.overlay) {
                _this.overlay.remove();
            }
            (_this.features || []).forEach(function (f) {
                map.data.remove(f);
            });
            (_this.listeners || []).forEach(function (l) { return google.maps.event.removeListener(l); });
            if (_this.infoWindowHandler) {
                _this.infoWindowHandler.close();
            }
            _this.data = undefined;
            _this.features = undefined;
            _this.listeners = undefined;
            _this.infoWindowHandler = undefined;
            _this.overlay = undefined;
            _this.legend = undefined;
            resolve();
        });
    };
    ClippedWmsMapSelection.prototype.addTo = function (map) {
        var _this = this;
        return new Promise(function (_resolve, _reject) {
            _this.working = true;
            var resolve = function (d) {
                _this.working = false;
                _resolve(d);
            }, reject = function (e) {
                _this.working = false;
                _reject(e);
            };
            if (_this.overlay && _this.features) {
                return reject('already added to map, call removeFrom');
            }
            _this.getAllData()
                .then(function (all) {
                if (_this.overlay && _this.features) {
                    console.log('in promise, already have overlay and features');
                    return resolve();
                }
                // have to do this so that the google api classes aren't
                // touched too early and our class extension invalid
                lazyClassLoader();
                _this.data = all;
                var data = all.data, bounds = _this.toBounds(data.bbox), clippedImage = data.clippedImage;
                if (bounds) {
                    map.panTo(bounds.getCenter());
                    /*
                    let rect = new google.maps.Rectangle({
                        strokeColor: '#FF0000',
                        strokeOpacity: 0.8,
                        strokeWeight: 2,
                        fillColor: '#FF0000',
                        fillOpacity: 0.35,
                        map: map,
                        bounds: bounds
                    });*/
                    map.fitBounds(bounds);
                    _this.overlay = new ImageOverLayImpl(bounds, clippedImage, map);
                    _this.overlay.add();
                    _this.infoWindowHandler = _this.dataService.newInfoWindowHandler(map);
                    var wcsDateArg_1 = "http://www.opengis.net/def/axis/OGC/0/time(\"" + _this.apiDate + "T00:00:00.000Z\")", wcsParamAugmenter_1 = function (params) {
                        params.subset = params.subset || [];
                        params.subset.push(wcsDateArg_1);
                    };
                    _this.listeners = _this.listeners || [];
                    _this.listeners.push(map.addListener('click', function (event) {
                        return _this.infoWindowHandler.open(event.latLng, _this.layer.layerName, _this.legend, wcsParamAugmenter_1);
                    }));
                }
                _this.addBoundary(map, all.boundary);
                _this.mapLayerService.getLegend(data.layerClippedFrom)
                    .then(function (legend) {
                    console.debug('ClippedWmsMapSelection.legend:', legend);
                    _this.legend = legend;
                    resolve();
                })
                    .catch(reject);
            })
                .catch(reject);
        });
    };
    ClippedWmsMapSelection.prototype.addBoundary = function (map, geoJson) {
        console.log('ClippedWmsMapSelection.addBoundary', geoJson);
        this.features = map.data.addGeoJson(geoJson);
        map.data.setStyle(function (feature) {
            return {
                strokeColor: '#000000',
                strokeOpacity: 0.8,
                strokeWeight: 2,
                fillColor: '#FF0000',
                fillOpacity: 0.0,
                clickable: false,
            };
        });
        this.fitBounds(map);
    };
    ClippedWmsMapSelection.prototype.toBounds = function (bbox) {
        if (bbox && bbox.length === 4) {
            var sw_lng = bbox[0], sw_lat = bbox[1], ne_lng = bbox[2], ne_lat = bbox[3];
            return new google.maps.LatLngBounds(new google.maps.LatLng(sw_lat, sw_lng), new google.maps.LatLng(ne_lat, ne_lng));
            /*
            let coords = /^BOX\(\s*(-?\d+\.\d+)\s+(-?\d+\.\d+),\s*(-?\d+\.\d+)\s+(-?\d+\.\d+)\s*\)/.exec(this.box);
            if(coords.length === 5) {
                let sw_lng = parseFloat(coords[1]),
                    sw_lat = parseFloat(coords[2]),
                    ne_lng = parseFloat(coords[3]),
                    ne_lat = parseFloat(coords[4]);
                return new google.maps.LatLngBounds(
                  new google.maps.LatLng(sw_lat,sw_lng),
                  new google.maps.LatLng(ne_lat,ne_lng)
                );
            }*/
        }
        return null;
    };
    __decorate([
        Object(_vis_selection__WEBPACK_IMPORTED_MODULE_0__["selectionProperty"])(),
        __metadata("design:type", String)
    ], ClippedWmsMapSelection.prototype, "$class", void 0);
    __decorate([
        Object(_vis_selection__WEBPACK_IMPORTED_MODULE_0__["selectionProperty"])() // may need to use get/set pattern
        ,
        __metadata("design:type", String)
    ], ClippedWmsMapSelection.prototype, "service", void 0);
    __decorate([
        Object(_vis_selection__WEBPACK_IMPORTED_MODULE_0__["selectionProperty"])(),
        __metadata("design:type", Object)
    ], ClippedWmsMapSelection.prototype, "layer", void 0);
    __decorate([
        Object(_vis_selection__WEBPACK_IMPORTED_MODULE_0__["selectionProperty"])(),
        __metadata("design:type", String)
    ], ClippedWmsMapSelection.prototype, "fwsBoundary", void 0);
    __decorate([
        Object(_vis_selection__WEBPACK_IMPORTED_MODULE_0__["selectionProperty"])(),
        __metadata("design:type", Boolean)
    ], ClippedWmsMapSelection.prototype, "useBufferedBoundary", void 0);
    return ClippedWmsMapSelection;
}(_vis_selection__WEBPACK_IMPORTED_MODULE_0__["NetworkAwareVisSelection"]));

;
var ImageOverLayImpl;
function lazyClassLoader() {
    ImageOverLayImpl = /** @class */ (function (_super) {
        __extends(ImageOverLayImpl, _super);
        function ImageOverLayImpl(bounds, image, map) {
            var _this = _super.call(this) || this;
            _this.opacity = 0.75;
            _this.bounds = bounds;
            _this.image = image;
            _this.map = map;
            return _this;
        }
        ImageOverLayImpl.prototype.add = function () {
            this.setMap(this.map);
        };
        ImageOverLayImpl.prototype.remove = function () {
            this.setMap(null);
        };
        ImageOverLayImpl.prototype.setOpacity = function (o) {
            this.opacity = o;
            if (this.div_) {
                this.div_.style.opacity = o;
            }
        };
        ImageOverLayImpl.prototype.getOpacity = function () {
            return this.opacity;
        };
        ImageOverLayImpl.prototype.onAdd = function () {
            var div = document.createElement('div');
            div.style.borderStyle = 'none';
            div.style.borderWidth = '0px';
            div.style.position = 'absolute';
            // Create the img element and attach it to the div.
            var img = document.createElement('img');
            img.src = this.image;
            img.style.width = '100%';
            img.style.height = '100%';
            img.style.position = 'absolute';
            div.appendChild(img);
            this.div_ = div;
            // Add the element to the "overlayLayer" pane.
            var panes = this.getPanes();
            panes.overlayLayer.appendChild(div);
            this.setOpacity(this.opacity);
        };
        ImageOverLayImpl.prototype.draw = function () {
            // We use the south-west and north-east
            // coordinates of the overlay to peg it to the correct position and size.
            // To do this, we need to retrieve the projection from the overlay.
            var overlayProjection = this.getProjection();
            // Retrieve the south-west and north-east coordinates of this overlay
            // in LatLngs and convert them to pixel coordinates.
            // We'll use these coordinates to resize the div.
            var sw = overlayProjection.fromLatLngToDivPixel(this.bounds.getSouthWest());
            var ne = overlayProjection.fromLatLngToDivPixel(this.bounds.getNorthEast());
            // Resize the image's div to fit the indicated dimensions.
            var div = this.div_;
            div.style.left = sw.x + 'px';
            div.style.top = ne.y + 'px';
            div.style.width = (ne.x - sw.x) + 'px';
            div.style.height = (sw.y - ne.y) + 'px';
        };
        ImageOverLayImpl.prototype.onRemove = function () {
            this.div_.parentNode.removeChild(this.div_);
            this.div_ = null;
        };
        return ImageOverLayImpl;
    }(google.maps.OverlayView));
}


/***/ }),

/***/ "../npn/common/src/lib/visualizations/clipped-wms-map/clipped-wms-map-statistics.component.ts":
/*!****************************************************************************************************!*\
  !*** ../npn/common/src/lib/visualizations/clipped-wms-map/clipped-wms-map-statistics.component.ts ***!
  \****************************************************************************************************/
/*! exports provided: ClippedStatValuePipe, ClippedWmsMapStatisticsComponent */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ClippedStatValuePipe", function() { return ClippedStatValuePipe; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ClippedWmsMapStatisticsComponent", function() { return ClippedWmsMapStatisticsComponent; });
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @angular/core */ "../../node_modules/@angular/core/fesm5/core.js");
/* harmony import */ var _angular_common__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @angular/common */ "../../node_modules/@angular/common/fesm5/common.js");
/* harmony import */ var _clipped_wms_map_selection__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./clipped-wms-map-selection */ "../npn/common/src/lib/visualizations/clipped-wms-map/clipped-wms-map-selection.ts");
/* harmony import */ var d3__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! d3 */ "../../node_modules/d3/index.js");
var __decorate = (undefined && undefined.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (undefined && undefined.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};




// wraps DecimalPipe and supplies custom formatting for specific layers for mean/min/max
var ClippedStatValuePipe = /** @class */ (function () {
    function ClippedStatValuePipe(decimalPipe) {
        this.decimalPipe = decimalPipe;
        this.dateFormat = d3__WEBPACK_IMPORTED_MODULE_3__["timeFormat"]('%B %e');
    }
    ClippedStatValuePipe.prototype.transform = function (value, nFormat, layer) {
        if (layer && layer.layerName === 'si-x:leaf_anomaly') {
            var transformed = this.decimalPipe.transform(Math.abs(value), nFormat);
            if (value < 0) {
                return transformed + " days early";
            }
            else {
                return transformed + " days late";
            }
        }
        // for non-anomaly maps value is DOY, display as date with DOY in parens.
        var rounded = Math.floor(value);
        var dateFmt = this.dateFormat(this.getDate(rounded));
        return dateFmt + " (" + rounded + ")";
    };
    ClippedStatValuePipe.prototype.getDate = function (rounded) {
        var d = new Date(2010, 0, 1); // 2010 not a leap year
        d.setTime(d.getTime() + ((rounded - 1) * 24 * 60 * 60 * 1000));
        return d;
    };
    ClippedStatValuePipe = __decorate([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Pipe"])({
            name: 'clippedStatValue'
        }),
        __metadata("design:paramtypes", [_angular_common__WEBPACK_IMPORTED_MODULE_1__["DecimalPipe"]])
    ], ClippedStatValuePipe);
    return ClippedStatValuePipe;
}());

var COUNT_TT = 'Number of map pixels included in the calculations';
var SIX_COMPLETE = 'Proportion of area that has reached the First Leaf Index';
var AGDD_COMPLETE = 'Highest amount of warmth accumulated since Jan 1 in the area, measured in growing degree days (GDDs)';
var SIX_TOOLTIPS = {
    count: COUNT_TT,
    mean: 'Mean day of year First Leaf Index was reached',
    stdDev: 'Standard deviation of mean day of year First Leaf Index was reached',
    min: 'Earliest day of year First Leaf Index was reached',
    max: 'Latest day of year First Leaf Index was reached',
    complete: SIX_COMPLETE
};
var AGDD_TOOLTIPS = {
    count: COUNT_TT,
    mean: 'Warmth accumulated since Jan 1, averaged across the area, measured in growing degree days (GDDs)',
    stdDev: 'Standard deviation in warmth accumulated since Jan 1, averaged across the area, measured in growing degree days (GDDs)',
    min: 'Lowest amount of warmth accumulated since Jan 1 in the area, measured in growing degree days (GDDs)',
    max: AGDD_COMPLETE
};
var SIX_ANOMALY_TOOLTIPS = {
    count: COUNT_TT,
    mean: 'Measure of how early or late spring arrived in this area this year compared to long-term average. Calculated as average of values for pixels displayed',
    stdDev: 'The standard deviation of the average number of days different from a long-term average (1981-2010) for the pixels displayed',
    min: 'Earliest day compared to a long-term average (1981-2010) for the pixels displayed',
    max: 'Latest day compared to a long-term average (1981-2010) for the pixels displayed',
    complete: SIX_COMPLETE
};
var AGDD_ANOMALY_TOOLTIPS = {
    count: COUNT_TT,
    mean: 'Difference in the warmth accumulated since Jan 1 from a long-term average (1981-2010), measured in growing degree days (GDDs)',
    stdDev: 'Standard deviation in difference in the warmth accumulated since Jan 1 from a long-term average (1981-2010), measured in growing degree days (GDDs)',
    min: 'Lowest difference in the warmth accumulated since Jan 1 from a long-term average (1981-2010), measured in growing degree days (GDDs)',
    max: 'Highest difference in the warmth accumulated since Jan 1 from a long-term average (1981-2010), measured in growing degree days (GDDs)',
    complete: AGDD_COMPLETE
};
var ClippedWmsMapStatisticsComponent = /** @class */ (function () {
    function ClippedWmsMapStatisticsComponent() {
    }
    ClippedWmsMapStatisticsComponent.prototype.ngDoCheck = function () {
        if (this.selection && this.selection.data && this.selection.data.statistics) {
            this.statistics = this.selection.data.statistics;
            this.gdd = this.selection && /^gdd/.test(this.selection.layer.layerName);
            this.tooltips = this.gdd ?
                (this.selection.layer.id === 'anomaly' ? AGDD_ANOMALY_TOOLTIPS : AGDD_TOOLTIPS) :
                (this.selection.layer.id === 'anomaly' ? SIX_ANOMALY_TOOLTIPS : SIX_TOOLTIPS);
        }
    };
    __decorate([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Input"])(),
        __metadata("design:type", _clipped_wms_map_selection__WEBPACK_IMPORTED_MODULE_2__["ClippedWmsMapSelection"])
    ], ClippedWmsMapStatisticsComponent.prototype, "selection", void 0);
    ClippedWmsMapStatisticsComponent = __decorate([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Component"])({
            selector: 'clipped-wms-map-statistics',
            template: "\n    <table *ngIf=\"statistics\" [ngClass]=\"{'no-data': statistics.count === 0}\">\n        <tbody>\n            <tr><td>Date</td><td>{{statistics.date | date:'longDate'}}</td></tr>\n            <tr *ngIf=\"statistics.count !== 0\" [matTooltip]=\"tooltips['count']\"><td>Count</td><td>{{statistics.count}}</td></tr>\n            <tr *ngIf=\"statistics.count !== 0\" [matTooltip]=\"tooltips['mean']\"><td>Mean</td><td>{{statistics.mean | clippedStatValue:'1.1-1':selection.layer}}</td></tr>\n            <tr *ngIf=\"statistics.count !== 0\" [matTooltip]=\"tooltips['stdDev']\"><td>Std Dev</td><td>{{statistics.stddev | number:'1.1-1'}}</td></tr>\n            <tr *ngIf=\"statistics.count !== 0\" [matTooltip]=\"tooltips['min']\"><td>Min</td><td>{{statistics.min  | clippedStatValue:'1.0-1':selection.layer}}</td></tr>\n            <tr *ngIf=\"statistics.count !== 0\" [matTooltip]=\"tooltips['max']\"><td>Max</td><td>{{statistics.max  | clippedStatValue:'1.0-1':selection.layer}}</td></tr>\n            <tr *ngIf=\"!gdd && statistics.count !== 0\" [matTooltip]=\"tooltips['complete']\"><td>Complete</td><td>{{statistics.percentComplete | number:'1.0-1'}}%</td></tr>\n            <tr><td *ngIf=\"statistics.count === 0 && selection.layer.noDataDisclaimer\" colspan=\"2\" class=\"no-data-disclaimer\">{{selection.layer.noDataDisclaimer}}</td></tr>\n        </tbody>\n    </table>\n    ",
            styles: ["\n        :host {\n            line-height: 12px;\n        }\n        table.no-data {\n            max-width: 250px;\n        }\n        tr td:first-of-type {\n            font-weight: bold;\n            text-align: right;\n            padding-right: 5px;\n        }\n        tr td:first-of-type:after {\n            content: ':';\n        }\n        tr td.no-data-disclaimer {\n            text-align: center;\n        }\n        tr td.no-data-disclaimer:after {\n            content: '';\n        }\n    "],
            providers: [ClippedStatValuePipe]
        })
    ], ClippedWmsMapStatisticsComponent);
    return ClippedWmsMapStatisticsComponent;
}());



/***/ }),

/***/ "../npn/common/src/lib/visualizations/clipped-wms-map/clipped-wms-map.component.html":
/*!*******************************************************************************************!*\
  !*** ../npn/common/src/lib/visualizations/clipped-wms-map/clipped-wms-map.component.html ***!
  \*******************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = "<div class=\"vis-container\">\n    <div class=\"vis-working\" *ngIf=\"selection.working\">\n        <npn-logo spin=\"false\"></npn-logo>\n    </div>\n    <div class=\"map-wrapper\">\n        <agm-map (mapReady)=\"mapReady($event)\"  [streetViewControl]=\"false\"  [styles]=\"mapStyles\" [scrollwheel]=\"false\"></agm-map>\n        <map-layer-legend *ngIf=\"!thumbnail && selection.legend && selection.data && selection.data.statistics && selection.data.statistics.count !== 0\" [legend]=\"selection.legend\"></map-layer-legend>\n        <clipped-wms-map-statistics *ngIf=\"!thumbnail && selection && selection.data && selection.data.statistics\"\n            [selection]=\"selection\"></clipped-wms-map-statistics>\n    </div>\n    <supports-opacity-control *ngIf=\"!thumbnail\" [supportsOpacity]=\"selection.overlay\"></supports-opacity-control>\n</div>\n"

/***/ }),

/***/ "../npn/common/src/lib/visualizations/clipped-wms-map/clipped-wms-map.component.scss":
/*!*******************************************************************************************!*\
  !*** ../npn/common/src/lib/visualizations/clipped-wms-map/clipped-wms-map.component.scss ***!
  \*******************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = ".vis-container {\n  display: block;\n  position: relative; }\n  .vis-container agm-map {\n    /*\n        encapsulation: ViewEncapsulation.None or this rule won't be able to apply\n        */ }\n  .vis-container agm-map img[src*=usanpn] {\n      -ms-interpolation-mode: nearest-neighbor;\n          image-rendering: pixelated;\n      image-rendering: -moz-crisp-edges; }\n  .map-wrapper {\n  position: relative; }\n  .map-wrapper map-layer-legend .gridded-legend {\n    margin-top: 10px;\n    border-bottom: 1px solid #aaa; }\n  @media (min-width: 992px) {\n    .map-wrapper map-layer-legend,\n    .map-wrapper clipped-wms-map-statistics {\n      position: absolute;\n      left: 10px;\n      padding: 8px;\n      border: 1px solid #aaa;\n      background-color: rgba(255, 255, 255, 0.85);\n      border-radius: 5px; }\n    .map-wrapper map-layer-legend {\n      bottom: 25px;\n      width: 60%; }\n      .map-wrapper map-layer-legend .gridded-legend {\n        margin-top: 0px;\n        border-bottom: none;\n        width: 100%;\n        height: 125px;\n        border: none; }\n    .map-wrapper clipped-wms-map-statistics {\n      top: 10px; } }\n"

/***/ }),

/***/ "../npn/common/src/lib/visualizations/clipped-wms-map/clipped-wms-map.component.ts":
/*!*****************************************************************************************!*\
  !*** ../npn/common/src/lib/visualizations/clipped-wms-map/clipped-wms-map.component.ts ***!
  \*****************************************************************************************/
/*! exports provided: ClippedWmsMapComponent */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ClippedWmsMapComponent", function() { return ClippedWmsMapComponent; });
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @angular/core */ "../../node_modules/@angular/core/fesm5/core.js");
/* harmony import */ var _angular_flex_layout__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @angular/flex-layout */ "../../node_modules/@angular/flex-layout/esm5/flex-layout.es5.js");
/* harmony import */ var _map_visualization_base_component__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../map-visualization-base.component */ "../npn/common/src/lib/visualizations/map-visualization-base.component.ts");
/* harmony import */ var _clipped_wms_map_selection__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./clipped-wms-map-selection */ "../npn/common/src/lib/visualizations/clipped-wms-map/clipped-wms-map-selection.ts");
var __extends = (undefined && undefined.__extends) || (function () {
    var extendStatics = Object.setPrototypeOf ||
        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __decorate = (undefined && undefined.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (undefined && undefined.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};




var ClippedWmsMapComponent = /** @class */ (function (_super) {
    __extends(ClippedWmsMapComponent, _super);
    function ClippedWmsMapComponent(rootElement, media) {
        var _this = _super.call(this, rootElement, media) || this;
        _this.rootElement = rootElement;
        _this.media = media;
        return _this;
    }
    ClippedWmsMapComponent.prototype.mapReady = function (map) {
        this.getMapResolver(map);
    };
    ClippedWmsMapComponent.prototype.reset = function () {
        var _this = this;
        this.getMap().then(function (m) {
            _this.selection.removeFrom(m)
                .then(function () {
                _super.prototype.reset.call(_this);
            });
        });
    };
    ClippedWmsMapComponent.prototype.update = function () {
        var _this = this;
        this.resize();
        this.getMap().then(function (m) {
            _this.selection.removeFrom(m)
                .then(function () {
                _this.selection.addTo(m);
            });
        });
    };
    ClippedWmsMapComponent.prototype.resize = function () {
        var _this = this;
        _super.prototype.resize.call(this);
        this.getMap().then(function (m) { return _this.selection.resizeMap(m); });
    };
    __decorate([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Input"])(),
        __metadata("design:type", _clipped_wms_map_selection__WEBPACK_IMPORTED_MODULE_3__["ClippedWmsMapSelection"])
    ], ClippedWmsMapComponent.prototype, "selection", void 0);
    ClippedWmsMapComponent = __decorate([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Component"])({
            selector: 'clipped-wms-map',
            template: __webpack_require__(/*! ./clipped-wms-map.component.html */ "../npn/common/src/lib/visualizations/clipped-wms-map/clipped-wms-map.component.html"),
            styles: [__webpack_require__(/*! ./clipped-wms-map.component.scss */ "../npn/common/src/lib/visualizations/clipped-wms-map/clipped-wms-map.component.scss")],
            encapsulation: _angular_core__WEBPACK_IMPORTED_MODULE_0__["ViewEncapsulation"].None
        }),
        __metadata("design:paramtypes", [_angular_core__WEBPACK_IMPORTED_MODULE_0__["ElementRef"], _angular_flex_layout__WEBPACK_IMPORTED_MODULE_1__["ObservableMedia"]])
    ], ClippedWmsMapComponent);
    return ClippedWmsMapComponent;
}(_map_visualization_base_component__WEBPACK_IMPORTED_MODULE_2__["MapVisualizationBaseComponent"]));



/***/ }),

/***/ "../npn/common/src/lib/visualizations/clipped-wms-map/index.ts":
/*!*********************************************************************!*\
  !*** ../npn/common/src/lib/visualizations/clipped-wms-map/index.ts ***!
  \*********************************************************************/
/*! exports provided: ClippedWmsMapSelection, ClippedWmsMapSelectionFactory, ClippedWmsMapControl, ClippedWmsMapComponent, ClippedWmsMapStatisticsComponent, ClippedStatValuePipe */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _public_api__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./public_api */ "../npn/common/src/lib/visualizations/clipped-wms-map/public_api.ts");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "ClippedWmsMapSelection", function() { return _public_api__WEBPACK_IMPORTED_MODULE_0__["ClippedWmsMapSelection"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "ClippedWmsMapSelectionFactory", function() { return _public_api__WEBPACK_IMPORTED_MODULE_0__["ClippedWmsMapSelectionFactory"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "ClippedWmsMapControl", function() { return _public_api__WEBPACK_IMPORTED_MODULE_0__["ClippedWmsMapControl"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "ClippedWmsMapComponent", function() { return _public_api__WEBPACK_IMPORTED_MODULE_0__["ClippedWmsMapComponent"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "ClippedWmsMapStatisticsComponent", function() { return _public_api__WEBPACK_IMPORTED_MODULE_0__["ClippedWmsMapStatisticsComponent"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "ClippedStatValuePipe", function() { return _public_api__WEBPACK_IMPORTED_MODULE_0__["ClippedStatValuePipe"]; });




/***/ }),

/***/ "../npn/common/src/lib/visualizations/clipped-wms-map/public_api.ts":
/*!**************************************************************************!*\
  !*** ../npn/common/src/lib/visualizations/clipped-wms-map/public_api.ts ***!
  \**************************************************************************/
/*! exports provided: ClippedWmsMapSelection, ClippedWmsMapSelectionFactory, ClippedWmsMapControl, ClippedWmsMapComponent, ClippedWmsMapStatisticsComponent, ClippedStatValuePipe */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _clipped_wms_map_selection__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./clipped-wms-map-selection */ "../npn/common/src/lib/visualizations/clipped-wms-map/clipped-wms-map-selection.ts");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "ClippedWmsMapSelection", function() { return _clipped_wms_map_selection__WEBPACK_IMPORTED_MODULE_0__["ClippedWmsMapSelection"]; });

/* harmony import */ var _clipped_wms_map_selection_factory__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./clipped-wms-map-selection-factory */ "../npn/common/src/lib/visualizations/clipped-wms-map/clipped-wms-map-selection-factory.ts");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "ClippedWmsMapSelectionFactory", function() { return _clipped_wms_map_selection_factory__WEBPACK_IMPORTED_MODULE_1__["ClippedWmsMapSelectionFactory"]; });

/* harmony import */ var _clipped_wms_map_control_component__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./clipped-wms-map-control.component */ "../npn/common/src/lib/visualizations/clipped-wms-map/clipped-wms-map-control.component.ts");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "ClippedWmsMapControl", function() { return _clipped_wms_map_control_component__WEBPACK_IMPORTED_MODULE_2__["ClippedWmsMapControl"]; });

/* harmony import */ var _clipped_wms_map_component__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./clipped-wms-map.component */ "../npn/common/src/lib/visualizations/clipped-wms-map/clipped-wms-map.component.ts");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "ClippedWmsMapComponent", function() { return _clipped_wms_map_component__WEBPACK_IMPORTED_MODULE_3__["ClippedWmsMapComponent"]; });

/* harmony import */ var _clipped_wms_map_statistics_component__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./clipped-wms-map-statistics.component */ "../npn/common/src/lib/visualizations/clipped-wms-map/clipped-wms-map-statistics.component.ts");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "ClippedWmsMapStatisticsComponent", function() { return _clipped_wms_map_statistics_component__WEBPACK_IMPORTED_MODULE_4__["ClippedWmsMapStatisticsComponent"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "ClippedStatValuePipe", function() { return _clipped_wms_map_statistics_component__WEBPACK_IMPORTED_MODULE_4__["ClippedStatValuePipe"]; });








/***/ }),

/***/ "../npn/common/src/lib/visualizations/common-controls/higher-species-phenophase-input.component.ts":
/*!*********************************************************************************************************!*\
  !*** ../npn/common/src/lib/visualizations/common-controls/higher-species-phenophase-input.component.ts ***!
  \*********************************************************************************************************/
/*! exports provided: HigherSpeciesPhenophaseInputComponent */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "HigherSpeciesPhenophaseInputComponent", function() { return HigherSpeciesPhenophaseInputComponent; });
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @angular/core */ "../../node_modules/@angular/core/fesm5/core.js");
/* harmony import */ var _angular_forms__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @angular/forms */ "../../node_modules/@angular/forms/fesm5/forms.js");
/* harmony import */ var _vis_selection__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../vis-selection */ "../npn/common/src/lib/visualizations/vis-selection.ts");
/* harmony import */ var rxjs__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! rxjs */ "../../node_modules/rxjs/_esm5/index.js");
/* harmony import */ var rxjs_operators__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! rxjs/operators */ "../../node_modules/rxjs/_esm5/operators/index.js");
/* harmony import */ var _common__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../../common */ "../npn/common/src/lib/common/index.ts");
/* harmony import */ var _angular_common_http__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! @angular/common/http */ "../../node_modules/@angular/common/fesm5/http.js");
/* harmony import */ var _fortawesome_pro_light_svg_icons__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! @fortawesome/pro-light-svg-icons */ "../../node_modules/@fortawesome/pro-light-svg-icons/index.es.js");
var __extends = (undefined && undefined.__extends) || (function () {
    var extendStatics = Object.setPrototypeOf ||
        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __decorate = (undefined && undefined.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (undefined && undefined.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};








/**
 * Filtering of applicable species is based upon the `criteria` input.
 */
var HigherSpeciesPhenophaseInputComponent = /** @class */ (function (_super) {
    __extends(HigherSpeciesPhenophaseInputComponent, _super);
    function HigherSpeciesPhenophaseInputComponent(speciesService, speciesTitle) {
        var _this = _super.call(this) || this;
        _this.speciesService = speciesService;
        _this.speciesTitle = speciesTitle;
        _this.required = true;
        _this.disabled = false;
        _this.criteriaUpdate = new rxjs__WEBPACK_IMPORTED_MODULE_3__["Subject"]();
        _this.debug = false;
        _this.plotChange = new _angular_core__WEBPACK_IMPORTED_MODULE_0__["EventEmitter"]();
        _this.speciesRank = new _angular_forms__WEBPACK_IMPORTED_MODULE_1__["FormControl"]();
        _this.speciesRanks = [{
                label: 'Species',
                rank: _common__WEBPACK_IMPORTED_MODULE_5__["TaxonomicSpeciesRank"].SPECIES
            }, {
                label: 'Genus',
                rank: _common__WEBPACK_IMPORTED_MODULE_5__["TaxonomicSpeciesRank"].GENUS
            }, {
                label: 'Family',
                rank: _common__WEBPACK_IMPORTED_MODULE_5__["TaxonomicSpeciesRank"].FAMILY
            }, {
                label: 'Order',
                rank: _common__WEBPACK_IMPORTED_MODULE_5__["TaxonomicSpeciesRank"].ORDER
            }, {
                label: 'Class',
                rank: _common__WEBPACK_IMPORTED_MODULE_5__["TaxonomicSpeciesRank"].CLASS
            }
        ];
        _this.species = new _angular_forms__WEBPACK_IMPORTED_MODULE_1__["FormControl"]();
        _this.fetchingSpeciesList = false;
        _this.phenophase = new _angular_forms__WEBPACK_IMPORTED_MODULE_1__["FormControl"]();
        _this.fetchingPhenophaseList = false;
        _this.ignoreGatherColor = false;
        /**
         * Whether or not to gather color and set on the plot
         * This input is ignored if the selection is an instanceof NetworkAwareVisSelection
         * and is using grouping.  In that scenario visualizations will need to calculate
         * colors based on groups.length*plots.length.
         */
        _this.gatherColor = false;
        _this.color = new _angular_forms__WEBPACK_IMPORTED_MODULE_1__["FormControl"]();
        _this.colorList = _common__WEBPACK_IMPORTED_MODULE_5__["STATIC_COLORS"];
        _this.hintIcon = _fortawesome_pro_light_svg_icons__WEBPACK_IMPORTED_MODULE_7__["faInfoCircle"];
        _this.speciesLabel = function (item) { return _this.speciesTitle.transform(item, _this.speciesRank.value); };
        return _this;
    }
    HigherSpeciesPhenophaseInputComponent.prototype.ngOnInit = function () {
        var _this = this;
        this.criteriaUpdate
            .pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_4__["takeUntil"])(this.componentDestroyed))
            .subscribe(function () { return _this.ignoreGatherColor =
            (_this.selection instanceof _vis_selection__WEBPACK_IMPORTED_MODULE_2__["NetworkAwareVisSelection"] &&
                !!_this.selection.groups &&
                _this.selection.groups.length > 0); });
        var $speciesTaxonomicInfo = this.criteriaUpdate.pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_4__["tap"])(function () { return _this.fetchingSpeciesList = true; }), Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_4__["switchMap"])(function (criteria) { return Object(rxjs__WEBPACK_IMPORTED_MODULE_3__["from"])((criteria.stationIds || Promise.resolve([])).then(function (stationIds) {
            var params = new _angular_common_http__WEBPACK_IMPORTED_MODULE_6__["HttpParams"]();
            (stationIds || []).forEach(function (id, idx) { return params = params.set("station_ids[" + idx + "]", "" + id); });
            return params;
        })).pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_4__["switchMap"])(function (params) {
            /*
            IMPORTANT: the network_id/person_id parameters are being added here to cover a special case when the
            vis tool is opened restricted to a network (groupId) or individual (personId).  The application very
            intentionally does not typically use these request parameters but translates results to lists of stations
            instead to support geographic boundaries.  Doing this creates a situation where a visitor _could_ more
            easily create a selection that results in no data on a visualization if they are using boundaries that do
            not intersect with the location of their stations.  This is assumed acceptable since they will either not
            use boundaries or know where their sites are located and draw boundaries accordingly...
             */
            if (_this.selection instanceof _vis_selection__WEBPACK_IMPORTED_MODULE_2__["StationAwareVisSelection"]) {
                var _a = _this.selection, groupId = _a.groupId, personId = _a.personId;
                if (!!groupId) {
                    params = params.set('network_id', groupId);
                }
                if (!!personId) {
                    params = params.set('person_id', personId);
                }
            }
            return _this.speciesService.getAllSpeciesHigher(params, criteria.years);
        })); }), Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_4__["tap"])(function () { return _this.fetchingSpeciesList = false; }));
        Object(rxjs__WEBPACK_IMPORTED_MODULE_3__["combineLatest"])(this.speciesRank.valueChanges, $speciesTaxonomicInfo).pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_4__["filter"])(function (input) { return !!input[0] && !!input[1]; }), Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_4__["map"])(function (input) {
            var rank = input[0], info = input[1];
            _this.speciesTaxInfo = info;
            console.log('speciesTaxInfo', info);
            switch (rank) {
                case _common__WEBPACK_IMPORTED_MODULE_5__["TaxonomicSpeciesRank"].SPECIES:
                    return info.species;
                case _common__WEBPACK_IMPORTED_MODULE_5__["TaxonomicSpeciesRank"].CLASS:
                    return info.classes;
                case _common__WEBPACK_IMPORTED_MODULE_5__["TaxonomicSpeciesRank"].ORDER:
                    return info.orders;
                case _common__WEBPACK_IMPORTED_MODULE_5__["TaxonomicSpeciesRank"].FAMILY:
                    return info.families;
                case _common__WEBPACK_IMPORTED_MODULE_5__["TaxonomicSpeciesRank"].GENUS:
                    return info.genera; // TODO: make sure this works, KW just made genus plural
            }
            throw new Error("Invalid species rank \"" + rank + "\"");
        }), Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_4__["takeUntil"])(this.componentDestroyed)).subscribe(function (list) {
            var rank = _this.speciesRank.value;
            var species = _this.species.value;
            _this.speciesList = list.map(function (item) {
                var label = _this.speciesLabel(item);
                var lower = label.toLowerCase();
                return { item: item, label: label, lower: lower };
            });
            if (rank !== _common__WEBPACK_IMPORTED_MODULE_5__["TaxonomicSpeciesRank"].SPECIES) {
                _this.speciesList.sort(function (a, b) { return a.label.localeCompare(b.label); });
            }
            _this.$filteredSpeciesList = _this.species.valueChanges.pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_4__["debounceTime"])(500), Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_4__["filter"])(function (s) { return typeof (s) === 'string'; }), Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_4__["map"])(function (s) {
                if (s && _this.speciesList) {
                    s = s.trim().toLowerCase();
                    return _this.speciesList.filter(function (o) { return o.lower.indexOf(s) !== -1; });
                }
                return _this.speciesList
                    ? _this.speciesList.slice()
                    : [];
            }));
            // clear the current value if it is no longer valid
            if (species) {
                switch (rank) {
                    case _common__WEBPACK_IMPORTED_MODULE_5__["TaxonomicSpeciesRank"].SPECIES:
                        if (!species.species_id) {
                            _this.species.setValue(null);
                        }
                        break;
                    case _common__WEBPACK_IMPORTED_MODULE_5__["TaxonomicSpeciesRank"].CLASS:
                        if (!species.class_id || !!species.species_id) {
                            _this.species.setValue(null);
                        }
                        break;
                    case _common__WEBPACK_IMPORTED_MODULE_5__["TaxonomicSpeciesRank"].ORDER:
                        if (!species.order_id || !!species.species_id) {
                            _this.species.setValue(null);
                        }
                        break;
                    case _common__WEBPACK_IMPORTED_MODULE_5__["TaxonomicSpeciesRank"].FAMILY:
                        if (!species.family_id || !!species.species_id) {
                            _this.species.setValue(null);
                        }
                        break;
                    case _common__WEBPACK_IMPORTED_MODULE_5__["TaxonomicSpeciesRank"].GENUS:
                        if (!species.genus_id || !!species.species_id) {
                            _this.species.setValue(null);
                        }
                        break;
                }
            }
            else {
                _this.species.setValue(null);
            }
        });
        // whenever species changes go update the available phenophases/classes
        // TODO deal with station_ids?
        var $phenophaseTaxInfo = Object(rxjs__WEBPACK_IMPORTED_MODULE_3__["combineLatest"])(this.species.valueChanges, this.criteriaUpdate.pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_4__["debounceTime"])(500))).pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_4__["tap"])(function () { return _this.fetchingPhenophaseList = true; }), Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_4__["switchMap"])(function (input) {
            console.log('$phenophaseTaxInfo.input', input);
            var species = input[0], criteria = input[1];
            return !!species && typeof (species) === 'object'
                ? Object(rxjs__WEBPACK_IMPORTED_MODULE_3__["from"])((criteria.years && criteria.years.length
                    ? _this.speciesService.getPhenodefinitionsForYears(species, _this.speciesRank.value, criteria.years)
                    : _this.speciesService.getAllPhenodefinitions(species, _this.speciesRank.value))
                    .then(function (phenos) { return _this.speciesService.generatePhenophaseTaxonomicInfo(phenos); }))
                : Object(rxjs__WEBPACK_IMPORTED_MODULE_3__["of"])(null);
        }), Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_4__["tap"])(function () { return _this.fetchingPhenophaseList = false; }));
        // when the in
        var $phenoListChange = $phenophaseTaxInfo.pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_4__["map"])(function (info) {
            _this.phenophaseTaxInfo = info;
            if (info) {
                console.log('phenophaseTaxInfo', info);
                return info.classes.map(function (item) { return ({
                    item: item,
                    label: item.pheno_class_name
                }); });
            }
            return [];
        }), Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_4__["tap"])(function (list) { return _this.phenophaseList = list; }), Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_4__["takeUntil"])(this.componentDestroyed));
        //  species or list of phenophases changed, need to check validity of phenophase if set
        Object(rxjs__WEBPACK_IMPORTED_MODULE_3__["combineLatest"])(this.species.valueChanges, $phenoListChange).pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_4__["takeUntil"])(this.componentDestroyed)).subscribe(function (input) {
            var species = input[0], phenoList = input[1];
            if (!species) {
                if (_this.phenophase.enabled) {
                    _this.phenophase.disable({ emitEvent: false });
                }
                return _this.phenophase.setValue(null);
            }
            if (_this.phenophase.disabled) {
                _this.phenophase.enable({ emitEvent: false });
            }
            var phenophase = _this.phenophase.value;
            if (phenophase && phenoList.length) {
                var key_1 = 'pheno_class_id';
                var id_1 = phenophase[key_1];
                //console.log(`check pheno validity id=${id}`,phenophase,phenoList);
                if (!id_1) { // can't be valid, rank changed
                    return _this.phenophase.setValue(null);
                }
                var valid = phenoList.reduce(function (found, i) { return (found || (i.item[key_1] === id_1 ? i : null)); }, null);
                _this.phenophase.setValue(valid ? valid.item : null);
            }
        });
        this.speciesRank.setValue((this.plot ? this.plot.speciesRank : null) || _common__WEBPACK_IMPORTED_MODULE_5__["TaxonomicSpeciesRank"].SPECIES);
        this.species.setValue(this.plot ? this.plot.species : null);
        this.phenophase.setValue(this.plot ? this.plot.phenophase : null);
        this.color.setValue(this.plot ? this.plot.color : null);
        Object(rxjs__WEBPACK_IMPORTED_MODULE_3__["combineLatest"])(this.phenophase.valueChanges, $phenophaseTaxInfo).pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_4__["takeUntil"])(this.componentDestroyed)).subscribe(function (input) {
            var pheno = input[0], list = input[1];
            _this.phenophaseHint = (!!pheno && !!list && !!list.phenophases && list.phenophases.length)
                ? ('Phenophases included: ' + list.phenophases
                    .filter(function (pp) { return pheno.pheno_class_id == pp.pheno_class_id; }) // phenophases of class
                    .sort(function (a, b) { return a.seq_num - b.seq_num; })
                    .map(function (pp) { return pp.phenophase_name.trim(); }) // map t name
                    .reduce(function (arr, ppn) {
                    if (arr.indexOf(ppn) === -1) {
                        arr.push(ppn);
                    }
                    return arr;
                }, [])
                    .join(', '))
                : undefined;
        });
        // gather up any input changes and propagate them outward
        this.group = new _angular_forms__WEBPACK_IMPORTED_MODULE_1__["FormGroup"]({
            speciesRank: this.speciesRank,
            species: this.species,
            phenophase: this.phenophase,
            color: this.color,
        });
        this.checkDisabled();
        this.checkRequired();
        this.criteriaUpdate.next(this.criteria || {});
        this.group.valueChanges
            .pipe(
        //tap(v => console.log('selection changed',v)),
        // TODO expand the condition that decides when a plot is complete...
        Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_4__["map"])(function (v) { return !!v.speciesRank && !!v.species && typeof (v.species) === 'object'
            && !!v.phenophase
            && (!_this.actuallyGatherColor || !!v.color)
            ? v
            : null; }), Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_4__["takeUntil"])(this.componentDestroyed))
            .subscribe(function (v) {
            //setTimeout(() => {
            // edit the plot in place, it may be a class
            _this.plot.speciesRank = v ? v.speciesRank : null;
            _this.plot.species = v ? v.species : null;
            _this.plot.phenophaseRank = _common__WEBPACK_IMPORTED_MODULE_5__["TaxonomicPhenophaseRank"].CLASS;
            _this.plot.phenophase = v ? v.phenophase : null;
            if (_this.actuallyGatherColor) {
                _this.plot.color = v ? v.color : null;
            }
            else {
                delete _this.plot.color; // just to be safe, mostly stesting
            }
            _this.plotChange.next(_this.plot);
            //});
        });
    };
    Object.defineProperty(HigherSpeciesPhenophaseInputComponent.prototype, "criteria", {
        get: function () {
            return this._criteria;
        },
        set: function (c) {
            this.criteriaUpdate.next(this._criteria = c);
        },
        enumerable: true,
        configurable: true
    });
    HigherSpeciesPhenophaseInputComponent.prototype.checkDisabled = function () {
        if (this.group) {
            if (this.disabled) {
                this.group.disable();
            }
            else {
                this.group.enable();
            }
        }
    };
    HigherSpeciesPhenophaseInputComponent.prototype.checkRequired = function () {
        var _this = this;
        if (this.group) {
            var validators_1 = this.required
                ? [_angular_forms__WEBPACK_IMPORTED_MODULE_1__["Validators"].required]
                : null;
            Object.keys(this.group.controls).forEach(function (key) { return _this.group.controls[key].setValidators(validators_1); });
            this.group.updateValueAndValidity();
        }
    };
    HigherSpeciesPhenophaseInputComponent.prototype.ngOnChanges = function (changes) {
        if (changes.disabled) {
            this.checkDisabled();
        }
        if (changes.required) {
            this.checkRequired();
        }
    };
    HigherSpeciesPhenophaseInputComponent.prototype.ngOnDestroy = function () {
        _super.prototype.ngOnDestroy.call(this);
        this.criteriaUpdate.complete();
    };
    Object.defineProperty(HigherSpeciesPhenophaseInputComponent.prototype, "speciesTaxRankPlaceholder", {
        get: function () {
            return 'Taxonomic rank' + (this.required ? ' *' : '');
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(HigherSpeciesPhenophaseInputComponent.prototype, "speciesPlaceholder", {
        get: function () {
            var rank = this.speciesRank
                ? this.speciesRank.value
                : _common__WEBPACK_IMPORTED_MODULE_5__["TaxonomicSpeciesRank"].SPECIES;
            var label;
            switch (rank) {
                case _common__WEBPACK_IMPORTED_MODULE_5__["TaxonomicSpeciesRank"].SPECIES:
                    label = 'Species';
                    break;
                case _common__WEBPACK_IMPORTED_MODULE_5__["TaxonomicSpeciesRank"].CLASS:
                    label = 'Class';
                    break;
                case _common__WEBPACK_IMPORTED_MODULE_5__["TaxonomicSpeciesRank"].ORDER:
                    label = 'Order';
                    break;
                case _common__WEBPACK_IMPORTED_MODULE_5__["TaxonomicSpeciesRank"].FAMILY:
                    label = 'Family';
                    break;
                case _common__WEBPACK_IMPORTED_MODULE_5__["TaxonomicSpeciesRank"].GENUS:
                    label = 'Genus';
                    break;
            }
            return label + (!this.fetchingPhenophaseList && (this.speciesList || []).length ? " (" + (this.speciesList || []).length + ")" : '') + (this.required ? ' *' : '');
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(HigherSpeciesPhenophaseInputComponent.prototype, "phenophasePlaceholder", {
        get: function () {
            return 'Phenophase class' /*+ ((this.phenophaseList||[]).length ? ` (${(this.phenophaseList||[]).length})`: '')*/ + (this.required ? ' *' : '');
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(HigherSpeciesPhenophaseInputComponent.prototype, "actuallyGatherColor", {
        get: function () {
            return this.gatherColor && !this.ignoreGatherColor;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(HigherSpeciesPhenophaseInputComponent.prototype, "colorPlaceholder", {
        get: function () {
            return 'Color' + (this.required ? ' *' : '');
        },
        enumerable: true,
        configurable: true
    });
    HigherSpeciesPhenophaseInputComponent.prototype.speciesFocus = function () {
        if (!this.species.value) {
            this.species.setValue(' ');
        }
    };
    Object.defineProperty(HigherSpeciesPhenophaseInputComponent.prototype, "showSpeciesHint", {
        get: function () {
            var rank = this.speciesRank.value;
            var s = this.species.value;
            return rank === _common__WEBPACK_IMPORTED_MODULE_5__["TaxonomicSpeciesRank"].SPECIES && !!s
                && (typeof (s.class_common_name) === 'string' && typeof (s.class_name) === 'string')
                && (typeof (s.order_common_name) === 'string' && typeof (s.order_name) === 'string')
                && (typeof (s.family_common_name) === 'string' && typeof (s.family_name) === 'string');
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(HigherSpeciesPhenophaseInputComponent.prototype, "speciesHint", {
        get: function () {
            var species = this.species.value;
            var classDisplay = this.speciesTitle.transform(species, _common__WEBPACK_IMPORTED_MODULE_5__["TaxonomicSpeciesRank"].CLASS);
            var orderDisplay = this.speciesTitle.transform(species, _common__WEBPACK_IMPORTED_MODULE_5__["TaxonomicSpeciesRank"].ORDER);
            var familyDisplay = this.speciesTitle.transform(species, _common__WEBPACK_IMPORTED_MODULE_5__["TaxonomicSpeciesRank"].FAMILY);
            var genusDisplay = this.speciesTitle.transform(species, _common__WEBPACK_IMPORTED_MODULE_5__["TaxonomicSpeciesRank"].GENUS);
            return "Class: \"" + classDisplay + "\" Order: \"" + orderDisplay + "\" Family: \"" + familyDisplay + "\" Genus: \"" + genusDisplay;
        },
        enumerable: true,
        configurable: true
    });
    __decorate([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Input"])(),
        __metadata("design:type", Boolean)
    ], HigherSpeciesPhenophaseInputComponent.prototype, "required", void 0);
    __decorate([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Input"])(),
        __metadata("design:type", Boolean)
    ], HigherSpeciesPhenophaseInputComponent.prototype, "disabled", void 0);
    __decorate([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Input"])(),
        __metadata("design:type", Boolean)
    ], HigherSpeciesPhenophaseInputComponent.prototype, "debug", void 0);
    __decorate([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Input"])(),
        __metadata("design:type", _vis_selection__WEBPACK_IMPORTED_MODULE_2__["VisSelection"])
    ], HigherSpeciesPhenophaseInputComponent.prototype, "selection", void 0);
    __decorate([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Input"])(),
        __metadata("design:type", Object)
    ], HigherSpeciesPhenophaseInputComponent.prototype, "plot", void 0);
    __decorate([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Output"])(),
        __metadata("design:type", Object)
    ], HigherSpeciesPhenophaseInputComponent.prototype, "plotChange", void 0);
    __decorate([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Input"])(),
        __metadata("design:type", Boolean)
    ], HigherSpeciesPhenophaseInputComponent.prototype, "gatherColor", void 0);
    __decorate([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Input"])(),
        __metadata("design:type", Object),
        __metadata("design:paramtypes", [Object])
    ], HigherSpeciesPhenophaseInputComponent.prototype, "criteria", null);
    HigherSpeciesPhenophaseInputComponent = __decorate([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Component"])({
            selector: 'higher-species-phenophase-input',
            template: "\n    <mat-form-field class=\"species-rank-input\">\n        <mat-select [placeholder]=\"speciesTaxRankPlaceholder\" [formControl]=\"speciesRank\">\n            <mat-option *ngFor=\"let r of speciesRanks\" [value]=\"r.rank\">{{r.label}}</mat-option>\n        </mat-select>\n    </mat-form-field>\n    <mat-form-field class=\"species-input\">\n        <input matInput [placeholder]=\"speciesPlaceholder\" aria-label=\"Species\"\n            [matAutocomplete]=\"sp\"\n            [formControl]=\"species\" (focus)=\"speciesFocus()\" />\n        <mat-autocomplete #sp=\"matAutocomplete\" [displayWith]=\"speciesLabel\">\n            <mat-option *ngFor=\"let o of $filteredSpeciesList | async\" [value]=\"o.item\">\n              {{o.label}}\n            </mat-option>\n        </mat-autocomplete>\n        <mat-progress-bar *ngIf=\"fetchingSpeciesList\" mode=\"query\"></mat-progress-bar>\n        <mat-hint *ngIf=\"showSpeciesHint\" align=\"end\"><fa-icon [icon]=\"hintIcon\" [matTooltip]=\"speciesHint\"></fa-icon></mat-hint>\n    </mat-form-field>\n    <mat-form-field class=\"pheno-input\">\n        <mat-select [placeholder]=\"phenophasePlaceholder\" [formControl]=\"phenophase\">\n            <mat-option *ngFor=\"let o of phenophaseList\" [value]=\"o.item\">{{o.label}}</mat-option>\n        </mat-select>\n        <mat-progress-bar *ngIf=\"fetchingPhenophaseList\" mode=\"query\"></mat-progress-bar>\n        <mat-hint *ngIf=\"phenophaseHint\" align=\"end\"><fa-icon [icon]=\"hintIcon\" [matTooltip]=\"phenophaseHint\"></fa-icon></mat-hint>\n    </mat-form-field>\n    <mat-form-field *ngIf=\"actuallyGatherColor\" class=\"color-input\">\n        <mat-select  [placeholder]=\"colorPlaceholder\" [formControl]=\"color\">\n        <mat-select-trigger><div class=\"color-swatch\" [ngStyle]=\"{'background-color':color.value}\"></div></mat-select-trigger>\n        <mat-option *ngFor=\"let c of colorList\" [value]=\"c\"><div class=\"color-swatch\" [ngStyle]=\"{'background-color':c}\"></div></mat-option>\n        </mat-select>\n    </mat-form-field>\n<pre *ngIf=\"debug\">\nspecies={{speciesTaxInfo?.species.length | number}} classes={{speciesTaxInfo?.classes.length | number}} orders={{speciesTaxInfo?.orders.length | number}} families={{speciesTaxInfo?.families.length | number}}\nphenophases={{phenophaseTaxInfo?.phenophases.length | number}} classes={{phenophaseTaxInfo?.classes.length | number}}\n</pre>\n    ",
            styles: ["\n    .color-swatch {\n        display: inline-block;\n        width: 20px;\n        height: 20px;\n    }\n    .color-input {\n        width: 70px;\n    }\n    "]
        }),
        __metadata("design:paramtypes", [_common__WEBPACK_IMPORTED_MODULE_5__["SpeciesService"],
            _common__WEBPACK_IMPORTED_MODULE_5__["TaxonomicSpeciesTitlePipe"]])
    ], HigherSpeciesPhenophaseInputComponent);
    return HigherSpeciesPhenophaseInputComponent;
}(_common__WEBPACK_IMPORTED_MODULE_5__["MonitorsDestroy"]));



/***/ }),

/***/ "../npn/common/src/lib/visualizations/common-controls/index.ts":
/*!*********************************************************************!*\
  !*** ../npn/common/src/lib/visualizations/common-controls/index.ts ***!
  \*********************************************************************/
/*! exports provided: YearRangeInputComponent, HigherSpeciesPhenophaseInputComponent */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _public_api__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./public_api */ "../npn/common/src/lib/visualizations/common-controls/public_api.ts");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "YearRangeInputComponent", function() { return _public_api__WEBPACK_IMPORTED_MODULE_0__["YearRangeInputComponent"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "HigherSpeciesPhenophaseInputComponent", function() { return _public_api__WEBPACK_IMPORTED_MODULE_0__["HigherSpeciesPhenophaseInputComponent"]; });




/***/ }),

/***/ "../npn/common/src/lib/visualizations/common-controls/public_api.ts":
/*!**************************************************************************!*\
  !*** ../npn/common/src/lib/visualizations/common-controls/public_api.ts ***!
  \**************************************************************************/
/*! exports provided: YearRangeInputComponent, HigherSpeciesPhenophaseInputComponent */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _year_range_input_component__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./year-range-input.component */ "../npn/common/src/lib/visualizations/common-controls/year-range-input.component.ts");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "YearRangeInputComponent", function() { return _year_range_input_component__WEBPACK_IMPORTED_MODULE_0__["YearRangeInputComponent"]; });

/* harmony import */ var _higher_species_phenophase_input_component__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./higher-species-phenophase-input.component */ "../npn/common/src/lib/visualizations/common-controls/higher-species-phenophase-input.component.ts");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "HigherSpeciesPhenophaseInputComponent", function() { return _higher_species_phenophase_input_component__WEBPACK_IMPORTED_MODULE_1__["HigherSpeciesPhenophaseInputComponent"]; });





/***/ }),

/***/ "../npn/common/src/lib/visualizations/common-controls/year-range-input.component.ts":
/*!******************************************************************************************!*\
  !*** ../npn/common/src/lib/visualizations/common-controls/year-range-input.component.ts ***!
  \******************************************************************************************/
/*! exports provided: YearRangeInputComponent */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "YearRangeInputComponent", function() { return YearRangeInputComponent; });
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @angular/core */ "../../node_modules/@angular/core/fesm5/core.js");
var __decorate = (undefined && undefined.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (undefined && undefined.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};

var YearRangeInputComponent = /** @class */ (function () {
    function YearRangeInputComponent() {
        this.startChange = new _angular_core__WEBPACK_IMPORTED_MODULE_0__["EventEmitter"]();
        this.onStartChange = new _angular_core__WEBPACK_IMPORTED_MODULE_0__["EventEmitter"]();
        this.endChange = new _angular_core__WEBPACK_IMPORTED_MODULE_0__["EventEmitter"]();
        this.onEndChange = new _angular_core__WEBPACK_IMPORTED_MODULE_0__["EventEmitter"]();
        this.maxSpan = 10;
        this.validStarts = (function () {
            var max = (new Date()).getFullYear(), current = 1900, years = [];
            while (current <= max) {
                years.push(current++);
            }
            return years.reverse();
        })();
        this.validEnds = [];
    }
    Object.defineProperty(YearRangeInputComponent.prototype, "start", {
        get: function () {
            return this.startValue;
        },
        set: function (s) {
            if (typeof (s) === 'string') {
                s = +s;
            }
            if (s !== this.startValue) {
                var oldValue = this.startValue;
                this.startChange.emit(this.startValue = s);
                this.onStartChange.emit({
                    oldValue: oldValue,
                    newValue: this.startValue
                });
                if (s) {
                    var thisYear = (new Date()).getFullYear(), current = s, //+1,
                    max = current + this.maxSpan, ends = [];
                    if (max > thisYear) {
                        max = thisYear + 1;
                    }
                    while (current < max) {
                        ends.push(current++);
                    }
                    this.validEnds = ends.reverse();
                    // if(this.end > max) {
                    //     this.end = undefined;
                    // }
                }
            }
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(YearRangeInputComponent.prototype, "end", {
        get: function () {
            return this.endValue;
        },
        set: function (e) {
            if (typeof (e) === 'string') {
                e = +e;
            }
            if (e !== this.endValue) {
                var oldValue = this.endValue;
                this.endChange.emit(this.endValue = e);
                this.onEndChange.emit({
                    oldValue: oldValue,
                    newValue: this.endValue
                });
            }
        },
        enumerable: true,
        configurable: true
    });
    __decorate([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Output"])(),
        __metadata("design:type", Object)
    ], YearRangeInputComponent.prototype, "startChange", void 0);
    __decorate([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Output"])(),
        __metadata("design:type", Object)
    ], YearRangeInputComponent.prototype, "onStartChange", void 0);
    __decorate([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Output"])(),
        __metadata("design:type", Object)
    ], YearRangeInputComponent.prototype, "endChange", void 0);
    __decorate([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Output"])(),
        __metadata("design:type", Object)
    ], YearRangeInputComponent.prototype, "onEndChange", void 0);
    __decorate([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Input"])(),
        __metadata("design:type", Number)
    ], YearRangeInputComponent.prototype, "maxSpan", void 0);
    __decorate([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Input"])(),
        __metadata("design:type", Object),
        __metadata("design:paramtypes", [Number])
    ], YearRangeInputComponent.prototype, "start", null);
    __decorate([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Input"])(),
        __metadata("design:type", Object),
        __metadata("design:paramtypes", [Number])
    ], YearRangeInputComponent.prototype, "end", null);
    YearRangeInputComponent = __decorate([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Component"])({
            selector: 'year-range-input',
            template: "\n    <mat-form-field class=\"start-year\">\n        <mat-select placeholder=\"Start year\" [(ngModel)]=\"start\">\n            <mat-option *ngFor=\"let y of validStarts\" [value]=\"y\">{{y}}</mat-option>\n        </mat-select>\n    </mat-form-field>\n    <mat-form-field class=\"end-year\">\n        <mat-select placeholder=\"End year\" [(ngModel)]=\"end\" [disabled]=\"!start\">\n            <mat-option *ngFor=\"let y of validEnds\" [value]=\"y\">{{y}}</mat-option>\n        </mat-select>\n    </mat-form-field>\n    ",
            styles: ["\n        .start-year,\n        .end-year {\n            width: 75px;\n        }\n        mat-form-field {\n            padding-right: 10px;\n        }\n    "]
        })
    ], YearRangeInputComponent);
    return YearRangeInputComponent;
}());



/***/ }),

/***/ "../npn/common/src/lib/visualizations/index.ts":
/*!*****************************************************!*\
  !*** ../npn/common/src/lib/visualizations/index.ts ***!
  \*****************************************************/
/*! exports provided: VisSelection, NetworkAwareVisSelection, StationAwareVisSelection, VisualizationSelectionFactory, VisualizationsModule, CalendarSelection, CalendarSelectionFactory, CalendarComponent, CalendarControlComponent, ScatterPlotSelection, AXIS, ScatterPlotSelectionFactory, ScatterPlotComponent, ScatterPlotControls, ClippedWmsMapSelection, ClippedWmsMapSelectionFactory, ClippedWmsMapControl, ClippedWmsMapComponent, ClippedWmsMapStatisticsComponent, ClippedStatValuePipe, ActivityCurve, INTERPOLATE, ACTIVITY_CURVE_KINGDOM_METRICS, ActivityFrequency, ACTIVITY_FREQUENCY_MONTHLY, ACTIVITY_FREQUENCY_BIWEEKLY, ACTIVITY_FREQUENCY_WEEKLY, ACTIVITY_FREQUENCIES, ActivityCurvesSelection, ActivityCurvesSelectionFactory, ActivityCurvesComponent, ACTIVITY_CURVES_INTERPOLATES, ActivityCurvesControlComponent, CurveControlComponent, ObserverActivityVisMode, ObserverActivitySelection, ObserverActivitySelectionFactory, ObserverActivityComponent, ObserverActivityControl, ObservationFrequencySelection, ObservationFrequencySelectionFactory, ObservationFrequencyComponent, ObservationFrequencyControl, CATEGORY_PESTS, CATEGORY_TEMP_ACCUMULATIONS, DATA_FUNC, AGDD_COLORS, DEFAULT_AGDD_LAYER_CATEGORY, DEFAULT_AGDD_LAYER_NAME, AgddTimeSeriesSelection, AgddTimeSeriesSelectionFactory, AgddTimeSeriesComponent, AgddTsMapLayerControl, MapSelection, MapSelectionFactory, MapVisualizationComponent, MAP_VIS_SVG_PATHS, MapVisMarker, ExtentControl, ExtentDateControl, ExtentDoyControl, ExtentYearControl, GriddedRangeSliderControl, ConsolidatedMapLayerControlComponent, PestMapLayerControlComponent, TempAccumMapLayerControlComponent, SpringIndexMapLayerControlComponent, MapVisualizationMarkerIw, YearRangeInputComponent, HigherSpeciesPhenophaseInputComponent */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _public_api__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./public_api */ "../npn/common/src/lib/visualizations/public_api.ts");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "VisSelection", function() { return _public_api__WEBPACK_IMPORTED_MODULE_0__["VisSelection"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "NetworkAwareVisSelection", function() { return _public_api__WEBPACK_IMPORTED_MODULE_0__["NetworkAwareVisSelection"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "StationAwareVisSelection", function() { return _public_api__WEBPACK_IMPORTED_MODULE_0__["StationAwareVisSelection"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "VisualizationSelectionFactory", function() { return _public_api__WEBPACK_IMPORTED_MODULE_0__["VisualizationSelectionFactory"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "VisualizationsModule", function() { return _public_api__WEBPACK_IMPORTED_MODULE_0__["VisualizationsModule"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "CalendarSelection", function() { return _public_api__WEBPACK_IMPORTED_MODULE_0__["CalendarSelection"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "CalendarSelectionFactory", function() { return _public_api__WEBPACK_IMPORTED_MODULE_0__["CalendarSelectionFactory"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "CalendarComponent", function() { return _public_api__WEBPACK_IMPORTED_MODULE_0__["CalendarComponent"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "CalendarControlComponent", function() { return _public_api__WEBPACK_IMPORTED_MODULE_0__["CalendarControlComponent"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "ScatterPlotSelection", function() { return _public_api__WEBPACK_IMPORTED_MODULE_0__["ScatterPlotSelection"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "AXIS", function() { return _public_api__WEBPACK_IMPORTED_MODULE_0__["AXIS"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "ScatterPlotSelectionFactory", function() { return _public_api__WEBPACK_IMPORTED_MODULE_0__["ScatterPlotSelectionFactory"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "ScatterPlotComponent", function() { return _public_api__WEBPACK_IMPORTED_MODULE_0__["ScatterPlotComponent"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "ScatterPlotControls", function() { return _public_api__WEBPACK_IMPORTED_MODULE_0__["ScatterPlotControls"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "ClippedWmsMapSelection", function() { return _public_api__WEBPACK_IMPORTED_MODULE_0__["ClippedWmsMapSelection"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "ClippedWmsMapSelectionFactory", function() { return _public_api__WEBPACK_IMPORTED_MODULE_0__["ClippedWmsMapSelectionFactory"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "ClippedWmsMapControl", function() { return _public_api__WEBPACK_IMPORTED_MODULE_0__["ClippedWmsMapControl"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "ClippedWmsMapComponent", function() { return _public_api__WEBPACK_IMPORTED_MODULE_0__["ClippedWmsMapComponent"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "ClippedWmsMapStatisticsComponent", function() { return _public_api__WEBPACK_IMPORTED_MODULE_0__["ClippedWmsMapStatisticsComponent"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "ClippedStatValuePipe", function() { return _public_api__WEBPACK_IMPORTED_MODULE_0__["ClippedStatValuePipe"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "ActivityCurve", function() { return _public_api__WEBPACK_IMPORTED_MODULE_0__["ActivityCurve"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "INTERPOLATE", function() { return _public_api__WEBPACK_IMPORTED_MODULE_0__["INTERPOLATE"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "ACTIVITY_CURVE_KINGDOM_METRICS", function() { return _public_api__WEBPACK_IMPORTED_MODULE_0__["ACTIVITY_CURVE_KINGDOM_METRICS"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "ActivityFrequency", function() { return _public_api__WEBPACK_IMPORTED_MODULE_0__["ActivityFrequency"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "ACTIVITY_FREQUENCY_MONTHLY", function() { return _public_api__WEBPACK_IMPORTED_MODULE_0__["ACTIVITY_FREQUENCY_MONTHLY"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "ACTIVITY_FREQUENCY_BIWEEKLY", function() { return _public_api__WEBPACK_IMPORTED_MODULE_0__["ACTIVITY_FREQUENCY_BIWEEKLY"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "ACTIVITY_FREQUENCY_WEEKLY", function() { return _public_api__WEBPACK_IMPORTED_MODULE_0__["ACTIVITY_FREQUENCY_WEEKLY"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "ACTIVITY_FREQUENCIES", function() { return _public_api__WEBPACK_IMPORTED_MODULE_0__["ACTIVITY_FREQUENCIES"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "ActivityCurvesSelection", function() { return _public_api__WEBPACK_IMPORTED_MODULE_0__["ActivityCurvesSelection"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "ActivityCurvesSelectionFactory", function() { return _public_api__WEBPACK_IMPORTED_MODULE_0__["ActivityCurvesSelectionFactory"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "ActivityCurvesComponent", function() { return _public_api__WEBPACK_IMPORTED_MODULE_0__["ActivityCurvesComponent"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "ACTIVITY_CURVES_INTERPOLATES", function() { return _public_api__WEBPACK_IMPORTED_MODULE_0__["ACTIVITY_CURVES_INTERPOLATES"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "ActivityCurvesControlComponent", function() { return _public_api__WEBPACK_IMPORTED_MODULE_0__["ActivityCurvesControlComponent"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "CurveControlComponent", function() { return _public_api__WEBPACK_IMPORTED_MODULE_0__["CurveControlComponent"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "ObserverActivityVisMode", function() { return _public_api__WEBPACK_IMPORTED_MODULE_0__["ObserverActivityVisMode"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "ObserverActivitySelection", function() { return _public_api__WEBPACK_IMPORTED_MODULE_0__["ObserverActivitySelection"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "ObserverActivitySelectionFactory", function() { return _public_api__WEBPACK_IMPORTED_MODULE_0__["ObserverActivitySelectionFactory"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "ObserverActivityComponent", function() { return _public_api__WEBPACK_IMPORTED_MODULE_0__["ObserverActivityComponent"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "ObserverActivityControl", function() { return _public_api__WEBPACK_IMPORTED_MODULE_0__["ObserverActivityControl"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "ObservationFrequencySelection", function() { return _public_api__WEBPACK_IMPORTED_MODULE_0__["ObservationFrequencySelection"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "ObservationFrequencySelectionFactory", function() { return _public_api__WEBPACK_IMPORTED_MODULE_0__["ObservationFrequencySelectionFactory"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "ObservationFrequencyComponent", function() { return _public_api__WEBPACK_IMPORTED_MODULE_0__["ObservationFrequencyComponent"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "ObservationFrequencyControl", function() { return _public_api__WEBPACK_IMPORTED_MODULE_0__["ObservationFrequencyControl"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "CATEGORY_PESTS", function() { return _public_api__WEBPACK_IMPORTED_MODULE_0__["CATEGORY_PESTS"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "CATEGORY_TEMP_ACCUMULATIONS", function() { return _public_api__WEBPACK_IMPORTED_MODULE_0__["CATEGORY_TEMP_ACCUMULATIONS"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "DATA_FUNC", function() { return _public_api__WEBPACK_IMPORTED_MODULE_0__["DATA_FUNC"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "AGDD_COLORS", function() { return _public_api__WEBPACK_IMPORTED_MODULE_0__["AGDD_COLORS"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "DEFAULT_AGDD_LAYER_CATEGORY", function() { return _public_api__WEBPACK_IMPORTED_MODULE_0__["DEFAULT_AGDD_LAYER_CATEGORY"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "DEFAULT_AGDD_LAYER_NAME", function() { return _public_api__WEBPACK_IMPORTED_MODULE_0__["DEFAULT_AGDD_LAYER_NAME"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "AgddTimeSeriesSelection", function() { return _public_api__WEBPACK_IMPORTED_MODULE_0__["AgddTimeSeriesSelection"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "AgddTimeSeriesSelectionFactory", function() { return _public_api__WEBPACK_IMPORTED_MODULE_0__["AgddTimeSeriesSelectionFactory"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "AgddTimeSeriesComponent", function() { return _public_api__WEBPACK_IMPORTED_MODULE_0__["AgddTimeSeriesComponent"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "AgddTsMapLayerControl", function() { return _public_api__WEBPACK_IMPORTED_MODULE_0__["AgddTsMapLayerControl"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "MapSelection", function() { return _public_api__WEBPACK_IMPORTED_MODULE_0__["MapSelection"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "MapSelectionFactory", function() { return _public_api__WEBPACK_IMPORTED_MODULE_0__["MapSelectionFactory"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "MapVisualizationComponent", function() { return _public_api__WEBPACK_IMPORTED_MODULE_0__["MapVisualizationComponent"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "MAP_VIS_SVG_PATHS", function() { return _public_api__WEBPACK_IMPORTED_MODULE_0__["MAP_VIS_SVG_PATHS"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "MapVisMarker", function() { return _public_api__WEBPACK_IMPORTED_MODULE_0__["MapVisMarker"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "ExtentControl", function() { return _public_api__WEBPACK_IMPORTED_MODULE_0__["ExtentControl"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "ExtentDateControl", function() { return _public_api__WEBPACK_IMPORTED_MODULE_0__["ExtentDateControl"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "ExtentDoyControl", function() { return _public_api__WEBPACK_IMPORTED_MODULE_0__["ExtentDoyControl"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "ExtentYearControl", function() { return _public_api__WEBPACK_IMPORTED_MODULE_0__["ExtentYearControl"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "GriddedRangeSliderControl", function() { return _public_api__WEBPACK_IMPORTED_MODULE_0__["GriddedRangeSliderControl"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "ConsolidatedMapLayerControlComponent", function() { return _public_api__WEBPACK_IMPORTED_MODULE_0__["ConsolidatedMapLayerControlComponent"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "PestMapLayerControlComponent", function() { return _public_api__WEBPACK_IMPORTED_MODULE_0__["PestMapLayerControlComponent"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "TempAccumMapLayerControlComponent", function() { return _public_api__WEBPACK_IMPORTED_MODULE_0__["TempAccumMapLayerControlComponent"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "SpringIndexMapLayerControlComponent", function() { return _public_api__WEBPACK_IMPORTED_MODULE_0__["SpringIndexMapLayerControlComponent"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "MapVisualizationMarkerIw", function() { return _public_api__WEBPACK_IMPORTED_MODULE_0__["MapVisualizationMarkerIw"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "YearRangeInputComponent", function() { return _public_api__WEBPACK_IMPORTED_MODULE_0__["YearRangeInputComponent"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "HigherSpeciesPhenophaseInputComponent", function() { return _public_api__WEBPACK_IMPORTED_MODULE_0__["HigherSpeciesPhenophaseInputComponent"]; });




/***/ }),

/***/ "../npn/common/src/lib/visualizations/map-visualization-base.component.ts":
/*!********************************************************************************!*\
  !*** ../npn/common/src/lib/visualizations/map-visualization-base.component.ts ***!
  \********************************************************************************/
/*! exports provided: MapVisualizationBaseComponent */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "MapVisualizationBaseComponent", function() { return MapVisualizationBaseComponent; });
/* harmony import */ var _visualization_base_component__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./visualization-base.component */ "../npn/common/src/lib/visualizations/visualization-base.component.ts");
/* harmony import */ var _gridded__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../gridded */ "../npn/common/src/lib/gridded/index.ts");
var __extends = (undefined && undefined.__extends) || (function () {
    var extendStatics = Object.setPrototypeOf ||
        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();


/*
IMPORTANT: see not in VisualizationBaseComponent

@Component({
  selector: 'map-visualization-base',
  templateUrl: './map-visualization-base.component.html',
  styleUrls: ['./map-visualization-base.component.scss']
})
*/
var MapVisualizationBaseComponent = /** @class */ (function (_super) {
    __extends(MapVisualizationBaseComponent, _super);
    function MapVisualizationBaseComponent() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        _this.latitude = 38.8402805;
        _this.longitude = -97.61142369999999;
        _this.zoom = 4;
        _this.getMapPromise = new Promise(function (resolve) {
            _this.getMapResolver = resolve;
        });
        _this.mapStyles = _gridded__WEBPACK_IMPORTED_MODULE_1__["MAP_STYLES"];
        return _this;
    }
    MapVisualizationBaseComponent.prototype.mapReady = function (map) {
        var _this = this;
        map.addListener('resize', function () {
            console.log('resize happened');
            console.log('panning to center');
            map.setZoom(3);
            setTimeout(function () {
                map.panTo(new google.maps.LatLng(_this.latitude, _this.longitude));
                map.setZoom(_this.zoom);
            }, 500);
        });
        this.getMapResolver(map);
    };
    MapVisualizationBaseComponent.prototype.getMap = function () {
        return this.getMapPromise;
    };
    MapVisualizationBaseComponent.prototype.resize = function () {
        var _this = this;
        this.getMap().then(function (map) {
            var sizing = _this.getSizeInfo(), root = _this.rootElement.nativeElement, mapElm = root.querySelector('agm-map');
            mapElm.style.width = sizing.width + "px";
            mapElm.style.height = sizing.height + "px";
            google.maps.event.trigger(map, 'resize');
        });
    };
    MapVisualizationBaseComponent.prototype.reset = function () {
        var _this = this;
        this.getMap().then(function (map) {
            console.log('Map reset', map);
            map.panTo(new google.maps.LatLng(_this.latitude, _this.longitude));
            map.setZoom(_this.zoom);
        });
    };
    MapVisualizationBaseComponent.prototype.redraw = function () {
        this.getMap().then(function (map) {
            console.log('Map redraw', map);
        });
    };
    MapVisualizationBaseComponent.prototype.update = function () {
        this.resize();
        this.getMap().then(function (map) {
            console.log('Map update', map);
        });
    };
    return MapVisualizationBaseComponent;
}(_visualization_base_component__WEBPACK_IMPORTED_MODULE_0__["VisualizationBaseComponent"]));



/***/ }),

/***/ "../npn/common/src/lib/visualizations/map/consolidated-map-layer-control.component.ts":
/*!********************************************************************************************!*\
  !*** ../npn/common/src/lib/visualizations/map/consolidated-map-layer-control.component.ts ***!
  \********************************************************************************************/
/*! exports provided: ConsolidatedMapLayerControlComponent, PestMapLayerControlComponent, TempAccumMapLayerControlComponent, SpringIndexMapLayerControlComponent */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ConsolidatedMapLayerControlComponent", function() { return ConsolidatedMapLayerControlComponent; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "PestMapLayerControlComponent", function() { return PestMapLayerControlComponent; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "TempAccumMapLayerControlComponent", function() { return TempAccumMapLayerControlComponent; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "SpringIndexMapLayerControlComponent", function() { return SpringIndexMapLayerControlComponent; });
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @angular/core */ "../../node_modules/@angular/core/fesm5/core.js");
/* harmony import */ var _map_selection__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./map-selection */ "../npn/common/src/lib/visualizations/map/map-selection.ts");
/* harmony import */ var _npn_common_gridded__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @npn/common/gridded */ "../npn/common/src/lib/gridded/index.ts");
/* harmony import */ var _angular_forms__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @angular/forms */ "../../node_modules/@angular/forms/fesm5/forms.js");
/* harmony import */ var rxjs__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! rxjs */ "../../node_modules/rxjs/_esm5/index.js");
/* harmony import */ var rxjs_operators__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! rxjs/operators */ "../../node_modules/rxjs/_esm5/operators/index.js");
/* harmony import */ var _npn_common_common__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! @npn/common/common */ "../npn/common/src/lib/common/index.ts");
/* harmony import */ var _gridded_range_slider_control_component__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./gridded-range-slider-control.component */ "../npn/common/src/lib/visualizations/map/gridded-range-slider-control.component.ts");
var __extends = (undefined && undefined.__extends) || (function () {
    var extendStatics = Object.setPrototypeOf ||
        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __decorate = (undefined && undefined.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (undefined && undefined.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};








var CATEGORY_PESTS = _npn_common_gridded__WEBPACK_IMPORTED_MODULE_2__["CATEGORY_PEST"];
var CATEGORY_TEMP_ACCUMULATIONS = 'Daily Temperature Accumulations';
var CATEGORY_SPRING_INDICES = 'Spring Indices';
var ConsolidatedMapLayerControlComponent = /** @class */ (function () {
    function ConsolidatedMapLayerControlComponent(layerService) {
        this.layerService = layerService;
        this.CATEGORY_PESTS = CATEGORY_PESTS;
        this.CATEGORY_TEMP_ACCUMULATIONS = CATEGORY_TEMP_ACCUMULATIONS;
        this.CATEGORY_SPRING_INDICES = CATEGORY_SPRING_INDICES;
    }
    ConsolidatedMapLayerControlComponent.prototype.ngOnInit = function () {
        var _this = this;
        this.layerService.getLayerDefinitions().then(function (defs) { return _this.layerDefinitions = defs; });
    };
    __decorate([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Input"])(),
        __metadata("design:type", _map_selection__WEBPACK_IMPORTED_MODULE_1__["MapSelection"])
    ], ConsolidatedMapLayerControlComponent.prototype, "selection", void 0);
    __decorate([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["ViewChild"])(_gridded_range_slider_control_component__WEBPACK_IMPORTED_MODULE_7__["GriddedRangeSliderControl"]),
        __metadata("design:type", _gridded_range_slider_control_component__WEBPACK_IMPORTED_MODULE_7__["GriddedRangeSliderControl"])
    ], ConsolidatedMapLayerControlComponent.prototype, "rangeSlider", void 0);
    ConsolidatedMapLayerControlComponent = __decorate([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Component"])({
            selector: 'consolidated-map-layer-control',
            template: "\n    <mat-form-field class=\"layer-category\">\n        <mat-select placeholder=\"Layer category\" [(ngModel)]=\"selection.layerCategory\">\n            <mat-option [value]=\"null\">None</mat-option>\n            <mat-option [value]=\"CATEGORY_PESTS\">{{CATEGORY_PESTS}}</mat-option>\n            <mat-option [value]=\"CATEGORY_TEMP_ACCUMULATIONS\">{{CATEGORY_TEMP_ACCUMULATIONS}}</mat-option>\n            <mat-option [value]=\"CATEGORY_SPRING_INDICES\">{{CATEGORY_SPRING_INDICES}}</mat-option>\n        </mat-select>\n    </mat-form-field>\n    <div [ngSwitch]=\"selection.layerCategory\" *ngIf=\"selection.layerCategory && layerDefinitions\">\n        <pest-map-layer-control *ngSwitchCase=\"CATEGORY_PESTS\" [selection]=\"selection\" [layerDefinitions]=\"layerDefinitions\"></pest-map-layer-control>\n        <temp-accum-map-layer-control *ngSwitchCase=\"CATEGORY_TEMP_ACCUMULATIONS\" [selection]=\"selection\" [layerDefinitions]=\"layerDefinitions\"></temp-accum-map-layer-control>\n        <spring-index-map-layer-control *ngSwitchCase=\"CATEGORY_SPRING_INDICES\" [selection]=\"selection\" [layerDefinitions]=\"layerDefinitions\"></spring-index-map-layer-control>\n    </div>\n    <div *ngIf=\"selection.layer\" class=\"layer-controls\">\n        <extent-control [selection]=\"selection\"></extent-control>\n        <supports-opacity-control [supportsOpacity]=\"selection\"></supports-opacity-control>\n        <gridded-range-slider [selection]=\"selection\"></gridded-range-slider>\n        <p *ngIf=\"selection.layer.hasAbstract()\" [innerHTML]=\"selection.layer.getAbstract()\"></p>\n    </div>\n    ",
            styles: ["\n    :host {\n        display: block;\n    }\n    mat-form-field.layer-category {\n        display: block;\n    }\n    .layer-controls {\n        width: 400px;\n    }\n    .layer-controls >p {\n        margin: 12px 0px 0px 0px;\n    }\n    "],
            encapsulation: _angular_core__WEBPACK_IMPORTED_MODULE_0__["ViewEncapsulation"].None
        }),
        __metadata("design:paramtypes", [_npn_common_gridded__WEBPACK_IMPORTED_MODULE_2__["NpnMapLayerService"]])
    ], ConsolidatedMapLayerControlComponent);
    return ConsolidatedMapLayerControlComponent;
}());

var PestMapLayerControlComponent = /** @class */ (function () {
    function PestMapLayerControlComponent() {
    }
    PestMapLayerControlComponent.prototype.ngOnInit = function () {
        this.layers = this.layerDefinitions.categories.find(function (c) { return c.name === _npn_common_gridded__WEBPACK_IMPORTED_MODULE_2__["CATEGORY_PEST"]; }).layers;
        if (!this.selection.layerName) {
            this.selection.layerName = this.layers[0].name;
            this.selection.redraw();
        }
    };
    __decorate([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Input"])(),
        __metadata("design:type", Object)
    ], PestMapLayerControlComponent.prototype, "selection", void 0);
    __decorate([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Input"])(),
        __metadata("design:type", Object)
    ], PestMapLayerControlComponent.prototype, "layerDefinitions", void 0);
    PestMapLayerControlComponent = __decorate([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Component"])({
            selector: 'pest-map-layer-control',
            template: "\n    <mat-form-field>\n        <mat-select placeholder=\"Phenoforecast\" [(ngModel)]=\"selection.layerName\" (selectionChange)=\"selection.redraw()\">\n            <mat-option *ngFor=\"let l of layers\" [value]=\"l.name\">{{l.title}}</mat-option>\n        </mat-select>\n    </mat-form-field>\n    ",
            styles: ["\n    mat-form-field {\n        display: block;\n    }\n    "]
        })
    ], PestMapLayerControlComponent);
    return PestMapLayerControlComponent;
}());

var LOWER_44_CENTER = [38.535680, -99.248833];
var AK_CENTER = [64.559308, -141.465422];
var TEMP_ACCUM_BASE;
(function (TEMP_ACCUM_BASE) {
    TEMP_ACCUM_BASE["DAILY_30Y_AVG"] = "Daily 30-year Average";
    TEMP_ACCUM_BASE["CUR_DAY"] = "Current Day";
    TEMP_ACCUM_BASE["DAILY_ANOM"] = "Daily Anomaly";
})(TEMP_ACCUM_BASE || (TEMP_ACCUM_BASE = {}));
var TempAccumMapLayerControlComponent = /** @class */ (function (_super) {
    __extends(TempAccumMapLayerControlComponent, _super);
    function TempAccumMapLayerControlComponent() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        _this.agddTimeSeries = false;
        _this.baseOpts = [TEMP_ACCUM_BASE.DAILY_30Y_AVG, TEMP_ACCUM_BASE.CUR_DAY, TEMP_ACCUM_BASE.DAILY_ANOM];
        return _this;
    }
    TempAccumMapLayerControlComponent.prototype.ngOnInit = function () {
        var _this = this;
        var categories = this.layerDefinitions.categories.reduce(function (map, cat) { return (map[cat.name] = cat) && map; }, {});
        //console.log('TempAccumMapLayerControlComponent: TEMP ACCUM CATEGORIES',categories);
        var initBaseValue = TEMP_ACCUM_BASE.DAILY_30Y_AVG;
        var initDegValue = 32;
        var initAkValue = false;
        var initLayerName = this.selection.layerName;
        if (initLayerName) {
            // re-build values based on which layer was selected
            var initCatName = [
                _npn_common_gridded__WEBPACK_IMPORTED_MODULE_2__["CATEGORY_TEMP_ACCUM_30_YR_AVG"],
                _npn_common_gridded__WEBPACK_IMPORTED_MODULE_2__["CATEGORY_TEMP_ACCUM_CURRENT_AK"],
                _npn_common_gridded__WEBPACK_IMPORTED_MODULE_2__["CATEGORY_TEMP_ACCUM_CURRENT"],
                _npn_common_gridded__WEBPACK_IMPORTED_MODULE_2__["CATEGORY_TEMP_ACCUM_DAILY_ANOM"]
            ].find(function (catName) { return !!categories[catName].layers.find(function (l) { return l.name === initLayerName; }); });
            var initCat = categories[initCatName];
            //console.log(`TempAccumMapLayerControlComponent: ${initLayerName} is in "${initCatName}"`,initCat);
            switch (initCatName) {
                case _npn_common_gridded__WEBPACK_IMPORTED_MODULE_2__["CATEGORY_TEMP_ACCUM_30_YR_AVG"]:
                    initBaseValue = TEMP_ACCUM_BASE.DAILY_30Y_AVG;
                    break;
                case _npn_common_gridded__WEBPACK_IMPORTED_MODULE_2__["CATEGORY_TEMP_ACCUM_CURRENT"]:
                case _npn_common_gridded__WEBPACK_IMPORTED_MODULE_2__["CATEGORY_TEMP_ACCUM_CURRENT_AK"]:
                    initBaseValue = TEMP_ACCUM_BASE.CUR_DAY;
                    break;
                case _npn_common_gridded__WEBPACK_IMPORTED_MODULE_2__["CATEGORY_TEMP_ACCUM_DAILY_ANOM"]:
                    initBaseValue = TEMP_ACCUM_BASE.DAILY_ANOM;
                    break;
            }
            initDegValue = initCat.layers[0].name === initLayerName
                ? 32
                : 50;
            initAkValue = initCatName === _npn_common_gridded__WEBPACK_IMPORTED_MODULE_2__["CATEGORY_TEMP_ACCUM_CURRENT_AK"];
        }
        console.log("TempAccumMapLayerControlComponent: initBaseValue=\"" + initBaseValue + "\" initDegValue=" + initDegValue + " initAkValue=" + initAkValue);
        this.baseLayer = new _angular_forms__WEBPACK_IMPORTED_MODULE_3__["FormControl"](initBaseValue);
        if (this.agddTimeSeries) {
            this.baseLayer.disable();
        }
        this.degreeBase = new _angular_forms__WEBPACK_IMPORTED_MODULE_3__["FormControl"](initDegValue);
        if (!this.agddTimeSeries) {
            this.alaska = new _angular_forms__WEBPACK_IMPORTED_MODULE_3__["FormControl"](initAkValue);
            this.baseLayer.valueChanges
                .pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_5__["startWith"])(this.baseLayer.value), Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_5__["takeUntil"])(this.componentDestroyed))
                .subscribe(function (baseLayer) {
                if (baseLayer === TEMP_ACCUM_BASE.CUR_DAY) {
                    _this.alaska.enable();
                }
                else {
                    _this.alaska.disable();
                    if (_this.alaska.value) {
                        _this.alaska.setValue(false);
                    }
                }
            });
        }
        (this.alaska
            ? Object(rxjs__WEBPACK_IMPORTED_MODULE_4__["merge"])(this.baseLayer.valueChanges, this.degreeBase.valueChanges, this.alaska.valueChanges)
            : Object(rxjs__WEBPACK_IMPORTED_MODULE_4__["merge"])(this.baseLayer.valueChanges, this.degreeBase.valueChanges))
            .pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_5__["startWith"])(null), Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_5__["debounceTime"])(250), Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_5__["takeUntil"])(this.componentDestroyed)).subscribe(function () {
            var base = _this.baseLayer.value;
            var degrees = _this.degreeBase.value;
            // IMPORTANT: in gridded-comomon for all temp accumulations layer sets there are two
            // layers, the first is 32 degree and the second is 50 degree
            var degreesIndex = degrees === 32 ? 0 : 1;
            var ak = _this.alaska ? _this.alaska.value : false;
            var categoryName = null;
            switch (base) {
                case TEMP_ACCUM_BASE.DAILY_30Y_AVG:
                    categoryName = _npn_common_gridded__WEBPACK_IMPORTED_MODULE_2__["CATEGORY_TEMP_ACCUM_30_YR_AVG"];
                    break;
                case TEMP_ACCUM_BASE.CUR_DAY:
                    categoryName = ak ? _npn_common_gridded__WEBPACK_IMPORTED_MODULE_2__["CATEGORY_TEMP_ACCUM_CURRENT_AK"] : _npn_common_gridded__WEBPACK_IMPORTED_MODULE_2__["CATEGORY_TEMP_ACCUM_CURRENT"];
                    break;
                case TEMP_ACCUM_BASE.DAILY_ANOM:
                    categoryName = _npn_common_gridded__WEBPACK_IMPORTED_MODULE_2__["CATEGORY_TEMP_ACCUM_DAILY_ANOM"];
                    break;
            }
            _this.selection.layerName = categories[categoryName].layers[degreesIndex].name;
            _this.selection.redraw();
        });
        if (this.alaska) {
            this.alaska.valueChanges
                .pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_5__["takeUntil"])(this.componentDestroyed))
                .subscribe(function (ak) { return _this.selection.center = ak ? AK_CENTER : LOWER_44_CENTER; });
        }
    };
    __decorate([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Input"])(),
        __metadata("design:type", Object)
    ], TempAccumMapLayerControlComponent.prototype, "selection", void 0);
    __decorate([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Input"])(),
        __metadata("design:type", Object)
    ], TempAccumMapLayerControlComponent.prototype, "layerDefinitions", void 0);
    __decorate([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Input"])(),
        __metadata("design:type", Boolean)
    ], TempAccumMapLayerControlComponent.prototype, "agddTimeSeries", void 0);
    TempAccumMapLayerControlComponent = __decorate([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Component"])({
            selector: 'temp-accum-map-layer-control',
            template: "\n    <div class=\"base-ak\">\n        <mat-form-field class=\"base-layer\">\n            <mat-select placeholder=\"Layer\" [formControl]=\"baseLayer\">\n                <mat-option *ngFor=\"let b of baseOpts\" [value]=\"b\">{{b}}</mat-option>\n            </mat-select>\n        </mat-form-field>\n        <mat-checkbox *ngIf=\"!!alaska\" [formControl]=\"alaska\">Alaska</mat-checkbox>\n    </div>\n    <mat-form-field>\n        <mat-select placeholder=\"Degree base\" [formControl]=\"degreeBase\">\n            <mat-option [value]=\"32\">32 &deg;</mat-option>\n            <mat-option [value]=\"50\">50 &deg;</mat-option>\n        </mat-select>\n    </mat-form-field>   \n    ",
            styles: ["\n    :host {\n        display: block;\n    }\n    .base-ak {\n        display:flex;\n        align-items: center;\n    }\n    .base-layer {\n        padding-right: 10px;\n        flex-grow: 1;\n    }\n    "]
        })
    ], TempAccumMapLayerControlComponent);
    return TempAccumMapLayerControlComponent;
}(_npn_common_common__WEBPACK_IMPORTED_MODULE_6__["MonitorsDestroy"]));

var SIX_BASE;
(function (SIX_BASE) {
    SIX_BASE["HIST_ANNUAL"] = "Historic Annual";
    SIX_BASE["CUR_YEAR"] = "Current Year";
    SIX_BASE["DAILY_ANOM"] = "Daily Anomaly";
    SIX_BASE["THIRTY_YR_AVG"] = "30-Year Average";
})(SIX_BASE || (SIX_BASE = {}));
var SIX_LORB;
(function (SIX_LORB) {
    SIX_LORB["LEAF"] = "First Leaf";
    SIX_LORB["BLOOM"] = "First Bloom";
})(SIX_LORB || (SIX_LORB = {}));
var SpringIndexMapLayerControlComponent = /** @class */ (function (_super) {
    __extends(SpringIndexMapLayerControlComponent, _super);
    function SpringIndexMapLayerControlComponent() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        _this.baseOpts = [SIX_BASE.HIST_ANNUAL, SIX_BASE.CUR_YEAR, SIX_BASE.DAILY_ANOM, SIX_BASE.THIRTY_YR_AVG];
        _this.leafOrBloomOpts = [SIX_LORB.LEAF, SIX_LORB.BLOOM];
        return _this;
    }
    SpringIndexMapLayerControlComponent.prototype.ngOnInit = function () {
        var _this = this;
        var categories = this.layerDefinitions.categories.reduce(function (map, cat) { return (map[cat.name] = cat) && map; }, {});
        var initBaseValue = SIX_BASE.HIST_ANNUAL;
        var initAkValue = false;
        var initLeafOrBloomValue = SIX_LORB.LEAF;
        var initLayerName = this.selection.layerName;
        if (initLayerName) {
            // re-build values based on which layer was selected
            var initCatName = [
                _npn_common_gridded__WEBPACK_IMPORTED_MODULE_2__["CATEGORY_SIX_HIST_ANNUAL"],
                _npn_common_gridded__WEBPACK_IMPORTED_MODULE_2__["CATEGORY_SIX_CURRENT_YEAR_AK"],
                _npn_common_gridded__WEBPACK_IMPORTED_MODULE_2__["CATEGORY_SIX_CURRENT_YEAR"],
                _npn_common_gridded__WEBPACK_IMPORTED_MODULE_2__["CATEGORY_SIX_DAILY_ANOM"],
                _npn_common_gridded__WEBPACK_IMPORTED_MODULE_2__["CATEGORY_SIX_30_YR_AVG"]
            ].find(function (catName) { return !!categories[catName].layers.find(function (l) { return l.name === initLayerName; }); });
            var initCat = categories[initCatName];
            switch (initCatName) {
                case _npn_common_gridded__WEBPACK_IMPORTED_MODULE_2__["CATEGORY_SIX_HIST_ANNUAL"]:
                    initBaseValue = SIX_BASE.HIST_ANNUAL;
                    break;
                case _npn_common_gridded__WEBPACK_IMPORTED_MODULE_2__["CATEGORY_SIX_CURRENT_YEAR"]:
                case _npn_common_gridded__WEBPACK_IMPORTED_MODULE_2__["CATEGORY_SIX_CURRENT_YEAR_AK"]:
                    initBaseValue = SIX_BASE.CUR_YEAR;
                    break;
                case _npn_common_gridded__WEBPACK_IMPORTED_MODULE_2__["CATEGORY_SIX_DAILY_ANOM"]:
                    initBaseValue = SIX_BASE.DAILY_ANOM;
                    break;
                case _npn_common_gridded__WEBPACK_IMPORTED_MODULE_2__["CATEGORY_SIX_30_YR_AVG"]:
                    initBaseValue = SIX_BASE.THIRTY_YR_AVG;
            }
            initLeafOrBloomValue = initCat.layers[0].name === initLayerName
                ? SIX_LORB.LEAF
                : SIX_LORB.BLOOM;
            initAkValue = initCatName === _npn_common_gridded__WEBPACK_IMPORTED_MODULE_2__["CATEGORY_SIX_CURRENT_YEAR_AK"];
        }
        console.log("SpringIndexMapLayerControlComponent: initBaseValue=\"" + initBaseValue + "\" initLeafOrBloomValue=\"" + initLeafOrBloomValue + "\" initAkValue=" + initAkValue);
        this.baseLayer = new _angular_forms__WEBPACK_IMPORTED_MODULE_3__["FormControl"](initBaseValue);
        this.alaska = new _angular_forms__WEBPACK_IMPORTED_MODULE_3__["FormControl"](initAkValue);
        this.leafOrBloom = new _angular_forms__WEBPACK_IMPORTED_MODULE_3__["FormControl"](initLeafOrBloomValue);
        this.baseLayer.valueChanges
            .pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_5__["startWith"])(this.baseLayer.value), Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_5__["takeUntil"])(this.componentDestroyed))
            .subscribe(function (baseLayer) {
            if (baseLayer === SIX_BASE.CUR_YEAR || baseLayer === SIX_BASE.DAILY_ANOM) {
                _this.selection.year = new Date().getFullYear();
                _this.selection.extentValue = new Date().toISOString().split('T')[0] + "00:00:00.000Z";
            }
            if (baseLayer === SIX_BASE.CUR_YEAR) {
                _this.alaska.enable();
            }
            else {
                _this.alaska.disable();
                if (_this.alaska.value) {
                    _this.alaska.setValue(false);
                }
            }
        });
        Object(rxjs__WEBPACK_IMPORTED_MODULE_4__["merge"])(this.baseLayer.valueChanges, this.alaska.valueChanges, this.leafOrBloom.valueChanges).pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_5__["startWith"])(null), Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_5__["debounceTime"])(250), Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_5__["takeUntil"])(this.componentDestroyed)).subscribe(function () {
            var base = _this.baseLayer.value;
            var leafOrBloom = _this.leafOrBloom.value;
            // IMPORTANT: in gridded-common for all six layer sets the first two are first leaf and bloom in that order
            var lorbIndex = leafOrBloom == SIX_LORB.LEAF ? 0 : 1;
            var ak = _this.alaska.value;
            var categoryName = null;
            switch (base) {
                case SIX_BASE.HIST_ANNUAL:
                    categoryName = _npn_common_gridded__WEBPACK_IMPORTED_MODULE_2__["CATEGORY_SIX_HIST_ANNUAL"];
                    break;
                case SIX_BASE.CUR_YEAR:
                    categoryName = ak ? _npn_common_gridded__WEBPACK_IMPORTED_MODULE_2__["CATEGORY_SIX_CURRENT_YEAR_AK"] : _npn_common_gridded__WEBPACK_IMPORTED_MODULE_2__["CATEGORY_SIX_CURRENT_YEAR"];
                    break;
                case SIX_BASE.DAILY_ANOM:
                    categoryName = _npn_common_gridded__WEBPACK_IMPORTED_MODULE_2__["CATEGORY_SIX_DAILY_ANOM"];
                    break;
                case SIX_BASE.THIRTY_YR_AVG:
                    categoryName = _npn_common_gridded__WEBPACK_IMPORTED_MODULE_2__["CATEGORY_SIX_30_YR_AVG"];
                    break;
            }
            _this.selection.layerName = categories[categoryName].layers[lorbIndex].name;
            _this.selection.redraw();
        });
        this.alaska.valueChanges
            .pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_5__["takeUntil"])(this.componentDestroyed))
            .subscribe(function (ak) { return _this.selection.center = ak ? AK_CENTER : LOWER_44_CENTER; });
    };
    __decorate([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Input"])(),
        __metadata("design:type", _map_selection__WEBPACK_IMPORTED_MODULE_1__["MapSelection"])
    ], SpringIndexMapLayerControlComponent.prototype, "selection", void 0);
    __decorate([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Input"])(),
        __metadata("design:type", Object)
    ], SpringIndexMapLayerControlComponent.prototype, "layerDefinitions", void 0);
    SpringIndexMapLayerControlComponent = __decorate([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Component"])({
            selector: 'spring-index-map-layer-control',
            template: "\n    <div class=\"base-ak\">\n        <mat-form-field class=\"base-layer\">\n            <mat-select placeholder=\"Layer\" [formControl]=\"baseLayer\">\n                <mat-option *ngFor=\"let b of baseOpts\" [value]=\"b\">{{b}}</mat-option>\n            </mat-select>\n        </mat-form-field>\n        <mat-checkbox [formControl]=\"alaska\">Alaska</mat-checkbox>\n    </div>\n    <mat-form-field>\n        <mat-select placeholder=\"Leaf or bloom\" [formControl]=\"leafOrBloom\">\n            <mat-option *ngFor=\"let o of leafOrBloomOpts\" [value]=\"o\">{{o}}</mat-option>\n        </mat-select>\n    </mat-form-field>\n    ",
            styles: ["\n    :host {\n        display: block;\n    }\n    .base-ak {\n        display:flex;\n        align-items: center;\n    }\n    .base-layer {\n        padding-right: 10px;\n        flex-grow: 1;\n    }\n    "]
        })
    ], SpringIndexMapLayerControlComponent);
    return SpringIndexMapLayerControlComponent;
}(_npn_common_common__WEBPACK_IMPORTED_MODULE_6__["MonitorsDestroy"]));



/***/ }),

/***/ "../npn/common/src/lib/visualizations/map/extent-controls.ts":
/*!*******************************************************************!*\
  !*** ../npn/common/src/lib/visualizations/map/extent-controls.ts ***!
  \*******************************************************************/
/*! exports provided: ExtentControl, ExtentDateControl, ExtentDoyControl, ExtentYearControl */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ExtentControl", function() { return ExtentControl; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ExtentDateControl", function() { return ExtentDateControl; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ExtentDoyControl", function() { return ExtentDoyControl; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ExtentYearControl", function() { return ExtentYearControl; });
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @angular/core */ "../../node_modules/@angular/core/fesm5/core.js");
/* harmony import */ var _gridded__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../gridded */ "../npn/common/src/lib/gridded/index.ts");
/* harmony import */ var d3__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! d3 */ "../../node_modules/d3/index.js");
var __decorate = (undefined && undefined.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (undefined && undefined.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};



var ExtentControl = /** @class */ (function () {
    function ExtentControl() {
        this.date = _gridded__WEBPACK_IMPORTED_MODULE_1__["MapLayerExtentType"].DATE;
        this.year = _gridded__WEBPACK_IMPORTED_MODULE_1__["MapLayerExtentType"].YEAR;
        this.doy = _gridded__WEBPACK_IMPORTED_MODULE_1__["MapLayerExtentType"].DOY;
    }
    __decorate([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Input"])(),
        __metadata("design:type", Object)
    ], ExtentControl.prototype, "selection", void 0);
    ExtentControl = __decorate([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Component"])({
            selector: 'extent-control',
            template: "\n    <div [ngSwitch]=\"selection.layer.extentType\">\n        <extent-date-control *ngSwitchCase=\"date\" [selection]=\"selection\"></extent-date-control>\n        <extent-year-control *ngSwitchCase=\"year\" [selection]=\"selection\"></extent-year-control>\n        <extent-doy-control *ngSwitchCase=\"doy\" [selection]=\"selection\"></extent-doy-control>\n    </div>\n    "
        })
    ], ExtentControl);
    return ExtentControl;
}());

var ExtentDateControl = /** @class */ (function () {
    function ExtentDateControl() {
    }
    Object.defineProperty(ExtentDateControl.prototype, "selectedDate", {
        get: function () {
            return this._selectedDate;
        },
        set: function (d) {
            d.setHours(0, 0, 0, 0);
            this._selectedDate = d;
            this.selection.extentValue = d.toISOString().replace(/T.*Z$/, 'T00:00:00.000Z');
        },
        enumerable: true,
        configurable: true
    });
    ExtentDateControl.prototype.ngDoCheck = function () {
        if (this.selection.layer && this.selection.layer !== this.lastLayer) {
            var layer = this.lastLayer = this.selection.layer;
            if (layer) {
                this.minDate = layer.extent.values[0].date;
                this.maxDate = layer.extent.values[layer.extent.values.length - 1].date;
                this.selectedDate = layer.extent.current.date;
            }
        }
    };
    __decorate([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Input"])(),
        __metadata("design:type", Object)
    ], ExtentDateControl.prototype, "selection", void 0);
    ExtentDateControl = __decorate([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Component"])({
            selector: 'extent-date-control',
            template: "\n    <h4>Date</h4>\n    <mat-form-field>\n        <input matInput [matDatepicker]=\"extentDatePicker\" [min]=\"minDate\" [max]=\"maxDate\" [value]=\"selectedDate\"\n            (dateChange)=\"selectedDate = $event.value\">\n        <mat-datepicker-toggle matSuffix [for]=\"extentDatePicker\"></mat-datepicker-toggle>\n        <mat-datepicker #extentDatePicker></mat-datepicker>\n    </mat-form-field>\n    "
        })
    ], ExtentDateControl);
    return ExtentDateControl;
}());

var ExtentDoyControl = /** @class */ (function () {
    function ExtentDoyControl(pipes) {
        var _this = this;
        this.pipes = pipes;
        this.thirtyYearAvgDayOfYear = pipes.get('thirtyYearAvgDayOfYear');
        this.baseYear = this.thirtyYearAvgDayOfYear.transform('1.0', _gridded__WEBPACK_IMPORTED_MODULE_1__["DoyTxType"].DATE).getFullYear();
        this.months = d3__WEBPACK_IMPORTED_MODULE_2__["range"](0, 12).map(function (m) { return new Date(_this.baseYear, m); });
    }
    Object.defineProperty(ExtentDoyControl.prototype, "selectedMonth", {
        get: function () {
            return this._selectedMonth;
        },
        set: function (d) {
            this.setSelectedMonth(d);
            // user changed month
            this.selectedDayOfMonth = 1;
        },
        enumerable: true,
        configurable: true
    });
    ExtentDoyControl.prototype.setSelectedMonth = function (d) {
        this._selectedMonth = d;
        this.monthDays = d3__WEBPACK_IMPORTED_MODULE_2__["range"](1, getDaysInMonth(d) + 1);
    };
    Object.defineProperty(ExtentDoyControl.prototype, "selectedDayOfMonth", {
        get: function () { return this._selectedDayOfMonth; },
        set: function (d) {
            this._selectedDayOfMonth = d;
            this._selectedMonth.setDate(d);
            this.selection.extentValue = this.thirtyYearAvgDayOfYear.transform(this._selectedMonth, _gridded__WEBPACK_IMPORTED_MODULE_1__["DoyTxType"].DOY_STRING);
        },
        enumerable: true,
        configurable: true
    });
    ExtentDoyControl.prototype.ngDoCheck = function () {
        if (this.selection.layer && this.selection.layer !== this.lastLayer) {
            var layer = this.lastLayer = this.selection.layer;
            if (layer) {
                var currentDate = this.thirtyYearAvgDayOfYear.transform(layer.extent.current.value, true);
                this.setSelectedMonth(this.months[currentDate.getMonth()]);
                this.selectedDayOfMonth = currentDate.getDate();
            }
        }
    };
    __decorate([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Input"])(),
        __metadata("design:type", Object)
    ], ExtentDoyControl.prototype, "selection", void 0);
    ExtentDoyControl = __decorate([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Component"])({
            selector: 'extent-doy-control',
            template: "\n    <h4>Day of year</h4>\n    <div class=\"controls\">\n        <mat-form-field>\n            <mat-select placeholder=\"Month\" [(value)]=\"selectedMonth\">\n                <mat-option *ngFor=\"let m of months\" [value]=\"m\">{{m | date:'MMMM'}}</mat-option>\n            </mat-select>\n        </mat-form-field>\n        <mat-form-field>\n            <mat-select placeholder=\"Day\" [(value)]=\"selectedDayOfMonth\">\n                <mat-option *ngFor=\"let d of monthDays\" [value]=\"d\">{{d}}</mat-option>\n            </mat-select>\n        </mat-form-field>\n        <div class=\"current-value\">{{selection?.layer?.extent.current.value | number:'1.0-0'}}</div>\n    </div>\n    ",
            styles: ["\n    .controls {\n        display: flex;\n        align-items: center;\n        justify-content: space-between;\n    }\n    "]
        }),
        __metadata("design:paramtypes", [_gridded__WEBPACK_IMPORTED_MODULE_1__["GriddedPipeProvider"]])
    ], ExtentDoyControl);
    return ExtentDoyControl;
}());

var ExtentYearControl = /** @class */ (function () {
    function ExtentYearControl() {
    }
    Object.defineProperty(ExtentYearControl.prototype, "selectedExtent", {
        get: function () { return this._selectedExtent; },
        set: function (ext) {
            this._selectedExtent = ext;
            this.selection.extentValue = ext.value;
        },
        enumerable: true,
        configurable: true
    });
    ExtentYearControl.prototype.ngDoCheck = function () {
        if (this.selection.layer && this.selection.layer !== this.lastLayer) {
            var layer = this.lastLayer = this.selection.layer;
            if (layer) {
                this.selectedExtent = layer.extent.current;
            }
        }
    };
    __decorate([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Input"])(),
        __metadata("design:type", Object)
    ], ExtentYearControl.prototype, "selection", void 0);
    ExtentYearControl = __decorate([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Component"])({
            selector: 'extent-year-control',
            template: "\n    <h4>Year</h4>\n    <mat-form-field>\n        <mat-select placeholder=\"Year\" [(value)]=\"selectedExtent\">\n            <mat-option *ngFor=\"let ext of selection.layer?.extent.values\" [value]=\"ext\">{{ext.label}}</mat-option>\n        </mat-select>\n    </mat-form-field>\n    "
        })
    ], ExtentYearControl);
    return ExtentYearControl;
}());

var ONE_DAY = (24 * 60 * 60 * 1000);
function getDaysInMonth(date) {
    var month = date.getMonth(), tmp;
    if (month === 11) {
        return 31;
    }
    tmp = new Date(date.getTime());
    tmp.setDate(1);
    tmp.setMonth(tmp.getMonth() + 1);
    tmp.setTime(tmp.getTime() - ONE_DAY);
    console.debug('last day of month ' + (month + 1) + ' is ' + tmp);
    return tmp.getDate();
}


/***/ }),

/***/ "../npn/common/src/lib/visualizations/map/gridded-range-slider-control.component.ts":
/*!******************************************************************************************!*\
  !*** ../npn/common/src/lib/visualizations/map/gridded-range-slider-control.component.ts ***!
  \******************************************************************************************/
/*! exports provided: GriddedRangeSliderControl */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "GriddedRangeSliderControl", function() { return GriddedRangeSliderControl; });
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @angular/core */ "../../node_modules/@angular/core/fesm5/core.js");
/* harmony import */ var _gridded__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../gridded */ "../npn/common/src/lib/gridded/index.ts");
/* harmony import */ var _map_selection__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./map-selection */ "../npn/common/src/lib/visualizations/map/map-selection.ts");
var __decorate = (undefined && undefined.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (undefined && undefined.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};



// TODO the selection object does not change (the layer within it does)
// so this control is not updating when switching layers
// also on load from shared URL the layer probably isn't there yet when
// the selection is available since it's loaded asynchronously so the 
// control does not render properly
var GriddedRangeSliderControl = /** @class */ (function () {
    function GriddedRangeSliderControl() {
        this.manualRefresh = new _angular_core__WEBPACK_IMPORTED_MODULE_0__["EventEmitter"]();
    }
    GriddedRangeSliderControl.prototype.resize = function () {
        this.manualRefresh.next();
    };
    Object.defineProperty(GriddedRangeSliderControl.prototype, "max", {
        get: function () { return this._max; },
        set: function (m) {
            this._max = m;
            this.updateRange();
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(GriddedRangeSliderControl.prototype, "min", {
        get: function () { return this._min; },
        set: function (m) {
            this._min = m;
            this.updateRange();
        },
        enumerable: true,
        configurable: true
    });
    GriddedRangeSliderControl.prototype.updateRange = function () {
        if (this.min === this.options.floor && this.max === this.options.ceil) {
            // complete range selected, clear any style range
            this.selection.styleRange = undefined;
        }
        else {
            this.selection.styleRange = [this.min, this.max];
        }
    };
    GriddedRangeSliderControl.prototype.ngDoCheck = function () {
        var _this = this;
        if (this.selection.layer && this.selection.layer !== this.lastLayer) {
            if ((this.lastLayer = this.selection.layer) instanceof _gridded__WEBPACK_IMPORTED_MODULE_1__["WmsMapLayer"]) {
                this.selection.layer.getLegend().then(function (legend) {
                    var data = legend.getData();
                    var existingRange = _this.selection.styleRange;
                    _this._min = existingRange ? existingRange[0] : 0;
                    _this._max = existingRange ? existingRange[1] : (data.length - 1);
                    _this.options = {
                        floor: 0,
                        ceil: (data.length - 1),
                        step: 1,
                        showTicks: true,
                        showSelectionBar: true,
                        translate: function (n) { return data[n].label; },
                        getTickColor: function (n) { return data[n].color; },
                        getPointerColor: function (n) { return data[n].color; },
                        getSelectionBarColor: function (n) { return data[n].color; }
                    };
                });
            }
            else {
                this.options = undefined;
            }
        }
    };
    __decorate([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Input"])(),
        __metadata("design:type", _map_selection__WEBPACK_IMPORTED_MODULE_2__["MapSelection"])
    ], GriddedRangeSliderControl.prototype, "selection", void 0);
    GriddedRangeSliderControl = __decorate([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Component"])({
            selector: 'gridded-range-slider',
            template: "\n    <ng5-slider *ngIf=\"options\" [(value)]=\"min\" [(highValue)]=\"max\" [options]=\"options\" [manualRefresh]=\"manualRefresh\"></ng5-slider>\n    "
        })
    ], GriddedRangeSliderControl);
    return GriddedRangeSliderControl;
}());



/***/ }),

/***/ "../npn/common/src/lib/visualizations/map/index.ts":
/*!*********************************************************!*\
  !*** ../npn/common/src/lib/visualizations/map/index.ts ***!
  \*********************************************************/
/*! exports provided: MapSelection, MapSelectionFactory, MapVisualizationComponent, MAP_VIS_SVG_PATHS, MapVisMarker, ExtentControl, ExtentDateControl, ExtentDoyControl, ExtentYearControl, GriddedRangeSliderControl, ConsolidatedMapLayerControlComponent, PestMapLayerControlComponent, TempAccumMapLayerControlComponent, SpringIndexMapLayerControlComponent, MapVisualizationMarkerIw */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _public_api__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./public_api */ "../npn/common/src/lib/visualizations/map/public_api.ts");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "MapSelection", function() { return _public_api__WEBPACK_IMPORTED_MODULE_0__["MapSelection"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "MapSelectionFactory", function() { return _public_api__WEBPACK_IMPORTED_MODULE_0__["MapSelectionFactory"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "MapVisualizationComponent", function() { return _public_api__WEBPACK_IMPORTED_MODULE_0__["MapVisualizationComponent"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "MAP_VIS_SVG_PATHS", function() { return _public_api__WEBPACK_IMPORTED_MODULE_0__["MAP_VIS_SVG_PATHS"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "MapVisMarker", function() { return _public_api__WEBPACK_IMPORTED_MODULE_0__["MapVisMarker"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "ExtentControl", function() { return _public_api__WEBPACK_IMPORTED_MODULE_0__["ExtentControl"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "ExtentDateControl", function() { return _public_api__WEBPACK_IMPORTED_MODULE_0__["ExtentDateControl"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "ExtentDoyControl", function() { return _public_api__WEBPACK_IMPORTED_MODULE_0__["ExtentDoyControl"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "ExtentYearControl", function() { return _public_api__WEBPACK_IMPORTED_MODULE_0__["ExtentYearControl"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "GriddedRangeSliderControl", function() { return _public_api__WEBPACK_IMPORTED_MODULE_0__["GriddedRangeSliderControl"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "ConsolidatedMapLayerControlComponent", function() { return _public_api__WEBPACK_IMPORTED_MODULE_0__["ConsolidatedMapLayerControlComponent"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "PestMapLayerControlComponent", function() { return _public_api__WEBPACK_IMPORTED_MODULE_0__["PestMapLayerControlComponent"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "TempAccumMapLayerControlComponent", function() { return _public_api__WEBPACK_IMPORTED_MODULE_0__["TempAccumMapLayerControlComponent"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "SpringIndexMapLayerControlComponent", function() { return _public_api__WEBPACK_IMPORTED_MODULE_0__["SpringIndexMapLayerControlComponent"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "MapVisualizationMarkerIw", function() { return _public_api__WEBPACK_IMPORTED_MODULE_0__["MapVisualizationMarkerIw"]; });




/***/ }),

/***/ "../npn/common/src/lib/visualizations/map/map-selection.factory.ts":
/*!*************************************************************************!*\
  !*** ../npn/common/src/lib/visualizations/map/map-selection.factory.ts ***!
  \*************************************************************************/
/*! exports provided: MapSelectionFactory */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "MapSelectionFactory", function() { return MapSelectionFactory; });
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @angular/core */ "../../node_modules/@angular/core/fesm5/core.js");
/* harmony import */ var _map_selection__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./map-selection */ "../npn/common/src/lib/visualizations/map/map-selection.ts");
/* harmony import */ var _gridded__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../gridded */ "../npn/common/src/lib/gridded/index.ts");
/* harmony import */ var _common__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../common */ "../npn/common/src/lib/common/index.ts");
var __decorate = (undefined && undefined.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (undefined && undefined.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};




var MapSelectionFactory = /** @class */ (function () {
    function MapSelectionFactory(layerService, serviceUtils, speciesService, networkService) {
        this.layerService = layerService;
        this.serviceUtils = serviceUtils;
        this.speciesService = speciesService;
        this.networkService = networkService;
    }
    MapSelectionFactory.prototype.newSelection = function () {
        return new _map_selection__WEBPACK_IMPORTED_MODULE_1__["MapSelection"](this.layerService, this.serviceUtils, this.speciesService, this.networkService);
    };
    MapSelectionFactory = __decorate([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Injectable"])(),
        __metadata("design:paramtypes", [_gridded__WEBPACK_IMPORTED_MODULE_2__["NpnMapLayerService"],
            _common__WEBPACK_IMPORTED_MODULE_3__["NpnServiceUtils"],
            _common__WEBPACK_IMPORTED_MODULE_3__["SpeciesService"],
            _common__WEBPACK_IMPORTED_MODULE_3__["NetworkService"]])
    ], MapSelectionFactory);
    return MapSelectionFactory;
}());



/***/ }),

/***/ "../npn/common/src/lib/visualizations/map/map-selection.ts":
/*!*****************************************************************!*\
  !*** ../npn/common/src/lib/visualizations/map/map-selection.ts ***!
  \*****************************************************************/
/*! exports provided: MapSelection */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "MapSelection", function() { return MapSelection; });
/* harmony import */ var _vis_selection__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../vis-selection */ "../npn/common/src/lib/visualizations/vis-selection.ts");
/* harmony import */ var _gridded__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../gridded */ "../npn/common/src/lib/gridded/index.ts");
/* harmony import */ var _site_or_summary_vis_selection__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../site-or-summary-vis-selection */ "../npn/common/src/lib/visualizations/site-or-summary-vis-selection.ts");
/* harmony import */ var _angular_common_http__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @angular/common/http */ "../../node_modules/@angular/common/fesm5/http.js");
var __extends = (undefined && undefined.__extends) || (function () {
    var extendStatics = Object.setPrototypeOf ||
        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __assign = (undefined && undefined.__assign) || Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
        s = arguments[i];
        for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
            t[p] = s[p];
    }
    return t;
};
var __decorate = (undefined && undefined.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (undefined && undefined.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};




/**
 * Note: This type of selection contains more functionality than the underlying visualization
 * will care to make use of.  I.e. if `individualPhenometrics` is set to true then summarized
 * data would be used and if `networkIds` were populated on the selection they would be used
 *
 * @dynamic
 */
var MapSelection = /** @class */ (function (_super) {
    __extends(MapSelection, _super);
    function MapSelection(layerService, serviceUtils, speciesService, networkService) {
        var _this = _super.call(this, serviceUtils, speciesService, networkService) || this;
        _this.layerService = layerService;
        _this.serviceUtils = serviceUtils;
        _this.speciesService = speciesService;
        _this.networkService = networkService;
        _this.$supportsPop = true;
        _this.$class = 'MapSelection';
        _this.opacity = 0.75;
        return _this;
    }
    MapSelection.prototype.toURLSearchParams = function (params) {
        if (params === void 0) { params = new _angular_common_http__WEBPACK_IMPORTED_MODULE_3__["HttpParams"](); }
        params = params.set('request_src', 'npn-vis-map')
            .set('start_date', this.year + "-01-01")
            .set('end_date', this.year + "-12-31");
        return _super.prototype.toURLSearchParams.call(this, params);
    };
    MapSelection.prototype.toPOPInput = function (input) {
        var _this = this;
        if (input === void 0) { input = __assign({}, _vis_selection__WEBPACK_IMPORTED_MODULE_0__["BASE_POP_INPUT"]); }
        return _super.prototype.toPOPInput.call(this, input)
            .then(function (input) {
            input.startDate = _this.year + "-01-01";
            input.endDate = _this.year + "-12-31";
            return input;
        });
    };
    Object.defineProperty(MapSelection.prototype, "year", {
        get: function () {
            return this._year;
        },
        set: function (y) {
            this._year = y;
            this.update();
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(MapSelection.prototype, "layerCategory", {
        get: function () { return this._layerCategory; },
        set: function (s) {
            this._layerCategory = s;
            this.layerName = null;
            this.redraw();
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(MapSelection.prototype, "layerName", {
        get: function () {
            return this._layerName;
        },
        set: function (s) {
            console.debug("MapSelection.layerName=" + s);
            this._layerName = s;
            if (this.layer && this.layer.layerName !== s) {
                this.layer.off();
                this.layer = undefined;
                this.legend = undefined;
                // TODO allow propagation of styleRange
                // when switching layers
                this.styleRange = undefined;
            }
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(MapSelection.prototype, "styleRange", {
        get: function () {
            return this._styleRange;
        },
        set: function (range) {
            console.debug("MapSelection.styleRange=" + range);
            this._styleRange = range;
            if (this.layer && this.layer instanceof _gridded__WEBPACK_IMPORTED_MODULE_1__["WmsMapLayer"]) {
                this.layer.setStyleRange(range);
            }
        },
        enumerable: true,
        configurable: true
    });
    // returns true if a change was made
    MapSelection.prototype.updateExtentValue = function () {
        var _this = this;
        if (this.layer && this._extentValue) {
            var newValue = this.layer.extent.values.reduce(function (found, v) { return found || (v.value === _this._extentValue ? v : undefined); }, undefined);
            if (!newValue) {
                // this is OK if it happens, since we can keep the _extentValue from layer to layer
                // if the user switches from one layer to another with compatible extents then we can just
                // re-use it, which seems nice. o/w it should just go back to the "default"
                this._extentValue = undefined;
            }
            else if (this.layer.extent.current !== newValue) {
                this.layer.extent.current = newValue;
                return true;
            }
        }
        return false;
    };
    Object.defineProperty(MapSelection.prototype, "extentValue", {
        get: function () {
            return this._extentValue;
        },
        set: function (v) {
            this._extentValue = v;
            if (this.layer && this.updateExtentValue()) {
                this.redraw();
            }
        },
        enumerable: true,
        configurable: true
    });
    // using functions here because of the SupportsOpacity interface.
    /** Sets the current opacity (0-1) for this layer. */
    MapSelection.prototype.setOpacity = function (opacity) {
        console.debug("MapSelection.setOpacity=" + opacity);
        this.opacity = opacity;
        if (this.layer) {
            this.layer.setOpacity(this.opacity);
        }
    };
    /** Gets the current opacity for this layer. */
    MapSelection.prototype.getOpacity = function () { return this.opacity; };
    Object.defineProperty(MapSelection.prototype, "center", {
        get: function () { return this._center; },
        set: function (latLng) {
            this._center = latLng;
            if (this.map && latLng && latLng.length === 2) {
                this.map.setCenter(new google.maps.LatLng(latLng[0], latLng[1]));
            }
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(MapSelection.prototype, "zoom", {
        get: function () { return this._zoom; },
        set: function (z) {
            this._zoom = z;
            if (this.map && z !== this.map.getZoom()) {
                this.map.setZoom(z);
            }
        },
        enumerable: true,
        configurable: true
    });
    MapSelection.prototype.validForLayer = function () {
        return !!this.layerName;
    };
    MapSelection.prototype.validForData = function () {
        return typeof (this.year) === 'number' && this.validPlots.length > 0 &&
            typeof (this.numDaysQualityFilter) === 'number';
    };
    MapSelection.prototype.isValid = function () {
        return this.validForLayer() || this.validForData();
    };
    // NOTE: There is no protection against this being called multiple times in fast succession
    // e.g. setLayerName, updateLayer, change layerName, call updateLayer
    // and if this happened there could be two Promises arguing over the ability set `this.layer`
    // which could cause a layer "sticking" on the map.
    MapSelection.prototype.updateLayer = function (map) {
        var _this = this;
        var layerName = this.layerName;
        console.debug("MapSelection.updateLayer", this.external);
        if (this.map !== map) {
            this.map = map;
            var latLng = this._center;
            if (latLng && latLng.length === 2) {
                this.map.setCenter(new google.maps.LatLng(latLng[0], latLng[1]));
            }
            if (this._zoom) {
                this.map.setZoom(this._zoom);
            }
            // this is perhaps a bit weird to have these listeners here
            // rather than outside but it allows us to more cleanly access
            // the "private" member properties are based upon.
            map.addListener('center_changed', function () {
                var latLng = _this.map.getCenter();
                _this._center = [
                    latLng.lat(),
                    latLng.lng()
                ];
            });
            map.addListener('zoom_changed', function () { return _this._zoom = _this.map.getZoom(); });
        }
        if (layerName) {
            if (!this.layer) {
                return this.layerService.newLayer(map, layerName)
                    .then(function (layer) {
                    _this.layer = layer;
                    layer.setOpacity(_this.opacity);
                    if (layer instanceof _gridded__WEBPACK_IMPORTED_MODULE_1__["WmsMapLayer"]) {
                        layer.setStyleRange(_this.styleRange);
                    }
                    _this.updateExtentValue();
                    layer.on();
                    return _this.layer.getLegend().then(function (legend) { _this.legend = legend; });
                });
            }
            else {
                this.layer.bounce();
            }
        }
        else {
            this.legend = this.layerService.getDefaultLegend();
        }
        return Promise.resolve();
    };
    MapSelection.prototype.getData = function () {
        var _this = this;
        this.working = true;
        return (this.validForData()
            ? _super.prototype.getData.call(this)
            : Promise.resolve([]))
            .then(function (results) {
            _this.working = false;
            return results;
        });
    };
    __decorate([
        Object(_vis_selection__WEBPACK_IMPORTED_MODULE_0__["selectionProperty"])(),
        __metadata("design:type", Object)
    ], MapSelection.prototype, "$class", void 0);
    __decorate([
        Object(_vis_selection__WEBPACK_IMPORTED_MODULE_0__["selectionProperty"])(),
        __metadata("design:type", String)
    ], MapSelection.prototype, "_layerCategory", void 0);
    __decorate([
        Object(_vis_selection__WEBPACK_IMPORTED_MODULE_0__["selectionProperty"])(),
        __metadata("design:type", String)
    ], MapSelection.prototype, "_layerName", void 0);
    __decorate([
        Object(_vis_selection__WEBPACK_IMPORTED_MODULE_0__["selectionProperty"])(),
        __metadata("design:type", Number)
    ], MapSelection.prototype, "opacity", void 0);
    __decorate([
        Object(_vis_selection__WEBPACK_IMPORTED_MODULE_0__["selectionProperty"])(),
        __metadata("design:type", Array)
    ], MapSelection.prototype, "_styleRange", void 0);
    __decorate([
        Object(_vis_selection__WEBPACK_IMPORTED_MODULE_0__["selectionProperty"])(),
        __metadata("design:type", String)
    ], MapSelection.prototype, "_extentValue", void 0);
    __decorate([
        Object(_vis_selection__WEBPACK_IMPORTED_MODULE_0__["selectionProperty"])(),
        __metadata("design:type", Array)
    ], MapSelection.prototype, "_center", void 0);
    __decorate([
        Object(_vis_selection__WEBPACK_IMPORTED_MODULE_0__["selectionProperty"])(),
        __metadata("design:type", Number)
    ], MapSelection.prototype, "_zoom", void 0);
    __decorate([
        Object(_vis_selection__WEBPACK_IMPORTED_MODULE_0__["selectionProperty"])() // vis supports a single year of data
        ,
        __metadata("design:type", Number)
    ], MapSelection.prototype, "_year", void 0);
    return MapSelection;
}(_site_or_summary_vis_selection__WEBPACK_IMPORTED_MODULE_2__["SiteOrSummaryVisSelection"]));



/***/ }),

/***/ "../npn/common/src/lib/visualizations/map/map-visualization-marker-iw.component.ts":
/*!*****************************************************************************************!*\
  !*** ../npn/common/src/lib/visualizations/map/map-visualization-marker-iw.component.ts ***!
  \*****************************************************************************************/
/*! exports provided: MapVisualizationMarkerIw */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "MapVisualizationMarkerIw", function() { return MapVisualizationMarkerIw; });
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @angular/core */ "../../node_modules/@angular/core/fesm5/core.js");
/* harmony import */ var _map_visualization_component__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./map-visualization.component */ "../npn/common/src/lib/visualizations/map/map-visualization.component.ts");
/* harmony import */ var _gridded__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../gridded */ "../npn/common/src/lib/gridded/index.ts");
/* harmony import */ var _npn_common_common_station_service__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @npn/common/common/station.service */ "../npn/common/src/lib/common/station.service.ts");
/* harmony import */ var _map_selection__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./map-selection */ "../npn/common/src/lib/visualizations/map/map-selection.ts");
var __decorate = (undefined && undefined.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (undefined && undefined.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};





var MapVisualizationMarkerIw = /** @class */ (function () {
    function MapVisualizationMarkerIw(stationService) {
        this.stationService = stationService;
        this.svgs = _map_visualization_component__WEBPACK_IMPORTED_MODULE_1__["MAP_VIS_SVG_PATHS"];
    }
    MapVisualizationMarkerIw.prototype.dataText = function (data) {
        if (this.selection.layerCategory == 'Pheno Forecasts'
            || (this.selection.layerName && this.selection.layerName.includes('gdd'))) {
            return "" + data.formatted; // for gdd layers, data.point and data.formatted are same, formatted is just rounded
        }
        else {
            return data.point + " (" + data.formatted + ")";
        }
    };
    MapVisualizationMarkerIw.prototype.dateMarkerText = function (r) {
        if (this.selection.layerCategory == 'Pheno Forecasts'
            || (this.selection.layerName && this.selection.layerName.includes('gdd'))) {
            return '';
        }
        else {
            return "(" + this.selection.legend.formatPointData(r.mean_first_yes_doy) + ")";
        }
    };
    MapVisualizationMarkerIw.prototype.gddMarkerText = function (r) {
        if (this.selection.layerCategory == 'Pheno Forecasts'
            || (this.selection.layerName && this.selection.layerName.includes('gdd'))) {
            return r.mean_gddf != -9999 ? r.mean_gddf + " (Daymet, start date Jan 1, base 32" + String.fromCharCode(176) + ")" : 'not available';
        }
        else {
            return "";
        }
    };
    MapVisualizationMarkerIw.prototype.showGddInPopup = function () {
        return (this.selection.layerCategory == 'Pheno Forecasts'
            || (this.selection.layerName && this.selection.layerName.includes('gdd')));
    };
    MapVisualizationMarkerIw.prototype.ngOnChanges = function (changes) {
        var _this = this;
        if (changes.marker) {
            this.station = null;
            this.data = null;
            if (this.marker) {
                this.marker.records.forEach(function (r) {
                    console.log('POINT DATA', _this.selection.legend.getPointData(r.mean_first_yes_doy), r);
                });
                var legend = this.selection.legend;
                Promise.all([
                    this.stationService.getStation(this.marker.site_id),
                    (legend && !(legend instanceof _gridded__WEBPACK_IMPORTED_MODULE_2__["DefaultMapLayerLegend"])) ?
                        legend.getGriddedPointData(new google.maps.LatLng(this.marker.latitude, this.marker.longitude)).toPromise()
                        : Promise.resolve(null)
                ]).then(function (results) {
                    console.log('MapVisualizationMarkerIw:results', results);
                    var station = results[0], data = results[1];
                    _this.station = station;
                    _this.data = data;
                });
            }
        }
    };
    MapVisualizationMarkerIw.prototype.iconFill = function (r) {
        var data = this.selection.legend.getPointData(r.mean_first_yes_doy);
        return data
            ? data.color
            : '#ffffff';
    };
    __decorate([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Input"])(),
        __metadata("design:type", _map_visualization_component__WEBPACK_IMPORTED_MODULE_1__["MapVisMarker"])
    ], MapVisualizationMarkerIw.prototype, "marker", void 0);
    __decorate([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Input"])(),
        __metadata("design:type", _map_selection__WEBPACK_IMPORTED_MODULE_4__["MapSelection"])
    ], MapVisualizationMarkerIw.prototype, "selection", void 0);
    MapVisualizationMarkerIw = __decorate([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Component"])({
            selector: 'map-visualization-marker-iw',
            template: "\n    <npn-logo spin=\"true\" *ngIf=\"!station; else stationInfo\"></npn-logo>\n    <ng-template #stationInfo>\n        <div class=\"station-info\">\n            <h3>{{station.site_name}}</h3>\n            <ul>\n            <li *ngIf=\"station.group_name\"><label>Group:</label> {{station.group_name}}</li>\n            <li><label>Latitude:</label> {{station.latitude}} <label>Longitude:</label> {{station.longitude}}</li>\n            <li *ngIf=\"data && data.legendData\" class=\"gridded-data\"><label>Gridded Layer Value:</label> <div class=\"legend-cell\"\n                [ngStyle]=\"{'background-color': data.legendData.color}\">&nbsp;</div> {{dataText(data)}}</li>\n            </ul>\n        </div>\n        <div class=\"record-info\" *ngFor=\"let r of marker.records\">\n            <h4>{{r | taxonomicSpeciesTitle:r.plot.speciesRank}}, {{r.phenophase_name||r.pheno_class_name||r.phenophase_description}}, {{r.mean_first_yes_year}}\n                <svg class=\"icon\" viewBox=\"0 0 22 22\">\n                    <path [attr.fill]=\"iconFill(r)\" [attr.d]=\"svgs[r.plotIndex]\" stroke='#000'></path>\n                </svg></h4>\n            <ul>\n            <!--<li><label>Observed Day of Onset:</label> {{r.mean_first_yes_doy | number:'1.0-0'}} ({{selection.legend.formatPointData((selection.layerName?.includes('gdd') || selection.layerCategory == 'Pheno Forecasts') ? r.mean_gddf : r.mean_first_yes_doy)}})<span *ngIf=\"r.sd_first_yes_in_days > 0\"> [Standard Deviation: {{r.sd_first_yes_in_days | number:'1.1-1'}}]</span></li> -->\n            <li><label>Observed Day of Onset:</label> {{r.mean_first_yes_doy | number:'1.0-0'}} {{dateMarkerText(r)}} <span *ngIf=\"r.sd_first_yes_in_days > 0\">[Standard Deviation: {{r.sd_first_yes_in_days | number:'1.1-1'}}]</span></li>\n            <li *ngIf=\"showGddInPopup()\"><label>AGDD on Day of Onset:</label> {{gddMarkerText(r)}} </li>\n            </ul>\n        </div>\n    </ng-template>\n    ",
            styles: ["\n    npn-logo {\n        width: 25px;\n        height: 25px;\n    }\n    svg {\n        border: none;\n        width: 16px;\n        height: 16px;\n    }\n    .legend-cell {\n        width: 15px;\n        height: 15px;\n        border: 1px solid black;\n        display: inline-block;\n        margin: 0 5px;\n    }\n    ul {\n        margin: 0px;\n        padding: 0px 0px 0px 5px;\n    }\n    ul > li {\n        list-style: none;\n        padding: 2px 0px;\n    }\n    label {\n        font-weight: bold;\n    }\n    h3,\n    h4 {\n        text-transform: none !important;\n    }\n    h3 {\n        margin: 0 0 8px !important;\n    }\n    h4 {\n        margin: 5px 0px !important;\n    }\n    li.gridded-data {\n        display:flex;\n        align-items: center;\n    }\n    "]
        }),
        __metadata("design:paramtypes", [_npn_common_common_station_service__WEBPACK_IMPORTED_MODULE_3__["StationService"]])
    ], MapVisualizationMarkerIw);
    return MapVisualizationMarkerIw;
}());



/***/ }),

/***/ "../npn/common/src/lib/visualizations/map/map-visualization.component.scss":
/*!*********************************************************************************!*\
  !*** ../npn/common/src/lib/visualizations/map/map-visualization.component.scss ***!
  \*********************************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = ".vis-container {\n  display: block;\n  position: relative; }\n  .vis-container agm-map {\n    /*\n        encapsulation: ViewEncapsulation.None or this rule won't be able to apply\n        */ }\n  .vis-container agm-map img[src*=usanpn] {\n      -ms-interpolation-mode: nearest-neighbor;\n          image-rendering: pixelated;\n      image-rendering: -moz-crisp-edges; }\n  .map-wrapper {\n  position: relative;\n  width: 100%;\n  height: 100%; }\n  .map-wrapper map-layer-legend .gridded-legend {\n    margin-top: 10px;\n    border-bottom: 1px solid #aaa; }\n  .map-wrapper .npnlogo {\n    position: absolute;\n    width: 180px;\n    bottom: 75px;\n    right: 70px;\n    z-index: 1; }\n  .map-wrapper .usgslogo {\n    position: absolute;\n    height: 50px;\n    width: 130px;\n    bottom: 15px;\n    right: 70px;\n    z-index: 1; }\n  .map-wrapper .ualogo {\n    position: absolute;\n    height: 50px;\n    bottom: 15px;\n    right: 205px;\n    z-index: 1; }\n  .map-wrapper npn-logo.working {\n    position: absolute;\n    top: 5px;\n    right: 5px;\n    width: 30px;\n    height: 30px;\n    z-index: 100; }\n  @media (min-width: 992px) {\n    .map-wrapper map-layer-legend {\n      position: absolute;\n      left: 10px;\n      padding: 8px;\n      border: 1px solid #aaa;\n      background-color: rgba(255, 255, 255, 0.85);\n      border-radius: 5px; }\n    .map-wrapper map-layer-legend {\n      bottom: 25px;\n      width: 60%; }\n      .map-wrapper map-layer-legend .gridded-legend {\n        margin-top: 0px;\n        border-bottom: none;\n        width: 100%;\n        height: 125px;\n        border: none; } }\n  .map-wrapper .gridded-info {\n    display: flex;\n    align-items: center; }\n  .map-wrapper .gridded-info .legend-swatch {\n      width: 30px;\n      height: 30px;\n      border: 1px solid #aaa; }\n  .map-wrapper .gridded-info .spinner-logo {\n      width: 30px;\n      height: 30px; }\n  .map-wrapper .gridded-info .point-formatted {\n      font-size: 1.25em;\n      padding-left: .5em; }\n  .map-wrapper .spinner-logo > svg {\n    -webkit-animation-name: loading-anim;\n            animation-name: loading-anim;\n    -webkit-animation-duration: 1250ms;\n            animation-duration: 1250ms;\n    -webkit-animation-iteration-count: infinite;\n            animation-iteration-count: infinite;\n    -webkit-animation-timing-function: linear;\n            animation-timing-function: linear;\n    width: 28px;\n    height: 28px; }\n  .map-wrapper .spinner-logo > svg .swirl-top {\n    fill: #f37022; }\n  .map-wrapper .spinner-logo > svg .swirl-left {\n    fill: #68bd46; }\n  .map-wrapper .spinner-logo > svg .swirl-right {\n    fill: #3b94d0; }\n  @-webkit-keyframes loading-anim {\n  from {\n    -webkit-transform: rotate(0deg);\n            transform: rotate(0deg); }\n  to {\n    -webkit-transform: rotate(360deg);\n            transform: rotate(360deg); } }\n  @keyframes loading-anim {\n  from {\n    -webkit-transform: rotate(0deg);\n            transform: rotate(0deg); }\n  to {\n    -webkit-transform: rotate(360deg);\n            transform: rotate(360deg); } }\n"

/***/ }),

/***/ "../npn/common/src/lib/visualizations/map/map-visualization.component.ts":
/*!*******************************************************************************!*\
  !*** ../npn/common/src/lib/visualizations/map/map-visualization.component.ts ***!
  \*******************************************************************************/
/*! exports provided: MapVisualizationComponent, MAP_VIS_SVG_PATHS, MapVisMarker */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "MapVisualizationComponent", function() { return MapVisualizationComponent; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "MAP_VIS_SVG_PATHS", function() { return MAP_VIS_SVG_PATHS; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "MapVisMarker", function() { return MapVisMarker; });
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @angular/core */ "../../node_modules/@angular/core/fesm5/core.js");
/* harmony import */ var _angular_flex_layout__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @angular/flex-layout */ "../../node_modules/@angular/flex-layout/esm5/flex-layout.es5.js");
/* harmony import */ var _map_visualization_base_component__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../map-visualization-base.component */ "../npn/common/src/lib/visualizations/map-visualization-base.component.ts");
/* harmony import */ var _map_selection__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./map-selection */ "../npn/common/src/lib/visualizations/map/map-selection.ts");
/* harmony import */ var _npn_common_gridded_map_layer_legend_component__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @npn/common/gridded/map-layer-legend.component */ "../npn/common/src/lib/gridded/map-layer-legend.component.ts");
var __extends = (undefined && undefined.__extends) || (function () {
    var extendStatics = Object.setPrototypeOf ||
        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __decorate = (undefined && undefined.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (undefined && undefined.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};





var MapVisualizationComponent = /** @class */ (function (_super) {
    __extends(MapVisualizationComponent, _super);
    function MapVisualizationComponent(rootElement, media) {
        var _this = _super.call(this, rootElement, media) || this;
        _this.rootElement = rootElement;
        _this.media = media;
        _this.griddedOpen = false;
        _this.griddedLoading = false;
        return _this;
    }
    MapVisualizationComponent.prototype.mapReady = function (map) {
        map.setCenter(new google.maps.LatLng(this.latitude, this.longitude));
        map.setZoom(this.zoom);
        this.getMapResolver(map);
    };
    /**
     * triggered by window re-sizes and other UI logic when available screen
     * real-estate may have changed.
     */
    MapVisualizationComponent.prototype.resize = function () {
        console.log('MapVisualization.resize');
        if (this.legend) {
            this.legend.redraw();
        }
    };
    /**
     * redraws are triggered by layer related changes.
     */
    MapVisualizationComponent.prototype.redraw = function () {
        var _this = this;
        console.log('MapVisualization.redraw');
        this.getMap().then(function (map) { return _this.selection.updateLayer(map).then(function () {
            if (_this.legend) {
                _this.legend.redraw();
            }
            _this.updateMarkers();
        }); });
    };
    /**
     * If the underlying legend coloring markers has changed since the last update
     * then re-create all markers with new colors.  Markers have to be recreated
     * since the underlying angular library won't update them if their references
     * do not change (does not logically deep watch the contents of each marker).
     */
    MapVisualizationComponent.prototype.updateMarkers = function () {
        var legend = this.selection.legend;
        if ((!legend || legend !== this.lastUpdateLegend) || // if the legend changed
            (this.markers.length && !this.markers[0].cloned) // OR the markers are "new" (!cloned) so haven't been colored
        ) {
            this.lastUpdateLegend = legend;
            this.markers = (this.markers || []).map(function (m) {
                m = m.clone();
                var data = legend
                    ? legend.getPointData(m.doy)
                    : null;
                if (legend.layerName.includes('si-x') || legend.layerName.includes('no-layer')) {
                    m.icon.fillColor = data ? data.color : '#ffffff';
                }
                else {
                    m.icon.fillColor = '#ffffff';
                }
                m.title = legend
                    ? m.records.map(function (r) { return legend.formatPointData(r.mean_first_yes_doy); }).join(', ')
                    : m.records.map(function (r) { return r.mean_first_yes_doy; }).join(', ');
                return m;
            });
        }
    };
    /**
     * updates are triggered by data related changes and will be called by the application
     * when setting up the visualization the first time.
     */
    MapVisualizationComponent.prototype.update = function () {
        var _this = this;
        console.log('MapVisualization.update');
        this.markers = [];
        this.getMap().then(function () {
            _this.selection.getData().then(function (allPlotData) {
                var data = allPlotData.reduce(function (records, plotData, plotIndex) {
                    var filtered = plotData.data
                        .filter(function (d) { return d.mean_first_yes_doy !== -9999; }) // throw out invalid means
                        .map(function (d) {
                        d.plot = plotData.plot;
                        d.plotIndex = plotIndex;
                        return d;
                    });
                    return records.concat(filtered);
                }, [])
                    .sort(function (a, b) { return a.mean_first_yes_doy - b.mean_first_yes_doy; }); // sort ascending by doy
                console.log("MapVisualization: data.length=" + data.length + " (filtered)");
                var bySiteMap = {}; // to consolidate multiple species/phenos at a given station/marker
                _this.markers = data.reduce(function (arr, d) {
                    if (bySiteMap[d.site_id]) {
                        bySiteMap[d.site_id].addRecord(d);
                    }
                    else {
                        var m = new MapVisMarker(d, newGoogleMapsSymbol(MAP_VIS_SVG_PATHS[d.plotIndex]));
                        arr.push(m);
                        bySiteMap[d.site_id] = m;
                    }
                    return arr;
                }, []);
                console.log("MapVisualization: markers.length=" + _this.markers.length);
                _this.redraw();
            });
        });
    };
    MapVisualizationComponent.prototype.mapClick = function ($event) {
        var _this = this;
        var _a = $event.coords, lat = _a.lat, lng = _a.lng;
        this.griddedLoading = true;
        this.griddedLat = lat;
        this.griddedLng = lng;
        this.griddedData = null;
        this.griddedOpen = true;
        if (this.selection.layer && this.selection.legend) {
            this.selection.legend.getGriddedPointData(new google.maps.LatLng(lat, lng))
                .subscribe(function (data) {
                if (data) {
                    _this.griddedLoading = false;
                    _this.griddedLat = lat;
                    _this.griddedLng = lng;
                    _this.griddedData = data;
                    _this.griddedOpen = true;
                }
            });
        }
    };
    MapVisualizationComponent.prototype.markerClick = function (marker) {
        console.log('MapVisualization.markerClick', marker);
    };
    __decorate([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Input"])(),
        __metadata("design:type", _map_selection__WEBPACK_IMPORTED_MODULE_3__["MapSelection"])
    ], MapVisualizationComponent.prototype, "selection", void 0);
    __decorate([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["ViewChild"])(_npn_common_gridded_map_layer_legend_component__WEBPACK_IMPORTED_MODULE_4__["MapLayerLegendComponent"]),
        __metadata("design:type", _npn_common_gridded_map_layer_legend_component__WEBPACK_IMPORTED_MODULE_4__["MapLayerLegendComponent"])
    ], MapVisualizationComponent.prototype, "legend", void 0);
    MapVisualizationComponent = __decorate([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Component"])({
            selector: 'map-visualization',
            template: "\n    <div class=\"vis-container\">\n        <div class=\"map-wrapper\">\n            <npn-logo class=\"working\" *ngIf=\"selection.working\" spin=\"true\"></npn-logo>\n            <agm-map (mapReady)=\"mapReady($event)\" \n                [streetViewControl]=\"false\"  [styles]=\"mapStyles\" [scrollwheel]=\"false\"\n                (mapClick)=\"mapClick($event)\">\n                <agm-info-window *ngIf=\"griddedData || griddedLoading\"\n                    [isOpen]=\"griddedOpen\"\n                    (infoWindowClose)=\"griddedOpen = false\"\n                    [latitude]=\"griddedLat\" [longitude]=\"griddedLng\">\n                    <div *ngIf=\"griddedData || griddedLoading\" class=\"gridded-info\">\n                        <div *ngIf=\"griddedLoading\" class=\"spinner-logo\">\n                        <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 391 391\"><g>\n                            <path class=\"swirl-top\" d=\"M182,1c-36.3,2.4-68.6,13.4-95.3,32.5c-5.6,4-11.8,8.7-13.7,10.4l-3.5,3L73,46c5.8-1.6,15.6-1.2,22.2,1.1\n                                    c9.4,3.1,19.3,10.1,30.3,21.3C137.1,80.2,145.6,91,168,122c17.1,23.8,26.5,34.3,39.5,44.2c16.2,12.4,28.9,16.3,49.5,15.5\n                                    c21.7-0.9,38.4-7.7,53.2-21.6c17.4-16.3,25.7-36.1,25.8-61c0-10.3,0-10.3-2.2-9.6c-21.5,6.6-48.9,3.2-72.9-9.1\n                                    c-27.3-14.1-51.2-45.7-48.4-64.1c0.7-5.1,6-11,10.6-12c5.3-1,3-2.1-5.8-2.7C199.9,0.4,193.3,0.3,182,1z\"/>\n                            <path class=\"swirl-top\" d=\"M256.5,5.9c-8.8,0.9-11.6,1.9-13.9,5.3c-2.2,3.1-2,6.5,0.8,12.5c6.1,13.1,19.8,28.5,30.3,34\n                                    c11,5.9,28.3,8.6,41.2,6.4l6.5-1.1l8.2,4.5c4.5,2.5,8.7,4.5,9.3,4.5c2.5,0,0.8-4.1-3.6-9l-4.6-5.2l-0.1-10.2\n                                    c-0.1-9.3-0.4-10.7-3.3-16.7c-5.4-10.8-16-19.1-30-23.2C291.1,5.8,267.9,4.8,256.5,5.9z M315.8,40.2c2.7,2.7,0.7,7.8-2.9,7.8\n                                    c-2.1,0-4.9-2.6-4.9-4.5C308,40,313.3,37.7,315.8,40.2z\"/>\n                            <path class=\"swirl-top\" d=\"M72.5,50.6c-9.9,2.3-10.4,2.6-18.8,11.3c-4.5,4.7-11.1,12.2-14.6,16.6c-9.7,12.3-26,37.8-23,35.9\n                                    c0.8-0.5,4.6-3,8.6-5.7c9.7-6.4,23.9-13.1,34.8-16.3c8-2.5,10.6-2.7,24-2.7s15.9,0.2,23.8,2.6c4.8,1.5,12.4,4.5,16.9,6.8l8.1,4.1\n                                    l-3.8-6.9c-11.6-20.8-25.7-37.2-36.6-42.2C85.7,51.2,76.8,49.6,72.5,50.6z\"/>\n                            <path class=\"swirl-left\" d=\"M354.6,81.9c1.3,5,0.7,31.5-1,40.5c-4.6,24.2-16.5,43.5-35.4,57.4c-14.1,10.4-23.8,14.3-55.1,22.2\n                                    c-23.8,6-32.9,8.9-44.6,14.5c-22.7,10.9-35.8,23.3-45,42.6c-5.4,11.5-7.5,21.2-7.5,35.1c0,15.5,1.9,23.6,8.5,37.4\n                                    c10.3,21.3,27.7,35.9,51.2,43c7.6,2.4,10.6,2.7,22.3,2.8c15.3,0,23.2-1.5,34.5-6.7c19-8.6,31.2-17.5,48-34.8\n                                    c17.5-18,28.4-33.6,39.6-56.3c28.1-57.2,26.1-119.5-5.7-181.6C358.2,85.8,353.6,78.3,354.6,81.9z M329.4,194.2\n                                    c-30.6,42.4-63.6,80-84.9,96.8c-13.1,10.3-34,19-49.9,20.6l-6.4,0.7l-0.7-7.7c-1.4-14.8,2.6-33.4,9.7-45.3\n                                    c5-8.5,14.6-17.5,23.6-22.1c8.9-4.7,17.5-7.3,43.7-13.7c10.5-2.6,23.5-6.4,29.1-8.6c10.9-4.2,24.4-12.7,33.4-20.8\n                                    c3-2.8,5.7-5.1,5.8-5.1C333,189,331.5,191.4,329.4,194.2z\"/>\n                            <path class=\"swirl-right\" d=\"M67.5,108c-17.8,3.8-37.3,16-48,30.2C8.7,152.5,3.6,167,2,187.1C-0.1,215,7.8,248,24.4,280.3\n                                    c34.1,66.3,95.1,104.5,174.1,109.1l9,0.5l-6.5-1.4c-56.1-12.9-106.1-51.7-136.8-106.2c-14.5-25.7-20.6-47.5-20.7-73.8\n                                    c0-23.4,4.2-40,14.8-57.7c4.2-6.9,12.6-17.3,13.4-16.5c0.2,0.3-1.6,4.5-4,9.3C58.6,161.8,55,177.6,55,199c0,37.8,14.2,78,39.4,111.7\n                                    c14.5,19.5,39,42.1,58.8,54.2c14.9,9,31.2,16.2,46.5,20.5c14.6,4,15.2,3.9,5.5-1.4c-45.2-24.2-65.1-62.5-55.7-107.3\n                                    c0.9-4.3,3.9-15.1,6.6-24c9.7-31.5,12.1-43.7,12-63c0-9.1-0.5-14.3-2.1-20.2C154.6,125.4,111.9,98.7,67.5,108z\"/>\n                        </g></svg>\n                        </div>\n                        <div *ngIf=\"!griddedLoading\" class=\"legend-swatch\" [ngStyle]=\"{'background-color': griddedData.legendData?.color}\">&nbsp;</div>\n                        <div class=\"point-formatted\">{{griddedLoading ? 'Loading...' : griddedData.formatted}}</div>\n                    </div>\n                </agm-info-window>\n                <agm-marker *ngFor=\"let m of markers\"\n                    [latitude]=\"m.latitude\" [longitude]=\"m.longitude\"\n                    [iconUrl]=\"m.icon\"\n                    [title]=\"m.title\" (markerClick)=\"selectedMarker = m\"></agm-marker>\n                <agm-info-window\n                    [isOpen]=\"!!selectedMarker\" (infoWindowClose)=\"selectedMarker = null\"\n                    [latitude]=\"selectedMarker?.latitude\" [longitude]=\"selectedMarker?.longitude\">\n                    <map-visualization-marker-iw [marker]=\"selectedMarker\" [selection]=\"selection\"></map-visualization-marker-iw>\n                </agm-info-window>\n            </agm-map>\n            <map-layer-legend *ngIf=\"!thumbnail && selection.legend\" [legend]=\"selection.legend\"></map-layer-legend>\n            <img src = 'assets/USA-NPN-logo-RGB2019.png' class='npnlogo'/>\n            <img src = 'assets/University-of-Arizona-Logo.png' class='ualogo'/>\n            <img src = 'assets/usgs-logo.png' class='usgslogo'/>\n        </div>\n    </div>\n    ",
            styles: [__webpack_require__(/*! ./map-visualization.component.scss */ "../npn/common/src/lib/visualizations/map/map-visualization.component.scss")]
        }),
        __metadata("design:paramtypes", [_angular_core__WEBPACK_IMPORTED_MODULE_0__["ElementRef"], _angular_flex_layout__WEBPACK_IMPORTED_MODULE_1__["ObservableMedia"]])
    ], MapVisualizationComponent);
    return MapVisualizationComponent;
}(_map_visualization_base_component__WEBPACK_IMPORTED_MODULE_2__["MapVisualizationBaseComponent"]));

var MAP_VIS_SVG_PATHS = [
    'M0 22 L22 22 L10 0 Z',
    'M0 22 L22 22 L22 0 L0 0 Z',
    'M4 22 L18 22 L22 10 L18 0 L4 0 L0 10 Z' // hexagon
];
function newGoogleMapsSymbol(path) {
    return {
        path: path,
        anchor: new google.maps.Point(11, 11),
        scale: 1,
        fillOpacity: 1,
        fillColor: '#ffffff',
        strokeColor: '#204d74'
    };
}
var MapVisMarker = /** @class */ (function () {
    function MapVisMarker(record, icon, cloned) {
        this.record = record;
        this.icon = icon;
        this.cloned = cloned;
        this.records = [record];
    }
    MapVisMarker.prototype.addRecord = function (record) {
        this.records.push(record);
        this.icon.strokeColor = '#00ff00';
    };
    Object.defineProperty(MapVisMarker.prototype, "latitude", {
        get: function () { return this.record.latitude; },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(MapVisMarker.prototype, "longitude", {
        get: function () { return this.record.longitude; },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(MapVisMarker.prototype, "site_id", {
        get: function () { return this.record.site_id; },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(MapVisMarker.prototype, "doy", {
        get: function () { return this.record.mean_first_yes_doy; },
        enumerable: true,
        configurable: true
    });
    MapVisMarker.prototype.clone = function () {
        var clone = new MapVisMarker(this.record, this.icon, true);
        clone.records = this.records.slice();
        return clone;
    };
    return MapVisMarker;
}());



/***/ }),

/***/ "../npn/common/src/lib/visualizations/map/public_api.ts":
/*!**************************************************************!*\
  !*** ../npn/common/src/lib/visualizations/map/public_api.ts ***!
  \**************************************************************/
/*! exports provided: MapSelection, MapSelectionFactory, MapVisualizationComponent, MAP_VIS_SVG_PATHS, MapVisMarker, ExtentControl, ExtentDateControl, ExtentDoyControl, ExtentYearControl, GriddedRangeSliderControl, ConsolidatedMapLayerControlComponent, PestMapLayerControlComponent, TempAccumMapLayerControlComponent, SpringIndexMapLayerControlComponent, MapVisualizationMarkerIw */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _map_selection__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./map-selection */ "../npn/common/src/lib/visualizations/map/map-selection.ts");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "MapSelection", function() { return _map_selection__WEBPACK_IMPORTED_MODULE_0__["MapSelection"]; });

/* harmony import */ var _map_selection_factory__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./map-selection.factory */ "../npn/common/src/lib/visualizations/map/map-selection.factory.ts");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "MapSelectionFactory", function() { return _map_selection_factory__WEBPACK_IMPORTED_MODULE_1__["MapSelectionFactory"]; });

/* harmony import */ var _map_visualization_component__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./map-visualization.component */ "../npn/common/src/lib/visualizations/map/map-visualization.component.ts");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "MapVisualizationComponent", function() { return _map_visualization_component__WEBPACK_IMPORTED_MODULE_2__["MapVisualizationComponent"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "MAP_VIS_SVG_PATHS", function() { return _map_visualization_component__WEBPACK_IMPORTED_MODULE_2__["MAP_VIS_SVG_PATHS"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "MapVisMarker", function() { return _map_visualization_component__WEBPACK_IMPORTED_MODULE_2__["MapVisMarker"]; });

/* harmony import */ var _extent_controls__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./extent-controls */ "../npn/common/src/lib/visualizations/map/extent-controls.ts");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "ExtentControl", function() { return _extent_controls__WEBPACK_IMPORTED_MODULE_3__["ExtentControl"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "ExtentDateControl", function() { return _extent_controls__WEBPACK_IMPORTED_MODULE_3__["ExtentDateControl"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "ExtentDoyControl", function() { return _extent_controls__WEBPACK_IMPORTED_MODULE_3__["ExtentDoyControl"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "ExtentYearControl", function() { return _extent_controls__WEBPACK_IMPORTED_MODULE_3__["ExtentYearControl"]; });

/* harmony import */ var _gridded_range_slider_control_component__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./gridded-range-slider-control.component */ "../npn/common/src/lib/visualizations/map/gridded-range-slider-control.component.ts");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "GriddedRangeSliderControl", function() { return _gridded_range_slider_control_component__WEBPACK_IMPORTED_MODULE_4__["GriddedRangeSliderControl"]; });

/* harmony import */ var _consolidated_map_layer_control_component__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./consolidated-map-layer-control.component */ "../npn/common/src/lib/visualizations/map/consolidated-map-layer-control.component.ts");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "ConsolidatedMapLayerControlComponent", function() { return _consolidated_map_layer_control_component__WEBPACK_IMPORTED_MODULE_5__["ConsolidatedMapLayerControlComponent"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "PestMapLayerControlComponent", function() { return _consolidated_map_layer_control_component__WEBPACK_IMPORTED_MODULE_5__["PestMapLayerControlComponent"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "TempAccumMapLayerControlComponent", function() { return _consolidated_map_layer_control_component__WEBPACK_IMPORTED_MODULE_5__["TempAccumMapLayerControlComponent"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "SpringIndexMapLayerControlComponent", function() { return _consolidated_map_layer_control_component__WEBPACK_IMPORTED_MODULE_5__["SpringIndexMapLayerControlComponent"]; });

/* harmony import */ var _map_visualization_marker_iw_component__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./map-visualization-marker-iw.component */ "../npn/common/src/lib/visualizations/map/map-visualization-marker-iw.component.ts");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "MapVisualizationMarkerIw", function() { return _map_visualization_marker_iw_component__WEBPACK_IMPORTED_MODULE_6__["MapVisualizationMarkerIw"]; });










/***/ }),

/***/ "../npn/common/src/lib/visualizations/observation-date-vis-selection.ts":
/*!******************************************************************************!*\
  !*** ../npn/common/src/lib/visualizations/observation-date-vis-selection.ts ***!
  \******************************************************************************/
/*! exports provided: ObservationDateVisSelection */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ObservationDateVisSelection", function() { return ObservationDateVisSelection; });
/* harmony import */ var _angular_common_http__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @angular/common/http */ "../../node_modules/@angular/common/fesm5/http.js");
/* harmony import */ var _vis_selection__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./vis-selection */ "../npn/common/src/lib/visualizations/vis-selection.ts");
/* harmony import */ var _common__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../common */ "../npn/common/src/lib/common/index.ts");
var __extends = (undefined && undefined.__extends) || (function () {
    var extendStatics = Object.setPrototypeOf ||
        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __assign = (undefined && undefined.__assign) || Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
        s = arguments[i];
        for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
            t[p] = s[p];
    }
    return t;
};
var __decorate = (undefined && undefined.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (undefined && undefined.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};



var ObservationDateVisSelection = /** @class */ (function (_super) {
    __extends(ObservationDateVisSelection, _super);
    function ObservationDateVisSelection(serviceUtils, speciesTitle, speciesService, networkService) {
        var _this = _super.call(this, serviceUtils, networkService) || this;
        _this.serviceUtils = serviceUtils;
        _this.speciesTitle = speciesTitle;
        _this.speciesService = speciesService;
        _this.networkService = networkService;
        _this.$supportsPop = true;
        _this.requestSrc = 'observation-date-vis-selection';
        _this.negative = false;
        _this.negativeColor = '#aaa';
        _this.years = [];
        _this.plots = [];
        /** The maximum number of plots we want to allow. */
        _this.MAX_PLOTS = 10;
        return _this;
    }
    ObservationDateVisSelection.prototype.isValid = function () {
        return this.years && this.years.length && this.validPlots.length > 0;
    };
    Object.defineProperty(ObservationDateVisSelection.prototype, "validPlots", {
        get: function () {
            var _this = this;
            return (this.plots || []).filter(function (p) {
                return p.species && p.phenophase &&
                    // color only required if not grouping
                    (p.color || (_this.groups && _this.groups.length > 0));
            });
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(ObservationDateVisSelection.prototype, "canAddPlot", {
        /**
         * Indicates whether or not adding one more plot will result in a visualization exceeding
         * the maximum number of allowed plots.
         */
        get: function () {
            var years = this.years ? this.years.length : 0;
            var groups = this.groups ? this.groups.length : 0;
            var next_plots = ((this.plots ? this.plots.length : 0) + 1) * years;
            var next_count = groups ? (groups * next_plots) : next_plots;
            return next_count <= this.MAX_PLOTS;
        },
        enumerable: true,
        configurable: true
    });
    ObservationDateVisSelection.prototype.toURLSearchParams = function (params) {
        if (params === void 0) { params = new _angular_common_http__WEBPACK_IMPORTED_MODULE_0__["HttpParams"](); }
        params = params.set('request_src', this.requestSrc);
        this.years.forEach(function (y, i) {
            params = params.set("year[" + i + "]", "" + y);
        });
        return _super.prototype.toURLSearchParams.call(this, params);
    };
    ObservationDateVisSelection.prototype.toPOPInput = function (input) {
        var _this = this;
        if (input === void 0) { input = __assign({}, _vis_selection__WEBPACK_IMPORTED_MODULE_1__["BASE_POP_INPUT"]); }
        return _super.prototype.toPOPInput.call(this, input)
            .then(function (input) {
            var yearRange = _this.years.reduce(function (range, y) {
                if (!range) {
                    return [y, y];
                }
                if (y < range[0]) {
                    range[0] = y;
                }
                if (y > range[1]) {
                    range[1] = y;
                }
                return range;
            }, undefined);
            if (yearRange) {
                input.startDate = yearRange[0] + "-01-01";
                input.endDate = yearRange[1] + "-12-31";
            }
            return _this.speciesService.getSpeciesIds(_this.validPlots)
                .then(function (ids) {
                input.species = ids;
                return input;
            });
        });
    };
    ObservationDateVisSelection.prototype.postProcessData = function (data) {
        var _this = this;
        if (!data || !data.length) {
            return null;
        }
        var plots = data.map(function (d) { return d.plot; });
        var y = (plots.length * this.years.length) - 1;
        var addDoys = function (doys, color) {
            doys.forEach(function (doy) {
                response.data.push({
                    y: y,
                    x: doy,
                    color: color
                });
            });
        };
        var response = {
            labels: [],
            data: []
        };
        data.forEach(function (d) {
            var plot = d.plot;
            var group = d.group;
            var rData = d.data;
            var pPhases = { years: {} }; // empty
            var pPhaseKey = plot.phenophaseRank === _common__WEBPACK_IMPORTED_MODULE_2__["TaxonomicPhenophaseRank"].CLASS ? 'pheno_classes' : 'phenophases';
            if (rData && rData[pPhaseKey] && rData[pPhaseKey].length) {
                pPhases = rData[pPhaseKey][0];
            }
            _this.years.forEach(function (year) {
                if (pPhases.years[year]) {
                    if (_this.negative) {
                        addDoys(pPhases.years[year].negative, _this.negativeColor);
                    }
                    addDoys(pPhases.years[year].positive, plot.color);
                }
                var pp = plot.phenophase;
                response.labels.splice(0, 0, " " + year + ": " +
                    _this.speciesTitle.transform(plot.species, plot.speciesRank) +
                    ' - ' +
                    (pp.phenophase_name || pp.pheno_class_name) +
                    (!!group ? " (" + group.label + ")" : ''));
                y--;
            });
        });
        console.log('observation data', response);
        return response;
    };
    ObservationDateVisSelection.prototype.getData = function () {
        // work around TypeScript Promise.all issue
        return this._getData();
    };
    ObservationDateVisSelection.prototype._getData = function () {
        var _this = this;
        if (!this.isValid()) {
            return Promise.reject(this.INVALID_SELECTION);
        }
        var fetchDataForPlot = function (baseParams, plot, group) {
            var keys = Object(_common__WEBPACK_IMPORTED_MODULE_2__["getSpeciesPlotKeys"])(plot);
            var plotParams = baseParams.set(keys.speciesIdKey + "[0]", "" + plot.species[keys.speciesIdKey])
                .set(keys.phenophaseIdKey + "[0]", "" + plot.phenophase[keys.phenophaseIdKey]);
            if ((plot.speciesRank || _common__WEBPACK_IMPORTED_MODULE_2__["TaxonomicSpeciesRank"].SPECIES) !== _common__WEBPACK_IMPORTED_MODULE_2__["TaxonomicSpeciesRank"].SPECIES) {
                plotParams = plotParams.set('taxonomy_aggregate', '1');
            }
            if (plot.phenophaseRank === _common__WEBPACK_IMPORTED_MODULE_2__["TaxonomicPhenophaseRank"].CLASS) {
                plotParams = plotParams.set('pheno_class_aggregate', '1');
            }
            return _this.serviceUtils.cachedPost(serviceUrl, plotParams.toString())
                .then(function (results) {
                var data = results[0];
                return { plot: plot, data: data, group: group };
            });
        };
        this.working = true;
        var serviceUrl = this.serviceUtils.apiUrl('/npn_portal/observations/getObservationDates.json');
        return this.toURLSearchParams()
            // one request per valid plot
            .then(function (baseParams) {
            var validPlots = _this.validPlots;
            return (_this.groups && _this.groups.length)
                ? _this.toGroupHttpParams(baseParams)
                    .then(function (groupParams) {
                    var plotIndex = 0;
                    // just to make TypeScript happy...
                    var arr = [];
                    var promises = validPlots.reduce(function (promises, p) {
                        groupParams.forEach(function (gp) {
                            var plot = JSON.parse(JSON.stringify(p));
                            plot.color = Object(_common__WEBPACK_IMPORTED_MODULE_2__["getStaticColor"])(plotIndex++);
                            promises.push(fetchDataForPlot(gp.params, plot, gp.group));
                        });
                        return promises;
                    }, arr);
                    return Promise.all(promises);
                })
                : Promise.all(validPlots.map(function (plot) { return fetchDataForPlot(baseParams, plot); }));
        })
            .then(function (result) {
            _this.working = false;
            return result;
        })
            .catch(function (err) {
            _this.working = false;
            _this.handleError(err);
        });
    };
    __decorate([
        Object(_vis_selection__WEBPACK_IMPORTED_MODULE_1__["selectionProperty"])(),
        __metadata("design:type", Boolean)
    ], ObservationDateVisSelection.prototype, "negative", void 0);
    __decorate([
        Object(_vis_selection__WEBPACK_IMPORTED_MODULE_1__["selectionProperty"])(),
        __metadata("design:type", String)
    ], ObservationDateVisSelection.prototype, "negativeColor", void 0);
    __decorate([
        Object(_vis_selection__WEBPACK_IMPORTED_MODULE_1__["selectionProperty"])(),
        __metadata("design:type", Array)
    ], ObservationDateVisSelection.prototype, "years", void 0);
    __decorate([
        Object(_vis_selection__WEBPACK_IMPORTED_MODULE_1__["selectionProperty"])(),
        __metadata("design:type", Array)
    ], ObservationDateVisSelection.prototype, "plots", void 0);
    return ObservationDateVisSelection;
}(_vis_selection__WEBPACK_IMPORTED_MODULE_1__["StationAwareVisSelection"]));



/***/ }),

/***/ "../npn/common/src/lib/visualizations/observation-frequency/index.ts":
/*!***************************************************************************!*\
  !*** ../npn/common/src/lib/visualizations/observation-frequency/index.ts ***!
  \***************************************************************************/
/*! exports provided: ObservationFrequencySelection, ObservationFrequencySelectionFactory, ObservationFrequencyComponent, ObservationFrequencyControl */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _public_api__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./public_api */ "../npn/common/src/lib/visualizations/observation-frequency/public_api.ts");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "ObservationFrequencySelection", function() { return _public_api__WEBPACK_IMPORTED_MODULE_0__["ObservationFrequencySelection"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "ObservationFrequencySelectionFactory", function() { return _public_api__WEBPACK_IMPORTED_MODULE_0__["ObservationFrequencySelectionFactory"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "ObservationFrequencyComponent", function() { return _public_api__WEBPACK_IMPORTED_MODULE_0__["ObservationFrequencyComponent"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "ObservationFrequencyControl", function() { return _public_api__WEBPACK_IMPORTED_MODULE_0__["ObservationFrequencyControl"]; });




/***/ }),

/***/ "../npn/common/src/lib/visualizations/observation-frequency/observation-frequency-control.component.ts":
/*!*************************************************************************************************************!*\
  !*** ../npn/common/src/lib/visualizations/observation-frequency/observation-frequency-control.component.ts ***!
  \*************************************************************************************************************/
/*! exports provided: ObservationFrequencyControl */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ObservationFrequencyControl", function() { return ObservationFrequencyControl; });
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @angular/core */ "../../node_modules/@angular/core/fesm5/core.js");
/* harmony import */ var _observation_frequency_selection__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./observation-frequency-selection */ "../npn/common/src/lib/visualizations/observation-frequency/observation-frequency-selection.ts");
var __decorate = (undefined && undefined.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (undefined && undefined.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};


var ObservationFrequencyControl = /** @class */ (function () {
    function ObservationFrequencyControl() {
        // TODO what are the valid years?
        this.validYears = (function () {
            var max = (new Date()).getFullYear() + 1, current = 2000, years = [];
            while (current < max) {
                years.push(current++);
            }
            return years.reverse();
        })();
    }
    ObservationFrequencyControl.prototype.ngOnInit = function () {
    };
    __decorate([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Input"])(),
        __metadata("design:type", _observation_frequency_selection__WEBPACK_IMPORTED_MODULE_1__["ObservationFrequencySelection"])
    ], ObservationFrequencyControl.prototype, "selection", void 0);
    ObservationFrequencyControl = __decorate([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Component"])({
            selector: 'observation-frequency-control',
            template: "\n    <mat-form-field class=\"year-input\">\n        <mat-select placeholder=\"Year *\" [(ngModel)]=\"selection.year\" (ngModelChange)=\"selection.update()\">\n            <mat-option *ngFor=\"let y of validYears\" [value]=\"y\">{{y}}</mat-option>\n        </mat-select>\n    </mat-form-field>\n    ",
            styles: ["\n        .year-input {\n            width: 65px;\n        }\n    "]
        })
    ], ObservationFrequencyControl);
    return ObservationFrequencyControl;
}());



/***/ }),

/***/ "../npn/common/src/lib/visualizations/observation-frequency/observation-frequency-selection-factory.service.ts":
/*!*********************************************************************************************************************!*\
  !*** ../npn/common/src/lib/visualizations/observation-frequency/observation-frequency-selection-factory.service.ts ***!
  \*********************************************************************************************************************/
/*! exports provided: ObservationFrequencySelectionFactory */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ObservationFrequencySelectionFactory", function() { return ObservationFrequencySelectionFactory; });
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @angular/core */ "../../node_modules/@angular/core/fesm5/core.js");
/* harmony import */ var _common__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../common */ "../npn/common/src/lib/common/index.ts");
/* harmony import */ var _observation_frequency_selection__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./observation-frequency-selection */ "../npn/common/src/lib/visualizations/observation-frequency/observation-frequency-selection.ts");
var __decorate = (undefined && undefined.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (undefined && undefined.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};



var ObservationFrequencySelectionFactory = /** @class */ (function () {
    function ObservationFrequencySelectionFactory(serviceUtils, networkService) {
        this.serviceUtils = serviceUtils;
        this.networkService = networkService;
    }
    ObservationFrequencySelectionFactory.prototype.newSelection = function () {
        return new _observation_frequency_selection__WEBPACK_IMPORTED_MODULE_2__["ObservationFrequencySelection"](this.serviceUtils, this.networkService);
    };
    ObservationFrequencySelectionFactory = __decorate([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Injectable"])(),
        __metadata("design:paramtypes", [_common__WEBPACK_IMPORTED_MODULE_1__["NpnServiceUtils"], _common__WEBPACK_IMPORTED_MODULE_1__["NetworkService"]])
    ], ObservationFrequencySelectionFactory);
    return ObservationFrequencySelectionFactory;
}());



/***/ }),

/***/ "../npn/common/src/lib/visualizations/observation-frequency/observation-frequency-selection.ts":
/*!*****************************************************************************************************!*\
  !*** ../npn/common/src/lib/visualizations/observation-frequency/observation-frequency-selection.ts ***!
  \*****************************************************************************************************/
/*! exports provided: ObservationFrequencySelection */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ObservationFrequencySelection", function() { return ObservationFrequencySelection; });
/* harmony import */ var _vis_selection__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../vis-selection */ "../npn/common/src/lib/visualizations/vis-selection.ts");
/* harmony import */ var _angular_common_http__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @angular/common/http */ "../../node_modules/@angular/common/fesm5/http.js");
var __extends = (undefined && undefined.__extends) || (function () {
    var extendStatics = Object.setPrototypeOf ||
        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __decorate = (undefined && undefined.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (undefined && undefined.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};


/**
 * @dynamic
 */
var ObservationFrequencySelection = /** @class */ (function (_super) {
    __extends(ObservationFrequencySelection, _super);
    function ObservationFrequencySelection(serviceUtils, networkService) {
        var _this = _super.call(this, serviceUtils, networkService) || this;
        _this.serviceUtils = serviceUtils;
        _this.networkService = networkService;
        _this.$class = 'ObservationFrequencySelection';
        return _this;
    }
    ObservationFrequencySelection.prototype.isValid = function () {
        return !!this.year && this.networkIds.length > 0;
    };
    ObservationFrequencySelection.prototype.toURLSearchParams = function (params) {
        if (params === void 0) { params = new _angular_common_http__WEBPACK_IMPORTED_MODULE_1__["HttpParams"](); }
        return _super.prototype.toURLSearchParams.call(this, params.set('year', "" + this.year));
    };
    ObservationFrequencySelection.prototype.getData = function () {
        var _this = this;
        var url = this.serviceUtils.apiUrl('/npn_portal/networks/getSiteVisitFrequency.json');
        var rollup = function (data, label) {
            var year = data.year;
            var months = data.stations.reduce(function (months, station) {
                station.months.forEach(function (m, i) { return months[i] += m; });
                return months;
            }, [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]);
            return { label: label, year: year, months: months };
        };
        this.working = true;
        if (!this.$entity) {
            // the selection was created before the phenology trails work and must just contain a single network id
            // for a refuge, chase it to get the label for the visualization and then the data....
            return this.serviceUtils.cachedGet(url, { year: this.year, network_id: this.networkIds[0] })
                .then(function (result) {
                _this.working = false;
                return [rollup(result, result.network_name)];
            });
        }
        return this.toURLSearchParams()
            .then(function (baseParams) {
            if (_this.groups && _this.groups.length) {
                return _this.toGroupHttpParams(baseParams)
                    .then(function (groupParams) { return Promise.all(groupParams.map(function (gp) { return _this.serviceUtils.cachedPost(url, gp.params.toString())
                    .then(function (result) { return rollup(result, gp.group.label); }); })).then(function (data) {
                    _this.working = false;
                    return data;
                }); });
            }
            return _this.serviceUtils.cachedPost(url, baseParams.toString())
                .then(function (result) {
                _this.working = false;
                var label = _this.$entity.title;
                if (_this.stationIds && _this.stationIds.length) {
                    // refuge, subset of stations
                    label += ' (select stations)';
                }
                else if (_this.$entity.network_ids && _this.networkIds.length !== _this.$entity.network_ids.length) {
                    // phenology trail, subset of groups
                    label += ' (select groups)';
                }
                return [rollup(result, label)];
            });
        });
    };
    __decorate([
        Object(_vis_selection__WEBPACK_IMPORTED_MODULE_0__["selectionProperty"])(),
        __metadata("design:type", String)
    ], ObservationFrequencySelection.prototype, "$class", void 0);
    __decorate([
        Object(_vis_selection__WEBPACK_IMPORTED_MODULE_0__["selectionProperty"])(),
        __metadata("design:type", Object)
    ], ObservationFrequencySelection.prototype, "$entity", void 0);
    __decorate([
        Object(_vis_selection__WEBPACK_IMPORTED_MODULE_0__["selectionProperty"])(),
        __metadata("design:type", Number)
    ], ObservationFrequencySelection.prototype, "year", void 0);
    return ObservationFrequencySelection;
}(_vis_selection__WEBPACK_IMPORTED_MODULE_0__["StationAwareVisSelection"]));



/***/ }),

/***/ "../npn/common/src/lib/visualizations/observation-frequency/observation-frequency.component.ts":
/*!*****************************************************************************************************!*\
  !*** ../npn/common/src/lib/visualizations/observation-frequency/observation-frequency.component.ts ***!
  \*****************************************************************************************************/
/*! exports provided: ObservationFrequencyComponent */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ObservationFrequencyComponent", function() { return ObservationFrequencyComponent; });
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @angular/core */ "../../node_modules/@angular/core/fesm5/core.js");
/* harmony import */ var _angular_flex_layout__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @angular/flex-layout */ "../../node_modules/@angular/flex-layout/esm5/flex-layout.es5.js");
/* harmony import */ var _svg_visualization_base_component__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../svg-visualization-base.component */ "../npn/common/src/lib/visualizations/svg-visualization-base.component.ts");
/* harmony import */ var _observation_frequency_selection__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./observation-frequency-selection */ "../npn/common/src/lib/visualizations/observation-frequency/observation-frequency-selection.ts");
/* harmony import */ var d3_axis__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! d3-axis */ "../../node_modules/d3-axis/index.js");
/* harmony import */ var d3_scale__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! d3-scale */ "../../node_modules/d3-scale/index.js");
/* harmony import */ var d3__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! d3 */ "../../node_modules/d3/index.js");
/* harmony import */ var _common__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../../common */ "../npn/common/src/lib/common/index.ts");
var __extends = (undefined && undefined.__extends) || (function () {
    var extendStatics = Object.setPrototypeOf ||
        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __assign = (undefined && undefined.__assign) || Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
        s = arguments[i];
        for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
            t[p] = s[p];
    }
    return t;
};
var __decorate = (undefined && undefined.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (undefined && undefined.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};








var TITLE = 'Site visits by month';
var DEFAULT_TOP_MARGIN = 100;
var LEGEND_VPAD = 4;
var MARGIN_VPAD = 5;
var TITLE_FONT_SIZE = 18;
var SWATCH_SIZE = 20;
var BAR_OPACITY = '0.75';
var ObservationFrequencyComponent = /** @class */ (function (_super) {
    __extends(ObservationFrequencyComponent, _super);
    function ObservationFrequencyComponent(rootElement, media) {
        var _this = _super.call(this, rootElement, media) || this;
        _this.rootElement = rootElement;
        _this.media = media;
        _this.z = Object(d3_scale__WEBPACK_IMPORTED_MODULE_5__["scaleOrdinal"])();
        _this.filename = 'observation-frequency.png';
        _this.margins = __assign({}, _svg_visualization_base_component__WEBPACK_IMPORTED_MODULE_2__["DEFAULT_MARGINS"], { top: DEFAULT_TOP_MARGIN, left: 80 });
        return _this;
    }
    ObservationFrequencyComponent.prototype.reset = function () {
        // dynamic top margins
        this.margins.top = DEFAULT_TOP_MARGIN;
        var fontSize = this.baseFontSize();
        var plotCount = this.data ? this.data.length : 0;
        if (plotCount) {
            this.margins.top = fontSize + (plotCount * SWATCH_SIZE) + (plotCount * LEGEND_VPAD) + MARGIN_VPAD;
        }
        _super.prototype.reset.call(this);
        var _a = this, chart = _a.chart, sizing = _a.sizing, svg = _a.svg;
        var d3_month_fmt = d3__WEBPACK_IMPORTED_MODULE_6__["timeFormat"]('%B');
        var titleDy = this.margins.top - TITLE_FONT_SIZE - fontSize;
        this.title = chart.append('g')
            .attr('class', 'chart-title')
            .append('text')
            .attr('y', '0')
            .attr('dy', "-" + titleDy)
            .attr('x', '0')
            .style('text-anchor', 'start')
            .style('font-size', TITLE_FONT_SIZE + "px");
        this.x = Object(d3_scale__WEBPACK_IMPORTED_MODULE_5__["scaleBand"])().rangeRound([0, sizing.width]).padding(0.05).domain(d3__WEBPACK_IMPORTED_MODULE_6__["range"](0, 12));
        this.xAxis = Object(d3_axis__WEBPACK_IMPORTED_MODULE_4__["axisBottom"])(this.x).tickFormat(function (i) { return d3_month_fmt(new Date(1900, i)); });
        this.y = Object(d3_scale__WEBPACK_IMPORTED_MODULE_5__["scaleLinear"])().range([sizing.height, 0]).domain([0, 20]); // just a default domain
        this.yAxis = Object(d3_axis__WEBPACK_IMPORTED_MODULE_4__["axisLeft"])(this.y).tickSize(-sizing.width).tickFormat(d3__WEBPACK_IMPORTED_MODULE_6__["format"]('.0d'));
        chart.append('g')
            .attr('class', 'x axis')
            .attr('transform', 'translate(0,' + sizing.height + ')')
            .call(this.xAxis);
        chart.append('g')
            .attr('class', 'y axis')
            .call(this.yAxis)
            .append('text')
            .attr('fill', '#000') // somehow parent g has fill="none"
            .attr('transform', 'rotate(-90)')
            .attr('y', '0')
            .attr('dy', '-3em')
            .attr('x', -1 * (sizing.height / 2)) // looks odd but to move in the Y we need to change X because of transform
            .style('text-anchor', 'middle')
            .text('Site visits');
        this.commonUpdates();
    };
    ObservationFrequencyComponent.prototype.update = function () {
        var _this = this;
        console.debug('ObservationFrequencyComponent.update');
        this.reset();
        delete this.data;
        this.selection.getData()
            .then(function (data) {
            _this.data = data;
            _this.reset();
            _this.redraw();
        })
            .catch(this.handleError);
    };
    ObservationFrequencyComponent.prototype.updateLegend = function () {
        var _a = this, chart = _a.chart, data = _a.data, sizing = _a.sizing, z = _a.z;
        chart.select('.legend').remove();
        if (data && data.length) {
            var fontSize_1 = this.baseFontSize();
            z.domain(data.map(function (d, i) { return i; })).range(data.map(function (d, i) { return Object(_common__WEBPACK_IMPORTED_MODULE_7__["getStaticColor"])(i); }));
            var labels = data.map(function (d) { return d.label; });
            var legend = chart.append('g')
                .attr('class', 'legend')
                .attr('transform', "translate(55,-" + sizing.margin.top + ")")
                .attr('text-anchor', 'start')
                .style('font-size', fontSize_1 + "px")
                .selectAll('g')
                .data(labels)
                .enter().append('g')
                // needs to be kept in sync with logic in dynamic margins in reset()
                .attr('transform', function (d, i) { return "translate(10," + (fontSize_1 + (i * SWATCH_SIZE) + (i * LEGEND_VPAD)) + ")"; });
            // add legend swatches
            legend.append('rect')
                .attr('x', 0)
                .attr('width', SWATCH_SIZE)
                .attr('height', SWATCH_SIZE)
                .attr('fill', function (d, i) { return z(i); })
                .style('opacity', BAR_OPACITY);
            // add labels
            legend.append('text')
                .attr('x', SWATCH_SIZE + 4)
                .attr('y', fontSize_1)
                .attr('dy', '0.1em')
                .text(function (d) { return d; });
        }
    };
    ObservationFrequencyComponent.prototype.commonUpdates = function () {
        _super.prototype.commonUpdates.call(this);
        var chart = this.chart;
        // undo/change some of the commonUpdates
        var _yAxis = chart.select('.y.axis');
        _yAxis.select('path.domain')
            .attr('stroke', 'none')
            .style('stroke', 'none');
        _yAxis.selectAll('.tick>line')
            .attr('stroke', function (i) { return i === 0 ? '#000' : '#ddd'; })
            .style('stroke', function (i) { return i === 0 ? '#000' : '#ddd'; });
    };
    ObservationFrequencyComponent.prototype.redrawSvg = function () {
        var _this = this;
        if (!this.data) {
            return;
        }
        console.debug('ObservationFrequencyComponent.redrawSvg:data', this.data);
        this.title.text("" + this.selection.year);
        this.updateLegend();
        var visData = d3__WEBPACK_IMPORTED_MODULE_6__["range"](0, 12)
            .map(function (month) { return _this.data.reduce(function (map, d, index) {
            map["" + index] = d.months[month];
            return map;
        }, {}); });
        var max = visData.reduce(function (max, d) {
            var sum = Object.values(d).reduce(function (sum, n) { return (sum + n); }, 0);
            return sum > max ? sum : max;
        }, 0); // TS handing of reduce is stupid
        var layers = d3__WEBPACK_IMPORTED_MODULE_6__["stack"]().keys(this.data.map(function (d, i) { return "" + i; }))(visData);
        var _a = this, chart = _a.chart, y = _a.y, yAxis = _a.yAxis, x = _a.x;
        y.domain([0, max]);
        yAxis.ticks(max < 11 ? max : 10); // at most 10 ticks
        chart.selectAll('g .y.axis').call(this.yAxis);
        chart.selectAll('.layer').remove();
        var layer = chart.selectAll('.layer')
            .data(layers)
            .enter()
            .append('g')
            .attr('class', 'layer')
            .style('fill', function (d, i) { return _this.z(i); });
        layer.selectAll('rect')
            .data(function (d) { return d; })
            .enter()
            .append('rect')
            .attr('x', function (d, i) { return x(i); })
            .attr('y', function (d) { return y(d[1]); })
            .attr('height', function (d) { return y(d[0]) - y(d[1]); })
            .attr('width', x.bandwidth() - 10)
            .style('opacity', BAR_OPACITY);
        this.commonUpdates();
    };
    __decorate([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Input"])(),
        __metadata("design:type", _observation_frequency_selection__WEBPACK_IMPORTED_MODULE_3__["ObservationFrequencySelection"])
    ], ObservationFrequencyComponent.prototype, "selection", void 0);
    ObservationFrequencyComponent = __decorate([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Component"])({
            selector: 'observation-frequency',
            template: __webpack_require__(/*! ../svg-visualization-base.component.html */ "../npn/common/src/lib/visualizations/svg-visualization-base.component.html"),
            styles: [__webpack_require__(/*! ../svg-visualization-base.component.scss */ "../npn/common/src/lib/visualizations/svg-visualization-base.component.scss")],
        }),
        __metadata("design:paramtypes", [_angular_core__WEBPACK_IMPORTED_MODULE_0__["ElementRef"], _angular_flex_layout__WEBPACK_IMPORTED_MODULE_1__["ObservableMedia"]])
    ], ObservationFrequencyComponent);
    return ObservationFrequencyComponent;
}(_svg_visualization_base_component__WEBPACK_IMPORTED_MODULE_2__["SvgVisualizationBaseComponent"]));



/***/ }),

/***/ "../npn/common/src/lib/visualizations/observation-frequency/public_api.ts":
/*!********************************************************************************!*\
  !*** ../npn/common/src/lib/visualizations/observation-frequency/public_api.ts ***!
  \********************************************************************************/
/*! exports provided: ObservationFrequencySelection, ObservationFrequencySelectionFactory, ObservationFrequencyComponent, ObservationFrequencyControl */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _observation_frequency_selection__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./observation-frequency-selection */ "../npn/common/src/lib/visualizations/observation-frequency/observation-frequency-selection.ts");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "ObservationFrequencySelection", function() { return _observation_frequency_selection__WEBPACK_IMPORTED_MODULE_0__["ObservationFrequencySelection"]; });

/* harmony import */ var _observation_frequency_selection_factory_service__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./observation-frequency-selection-factory.service */ "../npn/common/src/lib/visualizations/observation-frequency/observation-frequency-selection-factory.service.ts");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "ObservationFrequencySelectionFactory", function() { return _observation_frequency_selection_factory_service__WEBPACK_IMPORTED_MODULE_1__["ObservationFrequencySelectionFactory"]; });

/* harmony import */ var _observation_frequency_component__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./observation-frequency.component */ "../npn/common/src/lib/visualizations/observation-frequency/observation-frequency.component.ts");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "ObservationFrequencyComponent", function() { return _observation_frequency_component__WEBPACK_IMPORTED_MODULE_2__["ObservationFrequencyComponent"]; });

/* harmony import */ var _observation_frequency_control_component__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./observation-frequency-control.component */ "../npn/common/src/lib/visualizations/observation-frequency/observation-frequency-control.component.ts");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "ObservationFrequencyControl", function() { return _observation_frequency_control_component__WEBPACK_IMPORTED_MODULE_3__["ObservationFrequencyControl"]; });







/***/ }),

/***/ "../npn/common/src/lib/visualizations/observer-activity/index.ts":
/*!***********************************************************************!*\
  !*** ../npn/common/src/lib/visualizations/observer-activity/index.ts ***!
  \***********************************************************************/
/*! exports provided: ObserverActivityVisMode, ObserverActivitySelection, ObserverActivitySelectionFactory, ObserverActivityComponent, ObserverActivityControl */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _public_api__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./public_api */ "../npn/common/src/lib/visualizations/observer-activity/public_api.ts");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "ObserverActivityVisMode", function() { return _public_api__WEBPACK_IMPORTED_MODULE_0__["ObserverActivityVisMode"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "ObserverActivitySelection", function() { return _public_api__WEBPACK_IMPORTED_MODULE_0__["ObserverActivitySelection"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "ObserverActivitySelectionFactory", function() { return _public_api__WEBPACK_IMPORTED_MODULE_0__["ObserverActivitySelectionFactory"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "ObserverActivityComponent", function() { return _public_api__WEBPACK_IMPORTED_MODULE_0__["ObserverActivityComponent"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "ObserverActivityControl", function() { return _public_api__WEBPACK_IMPORTED_MODULE_0__["ObserverActivityControl"]; });




/***/ }),

/***/ "../npn/common/src/lib/visualizations/observer-activity/observer-activity-control.component.ts":
/*!*****************************************************************************************************!*\
  !*** ../npn/common/src/lib/visualizations/observer-activity/observer-activity-control.component.ts ***!
  \*****************************************************************************************************/
/*! exports provided: ObserverActivityControl */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ObserverActivityControl", function() { return ObserverActivityControl; });
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @angular/core */ "../../node_modules/@angular/core/fesm5/core.js");
/* harmony import */ var _observer_activity_selection__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./observer-activity-selection */ "../npn/common/src/lib/visualizations/observer-activity/observer-activity-selection.ts");
var __decorate = (undefined && undefined.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (undefined && undefined.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};


var ObserverActivityControl = /** @class */ (function () {
    function ObserverActivityControl() {
        // TODO what are the valid years?
        this.validYears = (function () {
            var max = (new Date()).getFullYear() + 1, current = 2000, years = [];
            while (current < max) {
                years.push(current++);
            }
            return years.reverse();
        })();
    }
    ObserverActivityControl.prototype.ngOnInit = function () {
    };
    __decorate([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Input"])(),
        __metadata("design:type", _observer_activity_selection__WEBPACK_IMPORTED_MODULE_1__["ObserverActivitySelection"])
    ], ObserverActivityControl.prototype, "selection", void 0);
    ObserverActivityControl = __decorate([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Component"])({
            selector: 'observer-activity-control',
            template: "\n    <mat-form-field class=\"year-input\">\n        <mat-select placeholder=\"Year *\" [(ngModel)]=\"selection.year\" (ngModelChange)=\"selection.update()\">\n            <mat-option *ngFor=\"let y of validYears\" [value]=\"y\">{{y}}</mat-option>\n        </mat-select>\n    </mat-form-field>\n    ",
            styles: ["\n        .year-input {\n            width: 65px;\n        }\n    "]
        })
    ], ObserverActivityControl);
    return ObserverActivityControl;
}());



/***/ }),

/***/ "../npn/common/src/lib/visualizations/observer-activity/observer-activity-selection-factory.service.ts":
/*!*************************************************************************************************************!*\
  !*** ../npn/common/src/lib/visualizations/observer-activity/observer-activity-selection-factory.service.ts ***!
  \*************************************************************************************************************/
/*! exports provided: ObserverActivitySelectionFactory */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ObserverActivitySelectionFactory", function() { return ObserverActivitySelectionFactory; });
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @angular/core */ "../../node_modules/@angular/core/fesm5/core.js");
/* harmony import */ var _common__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../common */ "../npn/common/src/lib/common/index.ts");
/* harmony import */ var _observer_activity_selection__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./observer-activity-selection */ "../npn/common/src/lib/visualizations/observer-activity/observer-activity-selection.ts");
var __decorate = (undefined && undefined.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (undefined && undefined.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};



var ObserverActivitySelectionFactory = /** @class */ (function () {
    function ObserverActivitySelectionFactory(serviceUtils, networkService) {
        this.serviceUtils = serviceUtils;
        this.networkService = networkService;
    }
    ObserverActivitySelectionFactory.prototype.newSelection = function () {
        return new _observer_activity_selection__WEBPACK_IMPORTED_MODULE_2__["ObserverActivitySelection"](this.serviceUtils, this.networkService);
    };
    ObserverActivitySelectionFactory = __decorate([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Injectable"])(),
        __metadata("design:paramtypes", [_common__WEBPACK_IMPORTED_MODULE_1__["NpnServiceUtils"], _common__WEBPACK_IMPORTED_MODULE_1__["NetworkService"]])
    ], ObserverActivitySelectionFactory);
    return ObserverActivitySelectionFactory;
}());



/***/ }),

/***/ "../npn/common/src/lib/visualizations/observer-activity/observer-activity-selection.ts":
/*!*********************************************************************************************!*\
  !*** ../npn/common/src/lib/visualizations/observer-activity/observer-activity-selection.ts ***!
  \*********************************************************************************************/
/*! exports provided: ObserverActivityVisMode, ObserverActivitySelection */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ObserverActivityVisMode", function() { return ObserverActivityVisMode; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ObserverActivitySelection", function() { return ObserverActivitySelection; });
/* harmony import */ var _vis_selection__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../vis-selection */ "../npn/common/src/lib/visualizations/vis-selection.ts");
/* harmony import */ var _angular_common_http__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @angular/common/http */ "../../node_modules/@angular/common/fesm5/http.js");
var __extends = (undefined && undefined.__extends) || (function () {
    var extendStatics = Object.setPrototypeOf ||
        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __decorate = (undefined && undefined.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (undefined && undefined.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};


var ObserverActivityVisMode;
(function (ObserverActivityVisMode) {
    ObserverActivityVisMode["NEW_OBSERVERS"] = "New Observers";
    ObserverActivityVisMode["ACTIVE_OBSERVERS"] = "Active Observers";
})(ObserverActivityVisMode || (ObserverActivityVisMode = {}));
;
var ObserverActivitySelection = /** @class */ (function (_super) {
    __extends(ObserverActivitySelection, _super);
    function ObserverActivitySelection(serviceUtils, networkService) {
        var _this = _super.call(this, serviceUtils, networkService) || this;
        _this.serviceUtils = serviceUtils;
        _this.networkService = networkService;
        _this.$class = 'ObserverActivitySelection';
        _this.mode = ObserverActivityVisMode.ACTIVE_OBSERVERS;
        return _this;
    }
    ObserverActivitySelection.prototype.isValid = function () {
        return !!this.year;
    };
    ObserverActivitySelection.prototype.toURLSearchParams = function (params) {
        if (params === void 0) { params = new _angular_common_http__WEBPACK_IMPORTED_MODULE_1__["HttpParams"](); }
        return _super.prototype.toURLSearchParams.call(this, params.set('year', "" + this.year));
    };
    ObserverActivitySelection.prototype.getData = function () {
        var _this = this;
        var url = this.serviceUtils.apiUrl('/npn_portal/networks/getObserversByMonth.json');
        // pulls data for a given month from a server response
        var dataForMonth = function (month, data) { return ({
            month: month,
            newObservers: data.months[month].new_observers.length,
            activeObservers: data.months[month].active_observers.length
        }); };
        this.working = true;
        // if $entity is not set then this selection was created prior to the phenology trail
        // work and so needs to behave as it did previously, only single network id, etc.
        if (!this.$entity) {
            return this.serviceUtils.cachedGet(url, { year: this.year, network_id: this.networkIds[0] })
                .then(function (data) {
                _this.working = false;
                data.label = "" + data.network_name;
                data.months = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12].map(function (i) { return dataForMonth(i, data); });
                var d = data;
                return [d];
            });
        }
        // $entity is set this is a new selection that can deal with
        return this.toURLSearchParams()
            .then(function (baseParams) {
            if (_this.groups && _this.groups.length) {
                return _this.toGroupHttpParams(baseParams)
                    .then(function (groupParams) { return Promise.all(groupParams.map(function (gp) { return _this.serviceUtils.cachedPost(url, gp.params.toString())
                    .then(function (data) {
                    data.label = gp.group.label;
                    data.months = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12].map(function (i) { return dataForMonth(i, data); });
                    var d = data;
                    return d;
                }); })); }).then(function (results) {
                    _this.working = false;
                    return results;
                });
            }
            // a single data set
            return _this.serviceUtils.cachedPost(url, baseParams.toString())
                .then(function (data) {
                _this.working = false;
                var label = _this.$entity.title;
                if (_this.stationIds && _this.stationIds.length) {
                    // refuge, subset of stations
                    label += ' (select stations)';
                }
                else if (_this.$entity.network_ids && _this.networkIds.length !== _this.$entity.network_ids.length) {
                    // phenology trail, subset of groups
                    label += ' (select groups)';
                }
                data.label = label;
                data.months = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12].map(function (i) { return dataForMonth(i, data); });
                var d = data;
                return [d];
            });
        });
    };
    __decorate([
        Object(_vis_selection__WEBPACK_IMPORTED_MODULE_0__["selectionProperty"])(),
        __metadata("design:type", String)
    ], ObserverActivitySelection.prototype, "$class", void 0);
    __decorate([
        Object(_vis_selection__WEBPACK_IMPORTED_MODULE_0__["selectionProperty"])(),
        __metadata("design:type", Object)
    ], ObserverActivitySelection.prototype, "$entity", void 0);
    __decorate([
        Object(_vis_selection__WEBPACK_IMPORTED_MODULE_0__["selectionProperty"])(),
        __metadata("design:type", Number)
    ], ObserverActivitySelection.prototype, "year", void 0);
    __decorate([
        Object(_vis_selection__WEBPACK_IMPORTED_MODULE_0__["selectionProperty"])(),
        __metadata("design:type", String)
    ], ObserverActivitySelection.prototype, "mode", void 0);
    return ObserverActivitySelection;
}(_vis_selection__WEBPACK_IMPORTED_MODULE_0__["StationAwareVisSelection"]));



/***/ }),

/***/ "../npn/common/src/lib/visualizations/observer-activity/observer-activity.component.html":
/*!***********************************************************************************************!*\
  !*** ../npn/common/src/lib/visualizations/observer-activity/observer-activity.component.html ***!
  \***********************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = "<div class=\"vis-container\">\n    <div class=\"vis-working\" *ngIf=\"selection.working\">\n        <npn-logo spin=\"false\"></npn-logo>\n    </div>\n    <div class=\"chart-container\">\n        <visualization-download *ngIf=\"!thumbnail && !mobileMode\" svgWrapperId=\"{{id}}\" filename=\"{{filename}}\"></visualization-download>\n        <div [class]=\"clazz\" id=\"{{id}}\"><svg class=\"svg-visualization\"></svg></div>\n    </div>\n    <mat-radio-group style=\"display:block; margin-top: 10px;\" *ngIf=\"!thumbnail\"\n        [(ngModel)]=\"selection.mode\"\n        (change)=\"redraw()\">\n        <mat-radio-button [value]=\"modes.ACTIVE_OBSERVERS\" style=\"margin-right: 5px;\">{{modes.ACTIVE_OBSERVERS}}</mat-radio-button>\n        <mat-radio-button [value]=\"modes.NEW_OBSERVERS\">{{modes.NEW_OBSERVERS}}</mat-radio-button>\n    </mat-radio-group>\n</div>\n"

/***/ }),

/***/ "../npn/common/src/lib/visualizations/observer-activity/observer-activity.component.ts":
/*!*********************************************************************************************!*\
  !*** ../npn/common/src/lib/visualizations/observer-activity/observer-activity.component.ts ***!
  \*********************************************************************************************/
/*! exports provided: ObserverActivityComponent */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ObserverActivityComponent", function() { return ObserverActivityComponent; });
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @angular/core */ "../../node_modules/@angular/core/fesm5/core.js");
/* harmony import */ var _angular_flex_layout__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @angular/flex-layout */ "../../node_modules/@angular/flex-layout/esm5/flex-layout.es5.js");
/* harmony import */ var _svg_visualization_base_component__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../svg-visualization-base.component */ "../npn/common/src/lib/visualizations/svg-visualization-base.component.ts");
/* harmony import */ var _observer_activity_selection__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./observer-activity-selection */ "../npn/common/src/lib/visualizations/observer-activity/observer-activity-selection.ts");
/* harmony import */ var d3_axis__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! d3-axis */ "../../node_modules/d3-axis/index.js");
/* harmony import */ var d3_scale__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! d3-scale */ "../../node_modules/d3-scale/index.js");
/* harmony import */ var d3__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! d3 */ "../../node_modules/d3/index.js");
/* harmony import */ var _common__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../../common */ "../npn/common/src/lib/common/index.ts");
var __extends = (undefined && undefined.__extends) || (function () {
    var extendStatics = Object.setPrototypeOf ||
        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __assign = (undefined && undefined.__assign) || Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
        s = arguments[i];
        for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
            t[p] = s[p];
    }
    return t;
};
var __decorate = (undefined && undefined.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (undefined && undefined.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};








var DEFAULT_TOP_MARGIN = 100;
var LEGEND_VPAD = 4;
var MARGIN_VPAD = 5;
var TITLE_FONT_SIZE = 18;
var SWATCH_SIZE = 20;
var BAR_OPACITY = '0.75';
var ObserverActivityComponent = /** @class */ (function (_super) {
    __extends(ObserverActivityComponent, _super);
    function ObserverActivityComponent(rootElement, media) {
        var _this = _super.call(this, rootElement, media) || this;
        _this.rootElement = rootElement;
        _this.media = media;
        _this.modes = _observer_activity_selection__WEBPACK_IMPORTED_MODULE_3__["ObserverActivityVisMode"];
        _this.z = Object(d3_scale__WEBPACK_IMPORTED_MODULE_5__["scaleOrdinal"])();
        _this.filename = 'observer-activity.png';
        _this.margins = __assign({}, _svg_visualization_base_component__WEBPACK_IMPORTED_MODULE_2__["DEFAULT_MARGINS"], { top: DEFAULT_TOP_MARGIN, left: 80 });
        return _this;
    }
    ObserverActivityComponent.prototype.reset = function () {
        // dynamic top margins
        this.margins.top = DEFAULT_TOP_MARGIN;
        var fontSize = this.baseFontSize();
        var plotCount = this.data ? this.data.length : 0;
        if (plotCount) {
            this.margins.top = fontSize + (plotCount * SWATCH_SIZE) + (plotCount * LEGEND_VPAD) + MARGIN_VPAD;
        }
        _super.prototype.reset.call(this);
        var _a = this, chart = _a.chart, sizing = _a.sizing, svg = _a.svg;
        var d3_month_fmt = d3__WEBPACK_IMPORTED_MODULE_6__["timeFormat"]('%B');
        var titleDy = this.margins.top - TITLE_FONT_SIZE - fontSize;
        this.title = chart.append('g')
            .attr('class', 'chart-title')
            .append('text')
            .attr('y', '0')
            .attr('dy', "-" + titleDy)
            .attr('x', '0')
            .style('text-anchor', 'start')
            .style('font-size', TITLE_FONT_SIZE + "px");
        this.x = Object(d3_scale__WEBPACK_IMPORTED_MODULE_5__["scaleBand"])().rangeRound([0, sizing.width]).padding(0.05).domain(d3__WEBPACK_IMPORTED_MODULE_6__["range"](0, 12));
        this.xAxis = Object(d3_axis__WEBPACK_IMPORTED_MODULE_4__["axisBottom"])(this.x).tickFormat(function (i) { return d3_month_fmt(new Date(1900, i)); });
        this.y = Object(d3_scale__WEBPACK_IMPORTED_MODULE_5__["scaleLinear"])().range([sizing.height, 0]).domain([0, 20]); // just a default domain
        this.yAxis = Object(d3_axis__WEBPACK_IMPORTED_MODULE_4__["axisLeft"])(this.y)
            .tickSize(-sizing.width)
            .tickFormat(d3__WEBPACK_IMPORTED_MODULE_6__["format"]('.0d'));
        chart.append('g')
            .attr('class', 'x axis')
            .attr('transform', 'translate(0,' + sizing.height + ')')
            .call(this.xAxis);
        this.yAxisLabel = chart.append('g')
            .attr('class', 'y axis')
            .call(this.yAxis)
            .append('text')
            .attr('fill', '#000') // somehow parent g has fill="none"
            .attr('transform', 'rotate(-90)')
            .attr('y', '0')
            .attr('dy', '-3em')
            .attr('x', -1 * (sizing.height / 2)) // looks odd but to move in the Y we need to change X because of transform
            .style('text-anchor', 'middle');
        this.tooltip = svg.append('g')
            .attr('class', 'tooltip')
            .style('display', 'none');
        this.tooltip.append("rect")
            .attr("width", 60)
            .attr("height", 20)
            .attr("fill", "white")
            .style("opacity", 0.5);
        this.tooltip.append("text")
            .attr("x", 30)
            .attr("dy", "1.2em")
            .style("text-anchor", "middle")
            .attr("font-size", "12px")
            .attr("font-weight", "bold");
        this.commonUpdates();
    };
    ObserverActivityComponent.prototype.update = function () {
        var _this = this;
        this.reset();
        this.selection.getData()
            .then(function (data) {
            _this.data = data;
            _this.reset();
            _this.redraw();
        })
            .catch(this.handleError);
    };
    ObserverActivityComponent.prototype.updateLegend = function () {
        var _a = this, chart = _a.chart, data = _a.data, sizing = _a.sizing, z = _a.z;
        chart.select('.legend').remove();
        if (data && data.length) {
            var fontSize_1 = this.baseFontSize();
            z.domain(data.map(function (d, i) { return i; })).range(data.map(function (d, i) { return Object(_common__WEBPACK_IMPORTED_MODULE_7__["getStaticColor"])(i); }));
            var labels = data.map(function (d) { return d.label; });
            var legend = chart.append('g')
                .attr('class', 'legend')
                .attr('transform', "translate(55,-" + sizing.margin.top + ")")
                .attr('text-anchor', 'start')
                .style('font-size', fontSize_1 + "px")
                .selectAll('g')
                .data(labels)
                .enter().append('g')
                // needs to be kept in sync with logic in dynamic margins in reset()
                .attr('transform', function (d, i) { return "translate(10," + (fontSize_1 + (i * SWATCH_SIZE) + (i * LEGEND_VPAD)) + ")"; });
            // add legend swatches
            legend.append('rect')
                .attr('x', 0)
                .attr('width', SWATCH_SIZE)
                .attr('height', SWATCH_SIZE)
                .attr('fill', function (d, i) { return z(i); })
                .style('opacity', BAR_OPACITY);
            // add labels
            legend.append('text')
                .attr('x', SWATCH_SIZE + 4)
                .attr('y', fontSize_1)
                .attr('dy', '0.1em')
                .text(function (d) { return d; });
        }
    };
    ObserverActivityComponent.prototype.commonUpdates = function () {
        _super.prototype.commonUpdates.call(this);
        var chart = this.chart;
        // undo/change some of the commonUpdates
        var _yAxis = chart.select('.y.axis');
        _yAxis.select('path.domain')
            .attr('stroke', 'none')
            .style('stroke', 'none');
        _yAxis.selectAll('.tick>line')
            .attr('stroke', function (i) { return i === 0 ? '#000' : '#ddd'; })
            .style('stroke', function (i) { return i === 0 ? '#000' : '#ddd'; });
    };
    ObserverActivityComponent.prototype.redrawSvg = function () {
        var _this = this;
        if (!this.data) {
            return;
        }
        console.debug('ObserverActivityComponent:data', this.data);
        this.title.text("" + this.selection.year);
        this.yAxisLabel.text(this.selection.mode);
        this.updateLegend();
        var dataKey = this.selection.mode === _observer_activity_selection__WEBPACK_IMPORTED_MODULE_3__["ObserverActivityVisMode"].ACTIVE_OBSERVERS ? 'activeObservers' : 'newObservers';
        var visData = d3__WEBPACK_IMPORTED_MODULE_6__["range"](0, 12)
            .map(function (month) { return _this.data.reduce(function (map, d, index) {
            map["" + index] = d.months[month][dataKey];
            return map;
        }, {}); });
        var max = visData.reduce(function (max, d) {
            var sum = Object.values(d).reduce(function (sum, n) { return (sum + n); }, 0);
            return sum > max ? sum : max;
        }, 0); // TS handing of reduce is stupid
        var layers = d3__WEBPACK_IMPORTED_MODULE_6__["stack"]().keys(this.data.map(function (d, i) { return "" + i; }))(visData);
        var _a = this, chart = _a.chart, y = _a.y, yAxis = _a.yAxis, x = _a.x, tooltip = _a.tooltip, sizing = _a.sizing;
        y.domain([0, max]);
        yAxis.ticks(max < 11 ? max : 10); // at most 10 ticks
        chart.selectAll('g .y.axis').call(this.yAxis);
        chart.selectAll('.layer').remove();
        var layer = chart.selectAll('.layer')
            .data(layers)
            .enter()
            .append('g')
            .attr('class', 'layer')
            .style('fill', function (d, i) { return _this.z(i); });
        layer.selectAll('rect')
            .data(function (d) { return d; })
            .enter()
            .append('rect')
            .attr('x', function (d, i) { return x(i); })
            .attr('y', function (d) { return y(d[1]); })
            .attr('height', function (d) { return y(d[0]) - y(d[1]); })
            .attr('width', x.bandwidth() - 10)
            .style('opacity', BAR_OPACITY);
        /* tooltips not working nicely, flashing
        .on('mouseover', () => tooltip.style('display',null))
        .on('mouseout', () => tooltip.style('display','none'))
        .on('mousemove', function(d) {
            const container = this as d3.ContainerElement;
            var xPosition = d3.mouse(container)[0] + sizing.margin.left - 5;
            var yPosition = d3.mouse(container)[1] + sizing.margin.top - 5;
            tooltip.attr('transform',`translate(${xPosition},${yPosition})`);
            tooltip.select('text').text(d[1]-d[0]);
        });*/
        this.commonUpdates();
    };
    __decorate([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Input"])(),
        __metadata("design:type", _observer_activity_selection__WEBPACK_IMPORTED_MODULE_3__["ObserverActivitySelection"])
    ], ObserverActivityComponent.prototype, "selection", void 0);
    ObserverActivityComponent = __decorate([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Component"])({
            selector: 'observer-activity',
            template: __webpack_require__(/*! ./observer-activity.component.html */ "../npn/common/src/lib/visualizations/observer-activity/observer-activity.component.html"),
            styles: [__webpack_require__(/*! ../svg-visualization-base.component.scss */ "../npn/common/src/lib/visualizations/svg-visualization-base.component.scss")]
        }),
        __metadata("design:paramtypes", [_angular_core__WEBPACK_IMPORTED_MODULE_0__["ElementRef"], _angular_flex_layout__WEBPACK_IMPORTED_MODULE_1__["ObservableMedia"]])
    ], ObserverActivityComponent);
    return ObserverActivityComponent;
}(_svg_visualization_base_component__WEBPACK_IMPORTED_MODULE_2__["SvgVisualizationBaseComponent"]));



/***/ }),

/***/ "../npn/common/src/lib/visualizations/observer-activity/public_api.ts":
/*!****************************************************************************!*\
  !*** ../npn/common/src/lib/visualizations/observer-activity/public_api.ts ***!
  \****************************************************************************/
/*! exports provided: ObserverActivityVisMode, ObserverActivitySelection, ObserverActivitySelectionFactory, ObserverActivityComponent, ObserverActivityControl */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _observer_activity_selection__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./observer-activity-selection */ "../npn/common/src/lib/visualizations/observer-activity/observer-activity-selection.ts");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "ObserverActivityVisMode", function() { return _observer_activity_selection__WEBPACK_IMPORTED_MODULE_0__["ObserverActivityVisMode"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "ObserverActivitySelection", function() { return _observer_activity_selection__WEBPACK_IMPORTED_MODULE_0__["ObserverActivitySelection"]; });

/* harmony import */ var _observer_activity_selection_factory_service__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./observer-activity-selection-factory.service */ "../npn/common/src/lib/visualizations/observer-activity/observer-activity-selection-factory.service.ts");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "ObserverActivitySelectionFactory", function() { return _observer_activity_selection_factory_service__WEBPACK_IMPORTED_MODULE_1__["ObserverActivitySelectionFactory"]; });

/* harmony import */ var _observer_activity_component__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./observer-activity.component */ "../npn/common/src/lib/visualizations/observer-activity/observer-activity.component.ts");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "ObserverActivityComponent", function() { return _observer_activity_component__WEBPACK_IMPORTED_MODULE_2__["ObserverActivityComponent"]; });

/* harmony import */ var _observer_activity_control_component__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./observer-activity-control.component */ "../npn/common/src/lib/visualizations/observer-activity/observer-activity-control.component.ts");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "ObserverActivityControl", function() { return _observer_activity_control_component__WEBPACK_IMPORTED_MODULE_3__["ObserverActivityControl"]; });







/***/ }),

/***/ "../npn/common/src/lib/visualizations/public_api.ts":
/*!**********************************************************!*\
  !*** ../npn/common/src/lib/visualizations/public_api.ts ***!
  \**********************************************************/
/*! exports provided: VisSelection, NetworkAwareVisSelection, StationAwareVisSelection, VisualizationSelectionFactory, VisualizationsModule, CalendarSelection, CalendarSelectionFactory, CalendarComponent, CalendarControlComponent, ScatterPlotSelection, AXIS, ScatterPlotSelectionFactory, ScatterPlotComponent, ScatterPlotControls, ClippedWmsMapSelection, ClippedWmsMapSelectionFactory, ClippedWmsMapControl, ClippedWmsMapComponent, ClippedWmsMapStatisticsComponent, ClippedStatValuePipe, ActivityCurve, INTERPOLATE, ACTIVITY_CURVE_KINGDOM_METRICS, ActivityFrequency, ACTIVITY_FREQUENCY_MONTHLY, ACTIVITY_FREQUENCY_BIWEEKLY, ACTIVITY_FREQUENCY_WEEKLY, ACTIVITY_FREQUENCIES, ActivityCurvesSelection, ActivityCurvesSelectionFactory, ActivityCurvesComponent, ACTIVITY_CURVES_INTERPOLATES, ActivityCurvesControlComponent, CurveControlComponent, ObserverActivityVisMode, ObserverActivitySelection, ObserverActivitySelectionFactory, ObserverActivityComponent, ObserverActivityControl, ObservationFrequencySelection, ObservationFrequencySelectionFactory, ObservationFrequencyComponent, ObservationFrequencyControl, CATEGORY_PESTS, CATEGORY_TEMP_ACCUMULATIONS, DATA_FUNC, AGDD_COLORS, DEFAULT_AGDD_LAYER_CATEGORY, DEFAULT_AGDD_LAYER_NAME, AgddTimeSeriesSelection, AgddTimeSeriesSelectionFactory, AgddTimeSeriesComponent, AgddTsMapLayerControl, MapSelection, MapSelectionFactory, MapVisualizationComponent, MAP_VIS_SVG_PATHS, MapVisMarker, ExtentControl, ExtentDateControl, ExtentDoyControl, ExtentYearControl, GriddedRangeSliderControl, ConsolidatedMapLayerControlComponent, PestMapLayerControlComponent, TempAccumMapLayerControlComponent, SpringIndexMapLayerControlComponent, MapVisualizationMarkerIw, YearRangeInputComponent, HigherSpeciesPhenophaseInputComponent */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _vis_selection__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./vis-selection */ "../npn/common/src/lib/visualizations/vis-selection.ts");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "VisSelection", function() { return _vis_selection__WEBPACK_IMPORTED_MODULE_0__["VisSelection"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "NetworkAwareVisSelection", function() { return _vis_selection__WEBPACK_IMPORTED_MODULE_0__["NetworkAwareVisSelection"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "StationAwareVisSelection", function() { return _vis_selection__WEBPACK_IMPORTED_MODULE_0__["StationAwareVisSelection"]; });

/* harmony import */ var _visualization_selection_factory_service__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./visualization-selection-factory.service */ "../npn/common/src/lib/visualizations/visualization-selection-factory.service.ts");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "VisualizationSelectionFactory", function() { return _visualization_selection_factory_service__WEBPACK_IMPORTED_MODULE_1__["VisualizationSelectionFactory"]; });

/* harmony import */ var _visualizations_module__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./visualizations.module */ "../npn/common/src/lib/visualizations/visualizations.module.ts");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "VisualizationsModule", function() { return _visualizations_module__WEBPACK_IMPORTED_MODULE_2__["VisualizationsModule"]; });

/* harmony import */ var _calendar_public_api__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./calendar/public_api */ "../npn/common/src/lib/visualizations/calendar/public_api.ts");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "CalendarSelection", function() { return _calendar_public_api__WEBPACK_IMPORTED_MODULE_3__["CalendarSelection"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "CalendarSelectionFactory", function() { return _calendar_public_api__WEBPACK_IMPORTED_MODULE_3__["CalendarSelectionFactory"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "CalendarComponent", function() { return _calendar_public_api__WEBPACK_IMPORTED_MODULE_3__["CalendarComponent"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "CalendarControlComponent", function() { return _calendar_public_api__WEBPACK_IMPORTED_MODULE_3__["CalendarControlComponent"]; });

/* harmony import */ var _scatter_plot_public_api__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./scatter-plot/public_api */ "../npn/common/src/lib/visualizations/scatter-plot/public_api.ts");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "ScatterPlotSelection", function() { return _scatter_plot_public_api__WEBPACK_IMPORTED_MODULE_4__["ScatterPlotSelection"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "AXIS", function() { return _scatter_plot_public_api__WEBPACK_IMPORTED_MODULE_4__["AXIS"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "ScatterPlotSelectionFactory", function() { return _scatter_plot_public_api__WEBPACK_IMPORTED_MODULE_4__["ScatterPlotSelectionFactory"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "ScatterPlotComponent", function() { return _scatter_plot_public_api__WEBPACK_IMPORTED_MODULE_4__["ScatterPlotComponent"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "ScatterPlotControls", function() { return _scatter_plot_public_api__WEBPACK_IMPORTED_MODULE_4__["ScatterPlotControls"]; });

/* harmony import */ var _activity_curves_public_api__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./activity-curves/public_api */ "../npn/common/src/lib/visualizations/activity-curves/public_api.ts");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "ActivityCurve", function() { return _activity_curves_public_api__WEBPACK_IMPORTED_MODULE_5__["ActivityCurve"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "INTERPOLATE", function() { return _activity_curves_public_api__WEBPACK_IMPORTED_MODULE_5__["INTERPOLATE"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "ACTIVITY_CURVE_KINGDOM_METRICS", function() { return _activity_curves_public_api__WEBPACK_IMPORTED_MODULE_5__["ACTIVITY_CURVE_KINGDOM_METRICS"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "ActivityFrequency", function() { return _activity_curves_public_api__WEBPACK_IMPORTED_MODULE_5__["ActivityFrequency"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "ACTIVITY_FREQUENCY_MONTHLY", function() { return _activity_curves_public_api__WEBPACK_IMPORTED_MODULE_5__["ACTIVITY_FREQUENCY_MONTHLY"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "ACTIVITY_FREQUENCY_BIWEEKLY", function() { return _activity_curves_public_api__WEBPACK_IMPORTED_MODULE_5__["ACTIVITY_FREQUENCY_BIWEEKLY"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "ACTIVITY_FREQUENCY_WEEKLY", function() { return _activity_curves_public_api__WEBPACK_IMPORTED_MODULE_5__["ACTIVITY_FREQUENCY_WEEKLY"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "ACTIVITY_FREQUENCIES", function() { return _activity_curves_public_api__WEBPACK_IMPORTED_MODULE_5__["ACTIVITY_FREQUENCIES"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "ActivityCurvesSelection", function() { return _activity_curves_public_api__WEBPACK_IMPORTED_MODULE_5__["ActivityCurvesSelection"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "ActivityCurvesSelectionFactory", function() { return _activity_curves_public_api__WEBPACK_IMPORTED_MODULE_5__["ActivityCurvesSelectionFactory"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "ActivityCurvesComponent", function() { return _activity_curves_public_api__WEBPACK_IMPORTED_MODULE_5__["ActivityCurvesComponent"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "ACTIVITY_CURVES_INTERPOLATES", function() { return _activity_curves_public_api__WEBPACK_IMPORTED_MODULE_5__["ACTIVITY_CURVES_INTERPOLATES"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "ActivityCurvesControlComponent", function() { return _activity_curves_public_api__WEBPACK_IMPORTED_MODULE_5__["ActivityCurvesControlComponent"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "CurveControlComponent", function() { return _activity_curves_public_api__WEBPACK_IMPORTED_MODULE_5__["CurveControlComponent"]; });

/* harmony import */ var _clipped_wms_map_public_api__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./clipped-wms-map/public_api */ "../npn/common/src/lib/visualizations/clipped-wms-map/public_api.ts");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "ClippedWmsMapSelection", function() { return _clipped_wms_map_public_api__WEBPACK_IMPORTED_MODULE_6__["ClippedWmsMapSelection"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "ClippedWmsMapSelectionFactory", function() { return _clipped_wms_map_public_api__WEBPACK_IMPORTED_MODULE_6__["ClippedWmsMapSelectionFactory"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "ClippedWmsMapControl", function() { return _clipped_wms_map_public_api__WEBPACK_IMPORTED_MODULE_6__["ClippedWmsMapControl"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "ClippedWmsMapComponent", function() { return _clipped_wms_map_public_api__WEBPACK_IMPORTED_MODULE_6__["ClippedWmsMapComponent"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "ClippedWmsMapStatisticsComponent", function() { return _clipped_wms_map_public_api__WEBPACK_IMPORTED_MODULE_6__["ClippedWmsMapStatisticsComponent"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "ClippedStatValuePipe", function() { return _clipped_wms_map_public_api__WEBPACK_IMPORTED_MODULE_6__["ClippedStatValuePipe"]; });

/* harmony import */ var _observer_activity_public_api__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./observer-activity/public_api */ "../npn/common/src/lib/visualizations/observer-activity/public_api.ts");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "ObserverActivityVisMode", function() { return _observer_activity_public_api__WEBPACK_IMPORTED_MODULE_7__["ObserverActivityVisMode"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "ObserverActivitySelection", function() { return _observer_activity_public_api__WEBPACK_IMPORTED_MODULE_7__["ObserverActivitySelection"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "ObserverActivitySelectionFactory", function() { return _observer_activity_public_api__WEBPACK_IMPORTED_MODULE_7__["ObserverActivitySelectionFactory"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "ObserverActivityComponent", function() { return _observer_activity_public_api__WEBPACK_IMPORTED_MODULE_7__["ObserverActivityComponent"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "ObserverActivityControl", function() { return _observer_activity_public_api__WEBPACK_IMPORTED_MODULE_7__["ObserverActivityControl"]; });

/* harmony import */ var _observation_frequency_public_api__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ./observation-frequency/public_api */ "../npn/common/src/lib/visualizations/observation-frequency/public_api.ts");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "ObservationFrequencySelection", function() { return _observation_frequency_public_api__WEBPACK_IMPORTED_MODULE_8__["ObservationFrequencySelection"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "ObservationFrequencySelectionFactory", function() { return _observation_frequency_public_api__WEBPACK_IMPORTED_MODULE_8__["ObservationFrequencySelectionFactory"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "ObservationFrequencyComponent", function() { return _observation_frequency_public_api__WEBPACK_IMPORTED_MODULE_8__["ObservationFrequencyComponent"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "ObservationFrequencyControl", function() { return _observation_frequency_public_api__WEBPACK_IMPORTED_MODULE_8__["ObservationFrequencyControl"]; });

/* harmony import */ var _agdd_time_series_public_api__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ./agdd-time-series/public_api */ "../npn/common/src/lib/visualizations/agdd-time-series/public_api.ts");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "CATEGORY_PESTS", function() { return _agdd_time_series_public_api__WEBPACK_IMPORTED_MODULE_9__["CATEGORY_PESTS"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "CATEGORY_TEMP_ACCUMULATIONS", function() { return _agdd_time_series_public_api__WEBPACK_IMPORTED_MODULE_9__["CATEGORY_TEMP_ACCUMULATIONS"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "DATA_FUNC", function() { return _agdd_time_series_public_api__WEBPACK_IMPORTED_MODULE_9__["DATA_FUNC"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "AGDD_COLORS", function() { return _agdd_time_series_public_api__WEBPACK_IMPORTED_MODULE_9__["AGDD_COLORS"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "DEFAULT_AGDD_LAYER_CATEGORY", function() { return _agdd_time_series_public_api__WEBPACK_IMPORTED_MODULE_9__["DEFAULT_AGDD_LAYER_CATEGORY"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "DEFAULT_AGDD_LAYER_NAME", function() { return _agdd_time_series_public_api__WEBPACK_IMPORTED_MODULE_9__["DEFAULT_AGDD_LAYER_NAME"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "AgddTimeSeriesSelection", function() { return _agdd_time_series_public_api__WEBPACK_IMPORTED_MODULE_9__["AgddTimeSeriesSelection"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "AgddTimeSeriesSelectionFactory", function() { return _agdd_time_series_public_api__WEBPACK_IMPORTED_MODULE_9__["AgddTimeSeriesSelectionFactory"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "AgddTimeSeriesComponent", function() { return _agdd_time_series_public_api__WEBPACK_IMPORTED_MODULE_9__["AgddTimeSeriesComponent"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "AgddTsMapLayerControl", function() { return _agdd_time_series_public_api__WEBPACK_IMPORTED_MODULE_9__["AgddTsMapLayerControl"]; });

/* harmony import */ var _map_public_api__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ./map/public_api */ "../npn/common/src/lib/visualizations/map/public_api.ts");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "MapSelection", function() { return _map_public_api__WEBPACK_IMPORTED_MODULE_10__["MapSelection"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "MapSelectionFactory", function() { return _map_public_api__WEBPACK_IMPORTED_MODULE_10__["MapSelectionFactory"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "MapVisualizationComponent", function() { return _map_public_api__WEBPACK_IMPORTED_MODULE_10__["MapVisualizationComponent"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "MAP_VIS_SVG_PATHS", function() { return _map_public_api__WEBPACK_IMPORTED_MODULE_10__["MAP_VIS_SVG_PATHS"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "MapVisMarker", function() { return _map_public_api__WEBPACK_IMPORTED_MODULE_10__["MapVisMarker"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "ExtentControl", function() { return _map_public_api__WEBPACK_IMPORTED_MODULE_10__["ExtentControl"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "ExtentDateControl", function() { return _map_public_api__WEBPACK_IMPORTED_MODULE_10__["ExtentDateControl"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "ExtentDoyControl", function() { return _map_public_api__WEBPACK_IMPORTED_MODULE_10__["ExtentDoyControl"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "ExtentYearControl", function() { return _map_public_api__WEBPACK_IMPORTED_MODULE_10__["ExtentYearControl"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "GriddedRangeSliderControl", function() { return _map_public_api__WEBPACK_IMPORTED_MODULE_10__["GriddedRangeSliderControl"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "ConsolidatedMapLayerControlComponent", function() { return _map_public_api__WEBPACK_IMPORTED_MODULE_10__["ConsolidatedMapLayerControlComponent"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "PestMapLayerControlComponent", function() { return _map_public_api__WEBPACK_IMPORTED_MODULE_10__["PestMapLayerControlComponent"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "TempAccumMapLayerControlComponent", function() { return _map_public_api__WEBPACK_IMPORTED_MODULE_10__["TempAccumMapLayerControlComponent"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "SpringIndexMapLayerControlComponent", function() { return _map_public_api__WEBPACK_IMPORTED_MODULE_10__["SpringIndexMapLayerControlComponent"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "MapVisualizationMarkerIw", function() { return _map_public_api__WEBPACK_IMPORTED_MODULE_10__["MapVisualizationMarkerIw"]; });

/* harmony import */ var _common_controls__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! ./common-controls */ "../npn/common/src/lib/visualizations/common-controls/index.ts");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "YearRangeInputComponent", function() { return _common_controls__WEBPACK_IMPORTED_MODULE_11__["YearRangeInputComponent"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "HigherSpeciesPhenophaseInputComponent", function() { return _common_controls__WEBPACK_IMPORTED_MODULE_11__["HigherSpeciesPhenophaseInputComponent"]; });















/***/ }),

/***/ "../npn/common/src/lib/visualizations/scatter-plot/index.ts":
/*!******************************************************************!*\
  !*** ../npn/common/src/lib/visualizations/scatter-plot/index.ts ***!
  \******************************************************************/
/*! exports provided: ScatterPlotSelection, AXIS, ScatterPlotSelectionFactory, ScatterPlotComponent, ScatterPlotControls */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _public_api__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./public_api */ "../npn/common/src/lib/visualizations/scatter-plot/public_api.ts");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "ScatterPlotSelection", function() { return _public_api__WEBPACK_IMPORTED_MODULE_0__["ScatterPlotSelection"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "AXIS", function() { return _public_api__WEBPACK_IMPORTED_MODULE_0__["AXIS"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "ScatterPlotSelectionFactory", function() { return _public_api__WEBPACK_IMPORTED_MODULE_0__["ScatterPlotSelectionFactory"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "ScatterPlotComponent", function() { return _public_api__WEBPACK_IMPORTED_MODULE_0__["ScatterPlotComponent"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "ScatterPlotControls", function() { return _public_api__WEBPACK_IMPORTED_MODULE_0__["ScatterPlotControls"]; });




/***/ }),

/***/ "../npn/common/src/lib/visualizations/scatter-plot/public_api.ts":
/*!***********************************************************************!*\
  !*** ../npn/common/src/lib/visualizations/scatter-plot/public_api.ts ***!
  \***********************************************************************/
/*! exports provided: ScatterPlotSelection, AXIS, ScatterPlotSelectionFactory, ScatterPlotComponent, ScatterPlotControls */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _scatter_plot_selection__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./scatter-plot-selection */ "../npn/common/src/lib/visualizations/scatter-plot/scatter-plot-selection.ts");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "ScatterPlotSelection", function() { return _scatter_plot_selection__WEBPACK_IMPORTED_MODULE_0__["ScatterPlotSelection"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "AXIS", function() { return _scatter_plot_selection__WEBPACK_IMPORTED_MODULE_0__["AXIS"]; });

/* harmony import */ var _scatter_plot_selection_factory_service__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./scatter-plot-selection-factory.service */ "../npn/common/src/lib/visualizations/scatter-plot/scatter-plot-selection-factory.service.ts");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "ScatterPlotSelectionFactory", function() { return _scatter_plot_selection_factory_service__WEBPACK_IMPORTED_MODULE_1__["ScatterPlotSelectionFactory"]; });

/* harmony import */ var _scatter_plot_component__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./scatter-plot.component */ "../npn/common/src/lib/visualizations/scatter-plot/scatter-plot.component.ts");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "ScatterPlotComponent", function() { return _scatter_plot_component__WEBPACK_IMPORTED_MODULE_2__["ScatterPlotComponent"]; });

/* harmony import */ var _scatter_plot_controls_component__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./scatter-plot-controls.component */ "../npn/common/src/lib/visualizations/scatter-plot/scatter-plot-controls.component.ts");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "ScatterPlotControls", function() { return _scatter_plot_controls_component__WEBPACK_IMPORTED_MODULE_3__["ScatterPlotControlsComponent"]; });







/***/ }),

/***/ "../npn/common/src/lib/visualizations/scatter-plot/scatter-plot-controls.component.ts":
/*!********************************************************************************************!*\
  !*** ../npn/common/src/lib/visualizations/scatter-plot/scatter-plot-controls.component.ts ***!
  \********************************************************************************************/
/*! exports provided: ScatterPlotControlsComponent */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ScatterPlotControlsComponent", function() { return ScatterPlotControlsComponent; });
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @angular/core */ "../../node_modules/@angular/core/fesm5/core.js");
/* harmony import */ var _scatter_plot_selection__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./scatter-plot-selection */ "../npn/common/src/lib/visualizations/scatter-plot/scatter-plot-selection.ts");
/* harmony import */ var d3__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! d3 */ "../../node_modules/d3/index.js");
/* harmony import */ var _npn_common_common__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @npn/common/common */ "../npn/common/src/lib/common/index.ts");
/* harmony import */ var rxjs_operators__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! rxjs/operators */ "../../node_modules/rxjs/_esm5/operators/index.js");
/* harmony import */ var _fortawesome_pro_light_svg_icons__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! @fortawesome/pro-light-svg-icons */ "../../node_modules/@fortawesome/pro-light-svg-icons/index.es.js");
var __extends = (undefined && undefined.__extends) || (function () {
    var extendStatics = Object.setPrototypeOf ||
        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __decorate = (undefined && undefined.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (undefined && undefined.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};






var ScatterPlotControlsComponent = /** @class */ (function (_super) {
    __extends(ScatterPlotControlsComponent, _super);
    function ScatterPlotControlsComponent() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        _this.axis = _scatter_plot_selection__WEBPACK_IMPORTED_MODULE_1__["AXIS"];
        _this.faExclamationTriangle = _fortawesome_pro_light_svg_icons__WEBPACK_IMPORTED_MODULE_5__["faExclamationTriangle"];
        return _this;
    }
    ScatterPlotControlsComponent.prototype.ngOnInit = function () {
        var _this = this;
        this.selection.pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_4__["filter"])(function (event) { return event === "scope_change" /* SCOPE_CHANGE */; }), Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_4__["debounceTime"])(500), Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_4__["takeUntil"])(this.componentDestroyed)).subscribe(function () { return _this.updateCriteria(); });
        if (this.selection.plots.length === 0) {
            this.addPlot();
        }
        setTimeout(function () { return _this.updateCriteria(); });
    };
    ScatterPlotControlsComponent.prototype.yearChange = function () {
        this.updateCriteria();
        this.selection.update();
    };
    ScatterPlotControlsComponent.prototype.updateCriteria = function () {
        this.criteria = {
            years: d3__WEBPACK_IMPORTED_MODULE_2__["range"](this.selection.start, this.selection.end + 1),
            stationIds: this.selection.getStationIds()
        };
    };
    ScatterPlotControlsComponent.prototype.redrawChange = function (change) {
        if (change && !change.oldValue && change.newValue) { // e.g. no color to a color means a plot that wasn't valid is now potentially valid.
            this.selection.update();
        }
        else {
            this.selection.redraw();
        }
    };
    ScatterPlotControlsComponent.prototype.addPlot = function () {
        this.selection.plots.push({});
    };
    ScatterPlotControlsComponent.prototype.removePlot = function (index) {
        this.selection.plots.splice(index, 1);
        this.selection.update();
    };
    ScatterPlotControlsComponent.prototype.plotsValid = function () {
        return this.selection.plots.length === this.selection.validPlots.length;
    };
    __decorate([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Input"])(),
        __metadata("design:type", _scatter_plot_selection__WEBPACK_IMPORTED_MODULE_1__["ScatterPlotSelection"])
    ], ScatterPlotControlsComponent.prototype, "selection", void 0);
    ScatterPlotControlsComponent = __decorate([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Component"])({
            selector: 'scatter-plot-control',
            template: "\n    <div *ngIf=\"!selection.canAddPlot\" class=\"max-plots-reached\"><fa-icon [icon]=\"faExclamationTriangle\"></fa-icon> One more plot would exceed the maximum of {{selection.MAX_PLOTS}} allowed</div>\n    <year-range-input [(start)]=\"selection.start\" [(end)]=\"selection.end\" (onStartChange)=\"yearChange()\" (onEndChange)=\"yearChange()\"></year-range-input>\n\n    <div class=\"phenophase-input-wrapper\" *ngFor=\"let spi of selection.plots; index as idx\">\n        <higher-species-phenophase-input\n            gatherColor=\"true\"\n            [selection]=\"selection\"\n            [criteria]=\"criteria\"\n            [plot]=\"spi\"\n            (plotChange)=\"selection.update()\">\n        </higher-species-phenophase-input>\n        <button *ngIf=\"selection.plots.length > 1\" mat-button class=\"remove-plot\" (click)=\"removePlot(idx)\">Remove</button>\n        <button *ngIf=\"idx === (selection.plots.length-1)\" mat-button class=\"add-plot\" [disabled]=\"!plotsValid() || !selection.canAddPlot\" (click)=\"addPlot()\">Add</button>\n    </div>\n\n    <div>\n        <mat-form-field>\n            <mat-select placeholder=\"X Axis\" name=\"xAxis\" [(ngModel)]=\"selection.axis\" (ngModelChange)=\"redrawChange()\">\n              <mat-option *ngFor=\"let a of axis\" [value]=\"a\">{{a.label}}</mat-option>\n            </mat-select>\n        </mat-form-field>\n\n        <mat-checkbox [(ngModel)]=\"selection.regressionLines\" (change)=\"redrawChange()\">Fit Lines</mat-checkbox>\n\n        <mat-checkbox [(ngModel)]=\"selection.individualPhenometrics\" (change)=\"selection.update()\">Use Individual Phenometrics</mat-checkbox>\n    </div>\n    ",
            styles: ["\n        year-range-input,\n        .phenophase-input-wrapper {\n            display: block;\n            margin-top: 15px;\n        }\n        mat-form-field,\n        mat-checkbox {\n            padding-right: 10px;\n        }\n    "]
        })
    ], ScatterPlotControlsComponent);
    return ScatterPlotControlsComponent;
}(_npn_common_common__WEBPACK_IMPORTED_MODULE_3__["MonitorsDestroy"]));



/***/ }),

/***/ "../npn/common/src/lib/visualizations/scatter-plot/scatter-plot-selection-factory.service.ts":
/*!***************************************************************************************************!*\
  !*** ../npn/common/src/lib/visualizations/scatter-plot/scatter-plot-selection-factory.service.ts ***!
  \***************************************************************************************************/
/*! exports provided: ScatterPlotSelectionFactory */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ScatterPlotSelectionFactory", function() { return ScatterPlotSelectionFactory; });
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @angular/core */ "../../node_modules/@angular/core/fesm5/core.js");
/* harmony import */ var _common__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../common */ "../npn/common/src/lib/common/index.ts");
/* harmony import */ var _scatter_plot_selection__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./scatter-plot-selection */ "../npn/common/src/lib/visualizations/scatter-plot/scatter-plot-selection.ts");
var __decorate = (undefined && undefined.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (undefined && undefined.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};



var ScatterPlotSelectionFactory = /** @class */ (function () {
    function ScatterPlotSelectionFactory(serviceUtils, speciesService, networkService) {
        this.serviceUtils = serviceUtils;
        this.speciesService = speciesService;
        this.networkService = networkService;
    }
    ScatterPlotSelectionFactory.prototype.newSelection = function () {
        return new _scatter_plot_selection__WEBPACK_IMPORTED_MODULE_2__["ScatterPlotSelection"](this.serviceUtils, this.speciesService, this.networkService);
    };
    ScatterPlotSelectionFactory = __decorate([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Injectable"])(),
        __metadata("design:paramtypes", [_common__WEBPACK_IMPORTED_MODULE_1__["NpnServiceUtils"],
            _common__WEBPACK_IMPORTED_MODULE_1__["SpeciesService"],
            _common__WEBPACK_IMPORTED_MODULE_1__["NetworkService"]])
    ], ScatterPlotSelectionFactory);
    return ScatterPlotSelectionFactory;
}());



/***/ }),

/***/ "../npn/common/src/lib/visualizations/scatter-plot/scatter-plot-selection.ts":
/*!***********************************************************************************!*\
  !*** ../npn/common/src/lib/visualizations/scatter-plot/scatter-plot-selection.ts ***!
  \***********************************************************************************/
/*! exports provided: AXIS, ScatterPlotSelection */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "AXIS", function() { return AXIS; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ScatterPlotSelection", function() { return ScatterPlotSelection; });
/* harmony import */ var _vis_selection__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../vis-selection */ "../npn/common/src/lib/visualizations/vis-selection.ts");
/* harmony import */ var _site_or_summary_vis_selection__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../site-or-summary-vis-selection */ "../npn/common/src/lib/visualizations/site-or-summary-vis-selection.ts");
/* harmony import */ var _angular_common_http__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @angular/common/http */ "../../node_modules/@angular/common/fesm5/http.js");
/* harmony import */ var d3__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! d3 */ "../../node_modules/d3/index.js");
var __extends = (undefined && undefined.__extends) || (function () {
    var extendStatics = Object.setPrototypeOf ||
        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __assign = (undefined && undefined.__assign) || Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
        s = arguments[i];
        for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
            t[p] = s[p];
    }
    return t;
};
var __decorate = (undefined && undefined.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (undefined && undefined.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};




var KEYS_TO_NORMALIZE = {
    daylength: 'mean_daylength',
    acc_prcp: 'mean_accum_prcp',
    gdd: 'mean_gdd'
};
var AXIS = [
    { key: 'latitude', label: 'Latitude', axisFmt: d3__WEBPACK_IMPORTED_MODULE_3__["format"]('.2f') },
    { key: 'longitude', label: 'Longitude', axisFmt: d3__WEBPACK_IMPORTED_MODULE_3__["format"]('.2f') },
    { key: 'elevation_in_meters', label: 'Elevation (m)' },
    { key: 'fyy', label: 'Year' },
    { key: 'prcp_fall', label: 'Precip Fall (mm)' },
    { key: 'prcp_spring', label: 'Precip Spring (mm)' },
    { key: 'prcp_summer', label: 'Precip Summer (mm)' },
    { key: 'prcp_winter', label: 'Precip Winter (mm)' },
    { key: 'tmax_fall', label: 'Tmax Fall (C\xB0)' },
    { key: 'tmax_spring', label: 'Tmax Spring (C\xB0)' },
    { key: 'tmax_summer', label: 'Tmax Summer (C\xB0)' },
    { key: 'tmax_winter', label: 'Tmax Winter (C\xB0)' },
    { key: 'tmin_fall', label: 'Tmin Fall (C\xB0)' },
    { key: 'tmin_spring', label: 'Tmin Spring (C\xB0)' },
    { key: 'tmin_summer', label: 'Tmin Summer (C\xB0)' },
    { key: 'tmin_winter', label: 'Tmin Winter (C\xB0)' },
    { key: 'daylength', label: 'Day Length (s)' },
    { key: 'acc_prcp', label: 'Accumulated Precip (mm)' },
    { key: 'gdd', label: 'AGDD' }
];
/**
 * @dynamic
 */
var ScatterPlotSelection = /** @class */ (function (_super) {
    __extends(ScatterPlotSelection, _super);
    function ScatterPlotSelection() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        _this.$supportsPop = true;
        _this.$class = 'ScatterPlotSelection';
        _this.start = 2011;
        _this.end = (new Date()).getFullYear();
        _this.regressionLines = false;
        _this._axis = AXIS[0];
        _this._minDoy = 1;
        _this._maxDoy = 365;
        /** The maximum number of plots we want to allow. */
        _this.MAX_PLOTS = 6;
        _this.d3DateFormat = d3__WEBPACK_IMPORTED_MODULE_3__["timeFormat"]('%x');
        return _this;
    }
    Object.defineProperty(ScatterPlotSelection.prototype, "canAddPlot", {
        /**
         * Indicates whether or not adding one more plot will result in a visualization exceeding
         * the maximum number of allowed plots.
         */
        get: function () {
            var groups = this.groups ? this.groups.length : 0;
            var next_plots = (this.plots ? this.plots.length : 0) + 1;
            var next_count = groups ? (groups * next_plots) : next_plots;
            return next_count <= this.MAX_PLOTS;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(ScatterPlotSelection.prototype, "minDoy", {
        get: function () { return this._minDoy; },
        set: function (doy) {
            this._minDoy = doy;
            this.redraw();
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(ScatterPlotSelection.prototype, "maxDoy", {
        get: function () { return this._maxDoy; },
        set: function (doy) {
            this._maxDoy = doy;
            this.redraw();
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(ScatterPlotSelection.prototype, "axis", {
        get: function () {
            return this._axis;
        },
        set: function (a) {
            if (a) {
                // an axis may hold axisFmt and if this selection is 
                // deserialized then it won't be in that array
                this._axis = AXIS.indexOf(a) !== -1
                    ? a
                    : AXIS.find(function (ax) { return a.key === ax.key; });
            }
            else {
                this._axis = a;
            }
        },
        enumerable: true,
        configurable: true
    });
    ScatterPlotSelection.prototype.isValid = function () {
        return this.start &&
            this.end &&
            this.axis &&
            (this.start <= this.end) &&
            this.validPlots.length > 0;
    };
    ScatterPlotSelection.prototype.toURLSearchParams = function (params) {
        if (params === void 0) { params = new _angular_common_http__WEBPACK_IMPORTED_MODULE_2__["HttpParams"](); }
        params = params.set('climate_data', '1')
            .set('request_src', 'npn-vis-scatter-plot')
            .set('start_date', this.start + "-01-01")
            .set('end_date', this.end + "-12-31");
        return _super.prototype.toURLSearchParams.call(this, params);
    };
    ScatterPlotSelection.prototype.toPOPInput = function (input) {
        var _this = this;
        if (input === void 0) { input = __assign({}, _vis_selection__WEBPACK_IMPORTED_MODULE_0__["BASE_POP_INPUT"]); }
        return _super.prototype.toPOPInput.call(this, input)
            .then(function (input) {
            input.startDate = _this.start + "-01-01";
            input.endDate = _this.end + "-12-31";
            return input;
        });
    };
    ScatterPlotSelection.prototype.doyDateFormat = function (doy) {
        var start = new Date(this.start, 0, 1), time = ((doy - 1) * _vis_selection__WEBPACK_IMPORTED_MODULE_0__["ONE_DAY_MILLIS"]) + start.getTime(), // TODO, not enforcing that start/end be midnight on Jan 1
        date = new Date(time);
        return this.d3DateFormat(date);
    };
    // data access functions, not sure if the functionality here is too specific
    // to the visualization of the resulting data so should be held somewhere else
    // but it's here for now
    ScatterPlotSelection.prototype.getDoy = function (d) {
        return this.individualPhenometrics ? d.first_yes_doy : d.mean_first_yes_doy;
    };
    ScatterPlotSelection.prototype.getFirstYesYear = function (d) {
        return this.individualPhenometrics ? d.first_yes_year : d.mean_first_yes_year;
    };
    ScatterPlotSelection.prototype.axisData = function (d) {
        return d[this.axis.key];
    };
    ScatterPlotSelection.prototype.axisNonNull = function (data) {
        var _this = this;
        return data.filter(function (d) {
            return _this.axisData(d) !== _vis_selection__WEBPACK_IMPORTED_MODULE_0__["NULL_DATA"];
        });
    };
    ScatterPlotSelection.prototype.postProcessData = function (data) {
        var _this = this;
        var _a = this, start = _a.start, minDoy = _a.minDoy, maxDoy = _a.maxDoy;
        return data.reduce(function (result, plotData) {
            var filtered = plotData.data.filter(function (d) {
                var doy = _this.getDoy(d);
                return doy >= minDoy && doy <= maxDoy;
            })
                .map(function (d) {
                d.color = plotData.plot.color;
                d.fyy = _this.getFirstYesYear(d);
                for (var summaryKey in KEYS_TO_NORMALIZE) {
                    if (typeof (d[summaryKey]) === 'undefined') {
                        d[summaryKey] = d[KEYS_TO_NORMALIZE[summaryKey]];
                    }
                }
                // this is the day # that will get plotted 1 being the first day of the start_year
                // 366 being the first day of start_year+1, etc.
                d.day_in_range = ((d.fyy - start) * 365) + _this.getDoy(d);
                return d;
            });
            return result.concat(filtered);
        }, []).map(function (d, i) {
            d.id = i;
            return d;
        });
    };
    __decorate([
        Object(_vis_selection__WEBPACK_IMPORTED_MODULE_0__["selectionProperty"])(),
        __metadata("design:type", String)
    ], ScatterPlotSelection.prototype, "$class", void 0);
    __decorate([
        Object(_vis_selection__WEBPACK_IMPORTED_MODULE_0__["selectionProperty"])(),
        __metadata("design:type", Number)
    ], ScatterPlotSelection.prototype, "start", void 0);
    __decorate([
        Object(_vis_selection__WEBPACK_IMPORTED_MODULE_0__["selectionProperty"])(),
        __metadata("design:type", Number)
    ], ScatterPlotSelection.prototype, "end", void 0);
    __decorate([
        Object(_vis_selection__WEBPACK_IMPORTED_MODULE_0__["selectionProperty"])(),
        __metadata("design:type", Boolean)
    ], ScatterPlotSelection.prototype, "regressionLines", void 0);
    __decorate([
        Object(_vis_selection__WEBPACK_IMPORTED_MODULE_0__["selectionProperty"])(),
        __metadata("design:type", Object)
    ], ScatterPlotSelection.prototype, "_axis", void 0);
    __decorate([
        Object(_vis_selection__WEBPACK_IMPORTED_MODULE_0__["selectionProperty"])(),
        __metadata("design:type", Number)
    ], ScatterPlotSelection.prototype, "_minDoy", void 0);
    __decorate([
        Object(_vis_selection__WEBPACK_IMPORTED_MODULE_0__["selectionProperty"])(),
        __metadata("design:type", Number)
    ], ScatterPlotSelection.prototype, "_maxDoy", void 0);
    return ScatterPlotSelection;
}(_site_or_summary_vis_selection__WEBPACK_IMPORTED_MODULE_1__["SiteOrSummaryVisSelection"]));



/***/ }),

/***/ "../npn/common/src/lib/visualizations/scatter-plot/scatter-plot.component.ts":
/*!***********************************************************************************!*\
  !*** ../npn/common/src/lib/visualizations/scatter-plot/scatter-plot.component.ts ***!
  \***********************************************************************************/
/*! exports provided: ScatterPlotComponent */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ScatterPlotComponent", function() { return ScatterPlotComponent; });
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @angular/core */ "../../node_modules/@angular/core/fesm5/core.js");
/* harmony import */ var _angular_flex_layout__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @angular/flex-layout */ "../../node_modules/@angular/flex-layout/esm5/flex-layout.es5.js");
/* harmony import */ var _common__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../common */ "../npn/common/src/lib/common/index.ts");
/* harmony import */ var _svg_visualization_base_component__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../svg-visualization-base.component */ "../npn/common/src/lib/visualizations/svg-visualization-base.component.ts");
/* harmony import */ var _scatter_plot_selection__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./scatter-plot-selection */ "../npn/common/src/lib/visualizations/scatter-plot/scatter-plot-selection.ts");
/* harmony import */ var d3_axis__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! d3-axis */ "../../node_modules/d3-axis/index.js");
/* harmony import */ var d3_scale__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! d3-scale */ "../../node_modules/d3-scale/index.js");
/* harmony import */ var d3__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! d3 */ "../../node_modules/d3/index.js");
var __extends = (undefined && undefined.__extends) || (function () {
    var extendStatics = Object.setPrototypeOf ||
        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __assign = (undefined && undefined.__assign) || Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
        s = arguments[i];
        for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
            t[p] = s[p];
    }
    return t;
};
var __decorate = (undefined && undefined.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (undefined && undefined.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};








var DEFAULT_TOP_MARGIN = 80;
var LEGEND_VPAD = 4;
var MARGIN_VPAD = 5;
var ScatterPlotComponent = /** @class */ (function (_super) {
    __extends(ScatterPlotComponent, _super);
    function ScatterPlotComponent(rootElement, media, speciesTitle) {
        var _this = _super.call(this, rootElement, media) || this;
        _this.rootElement = rootElement;
        _this.media = media;
        _this.speciesTitle = speciesTitle;
        _this.defaultAxisFormat = d3__WEBPACK_IMPORTED_MODULE_7__["format"]('d');
        _this.dateFormat = d3__WEBPACK_IMPORTED_MODULE_7__["timeFormat"]('%x');
        _this.filename = 'scatter-plot.png';
        // https://www.typescriptlang.org/docs/handbook/release-notes/typescript-2-1.html#object-spread-and-rest
        // similar to _|angular.extend
        _this.margins = __assign({}, _svg_visualization_base_component__WEBPACK_IMPORTED_MODULE_3__["DEFAULT_MARGINS"], { top: DEFAULT_TOP_MARGIN, left: 60 });
        return _this;
    }
    ScatterPlotComponent.prototype.reset = function () {
        var _this = this;
        this.margins.top = DEFAULT_TOP_MARGIN;
        var fontSize = this.baseFontSize();
        var plotCount = this.data ? this.data.length : 0;
        if (plotCount) {
            this.margins.top = ((plotCount + 1) * fontSize) + (plotCount * LEGEND_VPAD) + MARGIN_VPAD;
        }
        _super.prototype.reset.call(this);
        var _a = this, chart = _a.chart, sizing = _a.sizing;
        var titleFontSize = 18;
        var titleDy = this.margins.top - titleFontSize - fontSize;
        this.title = chart.append('g')
            .attr('class', 'chart-title')
            .append('text')
            .attr('y', '0')
            .attr('dy', "-" + titleDy)
            .attr('x', '-2.5em')
            .style('text-anchor', 'start')
            .style('font-size', titleFontSize + "px");
        this.x = Object(d3_scale__WEBPACK_IMPORTED_MODULE_6__["scaleLinear"])().range([0, sizing.width]).domain([0, 100]);
        this.xAxis = Object(d3_axis__WEBPACK_IMPORTED_MODULE_5__["axisBottom"])(this.x).tickFormat(function (i) { return _this.defaultAxisFormat(i); });
        this.y = Object(d3_scale__WEBPACK_IMPORTED_MODULE_6__["scaleLinear"])().range([sizing.height, 0]).domain([1, 365]);
        this.yAxis = Object(d3_axis__WEBPACK_IMPORTED_MODULE_5__["axisLeft"])(this.y);
        chart.append('g')
            .attr('class', 'x axis')
            .attr('transform', 'translate(0,' + sizing.height + ')')
            .call(this.xAxis);
        chart.append('g')
            .attr('class', 'y axis')
            .call(this.yAxis)
            .append('text')
            .attr('fill', '#000') // somehow parent g has fill="none"
            .attr('transform', 'rotate(-90)')
            .attr('y', '0')
            .attr('dy', '-3em')
            .attr('x', -1 * (sizing.height / 2)) // looks odd but to move in the Y we need to change X because of transform
            .style('text-anchor', 'middle')
            .text('Onset Day of Year');
        this.commonUpdates();
    };
    ScatterPlotComponent.prototype.update = function () {
        var _this = this;
        this.reset();
        this.selection.getData().then(function (data) {
            _this.data = data;
            _this.redraw();
        })
            .catch(function (e) { return _this.handleError(e); });
    };
    ScatterPlotComponent.prototype.redrawSvg = function () {
        var _this = this;
        if (!this.data) {
            return;
        }
        var processedData = this.selection.postProcessData(this.data), padding = 1, selection = this.selection, nonNullData = selection.axisNonNull(processedData), getX = function (d) { return selection.axisData(d); }, getY = function (d) { return selection.getDoy(d); }, // dataFunc
        extent = d3__WEBPACK_IMPORTED_MODULE_7__["extent"](nonNullData, getX), formatXTickLabels = selection.axis.axisFmt || this.defaultAxisFormat;
        this.title.text(selection.start + " - " + selection.end);
        this.x.domain([extent[0] - padding, extent[1] + padding]);
        this.xAxis.scale(this.x).tickFormat(d3__WEBPACK_IMPORTED_MODULE_7__["format"]('.2f')); // TODO per-selection tick formatting
        var xA = this.chart.selectAll('g .x.axis');
        xA.call(this.xAxis.tickFormat(formatXTickLabels));
        xA.selectAll('.axis-label').remove();
        xA.append('text')
            .attr('class', 'axis-label')
            .attr('x', (this.sizing.width / 2))
            .attr('dy', '3em')
            .attr('fill', '#000')
            .style('text-anchor', 'middle')
            .style('font-size', '12px')
            .text(this.selection.axis.label);
        this.y.domain([this.selection.minDoy || 1, this.selection.maxDoy || 365]);
        this.chart.selectAll('g .y.axis').call(this.yAxis);
        this.chart.selectAll('.circle').remove();
        var circles = this.chart.selectAll('.circle').data(nonNullData, function (d) { return d.id; })
            .enter().append('circle')
            .attr('class', 'circle')
            .style('stroke', '#333')
            .style('stroke-width', '1');
        circles.attr('cx', function (d) { return _this.x(getX(d)); })
            .attr('cy', function (d) { return _this.y(getY(d)); })
            .attr('r', '5')
            .attr('fill', function (d) { return d.color; })
            .on('click', function (d) {
            if (d3__WEBPACK_IMPORTED_MODULE_7__["event"].defaultPrevented) {
                return;
            }
            _this.record = d;
        })
            .append('title')
            .text(function (d) { return selection.doyDateFormat(d.day_in_range) + " [" + d.latitude + "," + d.longitude + "]"; });
        this.chart.selectAll('.regression').remove();
        var plots = this.data.map(function (d) { return d.plot; });
        plots.forEach(function (plot) { return delete plot.regressionLine; });
        if (this.selection.regressionLines) {
            var regressionLines_1 = [];
            plots.forEach(function (plot) {
                var series = nonNullData.filter(function (d) { return d.color === plot.color; });
                if (series.length) {
                    var keys = Object(_common__WEBPACK_IMPORTED_MODULE_2__["getSpeciesPlotKeys"])(plot);
                    regressionLines_1.push(plot.regressionLine = new RegressionLine(plot.species[keys.speciesIdKey] + "." + plot.phenophase[keys.phenophaseIdKey], plot.color, series, getX, getY));
                }
            });
            var regression = this.chart.selectAll('.regression')
                .data(regressionLines_1, function (d) { return d.id; })
                .enter().append('line')
                .attr('class', 'regression');
            regression
                //.attr('data-legend',function(d) { return d.legend; } )
                .attr('x1', function (d) { return _this.x(d.p1[0]); })
                .attr('y1', function (d) { return _this.y(d.p1[1]); })
                .attr('x2', function (d) { return _this.x(d.p2[0]); })
                .attr('y2', function (d) { return _this.y(d.p2[1]); })
                .attr('fill', function (d) { return d.color; })
                .attr('stroke', function (d) { return d.color; })
                .attr('stroke-width', 2);
        }
        this.chart.select('.legend').remove();
        var legend = this.chart.append('g')
            .attr('class', 'legend')
            .attr('transform', 'translate(75,-' + (this.sizing.margin.top - 10) + ')')
            .style('font-size', '1em');
        var r = 5;
        this.data.forEach(function (d, i) {
            var plot = d.plot;
            var group = d.group;
            var row = legend.append('g')
                .attr('class', 'legend-item')
                .attr('transform', 'translate(10,' + (((i + 1) * _this.baseFontSize()) + (i * LEGEND_VPAD)) + ')');
            var pp = plot.phenophase;
            var title = _this.speciesTitle.transform(plot.species, plot.speciesRank) + '/' + (pp.phenophase_name || pp.pheno_class_name);
            if (plot.regressionLine && typeof (plot.regressionLine.r2) === 'number' && !isNaN(plot.regressionLine.r2)) {
                // NOTE: the baseline-shift doesn't appear to work on Firefox
                if (_this.isIE) {
                    title += " (R2 " + plot.regressionLine.r2.toFixed(2) + ")";
                }
                else {
                    title += " (R<tspan style=\"baseline-shift: super; font-size: 0.65em;\">2</tspan> " + plot.regressionLine.r2.toFixed(2) + ")";
                }
            }
            if (group) {
                title += " (" + group.label + ")";
            }
            row.append('circle')
                .attr('r', r)
                .attr('fill', plot.color);
            var text = row.append('text')
                .style('font-size', _this.baseFontSize(true))
                .attr('x', (2 * 4))
                .attr('y', (r / 2));
            if (_this.isIE) {
                text.text(title);
            }
            else {
                text.html(title);
            }
        });
        this.commonUpdates();
    };
    __decorate([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Input"])(),
        __metadata("design:type", _scatter_plot_selection__WEBPACK_IMPORTED_MODULE_4__["ScatterPlotSelection"])
    ], ScatterPlotComponent.prototype, "selection", void 0);
    ScatterPlotComponent = __decorate([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Component"])({
            selector: 'scatter-plot',
            template: __webpack_require__(/*! ../svg-visualization-base.component.html */ "../npn/common/src/lib/visualizations/svg-visualization-base.component.html"),
            styles: [__webpack_require__(/*! ../svg-visualization-base.component.scss */ "../npn/common/src/lib/visualizations/svg-visualization-base.component.scss")],
        }),
        __metadata("design:paramtypes", [_angular_core__WEBPACK_IMPORTED_MODULE_0__["ElementRef"], _angular_flex_layout__WEBPACK_IMPORTED_MODULE_1__["ObservableMedia"], _common__WEBPACK_IMPORTED_MODULE_2__["TaxonomicSpeciesTitlePipe"]])
    ], ScatterPlotComponent);
    return ScatterPlotComponent;
}(_svg_visualization_base_component__WEBPACK_IMPORTED_MODULE_3__["SvgVisualizationBaseComponent"]));

var RegressionLine = /** @class */ (function () {
    function RegressionLine(id, color, data, getX, getY) {
        var datas = data.sort(function (o1, o2) {
            return getX(o1) - getX(o2);
        }), isNumber = function (d) { return typeof (d) === 'number'; }, xSeries = datas.map(getX).filter(isNumber), ySeries = datas.map(getY).filter(isNumber), leastSquaresCoeff = this.leastSquares(xSeries, ySeries), x1 = xSeries[0], y1 = this.approxY(leastSquaresCoeff, x1), x2 = xSeries[xSeries.length - 1], y2 = this.approxY(leastSquaresCoeff, x2);
        this.id = id;
        this.color = color;
        this.p1 = [x1, y1];
        this.p2 = [x2, y2];
        this.r2 = leastSquaresCoeff[2];
    }
    RegressionLine.prototype.leastSquares = function (xSeries, ySeries) {
        if (xSeries.length === 0 || ySeries.length === 0) {
            return [Number.NaN, Number.NaN, Number.NaN];
        }
        var reduceSumFunc = function (prev, cur) { return prev + cur; };
        var xBar = xSeries.reduce(reduceSumFunc) * 1.0 / xSeries.length;
        var yBar = ySeries.reduce(reduceSumFunc) * 1.0 / ySeries.length;
        var ssXX = xSeries.map(function (d) { return Math.pow(d - xBar, 2); })
            .reduce(reduceSumFunc);
        var ssYY = ySeries.map(function (d) { return Math.pow(d - yBar, 2); })
            .reduce(reduceSumFunc);
        var ssXY = xSeries.map(function (d, i) { return (d - xBar) * (ySeries[i] - yBar); })
            .reduce(reduceSumFunc);
        var slope = ssXY / ssXX;
        var intercept = yBar - (xBar * slope);
        var rSquare = Math.pow(ssXY, 2) / (ssXX * ssYY);
        return [slope, intercept, rSquare];
    };
    RegressionLine.prototype.approxY = function (leastSquaresCoeff, x) {
        // y = a + bx
        var a = leastSquaresCoeff[1], b = leastSquaresCoeff[0];
        return a + (b * x);
    };
    return RegressionLine;
}());


/***/ }),

/***/ "../npn/common/src/lib/visualizations/site-or-summary-vis-selection.ts":
/*!*****************************************************************************!*\
  !*** ../npn/common/src/lib/visualizations/site-or-summary-vis-selection.ts ***!
  \*****************************************************************************/
/*! exports provided: SiteOrSummaryVisSelection */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "SiteOrSummaryVisSelection", function() { return SiteOrSummaryVisSelection; });
/* harmony import */ var _angular_common_http__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @angular/common/http */ "../../node_modules/@angular/common/fesm5/http.js");
/* harmony import */ var _common__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../common */ "../npn/common/src/lib/common/index.ts");
/* harmony import */ var _vis_selection__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./vis-selection */ "../npn/common/src/lib/visualizations/vis-selection.ts");
var __extends = (undefined && undefined.__extends) || (function () {
    var extendStatics = Object.setPrototypeOf ||
        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __assign = (undefined && undefined.__assign) || Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
        s = arguments[i];
        for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
            t[p] = s[p];
    }
    return t;
};
var __decorate = (undefined && undefined.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (undefined && undefined.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};



var SiteOrSummaryVisSelection = /** @class */ (function (_super) {
    __extends(SiteOrSummaryVisSelection, _super);
    function SiteOrSummaryVisSelection(serviceUtils, speciesService, networkService) {
        var _this = _super.call(this, serviceUtils, networkService) || this;
        _this.serviceUtils = serviceUtils;
        _this.speciesService = speciesService;
        _this.networkService = networkService;
        _this.individualPhenometrics = false;
        _this._numDaysQualityFilter = 30;
        _this.plots = [];
        return _this;
    }
    SiteOrSummaryVisSelection.prototype.toURLSearchParams = function (params) {
        if (params === void 0) { params = new _angular_common_http__WEBPACK_IMPORTED_MODULE_0__["HttpParams"](); }
        if (this.numDaysQualityFilter && this.numDaysQualityFilter > 0) {
            if (this.individualPhenometrics) {
                params = params.set('num_days_quality_filter_individual', "" + this.numDaysQualityFilter);
            }
            else {
                params = params.set('num_days_quality_filter', "" + this.numDaysQualityFilter);
            }
        }
        return _super.prototype.toURLSearchParams.call(this, params);
    };
    SiteOrSummaryVisSelection.prototype.toPOPInput = function (input) {
        var _this = this;
        if (input === void 0) { input = __assign({}, _vis_selection__WEBPACK_IMPORTED_MODULE_2__["BASE_POP_INPUT"]); }
        return _super.prototype.toPOPInput.call(this, input)
            .then(function (input) {
            if (_this.numDaysQualityFilter) {
                input.dataPrecision = _this.numDaysQualityFilter;
            }
            return _this.speciesService.getSpeciesIds(_this.validPlots)
                .then(function (ids) {
                input.species = ids;
                return input;
            });
        });
    };
    Object.defineProperty(SiteOrSummaryVisSelection.prototype, "validPlots", {
        get: function () {
            return this.plots.filter(function (p) { return !!p.species && !!p.phenophase; });
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(SiteOrSummaryVisSelection.prototype, "numDaysQualityFilter", {
        get: function () {
            return this._numDaysQualityFilter;
        },
        set: function (n) {
            this._numDaysQualityFilter = n;
            this.update(); // param change
        },
        enumerable: true,
        configurable: true
    });
    SiteOrSummaryVisSelection.prototype.getData = function () {
        // work around TypeScript Promise.all issue
        return this._getData();
    };
    SiteOrSummaryVisSelection.prototype._getData = function () {
        var _this = this;
        if (!this.isValid()) {
            return Promise.reject(this.INVALID_SELECTION);
        }
        var url = this.serviceUtils.apiUrl("/npn_portal/observations/" + (this.individualPhenometrics ? 'getSummarizedData' : 'getSiteLevelData') + ".json");
        var filterLqd = function (data, plot, plotIndex) {
            var minusUnwanted = data.filter(filterUnwantedDataFunctor(plot));
            var minusSuspect = minusUnwanted.filter(filterSuspectSummaryData);
            var filtered = minusSuspect.filter(_this.individualPhenometrics ? filterLqSummaryData : filterLqSiteData);
            console.debug("plot[" + plotIndex + "] filtered out " + (data.length - minusUnwanted.length) + "/" + data.length + " unwanted records");
            console.debug("plot[" + plotIndex + "] filtered out " + (minusUnwanted.length - minusSuspect.length) + "/" + minusUnwanted.length + " suspect records");
            console.debug("plot[" + plotIndex + "] filtered out " + (minusSuspect.length - filtered.length) + "/" + minusSuspect.length + " LQD records");
            if (_this.individualPhenometrics) {
                var individuals = filtered.reduce(function (map, d) {
                    var key = d.individual_id + '/' + d.phenophase_id + '/' + d.first_yes_year;
                    map[key] = map[key] || [];
                    map[key].push(d);
                    return map;
                }, {});
                var uniqueIndividuals = [];
                for (var key in individuals) {
                    var arr = individuals[key];
                    if (arr.length > 1) {
                        // sort by first_yes_doy
                        arr.sort(function (a, b) {
                            return a.first_yes_doy - b.first_yes_doy;
                        });
                    }
                    // use the earliest record
                    uniqueIndividuals.push(arr[0]);
                }
                console.debug("plot[" + plotIndex + "] filtered out " + (filtered.length - uniqueIndividuals.length) + "/" + filtered.length + " individual records (preferring lowest first_yes_doy)");
                return uniqueIndividuals;
            }
            return filtered;
        };
        var fetchDataForPlot = function (baseParams, plot, plotIndex, group) {
            var keys = Object(_common__WEBPACK_IMPORTED_MODULE_1__["getSpeciesPlotKeys"])(plot);
            var params = baseParams.set(keys.speciesIdKey + "[0]", "" + plot.species[keys.speciesIdKey])
                .set(keys.phenophaseIdKey + "[0]", "" + plot.phenophase[keys.phenophaseIdKey]);
            if ((plot.speciesRank || _common__WEBPACK_IMPORTED_MODULE_1__["TaxonomicSpeciesRank"].SPECIES) !== _common__WEBPACK_IMPORTED_MODULE_1__["TaxonomicSpeciesRank"].SPECIES) {
                params = params.set('taxonomy_aggregate', '1');
            }
            if (plot.phenophaseRank === _common__WEBPACK_IMPORTED_MODULE_1__["TaxonomicPhenophaseRank"].CLASS) {
                params = params.set('pheno_class_aggregate', '1');
            }
            params = params.set('climate_data', '1');
            return _this.serviceUtils.cachedPost(url, params.toString())
                .then(function (data) { return filterLqd(data, plot, plotIndex); })
                .then(function (data) { return ({ plot: plot, data: data, group: group }); });
        };
        this.working = true;
        return this.toURLSearchParams()
            .then(function (baseParams) {
            var validPlots = _this.validPlots;
            return (_this.groups && _this.groups.length)
                ? _this.toGroupHttpParams(baseParams)
                    .then(function (groupParams) {
                    // multiply plots by groups
                    var plotIndex = 0; // just for logging
                    var promises = groupParams.reduce(function (promises, gp) {
                        validPlots.forEach(function (p) {
                            var plot = JSON.parse(JSON.stringify(p));
                            plot.color = Object(_common__WEBPACK_IMPORTED_MODULE_1__["getStaticColor"])(plotIndex);
                            promises.push(fetchDataForPlot(gp.params, plot, plotIndex++, gp.group));
                        });
                        return promises;
                    }, []);
                    return Promise.all(promises);
                })
                : Promise.all(validPlots.map(function (plot, plotIndex) { return fetchDataForPlot(baseParams, plot, plotIndex); }));
        })
            .then(function (results) {
            _this.working = false;
            return results;
        })
            .catch(function (err) {
            _this.working = false;
            _this.handleError(err);
        });
    };
    __decorate([
        Object(_vis_selection__WEBPACK_IMPORTED_MODULE_2__["selectionProperty"])(),
        __metadata("design:type", Boolean)
    ], SiteOrSummaryVisSelection.prototype, "individualPhenometrics", void 0);
    __decorate([
        Object(_vis_selection__WEBPACK_IMPORTED_MODULE_2__["selectionProperty"])(),
        __metadata("design:type", Number)
    ], SiteOrSummaryVisSelection.prototype, "_numDaysQualityFilter", void 0);
    __decorate([
        Object(_vis_selection__WEBPACK_IMPORTED_MODULE_2__["selectionProperty"])({
            ser: function (d) {
                var species = d.species, phenophase = d.phenophase;
                var o = { species: species, phenophase: phenophase };
                Object.getOwnPropertyNames(d)
                    .filter(function (key) { return key !== 'species' && key !== 'phenophase'; })
                    .forEach(function (key) { return o[key] = d[key]; });
                return o;
            }
        }),
        __metadata("design:type", Array)
    ], SiteOrSummaryVisSelection.prototype, "plots", void 0);
    return SiteOrSummaryVisSelection;
}(_vis_selection__WEBPACK_IMPORTED_MODULE_2__["StationAwareVisSelection"]));

/**
 * The underlying services do not treat species/phenophase pairs as
 * parallel arrays but as independent arrays.  This means when two species
 * share a phenophase but if that phenophase is only requested for one of the two
 * extra recrods can be returned and need to be discarded.  This function
 * returns a function that can be passed to Array.filter to discard those records
 * from server responses.
 *
 * Note: This should no longer ever prune out any unwanted records now that one request
 * is being made per plot
 */
function filterUnwantedDataFunctor(plot) {
    var keys = Object(_common__WEBPACK_IMPORTED_MODULE_1__["getSpeciesPlotKeys"])(plot);
    var speciesId = plot.species[keys.speciesIdKey];
    var phenoId = plot.phenophase[keys.phenophaseIdKey];
    return function (d) {
        var keep = speciesId == d[keys.speciesIdKey] &&
            phenoId == d[keys.phenophaseIdKey];
        if (!keep) {
            console.warn('filtering unwanted response record', d);
        }
        return keep;
    };
}
function filterSuspectSummaryData(d) {
    var bad = (d.latitude === 0.0 || d.longitude === 0.0 || d.elevation_in_meters < 0);
    if (bad) {
        console.warn('suspect station data', d);
    }
    return !bad;
}
function filterLqSummaryData(d) {
    var keep = d.numdays_since_prior_no >= 0;
    if (!keep) {
        console.debug('filtering less precise data from summary output', d);
    }
    return keep;
}
function filterLqSiteData(d) {
    var keep = d.mean_numdays_since_prior_no >= 0;
    if (!keep) {
        console.debug('filtering less precise data from site level output', d);
    }
    return keep;
}


/***/ }),

/***/ "../npn/common/src/lib/visualizations/svg-visualization-base.component.html":
/*!**********************************************************************************!*\
  !*** ../npn/common/src/lib/visualizations/svg-visualization-base.component.html ***!
  \**********************************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = "<div class=\"vis-container\">\n    <div class=\"vis-working\" *ngIf=\"selection.working\">\n        <npn-logo spin=\"false\"></npn-logo>\n    </div>\n    <div class=\"chart-container\">\n        <visualization-download *ngIf=\"!thumbnail && !mobileMode\" svgWrapperId=\"{{id}}\" filename=\"{{filename}}\"></visualization-download>\n        <div [class]=\"clazz\" id=\"{{id}}\"><svg class=\"svg-visualization\"></svg></div>\n    </div>\n    <div *ngIf=\"disclaimer && !thumbnail\" class=\"vis-disclaimer\">{{disclaimer}}</div>\n</div>\n<!--pre *ngIf=\"record\">{{record | json}}</pre-->\n"

/***/ }),

/***/ "../npn/common/src/lib/visualizations/svg-visualization-base.component.scss":
/*!**********************************************************************************!*\
  !*** ../npn/common/src/lib/visualizations/svg-visualization-base.component.scss ***!
  \**********************************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = ".vis-container {\n  display: block;\n  position: relative; }\n  .vis-container .chart-container {\n    position: relative; }\n  .vis-container .visualization > svg,\n  .vis-container img.thumbnail-image {\n    border: 1px solid #000; }\n  .vis-container .visualization > svg {\n    display: block; }\n  .vis-container .vis-disclaimer {\n    margin-top: 5px;\n    font-size: .75em;\n    float: right; }\n"

/***/ }),

/***/ "../npn/common/src/lib/visualizations/svg-visualization-base.component.ts":
/*!********************************************************************************!*\
  !*** ../npn/common/src/lib/visualizations/svg-visualization-base.component.ts ***!
  \********************************************************************************/
/*! exports provided: DEFAULT_MARGINS, FONT_SIZE, FONT_SIZE_PX, SvgVisualizationBaseComponent */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "DEFAULT_MARGINS", function() { return DEFAULT_MARGINS; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "FONT_SIZE", function() { return FONT_SIZE; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "FONT_SIZE_PX", function() { return FONT_SIZE_PX; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "SvgVisualizationBaseComponent", function() { return SvgVisualizationBaseComponent; });
/* harmony import */ var _visualization_base_component__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./visualization-base.component */ "../npn/common/src/lib/visualizations/visualization-base.component.ts");
/* harmony import */ var d3__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! d3 */ "../../node_modules/d3/index.js");
var __extends = (undefined && undefined.__extends) || (function () {
    var extendStatics = Object.setPrototypeOf ||
        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();


var DEFAULT_MARGINS = { top: 20, right: 30, bottom: 60, left: 40 };
var FONT_SIZE = 14;
var FONT_SIZE_PX = FONT_SIZE + 'px';
/*
IMPORTANT: see not in VisualizationBaseComponent

@Component({
    selector: 'svg-visualization-base',
    templateUrl: './svg-visualization-base.component.html',
    styleUrls: ['./svg-visualization-base.component.scss']
})
*/
var SvgVisualizationBaseComponent = /** @class */ (function (_super) {
    __extends(SvgVisualizationBaseComponent, _super);
    function SvgVisualizationBaseComponent() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        _this.filename = 'visualization.png';
        _this.margins = DEFAULT_MARGINS;
        _this.minWidth = 700;
        return _this;
    }
    SvgVisualizationBaseComponent.prototype.baseFontSize = function (withPx) {
        var fs = FONT_SIZE;
        /*
        if(this.sizing) {
            if(this.sizing.width < 650) {
                fs -=2;
            }
            if(this.sizing.width < 400) {
                fs -= 2;
            }
        }*/
        return withPx ? fs + "px" : fs;
    };
    /**
     * sub-classes should call after they have redrawn the visualization to get any
     * common styling updates applied.
     */
    SvgVisualizationBaseComponent.prototype.commonUpdates = function () {
        var chart = this.chart, fontSizePx = this.baseFontSize(true);
        ['.axis path', '.axis line'].forEach(function (selector) {
            return chart.selectAll(selector).style('fill', 'none')
                .style('stroke', '#000')
                .style('shape-rendering', 'crispEdges');
        });
        chart.selectAll('text')
            .style('font-family', 'Arial');
        chart.selectAll('g .axis text')
            .style('font-size', fontSizePx);
    };
    /**
     * `reset` is intended to initialize a visualziation to it's known "clean" state
     * placing all common elements, etc.  Subclasses will almost certainly over-ride
     * this implementation and call it to get the ball rolling.
     *
     * No asynchronous work should be done here, fetching data, etc. should happen
     * only within `update`.
     */
    SvgVisualizationBaseComponent.prototype.reset = function () {
        var sizing = this.getSizeInfo(), svg = this.svg, width = sizing.width + sizing.margin.left + sizing.margin.right, height = sizing.height + sizing.margin.top + sizing.margin.bottom;
        // remove all children
        svg.selectAll('*').remove();
        // set size
        svg.attr('width', width)
            .attr('height', height)
            .attr('viewBox', "0 0 " + width + " " + height)
            .attr('preserveAspectRatio', 'xMidYMid meet');
        svg.append('g')
            .attr('class', 'vis-background')
            .append('rect')
            .attr('width', '100%')
            .attr('height', '100%')
            .attr('fill', '#fff');
        this.chart = svg.append('g')
            .attr('transform', "translate(" + sizing.margin.left + "," + sizing.margin.top + ")")
            .attr('class', 'vis-chart');
        svg.append('g')
            .attr('transform', "translate(10," + (sizing.height + sizing.margin.top + sizing.margin.bottom - 10) + ")")
            .append('text')
            .attr('font-size', '11px')
            .attr('font-style', 'italic')
            .attr('text-anchor', 'right').text('USA National Phenology Network, www.usanpn.org');
    };
    SvgVisualizationBaseComponent.prototype.resize = function () {
        this.reset();
        this.redraw();
    };
    // this used to be in ngAfterViewInit and most time it would succeed from there
    // but very occasionally ngAfterViewInit would be called BEFORE the underlying
    // elements exist in the DOM.  No time to understand cleanly why so these selections
    // are now made whever asking about sizing which is the FIRST thing necessary to
    // render an SVG visualization so it should be safe.
    SvgVisualizationBaseComponent.prototype.selectElements = function () {
        this.visRoot = d3__WEBPACK_IMPORTED_MODULE_1__["select"]('#' + this.id);
        this.svg = this.visRoot.select('svg');
    };
    SvgVisualizationBaseComponent.prototype.getSizeInfo = function (minWidth) {
        this.selectElements();
        return _super.prototype.getSizeInfo.call(this, this.minWidth);
    };
    /**
     * IMPORTANT:
     * Sub-classes should implement the redrawSvg and not over-ride redraw.
     * If redraw is over-ridden the implementation  will lose the ability to
     * dynamically replace themselves with a thumbnail should the screen
     * realestate for the visualization get too small.
     *
     * public and not protected because used by HTML templates directly
     */
    SvgVisualizationBaseComponent.prototype.redraw = function () {
        this.redrawSvg();
        var sizeInfo = this.sizing, w = sizeInfo.width + sizeInfo.margin.left + sizeInfo.margin.right;
        if (w === this.minWidth) {
            // If the resulting width matches the minWidth then the realestate to draw the
            // SVG is at or below the minWidth.  Attempting to render visualizations too small
            // results in unusable/cramped results so when we reach this break point draw the
            // visualization scaled to its minimum size and scale it down (shrink everything)
            var native = this.rootElement.nativeElement, svg = native.querySelector('svg.svg-visualization'), wrappedSvg = d3__WEBPACK_IMPORTED_MODULE_1__["select"](svg), h = sizeInfo.height + sizeInfo.margin.bottom + sizeInfo.margin.top, aspectMult = sizeInfo.scaledWidth / this.minWidth;
            wrappedSvg.attr('width', sizeInfo.scaledWidth);
            wrappedSvg.attr('height', Math.round(h * aspectMult));
        }
    };
    /**
     * SVG replacement for the redraw function.
     */
    SvgVisualizationBaseComponent.prototype.redrawSvg = function () { throw new Error('abstract'); };
    SvgVisualizationBaseComponent.prototype.ngAfterViewInit = function () {
        this.selectElements();
        // sets up common handlers
        _super.prototype.ngAfterViewInit.call(this);
    };
    return SvgVisualizationBaseComponent;
}(_visualization_base_component__WEBPACK_IMPORTED_MODULE_0__["VisualizationBaseComponent"]));



/***/ }),

/***/ "../npn/common/src/lib/visualizations/vis-selection.ts":
/*!*************************************************************!*\
  !*** ../npn/common/src/lib/visualizations/vis-selection.ts ***!
  \*************************************************************/
/*! exports provided: NULL_DATA, ONE_DAY_MILLIS, SelectionPropertyHandler, selectionProperty, GET_EXTERNAL, SET_EXTERNAL, REJECT_INVALID_SELECTION, VisSelection, completePOPDates, BASE_POP_INPUT, SelectionGroupMode, NetworkAwareVisSelection, isPredefinedBoundarySelection, isPolygonBoundarySelection, StationAwareVisSelection */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "NULL_DATA", function() { return NULL_DATA; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ONE_DAY_MILLIS", function() { return ONE_DAY_MILLIS; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "SelectionPropertyHandler", function() { return SelectionPropertyHandler; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "selectionProperty", function() { return selectionProperty; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "GET_EXTERNAL", function() { return GET_EXTERNAL; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "SET_EXTERNAL", function() { return SET_EXTERNAL; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "REJECT_INVALID_SELECTION", function() { return REJECT_INVALID_SELECTION; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "VisSelection", function() { return VisSelection; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "completePOPDates", function() { return completePOPDates; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "BASE_POP_INPUT", function() { return BASE_POP_INPUT; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "SelectionGroupMode", function() { return SelectionGroupMode; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "NetworkAwareVisSelection", function() { return NetworkAwareVisSelection; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "isPredefinedBoundarySelection", function() { return isPredefinedBoundarySelection; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "isPolygonBoundarySelection", function() { return isPolygonBoundarySelection; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "StationAwareVisSelection", function() { return StationAwareVisSelection; });
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @angular/core */ "../../node_modules/@angular/core/fesm5/core.js");
/* harmony import */ var _common__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../common */ "../npn/common/src/lib/common/index.ts");
/* harmony import */ var _angular_common_http__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @angular/common/http */ "../../node_modules/@angular/common/fesm5/http.js");
/* harmony import */ var reflect_metadata__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! reflect-metadata */ "../../node_modules/reflect-metadata/Reflect.js");
/* harmony import */ var reflect_metadata__WEBPACK_IMPORTED_MODULE_3___default = /*#__PURE__*/__webpack_require__.n(reflect_metadata__WEBPACK_IMPORTED_MODULE_3__);
var __extends = (undefined && undefined.__extends) || (function () {
    var extendStatics = Object.setPrototypeOf ||
        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __assign = (undefined && undefined.__assign) || Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
        s = arguments[i];
        for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
            t[p] = s[p];
    }
    return t;
};
var __decorate = (undefined && undefined.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (undefined && undefined.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};



var NULL_DATA = -9999;
var ONE_DAY_MILLIS = (24 * 60 * 60 * 1000);
/*
 * A VisSelection is a jumble of properties and methods, not all of which should be serialized
 * and deserialized when [re]storing a selection to/from JSON.  In standard JavaScript this
 * could probably be dealt with cleanly via Object.defineProperty (and a big constructor) but
 * with TypeScript it's significantly more complicated.  For this reason all properties that
 * are part of what should be serialized for a given selection MUST be annotated with @selectionProperty()
 *
 * The virtual `external` property on a selection will produce a plain object representation
 * for a selection.  Assigning an object to the `external` property will deserialize it onto
 * the selection object.
 *
 * IMPORTANT: If a property key is prefixed with `_` it is assumed, by convention, that is the
 * internal representation of a virtual property of the same name without the leading `_`.
 * Such properties will be serialized without the leading `_` and when deserialized will be set
 * directly without the leading `_` so that any logic defined in the corresponding property setter
 * is run.
 */

var selectionPropertyMetadataKey = Symbol('npnSelectionProperty');
var IDENTITY = function (d) { return d; };
/**
 * Defines a property handler for a selection property.
 */
var SelectionPropertyHandler = /** @class */ (function () {
    function SelectionPropertyHandler() {
    }
    return SelectionPropertyHandler;
}());

/**
 * Property decorator to indicate which properties of a selection should
 * be part of the external form of the selection.
 * E.g.
 * <pre>
 *   @selectionProperty()
 *   private s:string;
 *   @selectionProperty({des: d => new Date(d)})
 *   private date:Date;
 *   @selectionProperty({
 *     des: d => {
 *       let o = new MyClass();
 *       ... copy properties for d to o ...
 *       return o;
 *     },
 *     ser: d => d
 *   })
 *   private o:MyClass;
 * </pre>
 */
var selectionProperty = function (handler) {
    var the_handler = __assign({ des: IDENTITY, ser: IDENTITY }, (handler || {}));
    return Reflect.metadata(selectionPropertyMetadataKey, the_handler);
};
var isSelectionProperty = function (target, propertyKey) {
    var meta = Reflect.getMetadata(selectionPropertyMetadataKey, target, propertyKey);
    if (!meta) {
        meta = Reflect.getMetadata(selectionPropertyMetadataKey, target, "_" + propertyKey);
    }
    return meta;
};
// these are exported functions so that other classes can use similar
// s11n/des11n functionality.
function GET_EXTERNAL() {
    var _this = this;
    var ext = {
    // see comment below on $class property
    //$class: this.constructor.name
    };
    Object.keys(this).forEach(function (key) {
        var handler = isSelectionProperty(_this, key);
        if (handler) {
            var v = _this[key];
            if (/^_/.test(key)) {
                key = key.substring(1);
            }
            if (Array.isArray(v)) {
                ext[key] = v.map(function (d) { return handler.ser(d); });
            }
            else {
                ext[key] = handler.ser(v);
            }
        }
    });
    return ext;
}
;
function SET_EXTERNAL(o) {
    var _this = this;
    Object.keys(o).forEach(function (key) {
        var handler = isSelectionProperty(_this, key);
        if (handler) {
            var v = o[key];
            if (typeof (v) !== 'undefined') {
                if (Array.isArray(v)) {
                    _this[key] = v.map(function (d) { return handler.des(d); });
                }
                else {
                    _this[key] = handler.des(v);
                }
            }
            else {
                _this[key] = undefined;
            }
        }
    });
}
;
var REJECT_INVALID_SELECTION = 'invalid selection';
/**
 * Base class for visualization selection (user input).  A VisSelection is attached
 * to a specific visualization and the selection itself sends events to the visualization
 * to tell it when meaningful changes have happened and it should reset/redraw or update.
 *
 * The utility methods reset/redraw/update send instructions to the visualization.  These
 * functions can be called at any time, even before the selection has been wired to its
 * visualization.  Events will be held onto and delivered if/when the visualization has
 * subscribed.
 *
 * Note: EventEmitter does not have an unsubscribe (though it, today, extends RxJs Subject)
 * so technically does.  Should perhaps consider not extending Angular's EventEmitter
 *
 * Note: Within the current set of visualizations there are two distinct ways that events
 * are triggered.  Earlier visualizations would have controls populate values on a selection
 * and then based on knowledge about how the visualization worked the controls themselves
 * would call update or redraw.  This meant that controls contained more logic and more
 * internal knowledge about how a specific visualization functions (which properties might
 * just alter the appearance of a visualization, redraw, versus what type of change might
 * require the visualization to go back to the server to get new data).  Newer visualization
 * implementations move that knowledge into the selection via the use of setters/getters
 * which can simplify controls many times simply allowing them to use two-way data binding
 * between a control and the selection itself.  The `pause`/`resume` functionality was added
 * to help with these types of implementations when special cases arise to avoid any attached
 * visualization components from doing work (e.g. population of defaults or cooperating
 * selection properties)
 *
 * @todo review use of `editMode` flag to see if it can be removed (maybe using `pause`/`resume` instead).
 *
 * @dynamic
 */
var VisSelection = /** @class */ (function (_super) {
    __extends(VisSelection, _super);
    function VisSelection() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        /**
         * Sub-classes set to true if they support export to POP
         * Must also implement `toPOPInput(input:POPInput = {...BASE_POP_INPUT}):Promise<POPInput>`
         */
        _this.$supportsPop = false;
        /*
        Note: Previously this.class.name was used when serializing a selection to JSON.
        This does not work in production mode because of JavaScript minification.
        So instead making this explicit.  All concrete VisSelection classes need to
        add the $class @selectionProperty() and put their class name within it.
         */
        _this.$class = 'VisSelection';
        _this.guid = Object(_common__WEBPACK_IMPORTED_MODULE_1__["newGuid"])();
        _this.meta = {}; // a place for non selection specific info to be held
        _this.debug = false;
        _this.working = false;
        // this flag is not persisted but can be used by a visualization if it
        // would like to have a control pick "default state" while the visualization
        // is being built.
        _this.editMode = false;
        _this.updateSent = false;
        _this._paused = false;
        _this.INVALID_SELECTION = REJECT_INVALID_SELECTION;
        _this.lastEmit = {};
        _this.firstSubscriber = new Promise(function (resolve) {
            _this.firstSubscriberResolver = resolve;
        });
        return _this;
    }
    Object.defineProperty(VisSelection.prototype, "external", {
        get: function () { return GET_EXTERNAL.apply(this, arguments); },
        set: function (o) {
            this.pause();
            try {
                SET_EXTERNAL.apply(this, arguments);
            }
            finally {
                this.resume();
            }
        },
        enumerable: true,
        configurable: true
    });
    /** @returns {boolean} true if events are paused. */
    VisSelection.prototype.isPaused = function () { return this._paused; };
    /** Pauses even propagation so update/redraw, etc. will have no effect until resumed. */
    VisSelection.prototype.pause = function () { this._paused = true; };
    /** Resumes event propagation. */
    VisSelection.prototype.resume = function () { this._paused = false; };
    /**
     * Instruct the visualization to go back to a "clean" slate
     */
    VisSelection.prototype.reset = function () {
        this.emit("reset" /* RESET */);
    };
    /**
     * Instruct the visualization to redraw itself using the data it already
     * has and the current state of the selection.
     * Will do nothing if the selection is not valid.
     * If an update has not been sent yet then redraw will cause an update.
     */
    VisSelection.prototype.redraw = function () {
        if (this.isValid()) {
            if (!this.updateSent) {
                this.update();
            }
            else {
                this.emit("redraw" /* REDRAW */);
            }
        }
    };
    /**
     * Instruct the visualization to go get new data and reset/redraw itself.
     * Will do nothing if the selection is not valid.
     */
    VisSelection.prototype.update = function () {
        if (this.isValid()) {
            this.emit("update" /* UPDATE */);
        }
    };
    /**
     * Instruct the visualization to resize itself.
     */
    VisSelection.prototype.resize = function () {
        this.emit("resize" /* RESIZE */);
    };
    VisSelection.prototype.handleError = function (e) {
        console.error(e);
        this.working = false;
    };
    // make sure no events go out until there is at least one subscriber to receive them.
    VisSelection.prototype.emit = function (value) {
        var _this = this;
        if (this._paused) {
            return;
        }
        var self = this, emitArgs = arguments, thisEmit = {
            value: value,
            when: Date.now(),
            ext: JSON.stringify(this.external)
        };
        // throttle events on emit rather than requiring subscribers to do this.
        // i.e. if the event being emitted differs from the last event emitted it
        // always gets through.  events get pruned out if they are not distinct
        // and happen within the specific interval
        // e.g.
        // selection.update(); selection.update(); selection.update();
        // only the first will get through
        // but selection.update() setTimeout(() => selection.update(),600);
        // both will get through
        if (this.lastEmit.value !== thisEmit.value || this.lastEmit.ext !== thisEmit.ext || this.lastEmit.when < (thisEmit.when - 500) || this.$class === "ActivityCurvesSelection") {
            this.lastEmit = thisEmit;
            console.log('letting event through', thisEmit /*, new Error(`${thisEmit.value}: stack trace`)*/);
            this.firstSubscriber.then(function () {
                _super.prototype.emit.apply(self, emitArgs);
                if (thisEmit.value === "update" /* UPDATE */) {
                    _this.updateSent = true;
                }
            });
        }
        else {
            console.log('pruned out redundant event', thisEmit);
        }
    };
    VisSelection.prototype.subscribe = function (generatorOrNext, error, complete) {
        // resolve the above promise..
        this.firstSubscriberResolver();
        return _super.prototype.subscribe.apply(this, arguments);
    };
    __decorate([
        selectionProperty(),
        __metadata("design:type", String)
    ], VisSelection.prototype, "$class", void 0);
    __decorate([
        selectionProperty(),
        __metadata("design:type", String)
    ], VisSelection.prototype, "guid", void 0);
    __decorate([
        selectionProperty(),
        __metadata("design:type", Object)
    ], VisSelection.prototype, "meta", void 0);
    return VisSelection;
}(_angular_core__WEBPACK_IMPORTED_MODULE_0__["EventEmitter"]));

var MONTHS = [
    'January', 'February', 'March', 'April', 'May', 'June',
    'July', 'August', 'September', 'October', 'November', 'December'
];
/**
 * Takes values for `start|endDate` and fills in the values for
 * `start|endYear|Month|Day`
 *
 * @param input
 */
function completePOPDates(input) {
    var toParts = function (d) {
        var _a = d.split('-').map(function (p) { return parseInt(p); }), year = _a[0], month = _a[1], day = _a[2];
        month = MONTHS[month - 1];
        return { year: year, month: month, day: day };
    };
    ['start', 'end'].forEach(function (prefix) {
        var date = input[prefix + "Date"];
        if (date) {
            var parts = toParts(date);
            input[prefix + "Year"] = parts.year;
            input[prefix + "Month"] = parts.month;
            input[prefix + "Day"] = parts.day;
        }
    });
    return input;
}
var BASE_POP_INPUT = {
    downloadType: 'selectable',
    searchSource: 'visualization-tool',
    rangeType: 'Calendar'
};
/**
 * The mode of a given SelectionGroup
 */
var SelectionGroupMode;
(function (SelectionGroupMode) {
    /** The group represents the data gathered by a network. */
    SelectionGroupMode["NETWORK"] = "N";
    /** The group represents the data gathered by a single station. */
    SelectionGroupMode["STATION"] = "S";
    /** The group represents the data gathered by stations within a radius of a network (specifically a network with a known boundary). */
    SelectionGroupMode["OUTSIDE"] = "O";
})(SelectionGroupMode || (SelectionGroupMode = {}));
;
/**
 * @dynamic
 */
var NetworkAwareVisSelection = /** @class */ (function (_super) {
    __extends(NetworkAwareVisSelection, _super);
    function NetworkAwareVisSelection(networkService) {
        var _this = _super.call(this) || this;
        _this.networkService = networkService;
        _this._networkIds = [];
        return _this;
    }
    Object.defineProperty(NetworkAwareVisSelection.prototype, "networkIds", {
        get: function () {
            return this._networkIds;
        },
        set: function (ids) {
            this._networkIds = ids;
            this.emit("scope_change" /* SCOPE_CHANGE */);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(NetworkAwareVisSelection.prototype, "groups", {
        get: function () {
            return this._groups;
        },
        set: function (groups) {
            this._groups = groups;
            this.emit("scope_change" /* SCOPE_CHANGE */);
        },
        enumerable: true,
        configurable: true
    });
    /**
     * Fetches the list of station ids associated with a `Selectiongroup`
     *
     * @param group The group
     */
    NetworkAwareVisSelection.prototype.getStationIdsForGroup = function (group) {
        switch (group.mode) {
            case SelectionGroupMode.STATION:
                return Promise.resolve([group.id]);
            case SelectionGroupMode.NETWORK:
                // translate the network to its underlying stations
                return this.networkService.getStations(group.id)
                    // just need the station_ids
                    .then(function (stations) { return stations.map(function (s) { return s.station_id; }); })
                    // exclude any stations the group excludes
                    .then(function (ids) { return ids.filter(function (id) { return (group.excludeIds || []).indexOf(id) === -1; }); });
            case SelectionGroupMode.OUTSIDE:
                return this.networkService.getNearbyStationIds(group.id, group.outsideRadiusMiles);
        }
    };
    /**
     * If the `groups` property is set then the output of this function will be
     * the compilation of all the station ids that are part of the corresponding
     * groups, otherwise it will be based upon any networkIds set.
     */
    NetworkAwareVisSelection.prototype.getStationIds = function () {
        var _this = this;
        return !!this.groups && this.groups.length > 0
            ? Promise.all(this.groups.map(function (group) { return _this.getStationIdsForGroup(group); }))
                .then(function (list) { return list.reduce(function (ids, idList) {
                idList.forEach(function (id) {
                    if (ids.indexOf(id) === -1) {
                        ids.push(id);
                    }
                });
                return ids;
            }, []); })
            : this.networkIds && this.networkIds.length
                ? this.networkService.getStations(this.networkIds)
                    .then(function (stations) { return stations.map(function (s) { return s.station_id; }); })
                : Promise.resolve([]);
    };
    /**
     * If the `groups` property is set then no `station_id` parameters will
     * be populated on the base `HttpParams` since separate requests will need to
     * be issued for group data and `toGroupHttpParams` must be called to build those
     * request parameters.
     *
     * @param params The HttpParams (optional)
     */
    NetworkAwareVisSelection.prototype.toURLSearchParams = function (params) {
        if (params === void 0) { params = new _angular_common_http__WEBPACK_IMPORTED_MODULE_2__["HttpParams"](); }
        return !!this.groups && this.groups.length > 0
            ? Promise.resolve(params)
            // translate any network_ids into station_ids
            : this.getStationIds()
                .then(function (sids) { return sids.reduce(function (params, id, i) { return params.set("station_id[" + i + "]", "" + id); }, params); });
    };
    NetworkAwareVisSelection.prototype.toPOPInput = function (input) {
        if (input === void 0) { input = __assign({}, BASE_POP_INPUT); }
        input.partnerGroups = this.networkIds && this.networkIds.length
            ? this.networkIds.slice()
            : undefined;
        return Promise.resolve(input);
    };
    /**
     * Removes any station_id[n] parameters from a set of HttpParams.
     *
     * @param params The params to remove parameters from
     */
    NetworkAwareVisSelection.prototype.resetStationIdParams = function (params) {
        params.keys()
            .filter(function (key) { return /^station_id\[\d+\]$/.test(key); })
            .forEach(function (key) { return params = params.delete(key); });
        return params;
    };
    /**
     * Multiplies out a set of HttpParams by the value of the groups property.
     * This function should NOT be called if the groups property is not set or empty (will result in a rejected Promise).
     *
     * @todo Implement SelectionGroupMode.OUTSIDE support
     * @param params The params to multiply out by groups
     */
    NetworkAwareVisSelection.prototype.toGroupHttpParams = function (params) {
        var _this = this;
        if (params === void 0) { params = new _angular_common_http__WEBPACK_IMPORTED_MODULE_2__["HttpParams"](); }
        if (!this.groups || !this.groups.length) {
            return Promise.reject('selection has no SelectionGroups defined');
        }
        // to be safe clean out any station_id parameters that might have been set
        var resetParams = this.resetStationIdParams(params);
        var promises = this.groups.map(function (group) { return _this.getStationIdsForGroup(group)
            .then(function (ids) {
            params = ids.reduce(function (params, id, i) { return params.set("station_id[" + i + "]", "" + id); }, resetParams);
            return ({ group: group, params: params });
        }); });
        return Promise.all(promises);
    };
    __decorate([
        selectionProperty(),
        __metadata("design:type", Array)
    ], NetworkAwareVisSelection.prototype, "_networkIds", void 0);
    __decorate([
        selectionProperty(),
        __metadata("design:type", Array)
    ], NetworkAwareVisSelection.prototype, "_groups", void 0);
    return NetworkAwareVisSelection;
}(VisSelection));

function isPredefinedBoundarySelection(o) {
    return typeof (o.id) === 'number' &&
        typeof (o.typeId) === 'number' &&
        typeof (o.boundaryName) === 'string' &&
        typeof (o.boundaryTypeName) === 'string';
}
function isPolygonBoundarySelection(o) {
    return Array.isArray(o.data) &&
        o.data.length &&
        Array.isArray(o.data[0]) &&
        o.data[0].length === 2 &&
        typeof (o.data[0][0]) === 'number';
}
/**
 * @dynamic
 */
var StationAwareVisSelection = /** @class */ (function (_super) {
    __extends(StationAwareVisSelection, _super);
    function StationAwareVisSelection(serviceUtils, networkService) {
        var _this = _super.call(this, networkService) || this;
        _this.serviceUtils = serviceUtils;
        _this.networkService = networkService;
        _this._stationIds = [];
        return _this;
    }
    Object.defineProperty(StationAwareVisSelection.prototype, "stationIds", {
        get: function () {
            return this._stationIds;
        },
        set: function (ids) {
            this._stationIds = ids;
            this.emit("scope_change" /* SCOPE_CHANGE */);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(StationAwareVisSelection.prototype, "personId", {
        get: function () {
            return this._personId;
        },
        set: function (id) {
            var orig = this._personId;
            if ((this._personId = id) != orig) {
                this.update();
            }
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(StationAwareVisSelection.prototype, "groupId", {
        get: function () {
            return this._groupId;
        },
        set: function (id) {
            var orig = this._groupId;
            if ((this._groupId = id) != orig) {
                this.update();
            }
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(StationAwareVisSelection.prototype, "boundaries", {
        get: function () {
            return this._boundaries || [];
        },
        set: function (boundaries) {
            this._boundaries = boundaries;
            this.update();
        },
        enumerable: true,
        configurable: true
    });
    StationAwareVisSelection.prototype.getStationIdPromises = function () {
        var _this = this;
        var baseParams = {};
        if (this.personId) {
            baseParams.person_id = this.personId;
        }
        if (this.groupId) {
            baseParams.group_id = this.groupId;
        }
        var promises = this.boundaries.map(function (b) {
            if (b.data) {
                var polySelection = b;
                var polygon = polySelection.data.slice();
                polygon.push(polySelection.data[0]); // close the loop
                return _this.serviceUtils.cachedGet(_this.serviceUtils.apiUrl('/npn_portal/stations/getStationsByLocation.json'), __assign({}, baseParams, { wkt: 'POLYGON((' + polygon.map(function (pair) { return pair[1] + " " + pair[0]; }).join(',') + '))' }))
                    .then(function (response) { return response.map(function (s) { return s.station_id; }); });
            }
            var predefSelection = b;
            return _this.serviceUtils.cachedGet(_this.serviceUtils.apiUrl('/npn_portal/stations/getStationsForBoundary.json'), __assign({}, baseParams, { boundary_id: predefSelection.id }));
        });
        // If this selection has an explicit list of stationIds then return them and ignore any
        // the parent class might supply by virtue of the value of the networkIds property.
        // It is assumed that if they are set AND the parent has a list of networkIds
        // that the list of stationIds is a subset of stations within the parent's networks
        if (this.stationIds && this.stationIds.length) {
            promises.push(Promise.resolve(this.stationIds.slice()));
        }
        else {
            promises.push(_super.prototype.getStationIds.call(this));
        }
        return promises;
    };
    StationAwareVisSelection.prototype.getStationIds = function () {
        return Promise.all(this.getStationIdPromises())
            .then(function (results) { return results.reduce(function (ids, stationIds) { return ids.concat(stationIds); }, []); });
    };
    StationAwareVisSelection.prototype.toURLSearchParams = function (params) {
        var _this = this;
        if (params === void 0) { params = new _angular_common_http__WEBPACK_IMPORTED_MODULE_2__["HttpParams"](); }
        return _super.prototype.toURLSearchParams.call(this, params)
            .then(function (params) { return _this.personId ? params.set('person_id', "" + _this.personId) : params; })
            .then(function (params) { return _this.groupId ? params.set('group_id', "" + _this.groupId) : params; })
            .then(function (params) {
            // note: in case the parent's implementation of toURLSearchParams included station_ids parameters we need
            // to unset them and replace them with any this class generates (which may include or exclude those supplied
            // by the parent)
            params = _this.resetStationIdParams(params);
            return _this.getStationIds().then(function (results) {
                results.forEach(function (id, i) { return params = params.set("station_id[" + i + "]", "" + id); });
                return params;
            });
        });
    };
    StationAwareVisSelection.prototype.toPOPInput = function (input) {
        var _this = this;
        if (input === void 0) { input = __assign({}, BASE_POP_INPUT); }
        return _super.prototype.toPOPInput.call(this, input)
            .then(function (input) { return Promise.all(_this.getStationIdPromises())
            .then(function (results) {
            input.stations = results.reduce(function (ids, stationIds) { return ids.concat(stationIds); }, []);
            return input;
        }); });
    };
    __decorate([
        selectionProperty(),
        __metadata("design:type", Object)
    ], StationAwareVisSelection.prototype, "_personId", void 0);
    __decorate([
        selectionProperty(),
        __metadata("design:type", Object)
    ], StationAwareVisSelection.prototype, "_groupId", void 0);
    __decorate([
        selectionProperty(),
        __metadata("design:type", Array)
    ], StationAwareVisSelection.prototype, "_stationIds", void 0);
    __decorate([
        selectionProperty(),
        __metadata("design:type", Array)
    ], StationAwareVisSelection.prototype, "_boundaries", void 0);
    return StationAwareVisSelection;
}(NetworkAwareVisSelection));



/***/ }),

/***/ "../npn/common/src/lib/visualizations/visualization-base.component.ts":
/*!****************************************************************************!*\
  !*** ../npn/common/src/lib/visualizations/visualization-base.component.ts ***!
  \****************************************************************************/
/*! exports provided: DEFAULT_MARGINS, FONT_SIZE, FONT_SIZE_PX, VisualizationBaseComponent, VisualizationMargins, VisualizationSizing */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "DEFAULT_MARGINS", function() { return DEFAULT_MARGINS; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "FONT_SIZE", function() { return FONT_SIZE; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "FONT_SIZE_PX", function() { return FONT_SIZE_PX; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "VisualizationBaseComponent", function() { return VisualizationBaseComponent; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "VisualizationMargins", function() { return VisualizationMargins; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "VisualizationSizing", function() { return VisualizationSizing; });
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @angular/core */ "../../node_modules/@angular/core/fesm5/core.js");
/* harmony import */ var _common__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../common */ "../npn/common/src/lib/common/index.ts");
/* harmony import */ var _vis_selection__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./vis-selection */ "../npn/common/src/lib/visualizations/vis-selection.ts");
/* harmony import */ var rxjs__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! rxjs */ "../../node_modules/rxjs/_esm5/index.js");
/* harmony import */ var rxjs_operators__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! rxjs/operators */ "../../node_modules/rxjs/_esm5/operators/index.js");
var __extends = (undefined && undefined.__extends) || (function () {
    var extendStatics = Object.setPrototypeOf ||
        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __decorate = (undefined && undefined.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (undefined && undefined.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};





var DEFAULT_MARGINS = { top: 20, right: 30, bottom: 60, left: 40 };
var FONT_SIZE = 14;
var FONT_SIZE_PX = FONT_SIZE + 'px';
/*
IMPORTANT: There is a rather annoying chicken and egg problem with angular
development vs production builds.  This "component" originally took full
advantage of language features and was properly abstract, works great in dev.
Production builds wouldn't allow this.  They'd complain about the component
not being registered, comment out the @Component annotation and dev builds
then fail.

@Component({
  selector: 'visualization-base',
  template: '"abstract" component'
})
*/
var VisualizationBaseComponent = /** @class */ (function (_super) {
    __extends(VisualizationBaseComponent, _super);
    function VisualizationBaseComponent(rootElement, media) {
        var _this = _super.call(this) || this;
        _this.rootElement = rootElement;
        _this.media = media;
        _this.thumbnail = false;
        _this.id = 'visualization-' + Math.floor(Math.random() * 1000);
        _this.clazz = 'visualization ' + _this.constructor.name;
        _this.margins = { top: 0, right: 0, left: 0, bottom: 0 };
        _this.mobileMode = false;
        _this.media.asObservable().pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_4__["takeUntil"])(_this.componentDestroyed))
            .subscribe(function (mediaChange) { return _this.mobileMode = mediaChange.mqAlias === 'xs' || mediaChange.mqAlias === 'sm'; });
        _this.isIE = !!Object(_common__WEBPACK_IMPORTED_MODULE_1__["detectIE"])();
        return _this;
    }
    /**
     * Calculates the dimensions (width based) that the visualization should
     * be drawn to fit properly within the parent element.
     */
    VisualizationBaseComponent.prototype.getSizeInfo = function (minWidth) {
        var native = this.rootElement.nativeElement, parent = native.parentElement, ratioMult = 0.5376, // ratio based on initial w/h of 930/500
        strToPx = function (s) { return parseInt(s.replace(/px$/, '')); }, style = getComputedStyle(parent, null), minusLeft = strToPx(style.paddingLeft) + strToPx(style.borderLeftWidth), minusRight = strToPx(style.paddingRight) + strToPx(style.borderRightWidth), innerWidth = parent.clientWidth - minusLeft - minusRight, margin = this.margins, cw = Math.floor(innerWidth), scaledWidth = cw;
        if (minWidth && cw < minWidth) {
            cw = minWidth;
        }
        var ch = Math.floor(cw * ratioMult), w = cw - margin.left - margin.right, h = ch - margin.top - margin.bottom;
        if (isNaN(w)) {
            w = 0;
        }
        if (isNaN(h)) {
            h = 0;
        }
        return (this.sizing = { scaledWidth: scaledWidth, width: w, height: h, margin: margin });
    };
    /**
     * `reset` is intended to initialize a visualziation to it's known "clean" state
     * placing all common elements, etc.  Subclasses will almost certainly over-ride
     * this implementation and call it to get the ball rolling.
     *
     * No asynchronous work should be done here, fetching data, etc. should happen
     * only within `update`.
     */
    VisualizationBaseComponent.prototype.reset = function () { throw new Error('abstract'); };
    /**
     * Called when the visualization should be redrawn from data already in hand
     * using the current state of the selection.
     */
    VisualizationBaseComponent.prototype.redraw = function () { throw new Error('abstract'); };
    /**
     * Called when the visualization should go get new clean data, based on its
     * selection, and reset/redraw itself.
     */
    VisualizationBaseComponent.prototype.update = function () { throw new Error('abstract'); };
    /**
     * Called when the visualization should resize itself.
     */
    VisualizationBaseComponent.prototype.resize = function () { throw new Error('abstract'); };
    VisualizationBaseComponent.prototype.ngAfterViewInit = function () {
        var _this = this;
        console.debug('visualization.ngAfterViewInit');
        // redraw and update the visualization on window re-size, debounce
        // to avoid rapid redraws as the window is resized
        // NOTE: there may be some stupid issue with IE11 and the window
        // resize event.  Could perhaps use the @HostListener route below but
        // that should then implement its own debounce (via setTimeout)
        // and they seem to want to push the use of RxJs so this kind of thing
        // feels cleaner.
        Object(rxjs__WEBPACK_IMPORTED_MODULE_3__["fromEvent"])(window, 'resize').pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_4__["debounceTime"])(500), Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_4__["takeUntil"])(this.componentDestroyed))
            .subscribe(function () {
            try {
                _this.resize();
            }
            catch (resizeE) {
                console.error('error during resize', resizeE);
            }
        });
        // now that we're prepared to start listening to our selection for
        // VisSelectionEvents.
        this.selection
            .pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_4__["takeUntil"])(this.componentDestroyed))
            .subscribe(function (event) {
            switch (event) {
                case "reset" /* RESET */:
                    return _this.reset();
                case "redraw" /* REDRAW */:
                    return _this.redraw();
                case "update" /* UPDATE */:
                    return _this.update();
                case "resize" /* RESIZE */:
                    return _this.resize();
            }
        });
    };
    /* a way of capturing window events...
    @HostListener('window:resize',['$event'])
    onResize(event) {
        this.redraw();
    }*/
    VisualizationBaseComponent.prototype.handleError = function (e) {
        if (e && e !== _vis_selection__WEBPACK_IMPORTED_MODULE_2__["REJECT_INVALID_SELECTION"]) {
            console.error(e);
        }
    };
    __decorate([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Input"])(),
        __metadata("design:type", _vis_selection__WEBPACK_IMPORTED_MODULE_2__["VisSelection"])
    ], VisualizationBaseComponent.prototype, "selection", void 0);
    __decorate([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Input"])(),
        __metadata("design:type", Boolean)
    ], VisualizationBaseComponent.prototype, "thumbnail", void 0);
    return VisualizationBaseComponent;
}(_common__WEBPACK_IMPORTED_MODULE_1__["MonitorsDestroy"]));

var VisualizationMargins = /** @class */ (function () {
    function VisualizationMargins() {
    }
    return VisualizationMargins;
}());

var VisualizationSizing = /** @class */ (function () {
    function VisualizationSizing() {
    }
    return VisualizationSizing;
}());



/***/ }),

/***/ "../npn/common/src/lib/visualizations/visualization-download.component.ts":
/*!********************************************************************************!*\
  !*** ../npn/common/src/lib/visualizations/visualization-download.component.ts ***!
  \********************************************************************************/
/*! exports provided: VisualizationDownloadComponent */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "VisualizationDownloadComponent", function() { return VisualizationDownloadComponent; });
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @angular/core */ "../../node_modules/@angular/core/fesm5/core.js");
/* harmony import */ var _fortawesome_pro_light_svg_icons__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @fortawesome/pro-light-svg-icons */ "../../node_modules/@fortawesome/pro-light-svg-icons/index.es.js");
/* harmony import */ var d3__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! d3 */ "../../node_modules/d3/index.js");
var __decorate = (undefined && undefined.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (undefined && undefined.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};



var VisualizationDownloadComponent = /** @class */ (function () {
    function VisualizationDownloadComponent() {
        this.faDownload = _fortawesome_pro_light_svg_icons__WEBPACK_IMPORTED_MODULE_1__["faDownload"];
    }
    VisualizationDownloadComponent.prototype.download = function ($event) {
        var _this = this;
        $event.preventDefault();
        var svg = document.querySelector("#" + this.svgWrapperId + " >svg"), wrappedSvg = d3__WEBPACK_IMPORTED_MODULE_2__["select"](svg);
        wrappedSvg.attr('version', 1.1)
            .attr('xmlns', 'http://www.w3.org/2000/svg');
        var parent = svg.parentNode, html = parent.innerHTML;
        // see here (the unicode problem)
        // https://developer.mozilla.org/en-US/docs/Web/API/WindowBase64/Base64_encoding_and_decoding
        var htmlForBase64 = encodeURIComponent(html).replace(/%([0-9A-F]{2})/g, function toSolidBytes(match, p1) {
            return String.fromCharCode('0x' + p1);
        });
        var imgsrc = 'data:image/svg+xml;base64,' + window.btoa(htmlForBase64), canvas = document.querySelector("#dlcanvas-" + this.svgWrapperId), link = document.querySelector("#dllink-" + this.svgWrapperId);
        canvas.width = +wrappedSvg.attr('width');
        canvas.height = +wrappedSvg.attr('height');
        var context = canvas.getContext('2d'), image = new Image();
        image.onload = function () {
            context.drawImage(image, 0, 0);
            var canvasdata = canvas.toDataURL('image/png');
            link.download = _this.filename;
            link.href = canvasdata;
            link.click();
        };
        image.src = imgsrc;
    };
    __decorate([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Input"])(),
        __metadata("design:type", String)
    ], VisualizationDownloadComponent.prototype, "svgWrapperId", void 0);
    __decorate([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Input"])(),
        __metadata("design:type", String)
    ], VisualizationDownloadComponent.prototype, "filename", void 0);
    VisualizationDownloadComponent = __decorate([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Component"])({
            selector: 'visualization-download',
            template: "\n    <div class=\"vis-download\">\n        <a href (click)=\"download($event)\" title=\"Download\"><fa-icon [icon]=\"faDownload\"></fa-icon></a>\n        <canvas id=\"dlcanvas-{{svgWrapperId}}\" style=\"display: none;\"></canvas>\n        <a id=\"dllink-{{svgWrapperId}}\" style=\"display: none;\">download</a>\n    </div>\n    ",
            styles: ["\n        .vis-download {\n            height: 28px;\n            width: 28px;\n            position: absolute;\n            right: 0px;\n            margin: 10px;\n            font-size: 1.5em;\n        }\n        .vis-download >a {\n            color: #000;\n            &:hover {\n                color: #000;\n            }\n        }\n    "]
        })
    ], VisualizationDownloadComponent);
    return VisualizationDownloadComponent;
}());



/***/ }),

/***/ "../npn/common/src/lib/visualizations/visualization-selection-factory.service.ts":
/*!***************************************************************************************!*\
  !*** ../npn/common/src/lib/visualizations/visualization-selection-factory.service.ts ***!
  \***************************************************************************************/
/*! exports provided: VisualizationSelectionFactory */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "VisualizationSelectionFactory", function() { return VisualizationSelectionFactory; });
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @angular/core */ "../../node_modules/@angular/core/fesm5/core.js");
/* harmony import */ var _scatter_plot__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./scatter-plot */ "../npn/common/src/lib/visualizations/scatter-plot/index.ts");
/* harmony import */ var _calendar__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./calendar */ "../npn/common/src/lib/visualizations/calendar/index.ts");
/* harmony import */ var _activity_curves__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./activity-curves */ "../npn/common/src/lib/visualizations/activity-curves/index.ts");
/* harmony import */ var _observer_activity__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./observer-activity */ "../npn/common/src/lib/visualizations/observer-activity/index.ts");
/* harmony import */ var _observation_frequency__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./observation-frequency */ "../npn/common/src/lib/visualizations/observation-frequency/index.ts");
/* harmony import */ var _clipped_wms_map__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./clipped-wms-map */ "../npn/common/src/lib/visualizations/clipped-wms-map/index.ts");
/* harmony import */ var _map__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./map */ "../npn/common/src/lib/visualizations/map/index.ts");
/* harmony import */ var _agdd_time_series__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ./agdd-time-series */ "../npn/common/src/lib/visualizations/agdd-time-series/index.ts");
var __decorate = (undefined && undefined.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (undefined && undefined.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};









var VisualizationSelectionFactory = /** @class */ (function () {
    function VisualizationSelectionFactory(calendar, scatter, activity, observer, observationFreq, clippedWmsMap, map, agddTime) {
        this.calendar = calendar;
        this.scatter = scatter;
        this.activity = activity;
        this.observer = observer;
        this.observationFreq = observationFreq;
        this.clippedWmsMap = clippedWmsMap;
        this.map = map;
        this.agddTime = agddTime;
        this.factoryMap = {};
        this.factoryMap.CalendarSelection = calendar;
        this.factoryMap.ScatterPlotSelection = scatter;
        this.factoryMap.ActivityCurvesSelection = activity;
        this.factoryMap.ObserverActivitySelection = observer;
        this.factoryMap.ObservationFrequencySelection = observationFreq;
        this.factoryMap.ClippedWmsMapSelection = clippedWmsMap;
        this.factoryMap.MapSelection = map;
        this.factoryMap.AgddTimeSeriesSelection = agddTime;
    }
    VisualizationSelectionFactory.prototype.newCalendarSelection = function () {
        return this.calendar.newSelection();
    };
    VisualizationSelectionFactory.prototype.newScatterPlotSelection = function () {
        return this.scatter.newSelection();
    };
    VisualizationSelectionFactory.prototype.newActivityCurvesSelection = function () {
        return this.activity.newSelection();
    };
    VisualizationSelectionFactory.prototype.newObserverActivitySelection = function () {
        return this.observer.newSelection();
    };
    VisualizationSelectionFactory.prototype.newObservationFrequencySelection = function () {
        return this.observationFreq.newSelection();
    };
    VisualizationSelectionFactory.prototype.newClippedWmsMapSelection = function () {
        return this.clippedWmsMap.newSelection();
    };
    VisualizationSelectionFactory.prototype.newMapSelection = function () {
        return this.map.newSelection();
    };
    VisualizationSelectionFactory.prototype.newAgddTimeSeriesSelection = function () {
        return this.agddTime.newSelection();
    };
    VisualizationSelectionFactory.prototype.cloneSelection = function (selection) {
        return this.newSelection(selection.external);
    };
    VisualizationSelectionFactory.prototype.newSelections = function (selections) {
        var _this = this;
        return selections.map(function (s) { return _this.newSelection(s); });
    };
    VisualizationSelectionFactory.prototype.newSelection = function (selection) {
        if (!this.factoryMap[selection.$class]) {
            throw new Error("Unknown selection type \"" + selection.$class + "\"");
        }
        var s = this.factoryMap[selection.$class].newSelection();
        s.external = selection;
        return s;
    };
    VisualizationSelectionFactory = __decorate([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Injectable"])(),
        __metadata("design:paramtypes", [_calendar__WEBPACK_IMPORTED_MODULE_2__["CalendarSelectionFactory"],
            _scatter_plot__WEBPACK_IMPORTED_MODULE_1__["ScatterPlotSelectionFactory"],
            _activity_curves__WEBPACK_IMPORTED_MODULE_3__["ActivityCurvesSelectionFactory"],
            _observer_activity__WEBPACK_IMPORTED_MODULE_4__["ObserverActivitySelectionFactory"],
            _observation_frequency__WEBPACK_IMPORTED_MODULE_5__["ObservationFrequencySelectionFactory"],
            _clipped_wms_map__WEBPACK_IMPORTED_MODULE_6__["ClippedWmsMapSelectionFactory"],
            _map__WEBPACK_IMPORTED_MODULE_7__["MapSelectionFactory"],
            _agdd_time_series__WEBPACK_IMPORTED_MODULE_8__["AgddTimeSeriesSelectionFactory"]])
    ], VisualizationSelectionFactory);
    return VisualizationSelectionFactory;
}());



/***/ }),

/***/ "../npn/common/src/lib/visualizations/visualization.component.ts":
/*!***********************************************************************!*\
  !*** ../npn/common/src/lib/visualizations/visualization.component.ts ***!
  \***********************************************************************/
/*! exports provided: VisualizationComponent */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "VisualizationComponent", function() { return VisualizationComponent; });
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @angular/core */ "../../node_modules/@angular/core/fesm5/core.js");
/* harmony import */ var _vis_selection__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./vis-selection */ "../npn/common/src/lib/visualizations/vis-selection.ts");
/* harmony import */ var _scatter_plot__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./scatter-plot */ "../npn/common/src/lib/visualizations/scatter-plot/index.ts");
/* harmony import */ var _calendar__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./calendar */ "../npn/common/src/lib/visualizations/calendar/index.ts");
/* harmony import */ var _activity_curves__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./activity-curves */ "../npn/common/src/lib/visualizations/activity-curves/index.ts");
/* harmony import */ var _observer_activity__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./observer-activity */ "../npn/common/src/lib/visualizations/observer-activity/index.ts");
/* harmony import */ var _clipped_wms_map__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./clipped-wms-map */ "../npn/common/src/lib/visualizations/clipped-wms-map/index.ts");
/* harmony import */ var _observation_frequency__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./observation-frequency */ "../npn/common/src/lib/visualizations/observation-frequency/index.ts");
var __decorate = (undefined && undefined.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (undefined && undefined.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};








// the idea here is that with Angular 2/4 there is no $compile functionality
// so instead it's probably best to create an "all knowing" directive that
// includes all possible visualizations and picks which to render based on
// the type of selection it is given.
var VisualizationComponent = /** @class */ (function () {
    function VisualizationComponent() {
        this.thumbnail = false;
    }
    VisualizationComponent.prototype.ngOnInit = function () {
        if (this.selection instanceof _scatter_plot__WEBPACK_IMPORTED_MODULE_2__["ScatterPlotSelection"]) {
            this.scatter = this.selection;
        }
        else if (this.selection instanceof _calendar__WEBPACK_IMPORTED_MODULE_3__["CalendarSelection"]) {
            this.calendar = this.selection;
        }
        else if (this.selection instanceof _clipped_wms_map__WEBPACK_IMPORTED_MODULE_6__["ClippedWmsMapSelection"]) {
            this.clippedWmsMap = this.selection;
        }
        else if (this.selection instanceof _activity_curves__WEBPACK_IMPORTED_MODULE_4__["ActivityCurvesSelection"]) {
            this.activity = this.selection;
        }
        else if (this.selection instanceof _observer_activity__WEBPACK_IMPORTED_MODULE_5__["ObserverActivitySelection"]) {
            this.observer = this.selection;
        }
        else if (this.selection instanceof _observation_frequency__WEBPACK_IMPORTED_MODULE_7__["ObservationFrequencySelection"]) {
            this.observationFreq = this.selection;
        }
    };
    __decorate([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Input"])(),
        __metadata("design:type", Boolean)
    ], VisualizationComponent.prototype, "thumbnail", void 0);
    __decorate([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Input"])(),
        __metadata("design:type", _vis_selection__WEBPACK_IMPORTED_MODULE_1__["VisSelection"])
    ], VisualizationComponent.prototype, "selection", void 0);
    VisualizationComponent = __decorate([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Component"])({
            selector: 'npn-visualization',
            template: "\n    <scatter-plot *ngIf=\"scatter\" [selection]=\"scatter\" [thumbnail]=\"thumbnail\"></scatter-plot>\n    <calendar *ngIf=\"calendar\" [selection]=\"calendar\"  [thumbnail]=\"thumbnail\"></calendar>\n    <activity-curves *ngIf=\"activity\" [selection]=\"activity\"  [thumbnail]=\"thumbnail\"></activity-curves>\n    <observer-activity *ngIf=\"observer\" [selection]=\"observer\" [thumbnail]=\"thumbnail\"></observer-activity>\n    <observation-frequency *ngIf=\"observationFreq\" [selection]=\"observationFreq\" [thumbnail]=\"thumbnail\"></observation-frequency>\n    <clipped-wms-map *ngIf=\"clippedWmsMap\" [selection]=\"clippedWmsMap\" [thumbnail]=\"thumbnail\"></clipped-wms-map>\n    <mat-expansion-panel *ngIf=\"selection.debug\">\n        <mat-expansion-panel-header>\n            <mat-panel-title>Selection</mat-panel-title>\n        </mat-expansion-panel-header>\n        <pre>{{selection.external | json}}</pre>\n    </mat-expansion-panel>\n    ",
            styles: ["\n        pre {\n            font-family: \"courier new\";\n        }\n        mat-expansion-panel {\n            margin-top: 10px;\n        }\n    "]
        })
    ], VisualizationComponent);
    return VisualizationComponent;
}());



/***/ }),

/***/ "../npn/common/src/lib/visualizations/visualizations.module.ts":
/*!*********************************************************************!*\
  !*** ../npn/common/src/lib/visualizations/visualizations.module.ts ***!
  \*********************************************************************/
/*! exports provided: VisualizationsModule */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "VisualizationsModule", function() { return VisualizationsModule; });
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @angular/core */ "../../node_modules/@angular/core/fesm5/core.js");
/* harmony import */ var _angular_common__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @angular/common */ "../../node_modules/@angular/common/fesm5/common.js");
/* harmony import */ var _angular_forms__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @angular/forms */ "../../node_modules/@angular/forms/fesm5/forms.js");
/* harmony import */ var _fortawesome_angular_fontawesome__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @fortawesome/angular-fontawesome */ "../../node_modules/@fortawesome/angular-fontawesome/fesm5/angular-fontawesome.js");
/* harmony import */ var _visualization_download_component__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./visualization-download.component */ "../npn/common/src/lib/visualizations/visualization-download.component.ts");
/* harmony import */ var _scatter_plot__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./scatter-plot */ "../npn/common/src/lib/visualizations/scatter-plot/index.ts");
/* harmony import */ var _calendar__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./calendar */ "../npn/common/src/lib/visualizations/calendar/index.ts");
/* harmony import */ var _activity_curves__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./activity-curves */ "../npn/common/src/lib/visualizations/activity-curves/index.ts");
/* harmony import */ var _clipped_wms_map__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ./clipped-wms-map */ "../npn/common/src/lib/visualizations/clipped-wms-map/index.ts");
/* harmony import */ var _observer_activity__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ./observer-activity */ "../npn/common/src/lib/visualizations/observer-activity/index.ts");
/* harmony import */ var _observation_frequency__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ./observation-frequency */ "../npn/common/src/lib/visualizations/observation-frequency/index.ts");
/* harmony import */ var _map__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! ./map */ "../npn/common/src/lib/visualizations/map/index.ts");
/* harmony import */ var _agdd_time_series__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! ./agdd-time-series */ "../npn/common/src/lib/visualizations/agdd-time-series/index.ts");
/* harmony import */ var _visualization_component__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! ./visualization.component */ "../npn/common/src/lib/visualizations/visualization.component.ts");
/* harmony import */ var _visualization_selection_factory_service__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(/*! ./visualization-selection-factory.service */ "../npn/common/src/lib/visualizations/visualization-selection-factory.service.ts");
/* harmony import */ var _common_controls__WEBPACK_IMPORTED_MODULE_15__ = __webpack_require__(/*! ./common-controls */ "../npn/common/src/lib/visualizations/common-controls/index.ts");
/* harmony import */ var _angular_material__WEBPACK_IMPORTED_MODULE_16__ = __webpack_require__(/*! @angular/material */ "../../node_modules/@angular/material/esm5/material.es5.js");
/* harmony import */ var ng5_slider__WEBPACK_IMPORTED_MODULE_17__ = __webpack_require__(/*! ng5-slider */ "../../node_modules/ng5-slider/esm5/ng5-slider.js");
/* harmony import */ var _agm_core__WEBPACK_IMPORTED_MODULE_18__ = __webpack_require__(/*! @agm/core */ "../../node_modules/@agm/core/index.js");
/* harmony import */ var _angular_flex_layout__WEBPACK_IMPORTED_MODULE_19__ = __webpack_require__(/*! @angular/flex-layout */ "../../node_modules/@angular/flex-layout/esm5/flex-layout.es5.js");
/* harmony import */ var _common__WEBPACK_IMPORTED_MODULE_20__ = __webpack_require__(/*! ../common */ "../npn/common/src/lib/common/index.ts");
/* harmony import */ var _gridded__WEBPACK_IMPORTED_MODULE_21__ = __webpack_require__(/*! ../gridded */ "../npn/common/src/lib/gridded/index.ts");
var __decorate = (undefined && undefined.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
/*
NOTE: this is currently one BIG module that includes all the visualizations.
that's ok generally but it would be better to have each visualization be its own
module that deals with its own dependencies so that they could be imported individually
into an application (and simplify this module's imports).

see the commented out start of such a module in ./clipped-wms-map

probably should be an activity for a later date, or if time permits.
*/









//import {ClippedWmsMapVisModule} from './clipped-wms-map';













var VisualizationsModule = /** @class */ (function () {
    function VisualizationsModule() {
    }
    VisualizationsModule = __decorate([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["NgModule"])({
            imports: [
                /*BrowserAnimationsModule,
                BrowserModule,*/
                _angular_common__WEBPACK_IMPORTED_MODULE_1__["CommonModule"],
                _angular_forms__WEBPACK_IMPORTED_MODULE_2__["FormsModule"], _angular_forms__WEBPACK_IMPORTED_MODULE_2__["ReactiveFormsModule"],
                _fortawesome_angular_fontawesome__WEBPACK_IMPORTED_MODULE_3__["FontAwesomeModule"],
                _angular_material__WEBPACK_IMPORTED_MODULE_16__["MatFormFieldModule"], _angular_material__WEBPACK_IMPORTED_MODULE_16__["MatButtonModule"], _angular_material__WEBPACK_IMPORTED_MODULE_16__["MatCheckboxModule"], _angular_material__WEBPACK_IMPORTED_MODULE_16__["MatSelectModule"], _angular_material__WEBPACK_IMPORTED_MODULE_16__["MatRadioModule"],
                _angular_material__WEBPACK_IMPORTED_MODULE_16__["MatExpansionModule"], _angular_material__WEBPACK_IMPORTED_MODULE_16__["MatAutocompleteModule"],
                _angular_material__WEBPACK_IMPORTED_MODULE_16__["MatInputModule"], _angular_material__WEBPACK_IMPORTED_MODULE_16__["MatSliderModule"], _angular_material__WEBPACK_IMPORTED_MODULE_16__["MatProgressBarModule"], _angular_material__WEBPACK_IMPORTED_MODULE_16__["MatTooltipModule"], _angular_material__WEBPACK_IMPORTED_MODULE_16__["MatDatepickerModule"],
                _angular_material__WEBPACK_IMPORTED_MODULE_16__["MatNativeDateModule"],
                ng5_slider__WEBPACK_IMPORTED_MODULE_17__["Ng5SliderModule"],
                _agm_core__WEBPACK_IMPORTED_MODULE_18__["AgmCoreModule"],
                _angular_flex_layout__WEBPACK_IMPORTED_MODULE_19__["FlexLayoutModule"],
                _common__WEBPACK_IMPORTED_MODULE_20__["NpnCommonModule"], _gridded__WEBPACK_IMPORTED_MODULE_21__["NpnGriddedModule"]
            ],
            declarations: [
                //VisualizationBaseComponent,SvgVisualizationBaseComponent,MapVisualizationBaseComponent,
                _scatter_plot__WEBPACK_IMPORTED_MODULE_5__["ScatterPlotComponent"], _scatter_plot__WEBPACK_IMPORTED_MODULE_5__["ScatterPlotControls"],
                _calendar__WEBPACK_IMPORTED_MODULE_6__["CalendarComponent"], _calendar__WEBPACK_IMPORTED_MODULE_6__["CalendarControlComponent"],
                _activity_curves__WEBPACK_IMPORTED_MODULE_7__["ActivityCurvesComponent"], _activity_curves__WEBPACK_IMPORTED_MODULE_7__["CurveControlComponent"], _activity_curves__WEBPACK_IMPORTED_MODULE_7__["ActivityCurvesControlComponent"],
                _observer_activity__WEBPACK_IMPORTED_MODULE_9__["ObserverActivityComponent"], _observer_activity__WEBPACK_IMPORTED_MODULE_9__["ObserverActivityControl"],
                _observation_frequency__WEBPACK_IMPORTED_MODULE_10__["ObservationFrequencyComponent"], _observation_frequency__WEBPACK_IMPORTED_MODULE_10__["ObservationFrequencyControl"],
                _clipped_wms_map__WEBPACK_IMPORTED_MODULE_8__["ClippedWmsMapComponent"], _clipped_wms_map__WEBPACK_IMPORTED_MODULE_8__["ClippedWmsMapControl"], _clipped_wms_map__WEBPACK_IMPORTED_MODULE_8__["ClippedWmsMapStatisticsComponent"], _clipped_wms_map__WEBPACK_IMPORTED_MODULE_8__["ClippedStatValuePipe"] /* not exported */,
                _map__WEBPACK_IMPORTED_MODULE_11__["MapVisualizationComponent"],
                _visualization_download_component__WEBPACK_IMPORTED_MODULE_4__["VisualizationDownloadComponent"],
                _visualization_component__WEBPACK_IMPORTED_MODULE_13__["VisualizationComponent"],
                _common_controls__WEBPACK_IMPORTED_MODULE_15__["YearRangeInputComponent"],
                _common_controls__WEBPACK_IMPORTED_MODULE_15__["HigherSpeciesPhenophaseInputComponent"],
                _map__WEBPACK_IMPORTED_MODULE_11__["ExtentControl"], _map__WEBPACK_IMPORTED_MODULE_11__["ExtentDateControl"], _map__WEBPACK_IMPORTED_MODULE_11__["ExtentDoyControl"], _map__WEBPACK_IMPORTED_MODULE_11__["ExtentYearControl"],
                _map__WEBPACK_IMPORTED_MODULE_11__["GriddedRangeSliderControl"],
                _map__WEBPACK_IMPORTED_MODULE_11__["ConsolidatedMapLayerControlComponent"], _map__WEBPACK_IMPORTED_MODULE_11__["PestMapLayerControlComponent"], _map__WEBPACK_IMPORTED_MODULE_11__["TempAccumMapLayerControlComponent"], _map__WEBPACK_IMPORTED_MODULE_11__["SpringIndexMapLayerControlComponent"], _map__WEBPACK_IMPORTED_MODULE_11__["MapVisualizationMarkerIw"],
                _agdd_time_series__WEBPACK_IMPORTED_MODULE_12__["AgddTimeSeriesComponent"], _agdd_time_series__WEBPACK_IMPORTED_MODULE_12__["AgddTsMapLayerControl"]
            ],
            exports: [
                _scatter_plot__WEBPACK_IMPORTED_MODULE_5__["ScatterPlotComponent"],
                _scatter_plot__WEBPACK_IMPORTED_MODULE_5__["ScatterPlotControls"],
                _activity_curves__WEBPACK_IMPORTED_MODULE_7__["ActivityCurvesComponent"], _activity_curves__WEBPACK_IMPORTED_MODULE_7__["CurveControlComponent"], _activity_curves__WEBPACK_IMPORTED_MODULE_7__["ActivityCurvesControlComponent"],
                _observer_activity__WEBPACK_IMPORTED_MODULE_9__["ObserverActivityComponent"], _observer_activity__WEBPACK_IMPORTED_MODULE_9__["ObserverActivityControl"],
                _observation_frequency__WEBPACK_IMPORTED_MODULE_10__["ObservationFrequencyComponent"], _observation_frequency__WEBPACK_IMPORTED_MODULE_10__["ObservationFrequencyControl"],
                _calendar__WEBPACK_IMPORTED_MODULE_6__["CalendarComponent"], _calendar__WEBPACK_IMPORTED_MODULE_6__["CalendarControlComponent"],
                _clipped_wms_map__WEBPACK_IMPORTED_MODULE_8__["ClippedWmsMapComponent"], _clipped_wms_map__WEBPACK_IMPORTED_MODULE_8__["ClippedWmsMapControl"], _clipped_wms_map__WEBPACK_IMPORTED_MODULE_8__["ClippedWmsMapStatisticsComponent"],
                _map__WEBPACK_IMPORTED_MODULE_11__["MapVisualizationComponent"],
                _visualization_component__WEBPACK_IMPORTED_MODULE_13__["VisualizationComponent"],
                _common_controls__WEBPACK_IMPORTED_MODULE_15__["HigherSpeciesPhenophaseInputComponent"],
                _common_controls__WEBPACK_IMPORTED_MODULE_15__["YearRangeInputComponent"],
                _map__WEBPACK_IMPORTED_MODULE_11__["ExtentControl"],
                _map__WEBPACK_IMPORTED_MODULE_11__["GriddedRangeSliderControl"],
                _map__WEBPACK_IMPORTED_MODULE_11__["ConsolidatedMapLayerControlComponent"],
                _agdd_time_series__WEBPACK_IMPORTED_MODULE_12__["AgddTimeSeriesComponent"], _agdd_time_series__WEBPACK_IMPORTED_MODULE_12__["AgddTsMapLayerControl"]
            ],
            providers: [
                _angular_common__WEBPACK_IMPORTED_MODULE_1__["DatePipe"],
                // can inject a specific type of factory
                _scatter_plot__WEBPACK_IMPORTED_MODULE_5__["ScatterPlotSelectionFactory"],
                _calendar__WEBPACK_IMPORTED_MODULE_6__["CalendarSelectionFactory"],
                _clipped_wms_map__WEBPACK_IMPORTED_MODULE_8__["ClippedWmsMapSelectionFactory"],
                _activity_curves__WEBPACK_IMPORTED_MODULE_7__["ActivityCurvesSelectionFactory"],
                _observer_activity__WEBPACK_IMPORTED_MODULE_9__["ObserverActivitySelectionFactory"],
                _observation_frequency__WEBPACK_IMPORTED_MODULE_10__["ObservationFrequencySelectionFactory"],
                _map__WEBPACK_IMPORTED_MODULE_11__["MapSelectionFactory"],
                _agdd_time_series__WEBPACK_IMPORTED_MODULE_12__["AgddTimeSeriesSelectionFactory"],
                // OR one factory to rule them all
                _visualization_selection_factory_service__WEBPACK_IMPORTED_MODULE_14__["VisualizationSelectionFactory"],
                { provide: _angular_material__WEBPACK_IMPORTED_MODULE_16__["MAT_DATE_FORMATS"], useValue: {
                        parse: { dateInput: null },
                        display: {
                            dateInput: {
                                year: "numeric",
                                month: "long",
                                day: "numeric"
                            },
                            monthYearLabel: {
                                year: "numeric",
                                month: "long"
                            },
                            dateA11yLabel: {
                                year: "numeric",
                                month: "long",
                                day: "numeric"
                            },
                            monthYearA11yLabel: {
                                year: "numeric",
                                month: "long"
                            }
                        }
                    }
                }
            ]
        })
    ], VisualizationsModule);
    return VisualizationsModule;
}());



/***/ }),

/***/ "./$$_lazy_route_resource lazy recursive":
/*!******************************************************!*\
  !*** ./$$_lazy_route_resource lazy namespace object ***!
  \******************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

function webpackEmptyAsyncContext(req) {
	// Here Promise.resolve().then() is used instead of new Promise() to prevent
	// uncaught exception popping up in devtools
	return Promise.resolve().then(function() {
		var e = new Error("Cannot find module '" + req + "'");
		e.code = 'MODULE_NOT_FOUND';
		throw e;
	});
}
webpackEmptyAsyncContext.keys = function() { return []; };
webpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;
module.exports = webpackEmptyAsyncContext;
webpackEmptyAsyncContext.id = "./$$_lazy_route_resource lazy recursive";

/***/ }),

/***/ "./src/app/app.module.ts":
/*!*******************************!*\
  !*** ./src/app/app.module.ts ***!
  \*******************************/
/*! exports provided: baseHrefFactory, npnConfigurationFactory, AppModule */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "baseHrefFactory", function() { return baseHrefFactory; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "npnConfigurationFactory", function() { return npnConfigurationFactory; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "AppModule", function() { return AppModule; });
/* harmony import */ var _angular_platform_browser__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @angular/platform-browser */ "../../node_modules/@angular/platform-browser/fesm5/platform-browser.js");
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @angular/core */ "../../node_modules/@angular/core/fesm5/core.js");
/* harmony import */ var _angular_common_http__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @angular/common/http */ "../../node_modules/@angular/common/fesm5/http.js");
/* harmony import */ var _npn_common__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @npn/common */ "../npn/common/src/lib/index.ts");
/* harmony import */ var _focal_species_component__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./focal-species.component */ "./src/app/focal-species.component.ts");
/* harmony import */ var _findings_component__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./findings.component */ "./src/app/findings.component.ts");
/* harmony import */ var _resources_component__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./resources.component */ "./src/app/resources.component.ts");
/* harmony import */ var _fws_dashboard_component__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./fws-dashboard.component */ "./src/app/fws-dashboard.component.ts");
/* harmony import */ var _phenology_trail_partners_component__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ./phenology-trail-partners.component */ "./src/app/phenology-trail-partners.component.ts");
/* harmony import */ var _new_visualization_dialog_component__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ./new-visualization-dialog.component */ "./src/app/new-visualization-dialog.component.ts");
/* harmony import */ var _refuge_visualization_scope_selection_component__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ./refuge-visualization-scope-selection.component */ "./src/app/refuge-visualization-scope-selection.component.ts");
/* harmony import */ var _pheno_trail_visualization_scope_selection_component__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! ./pheno-trail-visualization-scope-selection.component */ "./src/app/pheno-trail-visualization-scope-selection.component.ts");
/* harmony import */ var _pheno_trail_visualization_scope_groups_component__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! ./pheno-trail-visualization-scope-groups.component */ "./src/app/pheno-trail-visualization-scope-groups.component.ts");
/* harmony import */ var _pheno_trail_visualization_scope_group_component__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! ./pheno-trail-visualization-scope-group.component */ "./src/app/pheno-trail-visualization-scope-group.component.ts");
/* harmony import */ var _pheno_trail_visualization_scope_station_groups_component__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(/*! ./pheno-trail-visualization-scope-station-groups.component */ "./src/app/pheno-trail-visualization-scope-station-groups.component.ts");
/* harmony import */ var _entity_service__WEBPACK_IMPORTED_MODULE_15__ = __webpack_require__(/*! ./entity.service */ "./src/app/entity.service.ts");
/* harmony import */ var _angular_forms__WEBPACK_IMPORTED_MODULE_16__ = __webpack_require__(/*! @angular/forms */ "../../node_modules/@angular/forms/fesm5/forms.js");
/* harmony import */ var _angular_platform_browser_animations__WEBPACK_IMPORTED_MODULE_17__ = __webpack_require__(/*! @angular/platform-browser/animations */ "../../node_modules/@angular/platform-browser/fesm5/animations.js");
/* harmony import */ var _angular_material__WEBPACK_IMPORTED_MODULE_18__ = __webpack_require__(/*! @angular/material */ "../../node_modules/@angular/material/esm5/material.es5.js");
/* harmony import */ var _angular_flex_layout__WEBPACK_IMPORTED_MODULE_19__ = __webpack_require__(/*! @angular/flex-layout */ "../../node_modules/@angular/flex-layout/esm5/flex-layout.es5.js");
/* harmony import */ var _fortawesome_angular_fontawesome__WEBPACK_IMPORTED_MODULE_20__ = __webpack_require__(/*! @fortawesome/angular-fontawesome */ "../../node_modules/@fortawesome/angular-fontawesome/fesm5/angular-fontawesome.js");
/* harmony import */ var _environments_environment__WEBPACK_IMPORTED_MODULE_21__ = __webpack_require__(/*! ../environments/environment */ "./src/environments/environment.ts");
/* harmony import */ var _agm_core__WEBPACK_IMPORTED_MODULE_22__ = __webpack_require__(/*! @agm/core */ "../../node_modules/@agm/core/index.js");
/* harmony import */ var ng2_dnd__WEBPACK_IMPORTED_MODULE_23__ = __webpack_require__(/*! ng2-dnd */ "../../node_modules/ng2-dnd/index.js");
var __decorate = (undefined && undefined.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
























function baseHrefFactory() {
    return window['npn_base_href'];
}
function npnConfigurationFactory() {
    return window['npn_configuration'];
}
var AppModule = /** @class */ (function () {
    function AppModule() {
    }
    AppModule = __decorate([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["NgModule"])({
            declarations: [
                _fws_dashboard_component__WEBPACK_IMPORTED_MODULE_7__["FwsDashboardComponent"],
                _phenology_trail_partners_component__WEBPACK_IMPORTED_MODULE_8__["PhenologyTrailPartnersComponent"],
                _focal_species_component__WEBPACK_IMPORTED_MODULE_4__["FocalSpeciesComponent"],
                _findings_component__WEBPACK_IMPORTED_MODULE_5__["FindingsComponent"],
                _resources_component__WEBPACK_IMPORTED_MODULE_6__["ResourcesComponent"],
                _new_visualization_dialog_component__WEBPACK_IMPORTED_MODULE_9__["NewVisualizationBuilderComponent"],
                _refuge_visualization_scope_selection_component__WEBPACK_IMPORTED_MODULE_10__["RefugeVisualizationScopeSelectionComponent"],
                _pheno_trail_visualization_scope_selection_component__WEBPACK_IMPORTED_MODULE_11__["PhenoTrailVisualizationScopeSelectionComponent"],
                _pheno_trail_visualization_scope_groups_component__WEBPACK_IMPORTED_MODULE_12__["PhenoTrailVisualizationScopeGroupsComponent"],
                _pheno_trail_visualization_scope_group_component__WEBPACK_IMPORTED_MODULE_13__["PhenoTrailVisualizationScopeGroupComponent"],
                _pheno_trail_visualization_scope_station_groups_component__WEBPACK_IMPORTED_MODULE_14__["PhenoTrailVisualizationScopeStationGroupsComponent"],
                _new_visualization_dialog_component__WEBPACK_IMPORTED_MODULE_9__["NewVisualizationDialogComponent"],
                _resources_component__WEBPACK_IMPORTED_MODULE_6__["SafeHtmlPipe"]
            ],
            entryComponents: [
                _new_visualization_dialog_component__WEBPACK_IMPORTED_MODULE_9__["NewVisualizationDialogComponent"]
            ],
            imports: [
                _angular_platform_browser_animations__WEBPACK_IMPORTED_MODULE_17__["BrowserAnimationsModule"],
                _angular_platform_browser__WEBPACK_IMPORTED_MODULE_0__["BrowserModule"],
                _npn_common__WEBPACK_IMPORTED_MODULE_3__["NpnLibModule"],
                _npn_common__WEBPACK_IMPORTED_MODULE_3__["VisualizationsModule"],
                _npn_common__WEBPACK_IMPORTED_MODULE_3__["NpnCommonModule"],
                _angular_common_http__WEBPACK_IMPORTED_MODULE_2__["HttpClientModule"],
                _angular_forms__WEBPACK_IMPORTED_MODULE_16__["FormsModule"], _angular_forms__WEBPACK_IMPORTED_MODULE_16__["ReactiveFormsModule"],
                _fortawesome_angular_fontawesome__WEBPACK_IMPORTED_MODULE_20__["FontAwesomeModule"], _angular_material__WEBPACK_IMPORTED_MODULE_18__["MatIconModule"],
                _angular_material__WEBPACK_IMPORTED_MODULE_18__["MatCheckboxModule"], _angular_material__WEBPACK_IMPORTED_MODULE_18__["MatGridListModule"],
                _angular_material__WEBPACK_IMPORTED_MODULE_18__["MatCardModule"], _angular_material__WEBPACK_IMPORTED_MODULE_18__["MatListModule"],
                _angular_material__WEBPACK_IMPORTED_MODULE_18__["MatTooltipModule"], _angular_material__WEBPACK_IMPORTED_MODULE_18__["MatSnackBarModule"],
                _angular_material__WEBPACK_IMPORTED_MODULE_18__["MatDialogModule"], _angular_material__WEBPACK_IMPORTED_MODULE_18__["MatStepperModule"],
                _angular_material__WEBPACK_IMPORTED_MODULE_18__["MatButtonModule"], _angular_material__WEBPACK_IMPORTED_MODULE_18__["MatRadioModule"],
                _angular_material__WEBPACK_IMPORTED_MODULE_18__["MatProgressSpinnerModule"], _angular_material__WEBPACK_IMPORTED_MODULE_18__["MatSelectModule"],
                _angular_material__WEBPACK_IMPORTED_MODULE_18__["MatInputModule"], _angular_material__WEBPACK_IMPORTED_MODULE_18__["MatFormFieldModule"], _angular_material__WEBPACK_IMPORTED_MODULE_18__["MatTabsModule"], _angular_material__WEBPACK_IMPORTED_MODULE_18__["MatButtonToggleModule"],
                _angular_flex_layout__WEBPACK_IMPORTED_MODULE_19__["FlexLayoutModule"],
                _agm_core__WEBPACK_IMPORTED_MODULE_22__["AgmCoreModule"].forRoot({
                    apiKey: _environments_environment__WEBPACK_IMPORTED_MODULE_21__["environment"].googleMapsApiKey
                }),
                ng2_dnd__WEBPACK_IMPORTED_MODULE_23__["DndModule"].forRoot()
            ],
            bootstrap: [_fws_dashboard_component__WEBPACK_IMPORTED_MODULE_7__["FwsDashboardComponent"]],
            providers: [
                _entity_service__WEBPACK_IMPORTED_MODULE_15__["EntityService"],
                { provide: _npn_common__WEBPACK_IMPORTED_MODULE_3__["NPN_BASE_HREF"], useFactory: baseHrefFactory },
                { provide: _npn_common__WEBPACK_IMPORTED_MODULE_3__["NPN_CONFIGURATION"], useFactory: npnConfigurationFactory }
            ]
        })
    ], AppModule);
    return AppModule;
}());



/***/ }),

/***/ "./src/app/entity.service.ts":
/*!***********************************!*\
  !*** ./src/app/entity.service.ts ***!
  \***********************************/
/*! exports provided: EntityBase, Refuge, PhenologyTrail, DashboardMode, DashboardModeState, EntityService */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "EntityBase", function() { return EntityBase; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "Refuge", function() { return Refuge; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "PhenologyTrail", function() { return PhenologyTrail; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "DashboardMode", function() { return DashboardMode; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "DashboardModeState", function() { return DashboardModeState; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "EntityService", function() { return EntityService; });
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @angular/core */ "../../node_modules/@angular/core/fesm5/core.js");
/* harmony import */ var _angular_common_http__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @angular/common/http */ "../../node_modules/@angular/common/fesm5/http.js");
/* harmony import */ var _npn_common__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @npn/common */ "../npn/common/src/lib/index.ts");
var __extends = (undefined && undefined.__extends) || (function () {
    var extendStatics = Object.setPrototypeOf ||
        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __assign = (undefined && undefined.__assign) || Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
        s = arguments[i];
        for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
            t[p] = s[p];
    }
    return t;
};
var __decorate = (undefined && undefined.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (undefined && undefined.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};



// using class instead of interface so can use instanceof
var EntityBase = /** @class */ (function () {
    function EntityBase() {
    }
    return EntityBase;
}());

var Refuge = /** @class */ (function (_super) {
    __extends(Refuge, _super);
    function Refuge() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    return Refuge;
}(EntityBase));

var PhenologyTrail = /** @class */ (function (_super) {
    __extends(PhenologyTrail, _super);
    function PhenologyTrail() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    return PhenologyTrail;
}(EntityBase));

// this means that the app can no longer function outside of the context of Drupal, period.
var API_ROOT = '/api';
var DashboardMode;
(function (DashboardMode) {
    DashboardMode["REFUGE"] = "refuge";
    DashboardMode["PHENO_TRAIL"] = "phenology_trail";
})(DashboardMode || (DashboardMode = {}));
;
var DashboardModeState = (function () {
    var mode = DashboardMode.REFUGE;
    return {
        get: function () { return mode; },
        set: function (m) { return mode = m; },
    };
})();
var EntityService = /** @class */ (function () {
    function EntityService(http, cacheService, selectionFactory) {
        this.http = http;
        this.cacheService = cacheService;
        this.selectionFactory = selectionFactory;
    }
    EntityService.prototype.parseSelections = function (json) {
        var selections = this.selectionFactory.newSelections(JSON.parse(json));
        /*
        console.log('JSON',json);
        console.log('SELECTIONS',selections);
        */
        return selections;
    };
    EntityService.prototype.apiUrl = function (entity_id) {
        return API_ROOT + "/" + DashboardModeState.get() + "/" + entity_id;
    };
    EntityService.prototype.castEntity = function (entityId, apiResult) {
        // actually constructing an instance so that other classes can use instanceof
        var entity;
        switch (DashboardModeState.get()) {
            case DashboardMode.REFUGE:
                entity = new Refuge();
                break;
            case DashboardMode.PHENO_TRAIL:
                entity = new PhenologyTrail();
                break;
            default:
                throw new Error("Unsupported DASHBOARD_MODE \"" + DashboardModeState.get() + "\"");
        }
        Object.assign(entity, apiResult);
        entity.id = entityId;
        var selections = (entity.selections || []).map(function (s) { return JSON.parse(s); });
        entity.selections = this.selectionFactory.newSelections(selections);
        return entity;
    };
    EntityService.prototype.get = function (entity_id) {
        var _this = this;
        return this.http.get(this.apiUrl(entity_id))
            .toPromise()
            .then(function (response) { return _this.castEntity(entity_id, response); });
    };
    EntityService.prototype.save = function (entity) {
        var _this = this;
        var r = __assign({}, entity);
        r.selections = (r.selections || []).map(function (s) { return JSON.stringify(s.external); });
        var json = JSON.stringify(r);
        console.log("JSON " + json);
        return this.http.put(this.apiUrl(entity.id), json, { headers: { 'Content-Type': 'application/json' } })
            .toPromise()
            .then(function (response) { return _this.castEntity(entity.id, response); });
    };
    EntityService = __decorate([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Injectable"])(),
        __metadata("design:paramtypes", [_angular_common_http__WEBPACK_IMPORTED_MODULE_1__["HttpClient"],
            _npn_common__WEBPACK_IMPORTED_MODULE_2__["CacheService"],
            _npn_common__WEBPACK_IMPORTED_MODULE_2__["VisualizationSelectionFactory"]])
    ], EntityService);
    return EntityService;
}());



/***/ }),

/***/ "./src/app/findings.component.scss":
/*!*****************************************!*\
  !*** ./src/app/findings.component.scss ***!
  \*****************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = ":host {\n  position: relative;\n  display: block; }\n  :host.adminMode {\n    /* if were not in another container would simply be $admin-width\n           but the page content has its own padding so for now just picking\n           a value that works */\n    padding-left: 275px; }\n  @media (min-width: 992px) {\n      :host.adminMode {\n        padding-left: 215px; } }\n  @media (min-width: 1200px) {\n      :host.adminMode {\n        padding-left: 200px; } }\n  .visualizations {\n  display: flex;\n  flex-flow: row wrap; }\n  .visualizations mat-card {\n    margin: 10px auto;\n    padding: 10px;\n    flex: 0 1 95%;\n    /* a non flex layout attempt\n        box-sizing: border-box;\n        width: 100%;\n        padding: 2px;\n        margin: 10px 0px;\n        display: block;\n        @media(min-width: $screen-sm-min) {\n            padding: 10px;\n        }\n        @media(min-width: $screen-md-min) {\n            padding: 20px;\n            display: inline-block;\n            width: 48%;\n            margin: 5px;\n        }\n        @media(min-width: $screen-lg-min) {\n            width: 30%;\n        }\n\n        &:first-of-type {\n            @media(min-width: $screen-md-min) {\n                margin: auto;\n                display: block;\n                width: 95%;\n            }\n        }*/\n    vertical-align: top;\n    position: relative;\n    overflow: hidden; }\n  @media (min-width: 992px) {\n      .visualizations mat-card {\n        padding: 15px; } }\n  @media (min-width: 1200px) {\n      .visualizations mat-card {\n        padding: 20px; } }\n  @media (min-width: 992px) {\n      .visualizations mat-card {\n        flex: 0 1 44%; } }\n  @media (min-width: 1200px) {\n      .visualizations mat-card {\n        flex: 0 1 28%; } }\n  .visualizations mat-card:first-of-type {\n      flex: 0 1 95%;\n      /* attempt to avoid jumpiness when switching the active visualization\n               numbers are rough based widths at different device screen sizes */\n      min-height: 200px; }\n  @media (min-width: 992px) {\n        .visualizations mat-card:first-of-type {\n          min-height: 400px; } }\n  @media (min-width: 1200px) {\n        .visualizations mat-card:first-of-type {\n          min-height: 500px; } }\n  .visualizations mat-card .visualization-title {\n      font-size: 2em;\n      margin-bottom: 10px;\n      text-align: center; }\n  .visualizations mat-card .visualization-description {\n      color: #aaa;\n      font-size: 0.8em;\n      text-align: center; }\n  .visualizations mat-card > .cover {\n      position: absolute;\n      top: 0;\n      left: 0;\n      width: 100%;\n      height: 100%;\n      z-index: 2;\n      text-align: center;\n      background-color: rgba(0, 0, 0, 0.05);\n      border: 1px solid rgba(0, 0, 0, 0.05); }\n  .visualizations mat-card > .cover:hover {\n        cursor: pointer;\n        background-color: transparent;\n        border: 1px solid #aaa; }\n  .visualizations mat-card > .cover .visualization-title {\n        font-size: 1.3em;\n        color: #fff;\n        text-shadow: 1px 1px 2px #000;\n        position: absolute;\n        top: 0;\n        left: 50%;\n        -webkit-transform: translate(-50%, 0%);\n                transform: translate(-50%, 0%);\n        background-color: rgba(0, 0, 0, 0.25);\n        width: 100%;\n        margin: 0px;\n        padding: 10px 0px; }\n  .visualizations mat-card.new-vis-placeholder {\n      height: 200px;\n      background-color: #eee; }\n  .visualizations mat-card.new-vis-placeholder:before {\n        content: 'Drop New Visualization Here';\n        position: absolute;\n        top: 50%;\n        left: 50%;\n        -webkit-transform: translate(-50%, -50%);\n                transform: translate(-50%, -50%); }\n  .visualizations mat-card.new-vis-placeholder.look-at-me {\n        border: 2px solid yellow;\n        box-shadow: 0 0 10px yellow;\n        outline: none;\n        -webkit-animation-name: wiggle;\n        -ms-animation-name: wiggle;\n        -ms-animation-duration: 500ms;\n        -webkit-animation-duration: 500ms;\n        -webkit-animation-iteration-count: 1;\n        -ms-animation-iteration-count: 1;\n        -webkit-animation-timing-function: ease-in-out;\n        -ms-animation-timing-function: ease-in-out; }\n  mat-list.new-vis-list {\n  position: fixed;\n  top: 0px;\n  left: 0px;\n  padding: 65px 0px 100px 0;\n  width: 320px;\n  /* if the scrollbar ever kicks in it won't go away\n    overflow-y:auto;\n    */\n  background-color: rgba(0, 0, 0, 0.25);\n  z-index: 5000;\n  height: 100vh;\n  display: flex;\n  flex-direction: row;\n  flex-wrap: wrap;\n  justify-content: flex-start;\n  align-items: flex-start;\n  align-content: flex-start; }\n  @media (max-height: 600px) {\n    mat-list.new-vis-list {\n      width: 270px; } }\n  @media (max-height: 550px) {\n    mat-list.new-vis-list {\n      width: 220px; } }\n  mat-list.new-vis-list > div {\n    color: #fff; }\n  mat-list.new-vis-list > div:before, mat-list.new-vis-list > div:after {\n      content: \" \";\n      display: table; }\n  mat-list.new-vis-list > div:after {\n      clear: both; }\n  mat-list.new-vis-list > div button.toggle-admin-mode {\n      float: right; }\n  mat-list.new-vis-list > div > p {\n      background-color: rgba(0, 0, 0, 0.5);\n      padding: 5px;\n      clear: right;\n      line-height: 1.5em; }\n  @media (max-height: 600px) {\n        mat-list.new-vis-list > div > p {\n          font-size: 0.9em; } }\n  @media (max-height: 550px) {\n        mat-list.new-vis-list > div > p {\n          font-size: 0.8em; } }\n  mat-list.new-vis-list mat-list-item {\n    width: 150px;\n    margin-right: 5px; }\n  @media (max-height: 600px) {\n      mat-list.new-vis-list mat-list-item {\n        width: 125px; } }\n  @media (max-height: 550px) {\n      mat-list.new-vis-list mat-list-item {\n        width: 100px; } }\n  mat-list.new-vis-list mat-list-item:nth-of-type(odd) {\n      margin-left: 5px; }\n  mat-list.new-vis-list mat-list-item.vis-template {\n      border: 1px dotted black;\n      margin-bottom: 10px;\n      height: auto; }\n  mat-list.new-vis-list mat-list-item.vis-template .mat-list-item-content {\n        height: auto;\n        padding: 0px; }\n  mat-list.new-vis-list mat-list-item.vis-template .mat-list-item-content img {\n          width: 100%; }\n  mat-list.new-vis-list mat-list-item.trash, mat-list.new-vis-list mat-list-item.save {\n      position: relative;\n      margin-top: 20px; }\n  mat-list.new-vis-list mat-list-item.trash:before {\n      font-family: 'FontAwesome';\n      content: '\\f1f8';\n      font-size: 2em;\n      position: absolute;\n      top: 50%;\n      left: 50%;\n      -webkit-transform: translate(-50%, -50%);\n              transform: translate(-50%, -50%); }\n  mat-list.new-vis-list mat-list-item.save button {\n      font-size: 2em;\n      position: absolute;\n      top: 50%;\n      left: 50%;\n      -webkit-transform: translate(-50%, -50%);\n              transform: translate(-50%, -50%); }\n  .admin-toggle:before {\n  font-family: 'FontAwesome';\n  content: '\\f073';\n  margin-right: 5px; }\n  @-webkit-keyframes wiggle {\n  0% {\n    -webkit-transform: rotate(5deg); }\n  25% {\n    -webkit-transform: rotate(-5deg); }\n  50% {\n    -webkit-transform: rotate(10deg); }\n  75% {\n    -webkit-transform: rotate(-2.5deg); }\n  100% {\n    -webkit-transform: rotate(0deg); } }\n  @keyframes wiggle {\n  0% {\n    -webkit-transform: rotate(5deg);\n            transform: rotate(5deg); }\n  25% {\n    -webkit-transform: rotate(-5deg);\n            transform: rotate(-5deg); }\n  50% {\n    -webkit-transform: rotate(10deg);\n            transform: rotate(10deg); }\n  75% {\n    -webkit-transform: rotate(-2.5deg);\n            transform: rotate(-2.5deg); }\n  100% {\n    -webkit-transform: rotate(0deg);\n            transform: rotate(0deg); } }\n"

/***/ }),

/***/ "./src/app/findings.component.ts":
/*!***************************************!*\
  !*** ./src/app/findings.component.ts ***!
  \***************************************/
/*! exports provided: FindingsComponent */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "FindingsComponent", function() { return FindingsComponent; });
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @angular/core */ "../../node_modules/@angular/core/fesm5/core.js");
/* harmony import */ var _angular_material__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @angular/material */ "../../node_modules/@angular/material/esm5/material.es5.js");
/* harmony import */ var _angular_flex_layout__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @angular/flex-layout */ "../../node_modules/@angular/flex-layout/esm5/flex-layout.es5.js");
/* harmony import */ var _entity_service__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./entity.service */ "./src/app/entity.service.ts");
/* harmony import */ var _npn_common__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @npn/common */ "../npn/common/src/lib/index.ts");
/* harmony import */ var _new_visualization_dialog_component__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./new-visualization-dialog.component */ "./src/app/new-visualization-dialog.component.ts");
/* harmony import */ var jquery__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! jquery */ "../../node_modules/jquery/dist/jquery.js");
/* harmony import */ var jquery__WEBPACK_IMPORTED_MODULE_6___default = /*#__PURE__*/__webpack_require__.n(jquery__WEBPACK_IMPORTED_MODULE_6__);
var __assign = (undefined && undefined.__assign) || Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
        s = arguments[i];
        for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
            t[p] = s[p];
    }
    return t;
};
var __decorate = (undefined && undefined.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (undefined && undefined.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var __param = (undefined && undefined.__param) || function (paramIndex, decorator) {
    return function (target, key) { decorator(target, key, paramIndex); }
};







var VIS_TEMPLATES = [{
        $class: 'ActivityCurvesSelection',
        $thumbnail: 'assets/activity-curves.png',
        $tooltip: 'Activity Curves'
    }, {
        $class: 'ScatterPlotSelection',
        $thumbnail: 'assets/scatter-plot.png',
        $tooltip: 'Scatter Plot'
    }, {
        $class: 'CalendarSelection',
        $thumbnail: 'assets/calendar.png',
        $tooltip: 'Calendar'
    }, {
        $class: 'ObserverActivitySelection',
        $thumbnail: 'assets/observer-activity.png',
        $tooltip: 'Observer Activity Metrics'
    }, {
        $class: 'ClippedWmsMapSelection',
        $thumbnail: 'assets/clipped-wms-map.png',
        $tooltip: 'Map'
    }, {
        $class: 'ObservationFrequencySelection',
        $thumbnail: 'assets/observation-frequency.png',
        $tooltip: 'Observation Frequency'
    }];
var FindingsComponent = /** @class */ (function () {
    function FindingsComponent(entityService, selectionFactory, dialog, snackBar, media, baseHref) {
        var _this = this;
        this.entityService = entityService;
        this.selectionFactory = selectionFactory;
        this.dialog = dialog;
        this.snackBar = snackBar;
        this.media = media;
        this.baseHref = baseHref;
        this.userIsAdmin = false;
        this.isTouchDevice = false;
        this.trash = [];
        this.adminMode = false;
        this.maxVisualizations = 10;
        this.lookAtVisDrop = false;
        this.mobileMode = false;
        this.DashboardMode = _entity_service__WEBPACK_IMPORTED_MODULE_3__["DashboardMode"];
        this.media.subscribe(function (mediaChange) {
            _this.mobileMode = mediaChange.mqAlias === 'xs' || mediaChange.mqAlias === 'sm';
        });
        // test if the device supports touch
        var elm = document.createElement('div');
        elm.setAttribute('ontouchstart', 'return;');
        this.isTouchDevice = typeof (elm.ontouchstart) === 'function';
        if (this.isTouchDevice) {
            console.warn('Touch device detected any administrative functionality will be disabled.');
        }
    }
    FindingsComponent.prototype.ngOnInit = function () {
        this.visTemplates = (_entity_service__WEBPACK_IMPORTED_MODULE_3__["DashboardModeState"].get() === _entity_service__WEBPACK_IMPORTED_MODULE_3__["DashboardMode"].PHENO_TRAIL)
            ? VIS_TEMPLATES.filter(function (t) { return t.$class !== 'ClippedWmsMapSelection'; })
            : VIS_TEMPLATES;
    };
    FindingsComponent.prototype.toggleAdminMode = function () {
        this.adminMode = !this.adminMode;
        this.resizeAllAfterDelay();
        jquery__WEBPACK_IMPORTED_MODULE_6__('body').toggleClass('fws-customize-mode');
    };
    Object.defineProperty(FindingsComponent.prototype, "entity", {
        get: function () {
            return this._entity;
        },
        set: function (entity) {
            this._entity = entity;
            entity.selections.forEach(function (s, i) {
                //s.debug = (i === 0);
                s.update();
            });
            this.guidOrder = entity.selections.map(function (s) { return s.guid; });
        },
        enumerable: true,
        configurable: true
    });
    FindingsComponent.prototype.resizeAll = function () {
        this.entity.selections.forEach(function (s, i) {
            //s.debug = i === 0;
            s.resize();
        });
    };
    FindingsComponent.prototype.resizeAllAfterDelay = function () {
        var _this = this;
        setTimeout(function () {
            _this.resizeAll();
        });
    };
    FindingsComponent.prototype.makeCurrent = function (s) {
        var selections = this.entity.selections, index = selections.indexOf(s);
        if (index) {
            console.log('MAKE CURRENT', index);
            // swap the currently selected with the newly selected
            selections[index] = selections[0];
            selections[0] = s;
            this.reorderVisualizations();
        }
    };
    FindingsComponent.prototype.visDialog = function (s, edit) {
        return this.dialog.open(_new_visualization_dialog_component__WEBPACK_IMPORTED_MODULE_5__["NewVisualizationDialogComponent"], {
            height: '90vh',
            width: '90vw',
            disableClose: true,
            data: {
                entity: this.entity,
                selection: s,
                edit: edit
            }
        });
    };
    FindingsComponent.prototype.addVisualization = function ($event) {
        var _this = this;
        console.log('add.$event', $event);
        // most selections will simply ignore $entity but some like observer activity
        // metrics, with the introduction of the pheno trail work, need the overall
        // $entity to decide how to label legend items when not performing grouping
        var $entity = this.entity instanceof _entity_service__WEBPACK_IMPORTED_MODULE_3__["Refuge"]
            ? { title: this.entity.title, network_id: this.entity.network_id }
            : { title: this.entity.title, network_ids: this.entity.network_ids };
        var s = this.selectionFactory.newSelection(__assign({ $entity: $entity }, $event.dragData));
        console.log('add.selection', s);
        var dialogRef = this.visDialog(s);
        dialogRef.afterClosed().subscribe(function (selection) {
            if (selection) {
                _this.entity.selections.push(selection);
                _this.save();
            }
        });
    };
    FindingsComponent.prototype.editVisualization = function (s, $event) {
        var _this = this;
        $event.stopPropagation();
        var index = this.entity.selections.indexOf(s);
        console.log("edit.selection[" + index + "]", s);
        var copy = this.selectionFactory.cloneSelection(s), dialogRef = this.visDialog(copy, true);
        dialogRef.afterClosed().subscribe(function (selection) {
            if (selection) {
                // replace
                _this.entity.selections[index] = selection;
                _this.save();
            }
        });
    };
    FindingsComponent.prototype.isReordered = function () {
        var _this = this;
        if (this.guidOrder && this.guidOrder.length === this.entity.selections.length) {
            return this.entity.selections.reduce(function (reordered, s, i) {
                return reordered || (s.guid !== _this.guidOrder[i] ? true : false);
            }, false);
        }
        return false;
    };
    FindingsComponent.prototype.reorderVisualizations = function () {
        var _this = this;
        setTimeout(function () {
            _this.resizeAll();
        });
    };
    FindingsComponent.prototype.save = function (noSnackBar) {
        var _this = this;
        this.entityService.save(this.entity)
            .then(function (entity) {
            _this.entity = entity;
            if (!noSnackBar) {
                _this.snackBar.open('Visualizations saved', null, { duration: 2000 });
            }
        })
            .catch(function (e) { return _this.handleError(e); });
    };
    // capture where a selection was at drag start so it can be restored to its position
    // for undo trash
    FindingsComponent.prototype.dragStart = function ($event) {
        // this seems inconstent but it seems that $event in the onDragStart/End
        // events is the dragData, unlike onDragSuccess
        this.dragStartIndex = $event ? this.entity.selections.indexOf($event) : undefined;
        console.log('dragStart.$event', $event, this.dragStartIndex);
    };
    FindingsComponent.prototype.trashVisualization = function ($event) {
        var _this = this;
        console.log('trash.$event', $event);
        var selection = $event.dragData, index = this.entity.selections.indexOf(selection);
        console.log("trashing selection " + index);
        this.entity.selections.splice(index, 1);
        this.entityService.save(this.entity)
            .then(function (entity) {
            _this.entity = entity;
            _this.snackBar.open('Visualization Deleted', 'Undo', {
                duration: 5000,
            }).onAction().subscribe(function () {
                // issue because of the drag re-order selections normally get put back
                // at index #1, may need to keep track of index on selection object
                // change on resize or some such
                index = typeof (_this.dragStartIndex) !== 'undefined' ? _this.dragStartIndex : index;
                console.log("restoring selection " + index);
                _this.entity.selections.splice(index, 0, _this.selectionFactory.cloneSelection(selection));
                _this.save(true);
            });
        })
            .catch(function (e) { return _this.handleError(e); });
    };
    FindingsComponent.prototype.handleError = function (e) {
        console.error(e);
        this.snackBar.open('Something went wrong', null, { duration: 5000 });
    };
    __decorate([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Input"])(),
        __metadata("design:type", Boolean)
    ], FindingsComponent.prototype, "userIsAdmin", void 0);
    __decorate([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["HostBinding"])('class.adminMode'),
        __metadata("design:type", Boolean)
    ], FindingsComponent.prototype, "adminMode", void 0);
    __decorate([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Input"])(),
        __metadata("design:type", _entity_service__WEBPACK_IMPORTED_MODULE_3__["EntityBase"]),
        __metadata("design:paramtypes", [_entity_service__WEBPACK_IMPORTED_MODULE_3__["EntityBase"]])
    ], FindingsComponent.prototype, "entity", null);
    FindingsComponent = __decorate([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Component"])({
            selector: 'fws-dashboard-findings',
            template: "\n<mat-list *ngIf=\"adminMode\" class=\"new-vis-list\">\n  <div>\n    <button mat-icon-button (click)=\"toggleAdminMode()\" class=\"toggle-admin-mode\"><i class=\"fa fa-2x fa-times-circle\" aria-hidden=\"true\"></i></button>\n    <p>Click and drag the visualizations below onto your Dashboard. You can have up to 10 visualizations on your Dashboard at one time. You can have multiple versions of each visualization type.</p>\n  </div>\n  <mat-list-item class=\"vis-template\"\n                *ngFor=\"let template of visTemplates\"\n                (mouseenter)=\"lookAtVisDrop = true;\" (mouseleave)=\"lookAtVisDrop = false;\"\n                [matTooltip]=\"template.$tooltip\"\n                matTooltipPosition=\"right\"\n                dnd-draggable [dragData]=\"template\"\n                [dropZones]=\"['newvis-dropZone']\">\n    <img class=\"new-vis-thumbnail\" src=\"{{baseHref}}{{template.$thumbnail}}\" />\n  </mat-list-item>\n  <mat-list-item *ngIf=\"(visTemplates.length%2) === 1\">\n    <!-- empty item to just to keep the number even -->\n  </mat-list-item>\n  <mat-list-item class=\"trash\"\n                matTooltip=\"Drag and drop visualization here to remove\"\n                matTooltipPosition=\"right\"\n                dnd-droppable [dropZones]=\"['trash-dropZone']\"\n                (onDropSuccess)=\"trashVisualization($event)\"></mat-list-item>\n  <mat-list-item class=\"save\">\n    <button mat-icon-button aria-labelled=\"Save\" (click)=\"save()\" [disabled]=\"!isReordered()\" matTooltip=\"Save current visualization order\"><i class=\"fa fa-floppy-o\" aria-hidden=\"true\"></i><span *ngIf=\"isReordered()\">*</span></button>\n  </mat-list-item>\n</mat-list>\n\n<div class=\"visualizations\" *ngIf=\"entity\" dnd-sortable-container [sortableData]=\"entity.selections\" [dropZones]=\"['list-dropZone','trash-dropZone']\" >\n    <mat-card  *ngFor=\"let selection of entity.selections; first as isFirst; let i = index\"\n              dnd-sortable [sortableIndex]=\"i\"\n              [dragEnabled]=\"adminMode\"\n              [dragData]=\"selection\"\n              (onDragStart)=\"dragStart($event)\"\n              (onDropSuccess)=\"reorderVisualizations()\">\n        <div *ngIf=\"!isFirst && !mobileMode\" class=\"cover\" (click)=\"makeCurrent(selection)\">\n            <span class=\"visualization-title\">{{selection.meta.title}} <button *ngIf=\"adminMode\" mat-icon-button (click)=\"editVisualization(selection,$event)\" matTooltip=\"Edit\"><i class=\"fa fa-pencil\" aria-hidden=\"true\"></i></button></span>\n        </div>\n        <div *ngIf=\"isFirst || mobileMode\" class=\"visualization-details\">\n            <div class=\"visualization-title\">{{selection.meta.title}} <button *ngIf=\"adminMode\" mat-icon-button (click)=\"editVisualization(selection,$event)\" matTooltip=\"Edit\"><i class=\"fa fa-pencil fa-2x\" aria-hidden=\"true\"></i></button></div>\n            <p *ngIf=\"selection.meta.description\" class=\"visualization-description\">{{selection.meta.description}}</p>\n        </div>\n        <npn-visualization [selection]=\"selection\" [thumbnail]=\"!mobileMode && i > 0\"></npn-visualization>\n    </mat-card>\n    <mat-card *ngIf=\"adminMode && entity.selections.length < maxVisualizations\"\n        dnd-droppable [dropZones]=\"['newvis-dropZone']\"\n        (onDropSuccess)=\"addVisualization($event)\"\n        [ngClass]=\"{'new-vis-placeholder': true, 'look-at-me': lookAtVisDrop}\"></mat-card>\n</div>\n<button mat-raised-button *ngIf=\"userIsAdmin && !mobileMode && !adminMode && !isTouchDevice\" (click)=\"toggleAdminMode()\"><span class=\"admin-toggle\">Customize</span></button>\n  ",
            styles: [__webpack_require__(/*! ./findings.component.scss */ "./src/app/findings.component.scss")],
            encapsulation: _angular_core__WEBPACK_IMPORTED_MODULE_0__["ViewEncapsulation"].None
        }),
        __param(5, Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Optional"])()), __param(5, Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Inject"])(_npn_common__WEBPACK_IMPORTED_MODULE_4__["NPN_BASE_HREF"])),
        __metadata("design:paramtypes", [_entity_service__WEBPACK_IMPORTED_MODULE_3__["EntityService"],
            _npn_common__WEBPACK_IMPORTED_MODULE_4__["VisualizationSelectionFactory"],
            _angular_material__WEBPACK_IMPORTED_MODULE_1__["MatDialog"],
            _angular_material__WEBPACK_IMPORTED_MODULE_1__["MatSnackBar"],
            _angular_flex_layout__WEBPACK_IMPORTED_MODULE_2__["ObservableMedia"], String])
    ], FindingsComponent);
    return FindingsComponent;
}());



/***/ }),

/***/ "./src/app/focal-species.component.ts":
/*!********************************************!*\
  !*** ./src/app/focal-species.component.ts ***!
  \********************************************/
/*! exports provided: FocalSpeciesComponent */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "FocalSpeciesComponent", function() { return FocalSpeciesComponent; });
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @angular/core */ "../../node_modules/@angular/core/fesm5/core.js");
/* harmony import */ var _npn_common__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @npn/common */ "../npn/common/src/lib/index.ts");
/* harmony import */ var _entity_service__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./entity.service */ "./src/app/entity.service.ts");
var __decorate = (undefined && undefined.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (undefined && undefined.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};



var FocalSpeciesComponent = /** @class */ (function () {
    function FocalSpeciesComponent(speciesService) {
        this.speciesService = speciesService;
    }
    FocalSpeciesComponent.prototype.ngOnChanges = function (changes) {
        var _this = this;
        if (changes.entity && changes.entity.currentValue) {
            var params_1 = {};
            var entity = changes.entity.currentValue;
            var networkIds = entity instanceof _entity_service__WEBPACK_IMPORTED_MODULE_2__["Refuge"]
                ? [entity.network_id]
                : entity instanceof _entity_service__WEBPACK_IMPORTED_MODULE_2__["PhenologyTrail"]
                    ? entity.network_ids
                    : [];
            if (networkIds.length) { // else should never happen but...
                networkIds.forEach(function (id, i) { return params_1["network_id[" + i + "]"] = id; });
            }
            this.speciesService.getAllSpecies(params_1)
                .then(function (list) { return _this.speciesList = list; })
                .catch(function (e) { return console.error(e); });
        }
    };
    __decorate([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Input"])(),
        __metadata("design:type", _entity_service__WEBPACK_IMPORTED_MODULE_2__["EntityBase"])
    ], FocalSpeciesComponent.prototype, "entity", void 0);
    FocalSpeciesComponent = __decorate([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Component"])({
            selector: 'focal-species',
            template: "\n    <div *ngIf=\"entity\">\n        <h3>Focal Species for {{entity.title}}</h3>\n        <ul *ngIf=\"speciesList && speciesList.length\">\n            <li *ngFor=\"let s of speciesList\">\n            <a target=\"_blank\" [href]=\"'https://usanpn.org/nn/'+s.genus+'_'+s.species\">{{s | speciesTitle:'common-name'}} ({{s | speciesTitle:'scientific-name'}})</a>\n            </li>\n        </ul>\n    </div>\n    ",
            styles: ["\n        h3 {\n            font-size: 28px;\n        }\n    "]
        }),
        __metadata("design:paramtypes", [_npn_common__WEBPACK_IMPORTED_MODULE_1__["SpeciesService"]])
    ], FocalSpeciesComponent);
    return FocalSpeciesComponent;
}());



/***/ }),

/***/ "./src/app/fws-dashboard.component.scss":
/*!**********************************************!*\
  !*** ./src/app/fws-dashboard.component.scss ***!
  \**********************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = ":host {\n  display: block;\n  background-color: transparent;\n  /* when content goes away for a flash avoid dashboard height shrinking and making the page jump around. */\n  min-height: 896px; }\n\n.entity-dashboard-tabs .mat-tab-header {\n  border-bottom: none; }\n\n.entity-dashboard-tabs .mat-tab-header .mat-ink-bar {\n    display: none; }\n\n.entity-dashboard-tabs .mat-tab-header .mat-tab-labels {\n    flex-flow: row nowrap; }\n\n.entity-dashboard-tabs .mat-tab-header .mat-tab-labels > .mat-tab-label {\n    width: 100%;\n    white-space: normal;\n    display: block;\n    font-size: 0.9em;\n    height: 96px;\n    opacity: 1;\n    color: #fff;\n    padding: 0px;\n    background-color: transparent; }\n\n@media (min-width: 768px) {\n      .entity-dashboard-tabs .mat-tab-header .mat-tab-labels > .mat-tab-label {\n        display: flex; } }\n\n@media (min-width: 992px) {\n      .entity-dashboard-tabs .mat-tab-header .mat-tab-labels > .mat-tab-label {\n        font-size: 1em; } }\n\n.entity-dashboard-tabs .mat-tab-header .mat-tab-labels > .mat-tab-label > .mat-tab-label-content {\n      width: 100%; }\n\n.entity-dashboard-tabs .mat-tab-header .mat-tab-labels > .mat-tab-label > .mat-tab-label-content,\n    .entity-dashboard-tabs .mat-tab-header .mat-tab-labels > .mat-tab-label > .mat-tab-label-content > .rd-tab-label {\n      display: block;\n      padding: 0px;\n      height: 100%; }\n\n.entity-dashboard-tabs .mat-tab-header .mat-tab-labels > .mat-tab-label:focus {\n      background-color: transparent; }\n\n.entity-dashboard-tabs .mat-tab-header .mat-tab-labels > .mat-tab-label.mat-tab-label-active {\n      color: orange; }\n\n.entity-dashboard-tabs .mat-tab-header .mat-tab-labels > .mat-tab-label:nth-of-type(1) > .mat-tab-label-content > .rd-tab-label {\n      background-color: #271614; }\n\n@media (min-width: 768px) {\n        .entity-dashboard-tabs .mat-tab-header .mat-tab-labels > .mat-tab-label:nth-of-type(1) > .mat-tab-label-content > .rd-tab-label {\n          padding-left: 24px; } }\n\n.entity-dashboard-tabs .mat-tab-header .mat-tab-labels > .mat-tab-label:nth-of-type(1)::after {\n      content: '';\n      border-top: 48px solid #3f322b;\n      border-right: 48px solid #3f322b;\n      border-bottom: 48px solid #271614;\n      border-left: 48px solid #271614; }\n\n.entity-dashboard-tabs .mat-tab-header .mat-tab-labels > .mat-tab-label:nth-of-type(2) > .mat-tab-label-content > .rd-tab-label {\n      background-color: #3f322b; }\n\n.entity-dashboard-tabs .mat-tab-header .mat-tab-labels > .mat-tab-label:nth-of-type(2)::after {\n      content: '';\n      border-top: 48px solid #574d3f;\n      border-right: 48px solid #574d3f;\n      border-bottom: 48px solid #3f322b;\n      border-left: 48px solid #3f322b; }\n\n.entity-dashboard-tabs .mat-tab-header .mat-tab-labels > .mat-tab-label:nth-of-type(3) > .mat-tab-label-content > .rd-tab-label {\n      background-color: #574d3f; }\n\n.entity-dashboard-tabs .mat-tab-header .mat-tab-labels > .mat-tab-label:nth-of-type(3)::after {\n      content: '';\n      border-top: 48px solid #6f5e53;\n      border-right: 48px solid #6f5e53;\n      border-bottom: 48px solid #574d3f;\n      border-left: 48px solid #574d3f; }\n\n.entity-dashboard-tabs .mat-tab-header .mat-tab-labels > .mat-tab-label:nth-of-type(4) > .mat-tab-label-content > .rd-tab-label {\n      background-color: #6f5e53; }\n\n.entity-dashboard-tabs .mat-tab-header .mat-tab-labels > .mat-tab-label:nth-of-type(4)::after {\n      content: '';\n      border-top: 48px solid transparent;\n      border-right: 48px solid transparent;\n      border-bottom: 48px solid #6f5e53;\n      border-left: 48px solid #6f5e53; }\n\n.entity-dashboard-tabs.three-tabs .mat-tab-header .mat-tab-labels > .mat-tab-label:nth-of-type(3)::after {\n  content: '';\n  border-top: 48px solid transparent;\n  border-right: 48px solid transparent; }\n\n.entity-dashboard-tabs .rd-tab-icon {\n  position: absolute;\n  top: .75em;\n  right: 42%;\n  -webkit-transform: translateX(-50%);\n          transform: translateX(-50%);\n  font-size: 2.2em; }\n\n.entity-dashboard-tabs .rd-tab-label {\n  position: relative;\n  text-transform: uppercase; }\n\n.entity-dashboard-tabs .rd-tab-label > label {\n    color: inherit;\n    margin-top: 4.25em; }\n\n.entity-dashboard-tabs .rd-tab-content {\n  min-height: 800px;\n  padding: 20px 5px;\n  color: #000;\n  border-left: 2px solid #ddd;\n  border-right: 2px solid #ddd;\n  background-color: #fff; }\n\n@media (min-width: 992px) {\n    .entity-dashboard-tabs .rd-tab-content {\n      padding: 20px; } }\n"

/***/ }),

/***/ "./src/app/fws-dashboard.component.ts":
/*!********************************************!*\
  !*** ./src/app/fws-dashboard.component.ts ***!
  \********************************************/
/*! exports provided: FwsDashboardComponent */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "FwsDashboardComponent", function() { return FwsDashboardComponent; });
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @angular/core */ "../../node_modules/@angular/core/fesm5/core.js");
/* harmony import */ var _findings_component__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./findings.component */ "./src/app/findings.component.ts");
/* harmony import */ var _entity_service__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./entity.service */ "./src/app/entity.service.ts");
/* harmony import */ var _fortawesome_free_solid_svg_icons__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @fortawesome/free-solid-svg-icons */ "../../node_modules/@fortawesome/free-solid-svg-icons/index.es.js");
var __decorate = (undefined && undefined.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (undefined && undefined.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};




var WHAT_WERE_FINDING_TAB_IDX = 0;
var FOCAL_SPECIES_TAB_IDX = 1;
var RESOURCES_TAB_IDX = 2;
var PARTNERS_TAB_IDX = 3;
var FwsDashboardComponent = /** @class */ (function () {
    function FwsDashboardComponent(element, entityService) {
        this.element = element;
        this.entityService = entityService;
        this.userIsLoggedIn = false;
        this.userIsAdmin = false;
        this.dashboardMode = null;
        this.renderVisualizations = true;
        this.renderFocalSpecies = false;
        this.renderResources = false;
        this.supportsPartners = false;
        this.renderPartners = false;
        this.faHandshake = _fortawesome_free_solid_svg_icons__WEBPACK_IMPORTED_MODULE_3__["faHandshake"];
        this.faBook = _fortawesome_free_solid_svg_icons__WEBPACK_IMPORTED_MODULE_3__["faBook"];
        this.faPaw = _fortawesome_free_solid_svg_icons__WEBPACK_IMPORTED_MODULE_3__["faPaw"];
        this.faSearch = _fortawesome_free_solid_svg_icons__WEBPACK_IMPORTED_MODULE_3__["faSearch"];
        var e = element.nativeElement;
        this.entity_id = e.getAttribute('entity_id');
        this.userIsAdmin = e.getAttribute('user_is_admin') !== null;
        this.userIsLoggedIn = e.getAttribute('user_is_logged_in') !== null;
        _entity_service__WEBPACK_IMPORTED_MODULE_2__["DashboardModeState"].set(e.getAttribute('mode'));
        this.supportsPartners = _entity_service__WEBPACK_IMPORTED_MODULE_2__["DashboardModeState"].get() === _entity_service__WEBPACK_IMPORTED_MODULE_2__["DashboardMode"].PHENO_TRAIL;
    }
    FwsDashboardComponent.prototype.ngOnInit = function () {
        var _this = this;
        this.entityService.get(this.entity_id).then(function (entity) { return _this.entity = entity; });
    };
    FwsDashboardComponent.prototype.selectedTabChange = function ($event) {
        var _this = this;
        this.renderFocalSpecies = this.renderFocalSpecies || ($event.index === FOCAL_SPECIES_TAB_IDX);
        // lazily render the visualizations, only once visiting their tab
        this.renderVisualizations = this.renderVisualizations || ($event.index === WHAT_WERE_FINDING_TAB_IDX);
        this.renderResources = this.renderResources || ($event.index === RESOURCES_TAB_IDX);
        this.renderPartners = this.renderPartners || ($event.index === PARTNERS_TAB_IDX);
        if ($event.index === WHAT_WERE_FINDING_TAB_IDX) {
            // if the visualizations are selected makes ure that resizeAll() is called
            // in case the browser was re-sized AFTER the visualizations were visited but
            // while another tab was visible (the visualizations would have resized themselves down to nothing).
            setTimeout(function () {
                if (_this.findingsComponent) {
                    _this.findingsComponent.resizeAll();
                }
            });
        }
    };
    __decorate([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["ViewChild"])(_findings_component__WEBPACK_IMPORTED_MODULE_1__["FindingsComponent"]),
        __metadata("design:type", _findings_component__WEBPACK_IMPORTED_MODULE_1__["FindingsComponent"])
    ], FwsDashboardComponent.prototype, "findingsComponent", void 0);
    FwsDashboardComponent = __decorate([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Component"])({
            selector: 'fws-dashboard',
            template: "\n  <mat-tab-group [ngClass]=\"{'entity-dashboard-tabs':true, 'three-tabs': !supportsPartners}\" (selectedTabChange)=\"selectedTabChange($event)\">\n    <mat-tab label=\"What we're finding\">\n        <ng-template mat-tab-label>\n            <div class=\"rd-tab-label findings\">\n                <mat-icon class=\"rd-tab-icon\"><fa-icon [icon]=\"faSearch\"></fa-icon></mat-icon>\n                <label>What we're finding</label>\n            </div>\n        </ng-template>\n        <div class=\"rd-tab-content\" *ngIf=\"renderVisualizations\">\n            <fws-dashboard-findings *ngIf=\"entity\" [entity]=\"entity\" [userIsAdmin]=\"userIsAdmin\"></fws-dashboard-findings>\n        </div>\n    </mat-tab>\n\n    <mat-tab label=\"Focal Species\">\n        <ng-template mat-tab-label>\n            <div class=\"rd-tab-label focal-species\">\n                <mat-icon class=\"rd-tab-icon\"><fa-icon [icon]=\"faPaw\"></fa-icon></mat-icon>\n                <label>Focal Species</label>\n            </div>\n        </ng-template>\n        <div class=\"rd-tab-content\" *ngIf=\"renderFocalSpecies\">\n            <focal-species [entity]=\"entity\"></focal-species>\n        </div>\n    </mat-tab>\n\n    <mat-tab label=\"Resources for observers\">\n        <ng-template mat-tab-label>\n            <div class=\"rd-tab-label resources\">\n                <mat-icon class=\"rd-tab-icon\"><fa-icon [icon]=\"faBook\"></fa-icon></mat-icon>\n                <label>Resources for observers</label>\n            </div>\n        </ng-template>\n        <div class=\"rd-tab-content\" *ngIf=\"renderResources\">\n            <fws-dashboard-resources [entity]=\"entity\" [userIsLoggedIn]=\"userIsLoggedIn\"></fws-dashboard-resources>\n        </div>\n    </mat-tab>\n\n    <mat-tab label=\"Partners\" *ngIf=\"supportsPartners\">\n        <ng-template mat-tab-label>\n            <div class=\"rd-tab-label partners\">\n                <mat-icon class=\"rd-tab-icon\"><fa-icon [icon]=\"faHandshake\"></fa-icon></mat-icon>\n                <label>Partners</label>\n            </div>\n        </ng-template>\n        <div class=\"rd-tab-content\" *ngIf=\"renderPartners\">\n        <phenology-trail-partners [entity]=\"entity\"></phenology-trail-partners>\n        </div>\n    </mat-tab>\n  </mat-tab-group>\n  ",
            styles: [__webpack_require__(/*! ./fws-dashboard.component.scss */ "./src/app/fws-dashboard.component.scss")],
            encapsulation: _angular_core__WEBPACK_IMPORTED_MODULE_0__["ViewEncapsulation"].None
        }),
        __metadata("design:paramtypes", [_angular_core__WEBPACK_IMPORTED_MODULE_0__["ElementRef"],
            _entity_service__WEBPACK_IMPORTED_MODULE_2__["EntityService"]])
    ], FwsDashboardComponent);
    return FwsDashboardComponent;
}());



/***/ }),

/***/ "./src/app/new-visualization-dialog.component.ts":
/*!*******************************************************!*\
  !*** ./src/app/new-visualization-dialog.component.ts ***!
  \*******************************************************/
/*! exports provided: NewVisualizationDialogComponent, NewVisualizationBuilderComponent */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "NewVisualizationDialogComponent", function() { return NewVisualizationDialogComponent; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "NewVisualizationBuilderComponent", function() { return NewVisualizationBuilderComponent; });
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @angular/core */ "../../node_modules/@angular/core/fesm5/core.js");
/* harmony import */ var _angular_material__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @angular/material */ "../../node_modules/@angular/material/esm5/material.es5.js");
/* harmony import */ var _angular_forms__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @angular/forms */ "../../node_modules/@angular/forms/fesm5/forms.js");
/* harmony import */ var _entity_service__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./entity.service */ "./src/app/entity.service.ts");
/* harmony import */ var _npn_common__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @npn/common */ "../npn/common/src/lib/index.ts");
var __decorate = (undefined && undefined.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (undefined && undefined.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var __param = (undefined && undefined.__param) || function (paramIndex, decorator) {
    return function (target, key) { decorator(target, key, paramIndex); }
};





var NewVisualizationDialogComponent = /** @class */ (function () {
    function NewVisualizationDialogComponent(formBuilder, dialogRef, data) {
        this.formBuilder = formBuilder;
        this.dialogRef = dialogRef;
        this.data = data;
        this.mode = _entity_service__WEBPACK_IMPORTED_MODULE_3__["DashboardModeState"].get();
        this.step1FormGroup = this.formBuilder.group({
            firstCtrl: ['', _angular_forms__WEBPACK_IMPORTED_MODULE_2__["Validators"].required]
        });
        this.step2FormGroup = this.formBuilder.group({
            secondCtrl: ['', _angular_forms__WEBPACK_IMPORTED_MODULE_2__["Validators"].required]
        });
        this.step3FormGroup = this.formBuilder.group({
            thirdCtrl: ['', _angular_forms__WEBPACK_IMPORTED_MODULE_2__["Validators"].required]
        });
        this.selection = data.selection;
        this.entity = data.entity;
        this.edit = data.edit;
    }
    NewVisualizationDialogComponent.prototype.ngOnInit = function () {
        var s = this.selection;
        s.editMode = true;
        //s.debug = true; // uncomment to show the selection for dev purposes
        // NOTE: TS support for interfaces doesn't extend to actual runtime type
        // introspection.  VisSelection has class extensions Network/StationAwareVisSelection
        // that selections can extend, if use cases get more complex then may instead need
        // to use the `'stationIds' in s` kind of logic instead.
        this.stationAware = s instanceof _npn_common__WEBPACK_IMPORTED_MODULE_4__["StationAwareVisSelection"]; // || 'stationIds' in s;
        this.showVis = !this.stationAware ? 1 : 0;
        if (s instanceof _npn_common__WEBPACK_IMPORTED_MODULE_4__["NetworkAwareVisSelection"]) {
            if (!s.networkIds || !s.networkIds.length) { // don't change on edit (not necessary but seems appropriate)
                if (this.entity instanceof _entity_service__WEBPACK_IMPORTED_MODULE_3__["Refuge"]) {
                    s.networkIds = [this.entity.network_id];
                }
                else if (this.entity instanceof _entity_service__WEBPACK_IMPORTED_MODULE_3__["PhenologyTrail"]) {
                    s.networkIds = this.entity.network_ids.slice();
                }
            }
        }
        if (this.edit) {
            this.showVis++;
            this.selection.update();
        }
    };
    NewVisualizationDialogComponent.prototype.stepChanged = function ($event) {
        var _this = this;
        var visIndex = !this.stationAware ? 0 : 1;
        console.debug("NewVisualizationDialogComponent:stepChanged visIndex=" + visIndex, $event);
        if ($event.selectedIndex === visIndex) {
            this.showVis++;
            setTimeout(function () {
                if (_this.showVis === 1 || !_this.selection.isValid()) {
                    _this.selection.resize();
                }
                else {
                    _this.selection.update();
                }
            });
        }
        this.showDetails = $event.selectedIndex === (visIndex + 1);
    };
    __decorate([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["ViewChild"])('scopeSelection'),
        __metadata("design:type", Object)
    ], NewVisualizationDialogComponent.prototype, "scopeSelection", void 0);
    NewVisualizationDialogComponent = __decorate([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Component"])({
            selector: 'new-vis-dialog',
            template: "\n    <!-- for \"station aware\" visualizations display a multi-step process -->\n    <mat-horizontal-stepper (selectionChange)=\"stepChanged($event)\">\n        <mat-step *ngIf=\"stationAware\" [stepControl]=\"step1FormGroup\" label=\"Select sites\">\n            <div class=\"step-wrapper\">\n                <div class=\"step-content\">\n                    <refuge-visualization-scope-selection *ngIf=\"mode === 'refuge'\" [selection]=\"selection\" [refuge]=\"entity\" #scopeSelection></refuge-visualization-scope-selection>\n                    <pheno-trail-visualization-scope-selection *ngIf=\"mode === 'phenology_trail'\" [selection]=\"selection\" [phenoTrail]=\"entity\" #scopeSelection></pheno-trail-visualization-scope-selection>\n                </div>\n                <div class=\"step-nav\">\n                    <button mat-raised-button (click)=\"dialogRef.close()\">Cancel</button>\n                    <button mat-raised-button matStepperNext [disabled]=\"!!scopeSelection && !scopeSelection.valid\">Next</button>\n                </div>\n            </div>\n        </mat-step>\n\n        <mat-step [stepControl]=\"step2FormGroup\" label=\"Build visualization\">\n            <div *ngIf=\"showVis\" class=\"step-wrapper\">\n                <div class=\"step-content\">\n                    <new-visualization-builder [selection]=\"selection\" [entity]=\"entity\"></new-visualization-builder>\n                </div>\n                <div class=\"step-nav\">\n                    <button mat-raised-button (click)=\"dialogRef.close()\">Cancel</button>\n                    <button mat-raised-button *ngIf=\"stationAware\" matStepperPrevious>Back</button>\n                    <button mat-raised-button matStepperNext [disabled]=\"!selection.isValid()\">Next</button>\n                </div>\n            </div>\n        </mat-step>\n\n        <mat-step [stepControl]=\"step3FormGroup\" label=\"Enter visualization details\">\n            <div *ngIf=\"showDetails\" class=\"step-wrapper\">\n                <div class=\"step-content\">\n                    <mat-form-field class=\"visualization-title\">\n                        <input matInput placeholder=\"Visualization title\" [(ngModel)]=\"selection.meta.title\" required />\n                    </mat-form-field>\n                    <mat-form-field class=\"visualization-description\">\n                        <textarea matInput placeholder=\"Visualization description\" [(ngModel)]=\"selection.meta.description\"></textarea>\n                    </mat-form-field>\n                    <p class=\"step-instructions\">Add a title and a description that will accompany this visualization on your Refuge Dashboard. The description can help explain the visualization to visitors to your Refuge Dashboard, and provide other background information that will assist with interpretation.</p>\n                </div>\n                <div class=\"step-nav\">\n                    <button mat-raised-button (click)=\"dialogRef.close()\">Cancel</button>\n                    <button mat-raised-button matStepperPrevious>Back</button>\n                    <button mat-raised-button (click)=\"dialogRef.close(selection)\" [disabled]=\"!selection.meta.title || !selection.isValid()\">{{edit ? 'Save' : 'Add'}}</button>\n                </div>\n            </div>\n        </mat-step>\n    </mat-horizontal-stepper>\n    ",
            styles: ["\n        mat-horizontal-stepper {\n            height: 100%;\n        }\n        /* ViewEncapsulation.None\n           75px is slightly larger than the stepper header\n        */\n        .mat-horizontal-content-container {\n            height: calc(100% - 75px);\n        }\n        .mat-horizontal-content-container .mat-horizontal-stepper-content {\n            height: 100%;\n        }\n        .step-wrapper {\n            height: 100%;\n        }\n        .step-nav {\n            padding: 5px;\n            height: 46px;\n        }\n        .step-content {\n            height: calc(100% - 46px);\n            overflow-y: auto;\n        }\n\n        .step-nav >button {\n            margin-right: 5px;\n        }\n\n        .visualization-title,\n        .visualization-description {\n            display: block;\n            width: 100%;\n        }\n        .visualization-description textarea {\n            height: 5em;\n        }\n        .step-instructions {\n            color: #666;\n            font-size: 0.95em;\n            margin-top: 20px;\n        }\n    "],
            encapsulation: _angular_core__WEBPACK_IMPORTED_MODULE_0__["ViewEncapsulation"].None
        }),
        __param(2, Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Inject"])(_angular_material__WEBPACK_IMPORTED_MODULE_1__["MAT_DIALOG_DATA"])),
        __metadata("design:paramtypes", [_angular_forms__WEBPACK_IMPORTED_MODULE_2__["FormBuilder"],
            _angular_material__WEBPACK_IMPORTED_MODULE_1__["MatDialogRef"], Object])
    ], NewVisualizationDialogComponent);
    return NewVisualizationDialogComponent;
}());

var NewVisualizationBuilderComponent = /** @class */ (function () {
    function NewVisualizationBuilderComponent() {
    }
    NewVisualizationBuilderComponent.prototype.ngOnInit = function () {
        var s = this.selection;
        //s.debug = true;
        if (s instanceof _npn_common__WEBPACK_IMPORTED_MODULE_4__["ActivityCurvesSelection"]) {
            this.activity = s;
        }
        else if (s instanceof _npn_common__WEBPACK_IMPORTED_MODULE_4__["ScatterPlotSelection"]) {
            this.scatter = s;
        }
        else if (s instanceof _npn_common__WEBPACK_IMPORTED_MODULE_4__["CalendarSelection"]) {
            this.calendar = s;
        }
        else if (s instanceof _npn_common__WEBPACK_IMPORTED_MODULE_4__["ObserverActivitySelection"]) {
            this.observer = s;
        }
        else if (s instanceof _npn_common__WEBPACK_IMPORTED_MODULE_4__["ObservationFrequencySelection"]) {
            this.observationFreq = s;
        }
        else if (s instanceof _npn_common__WEBPACK_IMPORTED_MODULE_4__["ClippedWmsMapSelection"]) {
            // this visualization only supported for Refuge
            this.clipped = s;
            s.fwsBoundary = this.entity.boundary_id;
        }
        s.resize();
    };
    __decorate([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Input"])(),
        __metadata("design:type", _npn_common__WEBPACK_IMPORTED_MODULE_4__["VisSelection"])
    ], NewVisualizationBuilderComponent.prototype, "selection", void 0);
    __decorate([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Input"])(),
        __metadata("design:type", _entity_service__WEBPACK_IMPORTED_MODULE_3__["EntityBase"])
    ], NewVisualizationBuilderComponent.prototype, "entity", void 0);
    NewVisualizationBuilderComponent = __decorate([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Component"])({
            selector: 'new-visualization-builder',
            template: "\n    <activity-curves-control  *ngIf=\"activity\" [selection]=\"activity\"></activity-curves-control>\n    <scatter-plot-control *ngIf=\"scatter\" [selection]=\"scatter\"></scatter-plot-control>\n    <calendar-control *ngIf=\"calendar\" [selection]=\"calendar\"></calendar-control>\n    <observer-activity-control *ngIf=\"observer\" [selection]=\"observer\"></observer-activity-control>\n    <observation-frequency-control *ngIf=\"observationFreq\" [selection]=\"observationFreq\"></observation-frequency-control>\n    <clipped-wms-map-control *ngIf=\"clipped\" [selection]=\"clipped\"></clipped-wms-map-control>\n\n    <npn-visualization *ngIf=\"selection\" [selection]=\"selection\"></npn-visualization>\n    <!--pre *ngIf=\"selection\">{{selection.external | json}}</pre-->\n    ",
            styles: ["\n        npn-visualization {\n            margin-top: 20px;\n            width: 90%; // within stepper o/w horizontal scroll\n        }\n    "]
        })
    ], NewVisualizationBuilderComponent);
    return NewVisualizationBuilderComponent;
}());



/***/ }),

/***/ "./src/app/pheno-trail-visualization-scope-group.component.ts":
/*!********************************************************************!*\
  !*** ./src/app/pheno-trail-visualization-scope-group.component.ts ***!
  \********************************************************************/
/*! exports provided: PhenoTrailVisualizationScopeGroupComponent */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "PhenoTrailVisualizationScopeGroupComponent", function() { return PhenoTrailVisualizationScopeGroupComponent; });
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @angular/core */ "../../node_modules/@angular/core/fesm5/core.js");
/* harmony import */ var _fortawesome_pro_light_svg_icons__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @fortawesome/pro-light-svg-icons */ "../../node_modules/@fortawesome/pro-light-svg-icons/index.es.js");
/* harmony import */ var _pheno_trail_visualization_scope_selection_component__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./pheno-trail-visualization-scope-selection.component */ "./src/app/pheno-trail-visualization-scope-selection.component.ts");
var __decorate = (undefined && undefined.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (undefined && undefined.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};



var PhenoTrailVisualizationScopeGroupComponent = /** @class */ (function () {
    function PhenoTrailVisualizationScopeGroupComponent() {
        this.change = new _angular_core__WEBPACK_IMPORTED_MODULE_0__["EventEmitter"]();
        this.open = false;
        this.chevronDownIcon = _fortawesome_pro_light_svg_icons__WEBPACK_IMPORTED_MODULE_1__["faChevronDown"];
        this.chevronRightIcon = _fortawesome_pro_light_svg_icons__WEBPACK_IMPORTED_MODULE_1__["faChevronRight"];
        this.loading = false;
    }
    PhenoTrailVisualizationScopeGroupComponent.prototype.ngOnInit = function () {
        //Load any pre-existing selections
        if (this.networkWrapper.selected) {
            this.networkWrapper.getStations();
        }
    };
    /**
     * Toggles the view of the group's stations
     */
    PhenoTrailVisualizationScopeGroupComponent.prototype.toggleOpen = function () {
        var _this = this;
        this.loading = true;
        this.networkWrapper.getStations().then(function (stations) {
            _this.open = !_this.open;
            _this.loading = false;
        });
    };
    /**
     * Toggle whether a station should be excluded for a selected group
     */
    PhenoTrailVisualizationScopeGroupComponent.prototype.stationChange = function () {
        var _this = this;
        this.networkWrapper.getStations().then(function (stations) {
            _this.networkWrapper.selected = true;
            _this.networkWrapper.group.excludeIds = stations.filter(function (station) { return station.selected; }).map(function (station) { return station.station_id; });
            _this.change.emit();
        });
    };
    __decorate([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Input"])(),
        __metadata("design:type", _pheno_trail_visualization_scope_selection_component__WEBPACK_IMPORTED_MODULE_2__["NetworkWrapper"])
    ], PhenoTrailVisualizationScopeGroupComponent.prototype, "networkWrapper", void 0);
    __decorate([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Output"])(),
        __metadata("design:type", _angular_core__WEBPACK_IMPORTED_MODULE_0__["EventEmitter"])
    ], PhenoTrailVisualizationScopeGroupComponent.prototype, "change", void 0);
    PhenoTrailVisualizationScopeGroupComponent = __decorate([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Component"])({
            selector: 'pheno-trail-visualization-scope-group',
            template: "\n      <button mat-icon-button [attr.aria-label]=\"'Toggle ' + networkWrapper.network.name\" (click)=\"toggleOpen()\">\n        <mat-icon><fa-icon [icon]=\"open ? chevronDownIcon : chevronRightIcon\"></fa-icon></mat-icon>\n      </button>\n      <mat-checkbox [(ngModel)]=\"networkWrapper.selected\" (change)=\"change.emit()\" [indeterminate]=\"networkWrapper.group.excludeIds?.length > 0\">\n        {{networkWrapper.network.name}}\n      </mat-checkbox>\n      <div class=\"station-input\" *ngIf=\"open\">\n        <h3>Exclude Stations</h3>\n        <mat-progress-spinner *ngIf=\"loading\" mode=\"indeterminate\"></mat-progress-spinner>\n        <div *ngFor=\"let s of networkWrapper.stations | async as all\" class=\"station-input\">\n          <mat-checkbox [(ngModel)]=\"s.selected\" (change)=\"stationChange()\" [disabled]=\"!s.selected && networkWrapper.group.excludeIds?.length === (all.length-1)\">{{s.station_name}}</mat-checkbox>\n        </div>\n      </div>\n    ",
            styles: ["\n      .station-input {\n        display: block;\n        padding-left: 34px;\n      }\n    "]
        }),
        __metadata("design:paramtypes", [])
    ], PhenoTrailVisualizationScopeGroupComponent);
    return PhenoTrailVisualizationScopeGroupComponent;
}());



/***/ }),

/***/ "./src/app/pheno-trail-visualization-scope-groups.component.ts":
/*!*********************************************************************!*\
  !*** ./src/app/pheno-trail-visualization-scope-groups.component.ts ***!
  \*********************************************************************/
/*! exports provided: PhenoTrailVisualizationScopeGroupsComponent */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "PhenoTrailVisualizationScopeGroupsComponent", function() { return PhenoTrailVisualizationScopeGroupsComponent; });
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @angular/core */ "../../node_modules/@angular/core/fesm5/core.js");
/* harmony import */ var _npn_common_visualizations_vis_selection__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @npn/common/visualizations/vis-selection */ "../npn/common/src/lib/visualizations/vis-selection.ts");
var __decorate = (undefined && undefined.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (undefined && undefined.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};


var PhenoTrailVisualizationScopeGroupsComponent = /** @class */ (function () {
    function PhenoTrailVisualizationScopeGroupsComponent() {
    }
    PhenoTrailVisualizationScopeGroupsComponent.prototype.handleChange = function () {
        this.selection.groups = this.networkWrappers.filter(function (w) { return w.selected; }).map(function (w) { return w.group; });
    };
    __decorate([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Input"])(),
        __metadata("design:type", _npn_common_visualizations_vis_selection__WEBPACK_IMPORTED_MODULE_1__["StationAwareVisSelection"])
    ], PhenoTrailVisualizationScopeGroupsComponent.prototype, "selection", void 0);
    __decorate([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Input"])(),
        __metadata("design:type", Array)
    ], PhenoTrailVisualizationScopeGroupsComponent.prototype, "networkWrappers", void 0);
    PhenoTrailVisualizationScopeGroupsComponent = __decorate([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Component"])({
            selector: 'pheno-trail-visualization-scope-groups',
            template: "\n    <h3>Select Groups to Compare</h3>\n    <pheno-trail-visualization-scope-group *ngFor=\"let w of networkWrappers\" [networkWrapper]=\"w\" (change)=\"handleChange()\" class=\"group-input\"></pheno-trail-visualization-scope-group>\n    ",
            styles: ["\n      .group-input {\n        display:block;\n      }\n    "]
        })
    ], PhenoTrailVisualizationScopeGroupsComponent);
    return PhenoTrailVisualizationScopeGroupsComponent;
}());



/***/ }),

/***/ "./src/app/pheno-trail-visualization-scope-selection.component.ts":
/*!************************************************************************!*\
  !*** ./src/app/pheno-trail-visualization-scope-selection.component.ts ***!
  \************************************************************************/
/*! exports provided: NetworkWrapper, PhenoTrailVisualizationScopeSelectionComponent */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "NetworkWrapper", function() { return NetworkWrapper; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "PhenoTrailVisualizationScopeSelectionComponent", function() { return PhenoTrailVisualizationScopeSelectionComponent; });
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @angular/core */ "../../node_modules/@angular/core/fesm5/core.js");
/* harmony import */ var _npn_common__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @npn/common */ "../npn/common/src/lib/index.ts");
/* harmony import */ var _entity_service__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./entity.service */ "./src/app/entity.service.ts");
/* harmony import */ var _npn_common_visualizations_vis_selection__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @npn/common/visualizations/vis-selection */ "../npn/common/src/lib/visualizations/vis-selection.ts");
var __decorate = (undefined && undefined.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (undefined && undefined.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};




var NetworkWrapper = /** @class */ (function () {
    function NetworkWrapper(selection, network, networkService) {
        this.selection = selection;
        this.network = network;
        this.networkService = networkService;
        if (this.selection.groups) { // existing selection
            var g0 = this.selection.groups[0];
            if (g0.mode === _npn_common_visualizations_vis_selection__WEBPACK_IMPORTED_MODULE_3__["SelectionGroupMode"].NETWORK) {
                this.group = this.selection.groups.find(function (g) { return g.id === network.network_id; });
                this.selected = !!this.group;
            }
            else if (g0.mode === _npn_common_visualizations_vis_selection__WEBPACK_IMPORTED_MODULE_3__["SelectionGroupMode"].STATION) {
                this.getStationsWithGroup();
            }
        }
        else {
            this.selected = this.selection.networkIds.indexOf(network.network_id) > -1;
        }
        if (!this.group) {
            // create new group
            this.group = {
                label: network.name,
                mode: _npn_common_visualizations_vis_selection__WEBPACK_IMPORTED_MODULE_3__["SelectionGroupMode"].NETWORK,
                id: network.network_id,
                excludeIds: []
            };
        }
        // set label unconditionally in case it changed
        this.group.label = network.name;
    }
    NetworkWrapper.prototype.getStations = function () {
        var _this = this;
        if (!this.stations) {
            this.stations = this.networkService.getStations(this.network.network_id).then(function (stations) {
                stations.forEach(function (station) { return station.selected = (_this.group.excludeIds || []).indexOf(station.station_id) > -1; });
                return stations;
            });
        }
        return this.stations;
    };
    // component uses this Promise to render station list
    NetworkWrapper.prototype.getStationsWithGroup = function () {
        var _this = this;
        this.stations = this.getStations().then(function (stations) {
            stations.forEach(function (s) {
                s.selected = !!_this.selection.groups ? !!_this.selection.groups.find(function (g) { return g.id === s.station_id; }) : false;
                s.group = {
                    label: _this.network.name + " - " + s.station_name,
                    mode: _npn_common_visualizations_vis_selection__WEBPACK_IMPORTED_MODULE_3__["SelectionGroupMode"].STATION,
                    id: s.station_id
                };
            });
            return stations;
        });
        return this.stations;
    };
    return NetworkWrapper;
}());

var PhenoTrailVisualizationScopeSelectionComponent = /** @class */ (function () {
    function PhenoTrailVisualizationScopeSelectionComponent(networkService) {
        this.networkService = networkService;
        this.visScope = 'allGroups';
        this.networkFetch = false;
    }
    PhenoTrailVisualizationScopeSelectionComponent.prototype.ngOnInit = function () {
        var _this = this;
        this.networkFetch = true;
        this.networks = this.networkService.getNetworks(this.phenoTrail.network_ids)
            .then(function (networks) {
            var wrappers = networks.map(function (n) { return new NetworkWrapper(_this.selection, n, _this.networkService); });
            _this.networkFetch = false;
            return wrappers;
        });
        var selection = this.selection;
        if (selection.groups && selection.groups.length) {
            var g0 = this.selection.groups[0];
            if (g0.mode === _npn_common_visualizations_vis_selection__WEBPACK_IMPORTED_MODULE_3__["SelectionGroupMode"].NETWORK) {
                this.visScope = "compareGroups";
            }
            else if (g0.mode === _npn_common_visualizations_vis_selection__WEBPACK_IMPORTED_MODULE_3__["SelectionGroupMode"].STATION) {
                this.visScope = "compareSites";
            }
        }
        else if (selection.networkIds && selection.networkIds.length && selection.networkIds.length != this.phenoTrail.network_ids.length) {
            this.visScope = "selectGroups";
        }
        else {
            this.visScope = "allGroups";
        }
    };
    Object.defineProperty(PhenoTrailVisualizationScopeSelectionComponent.prototype, "valid", {
        get: function () {
            return this.visScope === 'allGroups' || !!(this.selection.networkIds && this.selection.networkIds.length)
                || !!(this.selection.groups && this.selection.groups.length);
        },
        enumerable: true,
        configurable: true
    });
    PhenoTrailVisualizationScopeSelectionComponent.prototype.scopeChanged = function () {
        var _this = this;
        // reset to a clean slate
        this.selection.stationIds = undefined;
        this.selection.groups = undefined;
        this.selection.networkIds = this.phenoTrail.network_ids.slice();
        switch (this.visScope) {
            case 'allGroups':
                // it's always set and doesn't ever need to change
                break;
            case 'compareGroups':
            case 'selectGroups':
                this.networks.then(function (networks) {
                    networks.forEach(function (n) { return n.selected = _this.visScope === 'selectGroups'; });
                });
                break;
            case 'compareSites':
                this.networks.then(function (networks) {
                    networks.forEach(function (n) {
                        n.selected = _this.visScope === 'selectGroups';
                        n.getStationsWithGroup();
                    });
                });
                break;
        }
    };
    PhenoTrailVisualizationScopeSelectionComponent.prototype.selectGroupChange = function () {
        var _this = this;
        this.networks.then(function (networks) {
            _this.selection.networkIds = networks.filter(function (n) { return n.selected; }).map(function (n) { return n.network.network_id; });
        });
    };
    __decorate([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Input"])(),
        __metadata("design:type", _npn_common__WEBPACK_IMPORTED_MODULE_1__["StationAwareVisSelection"])
    ], PhenoTrailVisualizationScopeSelectionComponent.prototype, "selection", void 0);
    __decorate([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Input"])(),
        __metadata("design:type", _entity_service__WEBPACK_IMPORTED_MODULE_2__["PhenologyTrail"])
    ], PhenoTrailVisualizationScopeSelectionComponent.prototype, "phenoTrail", void 0);
    PhenoTrailVisualizationScopeSelectionComponent = __decorate([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Component"])({
            selector: 'pheno-trail-visualization-scope-selection',
            template: "\n    <mat-radio-group name=\"visScope\" class=\"vis-scope-input\" [(ngModel)]=\"visScope\" (change)=\"scopeChanged()\">\n      <mat-radio-button class=\"vis-scope-radio\" [value]=\"'allGroups'\">Show data for all groups within \"{{phenoTrail.title}}\"</mat-radio-button>\n      <mat-radio-button class=\"vis-scope-radio\" [value]=\"'selectGroups'\">Show data for select groups within \"{{phenoTrail.title}}\"</mat-radio-button>\n      <mat-radio-button class=\"vis-scope-radio\" [value]=\"'compareGroups'\">Compare data between groups within \"{{phenoTrail.title}}\"</mat-radio-button>\n      <mat-radio-button class=\"vis-scope-radio\" [value]=\"'compareSites'\">Compare data between sites within \"{{phenoTrail.title}}\"</mat-radio-button>\n      </mat-radio-group>\n    <mat-progress-spinner *ngIf=\"networkFetch\" mode=\"indeterminate\"></mat-progress-spinner>\n    <div *ngIf=\"visScope === 'selectGroups'\">\n      <hr>\n      <h3 class=\"group-select-header\">Select Groups</h3>\n      <mat-checkbox *ngFor=\"let n of networks | async\" class=\"group-input\" [(ngModel)]=\"n.selected\" (change)=\"selectGroupChange()\" [disabled]=\"n.selected && selection.networkIds.length === 1\">{{n.network.name}}</mat-checkbox>\n    </div>\n    <div *ngIf=\"visScope === 'compareGroups' && networks | async as networkWrappers\">\n      <hr>\n      <pheno-trail-visualization-scope-groups [selection]=\"selection\" [networkWrappers]=\"networkWrappers\"></pheno-trail-visualization-scope-groups>\n    </div>\n    <div *ngIf=\"visScope === 'compareSites' && networks | async as networkWrappers\">\n      <hr>\n      <pheno-trail-visualization-scope-station-groups [selection]=\"selection\" [networkWrappers]=\"networkWrappers\"></pheno-trail-visualization-scope-station-groups>\n    </div>\n    <!--pre *ngIf=\"selection\">{{selection.external | json}}</pre-->\n    ",
            styles: ["\n        .vis-scope-input {\n          display: inline-flex;\n          flex-direction: column;\n        }\n        .vis-scope-radio {\n          margin: 5px;\n        }\n        .group-input {\n          display: block;\n          padding-left: 34px;\n        }\n        .group-select-header{\n          margin-bottom:20px;\n        }\n        \n    "]
        }),
        __metadata("design:paramtypes", [_npn_common__WEBPACK_IMPORTED_MODULE_1__["NetworkService"]])
    ], PhenoTrailVisualizationScopeSelectionComponent);
    return PhenoTrailVisualizationScopeSelectionComponent;
}());



/***/ }),

/***/ "./src/app/pheno-trail-visualization-scope-station-groups.component.ts":
/*!*****************************************************************************!*\
  !*** ./src/app/pheno-trail-visualization-scope-station-groups.component.ts ***!
  \*****************************************************************************/
/*! exports provided: PhenoTrailVisualizationScopeStationGroupsComponent */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "PhenoTrailVisualizationScopeStationGroupsComponent", function() { return PhenoTrailVisualizationScopeStationGroupsComponent; });
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @angular/core */ "../../node_modules/@angular/core/fesm5/core.js");
/* harmony import */ var _npn_common_visualizations_vis_selection__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @npn/common/visualizations/vis-selection */ "../npn/common/src/lib/visualizations/vis-selection.ts");
var __decorate = (undefined && undefined.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (undefined && undefined.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};


var PhenoTrailVisualizationScopeStationGroupsComponent = /** @class */ (function () {
    function PhenoTrailVisualizationScopeStationGroupsComponent() {
    }
    /**
     * Toggle whether a station should be excluded for a selected group
     */
    PhenoTrailVisualizationScopeStationGroupsComponent.prototype.stationChange = function () {
        this.selection.groups = this.networkWrappers.reduce(function (groups, wrapper) {
            wrapper.stations.then(function (stations) {
                stations.filter(function (s) { return s.selected; }).forEach(function (s) { return groups.push(s.group); });
            });
            return groups;
        }, []);
    };
    __decorate([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Input"])(),
        __metadata("design:type", _npn_common_visualizations_vis_selection__WEBPACK_IMPORTED_MODULE_1__["StationAwareVisSelection"])
    ], PhenoTrailVisualizationScopeStationGroupsComponent.prototype, "selection", void 0);
    __decorate([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Input"])(),
        __metadata("design:type", Array)
    ], PhenoTrailVisualizationScopeStationGroupsComponent.prototype, "networkWrappers", void 0);
    PhenoTrailVisualizationScopeStationGroupsComponent = __decorate([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Component"])({
            selector: 'pheno-trail-visualization-scope-station-groups',
            template: "\n    <h3>Select Sites to Compare</h3>\n    <div *ngFor=\"let nw of networkWrappers\">\n      {{nw.network.name}}\n      <div *ngFor=\"let s of nw.stations | async\" class=\"station-input\">\n        <mat-checkbox [(ngModel)]=\"s.selected\" (change)=\"stationChange()\">{{s.station_name}}</mat-checkbox>\n      </div>\n    </div>\n    ",
            styles: ["\n      .group-input {\n        display:block;\n      }\n      .station-input {\n        display: block;\n        padding-left: 34px;\n      }\n    "]
        })
    ], PhenoTrailVisualizationScopeStationGroupsComponent);
    return PhenoTrailVisualizationScopeStationGroupsComponent;
}());



/***/ }),

/***/ "./src/app/phenology-trail-partners.component.scss":
/*!*********************************************************!*\
  !*** ./src/app/phenology-trail-partners.component.scss ***!
  \*********************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = "agm-map {\n  height: 500px; }\n\n.in-info-window {\n  width: 60px;\n  height: 60px;\n  padding: 20px; }\n\n.info-window-card {\n  max-width: 400px; }\n\n.info-window-card h3 {\n    font-weight: 400;\n    font-size: 2em;\n    text-align: center;\n    margin-bottom: 0;\n    line-height: 1em; }\n\n.info-window-card h4 {\n    text-align: center;\n    font-size: 1.4em;\n    margin-top: 0;\n    margin-bottom: 12px;\n    line-height: 1.5em;\n    font-weight: 200; }\n\n.info-window-card ul {\n    margin-top: 0;\n    margin-bottom: 6px;\n    display: flex;\n    justify-content: space-between; }\n\n.info-window-card ul li {\n      width: 170px;\n      margin: 10px auto;\n      list-style: none;\n      text-align: center; }\n\n.info-window-card ul li h3 {\n        line-height: 1em; }\n\n.map-legend {\n  padding: 20px; }\n\n.map-legend h3 {\n    font-size: 2em;\n    line-height: 1em;\n    margin-bottom: 20px; }\n\n.map-legend ul li {\n    margin-bottom: 0;\n    line-height: .5em;\n    list-style: none; }\n\n.map-legend ul li div.legend-box {\n      width: 14px;\n      height: 14px;\n      display: inline-block;\n      margin-right: 10px; }\n"

/***/ }),

/***/ "./src/app/phenology-trail-partners.component.ts":
/*!*******************************************************!*\
  !*** ./src/app/phenology-trail-partners.component.ts ***!
  \*******************************************************/
/*! exports provided: PhenologyTrailPartnersComponent */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "PhenologyTrailPartnersComponent", function() { return PhenologyTrailPartnersComponent; });
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @angular/core */ "../../node_modules/@angular/core/fesm5/core.js");
/* harmony import */ var _entity_service__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./entity.service */ "./src/app/entity.service.ts");
/* harmony import */ var _npn_common__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @npn/common */ "../npn/common/src/lib/index.ts");
/* harmony import */ var _agm_core__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @agm/core */ "../../node_modules/@agm/core/index.js");
/* harmony import */ var d3__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! d3 */ "../../node_modules/d3/index.js");
var __decorate = (undefined && undefined.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (undefined && undefined.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};





var PhenologyTrailPartnersComponent = /** @class */ (function () {
    function PhenologyTrailPartnersComponent(networkService, stationService, mapsAPILoader) {
        this.networkService = networkService;
        this.stationService = stationService;
        this.mapsAPILoader = mapsAPILoader;
        this.itemPluralMapping = {
            'record': {
                '=0': 'Records',
                '=1': 'Record',
                'other': 'Records'
            },
            'individual': {
                '=0': 'Individuals',
                '=1': 'Individual',
                'other': 'Individuals'
            }
        };
        this.mapStyles = _npn_common__WEBPACK_IMPORTED_MODULE_2__["MAP_STYLES"];
    }
    PhenologyTrailPartnersComponent.prototype.ngOnInit = function () {
        var _this = this;
        // map of network_id to a color
        var colorMap = this.entity.network_ids.reduce(function (map, id, i) {
            var color = Object(_npn_common__WEBPACK_IMPORTED_MODULE_2__["getStaticColor"])(i);
            var outline = d3__WEBPACK_IMPORTED_MODULE_4__["color"](color).darker().toString();
            map["" + id] = { color: color, outline: outline };
            return map;
        }, {});
        var mapColors = function (list) { return list.map(function (o) {
            o.colors = colorMap["" + o.network_id];
            return o;
        }); };
        this.networks = this.networkService.getNetworks(this.entity.network_ids).then(mapColors);
        this.stations = this.networkService.getStations(this.entity.network_ids).then(mapColors).then(function (stations) {
            return _this.mapsAPILoader.load().then(function () {
                stations.forEach(function (station) {
                    station.icon = _this.newGoogleMapsSymbol(station);
                });
                return stations;
            });
        });
    };
    PhenologyTrailPartnersComponent.prototype.ngAfterViewInit = function () {
        var _this = this;
        //cycle through the map elements and get the center position of the map
        this.agmMap.mapReady.subscribe(function (map) {
            _this.map = map;
            _this.stations.then(function (stations) {
                var bounds = new google.maps.LatLngBounds();
                for (var _i = 0, stations_1 = stations; _i < stations_1.length; _i++) {
                    var mm = stations_1[_i];
                    bounds.extend(new google.maps.LatLng(mm.latitude, mm.longitude));
                }
                _this.bounds = bounds;
                _this.resize();
            });
        });
    };
    PhenologyTrailPartnersComponent.prototype.resize = function () {
        if (this.map && this.bounds) {
            this.map.fitBounds(this.bounds);
        }
    };
    /**
     * Get the station information for display in the agm-info-window
     * @param selectedStation - The station that is selected. Needs latitude, longitude, and station_id
     */
    PhenologyTrailPartnersComponent.prototype.selectMarker = function (selectedStation) {
        var _this = this;
        this.selectedStation = selectedStation;
        this.stationService.getStation(selectedStation.station_id).then(function (station) { return _this.stationInfo = station; });
    };
    PhenologyTrailPartnersComponent.prototype.newGoogleMapsSymbol = function (station) {
        return {
            path: google.maps.SymbolPath.CIRCLE,
            scale: 7,
            fillOpacity: 1,
            fillColor: station.colors.color,
            strokeColor: station.colors.outline,
            strokeWeight: 1
        };
    };
    __decorate([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["ViewChild"])('AgmMap'),
        __metadata("design:type", _agm_core__WEBPACK_IMPORTED_MODULE_3__["AgmMap"])
    ], PhenologyTrailPartnersComponent.prototype, "agmMap", void 0);
    __decorate([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Input"])(),
        __metadata("design:type", _entity_service__WEBPACK_IMPORTED_MODULE_1__["PhenologyTrail"])
    ], PhenologyTrailPartnersComponent.prototype, "entity", void 0);
    __decorate([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["HostListener"])('window:resize'),
        __metadata("design:type", Function),
        __metadata("design:paramtypes", []),
        __metadata("design:returntype", void 0)
    ], PhenologyTrailPartnersComponent.prototype, "resize", null);
    PhenologyTrailPartnersComponent = __decorate([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Component"])({
            selector: 'phenology-trail-partners',
            template: "\n  <agm-map #AgmMap [streetViewControl]=\"false\" [scrollwheel]=\"false\" [styles]=\"mapStyles\">\n    <agm-marker\n        *ngFor=\"let station of stations | async; let i = index\"\n        [latitude]=\"station.latitude\"\n        [longitude]=\"station.longitude\"\n        [iconUrl]=\"station.icon\"\n        (markerClick)=\"selectMarker(station)\"\n    ></agm-marker>\n    <agm-info-window [isOpen]=\"!!selectedStation\" (infoWindowClose)=\"selectedStation = stationInfo = null\"\n    [latitude]=\"selectedStation?.latitude\" [longitude]=\"selectedStation?.longitude\">\n        <npn-logo class=\"in-info-window\" spin=\"true\" *ngIf=\"!stationInfo\"></npn-logo>\n        <div class=\"info-window-card\" *ngIf=\"stationInfo\">\n            <h3>{{stationInfo.site_name}}</h3>\n            <h4>{{stationInfo.group_name}}</h4>\n            <ul>\n                <li><h3>{{stationInfo.num_individuals}}</h3> {{stationInfo.num_individuals | i18nPlural: itemPluralMapping['individual'] }}</li>\n                <li><h3>{{stationInfo.num_records}}</h3> {{stationInfo.num_records | i18nPlural: itemPluralMapping['record']}}</li>\n            </ul>\n        </div>\n    </agm-info-window>\n    \n  </agm-map>\n  <div class=\"map-legend\">\n    <h3>Legend</h3>\n    <ul>\n        <ng-container *ngFor=\"let network of networks | async; let i = index\">\n            <li *ngIf=\"!!network\"><div class=\"legend-box\" [style.background-color]=\"network.colors?.color\"></div> {{network.name}}</li>\n        </ng-container>\n    </ul>\n  </div>\n  ",
            styles: [__webpack_require__(/*! ./phenology-trail-partners.component.scss */ "./src/app/phenology-trail-partners.component.scss")]
        }),
        __metadata("design:paramtypes", [_npn_common__WEBPACK_IMPORTED_MODULE_2__["NetworkService"],
            _npn_common__WEBPACK_IMPORTED_MODULE_2__["StationService"],
            _agm_core__WEBPACK_IMPORTED_MODULE_3__["MapsAPILoader"]])
    ], PhenologyTrailPartnersComponent);
    return PhenologyTrailPartnersComponent;
}());



/***/ }),

/***/ "./src/app/refuge-visualization-scope-selection.component.ts":
/*!*******************************************************************!*\
  !*** ./src/app/refuge-visualization-scope-selection.component.ts ***!
  \*******************************************************************/
/*! exports provided: RefugeVisualizationScopeSelectionComponent */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "RefugeVisualizationScopeSelectionComponent", function() { return RefugeVisualizationScopeSelectionComponent; });
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @angular/core */ "../../node_modules/@angular/core/fesm5/core.js");
/* harmony import */ var _entity_service__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./entity.service */ "./src/app/entity.service.ts");
/* harmony import */ var _npn_common__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @npn/common */ "../npn/common/src/lib/index.ts");
/* harmony import */ var _npn_common_visualizations_vis_selection__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @npn/common/visualizations/vis-selection */ "../npn/common/src/lib/visualizations/vis-selection.ts");
var __decorate = (undefined && undefined.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (undefined && undefined.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};




/**
    Radius Dropdown Options for "Compare refuge data to sites within a radius".
    text is what you want the user to see and value is the real value in the form.
*/
var RADIUS_OPTIONS = [{ value: 10, text: "10" }, { value: 25, text: "25" }, { value: 50, text: "50" }];
var RADIUS_DEFAULT = 0; //The index of the default radius selected when page first loads
var RefugeVisualizationScopeSelectionComponent = /** @class */ (function () {
    function RefugeVisualizationScopeSelectionComponent(networkService) {
        this.networkService = networkService;
        this.radiusDropdownOptions = RADIUS_OPTIONS;
        this.radius = RADIUS_OPTIONS[RADIUS_DEFAULT].value;
        this.visScope = 'refuge';
        this.stationFetch = false;
    }
    RefugeVisualizationScopeSelectionComponent.prototype.ngOnInit = function () {
        var _this = this;
        var selection = this.selection;
        if (selection.groups && selection.groups.length) {
            // this control is simplistic when it comes to groups, there are only two use cases
            this.visScope = selection.groups[0].mode === _npn_common_visualizations_vis_selection__WEBPACK_IMPORTED_MODULE_3__["SelectionGroupMode"].STATION
                ? 'stationGroup'
                : 'outsideGroup';
        }
        else if (selection.stationIds && selection.stationIds.length) {
            this.visScope = 'station';
        }
        else {
            this.visScope = 'refuge';
        }
        if (this.visScope !== 'refuge') {
            this.loadStations().then(function (stations) { return stations.forEach(function (s) {
                if (_this.visScope === 'station') {
                    s.selected = selection.stationIds.indexOf(s.station_id) !== -1;
                }
                else if (_this.visScope === 'outsideGroup') {
                    s.selected = selection.groups[0].excludeIds.indexOf(s.station_id) !== -1;
                }
                else {
                    s.selected = !!selection.groups.reduce(function (found, g) { return (found || (g.id === s.station_id ? s : undefined)); }, undefined);
                }
            }); });
            if (this.visScope === 'outsideGroup') {
                this.radius = this.selection.groups[1].outsideRadiusMiles
                    ? this.selection.groups[1].outsideRadiusMiles
                    : RADIUS_OPTIONS[RADIUS_DEFAULT].value;
            }
        }
    };
    RefugeVisualizationScopeSelectionComponent.prototype.loadStations = function () {
        var _this = this;
        if (!this._stations) {
            this.stationFetch = true;
            this._stations = this.networkService.getStations(this.refuge.network_id)
                .then(function (stations) {
                _this.stations = stations;
                _this.stationFetch = false;
                return stations;
            });
        }
        return this._stations;
    };
    RefugeVisualizationScopeSelectionComponent.prototype.scopeChanged = function () {
        var _this = this;
        // reset to a clean slate
        this.selection.stationIds = undefined;
        this.selection.groups = undefined;
        switch (this.visScope) {
            case 'refuge':
                // it's always set and doesn't ever need to change
                // this.selection.networkIds = [this.refuge.network_id];
                break;
            case 'station':
            case 'stationGroup':
            case 'outsideGroup':
                this.loadStations().then(function (stations) {
                    // all selected for station mode and all de-selected for stationGroup mode
                    stations.forEach(function (s) { return s.selected = _this.visScope === 'station'; });
                    if (_this.visScope === 'outsideGroup') {
                        _this.outsideGroupChange();
                    }
                });
                break;
        }
    };
    RefugeVisualizationScopeSelectionComponent.prototype.outsideGroupChange = function () {
        var exludeIds = this.stations.filter(function (s) { return s.selected; }).map(function (s) { return s.station_id; });
        this.selection.groups = [{
                label: this.refuge.title,
                mode: _npn_common_visualizations_vis_selection__WEBPACK_IMPORTED_MODULE_3__["SelectionGroupMode"].NETWORK,
                id: this.refuge.network_id,
                excludeIds: exludeIds
            }, {
                label: "Sites within " + this.radius + " miles",
                mode: _npn_common_visualizations_vis_selection__WEBPACK_IMPORTED_MODULE_3__["SelectionGroupMode"].OUTSIDE,
                id: this.refuge.network_id,
                outsideRadiusMiles: this.radius
            }];
    };
    RefugeVisualizationScopeSelectionComponent.prototype.stationChange = function () {
        switch (this.visScope) {
            case 'station':
                this.selection.stationIds = this.stations.filter(function (s) { return s.selected; }).map(function (s) { return s.station_id; });
                break;
            case 'stationGroup':
                var mode_1 = _npn_common_visualizations_vis_selection__WEBPACK_IMPORTED_MODULE_3__["SelectionGroupMode"].STATION;
                this.selection.groups = this.stations
                    .filter(function (s) { return s.selected; })
                    .map(function (s) {
                    var label = s.station_name;
                    var id = s.station_id;
                    return { mode: mode_1, id: id, label: label };
                });
                break;
            case 'outsideGroup':
                this.outsideGroupChange();
                break;
        }
    };
    Object.defineProperty(RefugeVisualizationScopeSelectionComponent.prototype, "valid", {
        get: function () {
            return this.visScope !== 'stationGroup' || !!(this.selection.groups && this.selection.groups.length);
        },
        enumerable: true,
        configurable: true
    });
    __decorate([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Input"])(),
        __metadata("design:type", _npn_common__WEBPACK_IMPORTED_MODULE_2__["StationAwareVisSelection"])
    ], RefugeVisualizationScopeSelectionComponent.prototype, "selection", void 0);
    __decorate([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Input"])(),
        __metadata("design:type", _entity_service__WEBPACK_IMPORTED_MODULE_1__["Refuge"])
    ], RefugeVisualizationScopeSelectionComponent.prototype, "refuge", void 0);
    RefugeVisualizationScopeSelectionComponent = __decorate([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Component"])({
            selector: 'refuge-visualization-scope-selection',
            template: "\n    <mat-radio-group name=\"visScope\" class=\"vis-scope-input\" [(ngModel)]=\"visScope\" (change)=\"scopeChanged()\">\n      <mat-radio-button class=\"vis-scope-radio\" [value]=\"'refuge'\">Show data for all sites at \"{{refuge.title}}\"</mat-radio-button>\n      <mat-radio-button class=\"vis-scope-radio\" [value]=\"'station'\">Show data for select sites at \"{{refuge.title}}\"</mat-radio-button>\n      <mat-radio-button class=\"vis-scope-radio\" [value]=\"'stationGroup'\">Compare data for select sites at \"{{refuge.title}}\"</mat-radio-button>\n      <mat-radio-button class=\"vis-scope-radio\" [value]=\"'outsideGroup'\">Compare refuge data to sites within a radius</mat-radio-button>\n    </mat-radio-group>\n    <hr *ngIf=\"visScope !== 'refuge'\" />\n    <mat-form-field *ngIf=\"visScope === 'outsideGroup'\" class=\"radius-form-field\">\n        <mat-label>Radius (in miles)</mat-label>\n        <mat-select class=\"vis-scope-input\" class=\"radius-input\" [(ngModel)]=\"radius\" (selectionChange)=\"outsideGroupChange()\">\n            <mat-option *ngFor=\"let opt of radiusDropdownOptions\" [value]=\"opt.value\">{{opt.text}}</mat-option>\n        </mat-select>\n    </mat-form-field>   \n    <mat-progress-spinner *ngIf=\"stationFetch\" mode=\"indeterminate\"></mat-progress-spinner>\n    <div *ngIf=\"(visScope === 'station' || visScope === 'stationGroup' || visScope === 'outsideGroup')\">\n    <h3 *ngIf=\"(visScope === 'outsideGroup')\">Select Sites to Exclude</h3>\n        <mat-checkbox *ngFor=\"let s of stations\" class=\"station-input\" [(ngModel)]=\"s.selected\" (change)=\"stationChange()\"\n            [disabled]=\"visScope === 'station' && s.selected && selection.stationIds?.length === 1\">{{s.station_name}}</mat-checkbox>\n    </div>\n    <!--<pre *ngIf=\"selection\">{{selection.external | json}}</pre>-->\n    ",
            styles: ["\n        .vis-scope-input {\n          display: inline-flex;\n          flex-direction: column;\n        }\n        .vis-scope-radio {\n          margin: 5px;\n        }\n        .station-input {\n            display: block;\n            padding-left: 34px;\n        },\n        .radius-form-field {\n            margin:20px 0 20px 0;\n        }\n        .radius-input {\n            width:200px;\n        }\n    "]
        }),
        __metadata("design:paramtypes", [_npn_common__WEBPACK_IMPORTED_MODULE_2__["NetworkService"]])
    ], RefugeVisualizationScopeSelectionComponent);
    return RefugeVisualizationScopeSelectionComponent;
}());



/***/ }),

/***/ "./src/app/resources.component.ts":
/*!****************************************!*\
  !*** ./src/app/resources.component.ts ***!
  \****************************************/
/*! exports provided: SafeHtmlPipe, ResourcesComponent */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "SafeHtmlPipe", function() { return SafeHtmlPipe; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ResourcesComponent", function() { return ResourcesComponent; });
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @angular/core */ "../../node_modules/@angular/core/fesm5/core.js");
/* harmony import */ var _entity_service__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./entity.service */ "./src/app/entity.service.ts");
/* harmony import */ var _angular_platform_browser__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @angular/platform-browser */ "../../node_modules/@angular/platform-browser/fesm5/platform-browser.js");
var __decorate = (undefined && undefined.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (undefined && undefined.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};



var SafeHtmlPipe = /** @class */ (function () {
    function SafeHtmlPipe(sanitized) {
        this.sanitized = sanitized;
    }
    SafeHtmlPipe.prototype.transform = function (value) {
        return this.sanitized.bypassSecurityTrustHtml(value);
    };
    SafeHtmlPipe = __decorate([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Pipe"])({ name: 'safeHtml' }),
        __metadata("design:paramtypes", [_angular_platform_browser__WEBPACK_IMPORTED_MODULE_2__["DomSanitizer"]])
    ], SafeHtmlPipe);
    return SafeHtmlPipe;
}());

var ResourcesComponent = /** @class */ (function () {
    function ResourcesComponent() {
        this.userIsLoggedIn = false;
    }
    __decorate([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Input"])(),
        __metadata("design:type", _entity_service__WEBPACK_IMPORTED_MODULE_1__["EntityBase"])
    ], ResourcesComponent.prototype, "entity", void 0);
    __decorate([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Input"])(),
        __metadata("design:type", Boolean)
    ], ResourcesComponent.prototype, "userIsLoggedIn", void 0);
    ResourcesComponent = __decorate([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Component"])({
            selector: 'fws-dashboard-resources',
            template: "\n    <div [innerHtml]=\"entity && entity.resources ? (entity.resources | safeHtml) : ''\"></div>\n    <a mat-raised-button *ngIf=\"!userIsLoggedIn\" [href]=\"'//www.usanpn.org/user/register?default_group_id='+entity.network_id\">Register</a>\n    <a mat-raised-button *ngIf=\"!userIsLoggedIn\" href=\"/user/login\">Login</a>\n    <a mat-raised-button *ngIf=\"userIsLoggedIn\" href=\"//mynpn.usanpn.org/npnapps/\" target=\"_blank\">My Observation Deck</a>\n    ",
            styles: ["\n        a[mat-raised-button] {\n            margin-right: 5px;\n        }\n    "]
        })
    ], ResourcesComponent);
    return ResourcesComponent;
}());



/***/ }),

/***/ "./src/environments/environment.ts":
/*!*****************************************!*\
  !*** ./src/environments/environment.ts ***!
  \*****************************************/
/*! exports provided: environment */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "environment", function() { return environment; });
// This file can be replaced during build by using the `fileReplacements` array.
// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.
// The list of file replacements can be found in `angular.json`.
var environment = {
    production: false,
    googleMapsApiKey: 'AIzaSyAsTM8XaktfkwpjEeDMXkNrojaiB2W5WyE',
};
/*
 * For easier debugging in development mode, you can import the following file
 * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.
 *
 * This import should be commented out in production mode because it will have a negative impact
 * on performance if an error is thrown.
 */
// import 'zone.js/dist/zone-error';  // Included with Angular CLI.


/***/ }),

/***/ "./src/main.ts":
/*!*********************!*\
  !*** ./src/main.ts ***!
  \*********************/
/*! no exports provided */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @angular/core */ "../../node_modules/@angular/core/fesm5/core.js");
/* harmony import */ var _angular_platform_browser_dynamic__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @angular/platform-browser-dynamic */ "../../node_modules/@angular/platform-browser-dynamic/fesm5/platform-browser-dynamic.js");
/* harmony import */ var _app_app_module__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./app/app.module */ "./src/app/app.module.ts");
/* harmony import */ var _environments_environment__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./environments/environment */ "./src/environments/environment.ts");
/* harmony import */ var hammerjs__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! hammerjs */ "../../node_modules/hammerjs/hammer.js");
/* harmony import */ var hammerjs__WEBPACK_IMPORTED_MODULE_4___default = /*#__PURE__*/__webpack_require__.n(hammerjs__WEBPACK_IMPORTED_MODULE_4__);





if (_environments_environment__WEBPACK_IMPORTED_MODULE_3__["environment"].production) {
    Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["enableProdMode"])();
}
Object(_angular_platform_browser_dynamic__WEBPACK_IMPORTED_MODULE_1__["platformBrowserDynamic"])().bootstrapModule(_app_app_module__WEBPACK_IMPORTED_MODULE_2__["AppModule"]);


/***/ }),

/***/ 0:
/*!***************************!*\
  !*** multi ./src/main.ts ***!
  \***************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

module.exports = __webpack_require__(/*! /opt/TeamCity/buildAgent/work/d4924b5e8f54b001/npn-viz-apps/projects/fws-dashboard/src/main.ts */"./src/main.ts");


/***/ })

},[[0,"runtime","vendor"]]]);
//# sourceMappingURL=main.js.map