{"version":3,"sources":["webpack:///../fws-dashboard/src/app/entity.service.ts","webpack:///../fws-dashboard/src/app/resources.component.ts","webpack:///../npn/common/src/lib/common/application-settings.ts","webpack:///../npn/common/src/lib/common/cache.service.ts","webpack:///../npn/common/src/lib/common/config.ts","webpack:///../npn/common/src/lib/common/constants.ts","webpack:///../npn/common/src/lib/common/detect-ie.ts","webpack:///../npn/common/src/lib/common/doy.pipe.ts","webpack:///../npn/common/src/lib/common/guid.ts","webpack:///../npn/common/src/lib/common/index.ts","webpack:///../npn/common/src/lib/common/legend-doy.pipe.ts","webpack:///../npn/common/src/lib/common/monitors-destroy.ts","webpack:///../npn/common/src/lib/common/network.service.ts","webpack:///../npn/common/src/lib/common/npn-common.module.ts","webpack:///../npn/common/src/lib/common/npn-logo.component.ts","webpack:///../npn/common/src/lib/common/npn-service-utils.service.ts","webpack:///../npn/common/src/lib/common/phenophase.ts","webpack:///../npn/common/src/lib/common/public_api.ts","webpack:///../npn/common/src/lib/common/species-title.pipe.ts","webpack:///../npn/common/src/lib/common/species.service.ts","webpack:///../npn/common/src/lib/common/species.ts","webpack:///../npn/common/src/lib/common/static-color.ts","webpack:///../npn/common/src/lib/common/station.service.ts","webpack:///../npn/common/src/lib/gridded/boundary.service.ts","webpack:///../npn/common/src/lib/gridded/default-map-layer-legend.ts","webpack:///../npn/common/src/lib/gridded/google-feature-bounds.ts","webpack:///../npn/common/src/lib/gridded/gridded-common.ts","webpack:///../npn/common/src/lib/gridded/index.ts","webpack:///../npn/common/src/lib/gridded/map-layer-legend.component.scss","webpack:///../npn/common/src/lib/gridded/map-layer-legend.component.ts","webpack:///../npn/common/src/lib/gridded/map-layer-legend.ts","webpack:///../npn/common/src/lib/gridded/map-layer.ts","webpack:///../npn/common/src/lib/gridded/npn-gridded.module.ts","webpack:///../npn/common/src/lib/gridded/npn-map-layer.service.ts","webpack:///../npn/common/src/lib/gridded/pest-map-layer-legend.ts","webpack:///../npn/common/src/lib/gridded/pest-map-layer.ts","webpack:///../npn/common/src/lib/gridded/pipes.ts","webpack:///../npn/common/src/lib/gridded/public_api.ts","webpack:///../npn/common/src/lib/gridded/supports-opacity-control.component.ts","webpack:///../npn/common/src/lib/gridded/wcs-data.service.ts","webpack:///../npn/common/src/lib/gridded/wms-map-layer-legend.ts","webpack:///../npn/common/src/lib/gridded/wms-map-layer.ts","webpack:///../npn/common/src/lib/index.ts","webpack:///../npn/common/src/lib/npn-lib.module.ts","webpack:///../npn/common/src/lib/public_api.ts","webpack:///../npn/common/src/lib/visualizations/activity-curves/activity-curve.ts","webpack:///../npn/common/src/lib/visualizations/activity-curves/activity-curves-control.component.ts","webpack:///../npn/common/src/lib/visualizations/activity-curves/activity-curves-selection-factory.service.ts","webpack:///../npn/common/src/lib/visualizations/activity-curves/activity-curves-selection.ts","webpack:///../npn/common/src/lib/visualizations/activity-curves/activity-curves.component.ts","webpack:///../npn/common/src/lib/visualizations/activity-curves/curve-control.component.ts","webpack:///../npn/common/src/lib/visualizations/activity-curves/index.ts","webpack:///../npn/common/src/lib/visualizations/activity-curves/public_api.ts","webpack:///../npn/common/src/lib/visualizations/agdd-time-series/agdd-time-series-selection.factory.ts","webpack:///../npn/common/src/lib/visualizations/agdd-time-series/agdd-time-series-selection.ts","webpack:///../npn/common/src/lib/visualizations/agdd-time-series/agdd-time-series.component.ts","webpack:///../npn/common/src/lib/visualizations/agdd-time-series/agdd-ts-map-layer-control.component.ts","webpack:///../npn/common/src/lib/visualizations/agdd-time-series/index.ts","webpack:///../npn/common/src/lib/visualizations/agdd-time-series/public_api.ts","webpack:///../npn/common/src/lib/visualizations/calendar/calendar-control.component.ts","webpack:///../npn/common/src/lib/visualizations/calendar/calendar-selection-factory.service.ts","webpack:///../npn/common/src/lib/visualizations/calendar/calendar-selection.ts","webpack:///../npn/common/src/lib/visualizations/calendar/calendar.component.html","webpack:///../npn/common/src/lib/visualizations/calendar/calendar.component.ts","webpack:///../npn/common/src/lib/visualizations/calendar/index.ts","webpack:///../npn/common/src/lib/visualizations/calendar/public_api.ts","webpack:///../npn/common/src/lib/visualizations/clipped-wms-map/clipped-wms-map-control.component.ts","webpack:///../npn/common/src/lib/visualizations/clipped-wms-map/clipped-wms-map-selection-factory.ts","webpack:///../npn/common/src/lib/visualizations/clipped-wms-map/clipped-wms-map-selection.ts","webpack:///../npn/common/src/lib/visualizations/clipped-wms-map/clipped-wms-map-statistics.component.ts","webpack:///../npn/common/src/lib/visualizations/clipped-wms-map/clipped-wms-map.component.html","webpack:///../npn/common/src/lib/visualizations/clipped-wms-map/clipped-wms-map.component.scss","webpack:///../npn/common/src/lib/visualizations/clipped-wms-map/clipped-wms-map.component.ts","webpack:///../npn/common/src/lib/visualizations/clipped-wms-map/index.ts","webpack:///../npn/common/src/lib/visualizations/clipped-wms-map/public_api.ts","webpack:///../npn/common/src/lib/visualizations/common-controls/higher-species-phenophase-input.component.ts","webpack:///../npn/common/src/lib/visualizations/common-controls/index.ts","webpack:///../npn/common/src/lib/visualizations/common-controls/public_api.ts","webpack:///../npn/common/src/lib/visualizations/common-controls/year-range-input.component.ts","webpack:///../npn/common/src/lib/visualizations/index.ts","webpack:///../npn/common/src/lib/visualizations/map-visualization-base.component.ts","webpack:///../npn/common/src/lib/visualizations/map/consolidated-map-layer-control.component.ts","webpack:///../npn/common/src/lib/visualizations/map/extent-controls.ts","webpack:///../npn/common/src/lib/visualizations/map/gridded-range-slider-control.component.ts","webpack:///../npn/common/src/lib/visualizations/map/index.ts","webpack:///../npn/common/src/lib/visualizations/map/map-selection.factory.ts","webpack:///../npn/common/src/lib/visualizations/map/map-selection.ts","webpack:///../npn/common/src/lib/visualizations/map/map-visualization-marker-iw.component.ts","webpack:///../npn/common/src/lib/visualizations/map/map-visualization.component.scss","webpack:///../npn/common/src/lib/visualizations/map/map-visualization.component.ts","webpack:///../npn/common/src/lib/visualizations/map/public_api.ts","webpack:///../npn/common/src/lib/visualizations/observation-date-vis-selection.ts","webpack:///../npn/common/src/lib/visualizations/observation-frequency/index.ts","webpack:///../npn/common/src/lib/visualizations/observation-frequency/observation-frequency-control.component.ts","webpack:///../npn/common/src/lib/visualizations/observation-frequency/observation-frequency-selection-factory.service.ts","webpack:///../npn/common/src/lib/visualizations/observation-frequency/observation-frequency-selection.ts","webpack:///../npn/common/src/lib/visualizations/observation-frequency/observation-frequency.component.ts","webpack:///../npn/common/src/lib/visualizations/observation-frequency/public_api.ts","webpack:///../npn/common/src/lib/visualizations/observer-activity/index.ts","webpack:///../npn/common/src/lib/visualizations/observer-activity/observer-activity-control.component.ts","webpack:///../npn/common/src/lib/visualizations/observer-activity/observer-activity-selection-factory.service.ts","webpack:///../npn/common/src/lib/visualizations/observer-activity/observer-activity-selection.ts","webpack:///../npn/common/src/lib/visualizations/observer-activity/observer-activity.component.html","webpack:///../npn/common/src/lib/visualizations/observer-activity/observer-activity.component.ts","webpack:///../npn/common/src/lib/visualizations/observer-activity/public_api.ts","webpack:///../npn/common/src/lib/visualizations/public_api.ts","webpack:///../npn/common/src/lib/visualizations/scatter-plot/index.ts","webpack:///../npn/common/src/lib/visualizations/scatter-plot/public_api.ts","webpack:///../npn/common/src/lib/visualizations/scatter-plot/scatter-plot-controls.component.ts","webpack:///../npn/common/src/lib/visualizations/scatter-plot/scatter-plot-selection-factory.service.ts","webpack:///../npn/common/src/lib/visualizations/scatter-plot/scatter-plot-selection.ts","webpack:///../npn/common/src/lib/visualizations/scatter-plot/scatter-plot.component.ts","webpack:///../npn/common/src/lib/visualizations/site-or-summary-vis-selection.ts","webpack:///../npn/common/src/lib/visualizations/svg-visualization-base.component.html","webpack:///../npn/common/src/lib/visualizations/svg-visualization-base.component.scss","webpack:///../npn/common/src/lib/visualizations/svg-visualization-base.component.ts","webpack:///../npn/common/src/lib/visualizations/vis-selection.ts","webpack:///../npn/common/src/lib/visualizations/visualization-base.component.ts","webpack:///../npn/common/src/lib/visualizations/visualization-download.component.ts","webpack:///../npn/common/src/lib/visualizations/visualization-selection-factory.service.ts","webpack:///../npn/common/src/lib/visualizations/visualization.component.ts","webpack:///../npn/common/src/lib/visualizations/visualizations.module.ts","webpack:///./$_lazy_route_resource lazy namespace object","webpack:///./src/app/app.module.ts","webpack:///./src/app/fli-pcnt.ts","webpack:///./src/app/flyways.ts","webpack:///./src/app/map-base.ts","webpack:///./src/app/refuge-control.component.scss","webpack:///./src/app/refuge-control.component.ts","webpack:///./src/app/refuge.service.ts","webpack:///./src/app/spring-dashboard.component.scss","webpack:///./src/app/spring-dashboard.component.ts","webpack:///./src/app/start-of-spring-dialog.component.ts","webpack:///./src/app/start-of-spring.component.scss","webpack:///./src/app/start-of-spring.component.ts","webpack:///./src/app/status-of-spring.component.scss","webpack:///./src/app/status-of-spring.component.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["import {Injectable} from '@angular/core';\n\nimport {HttpClient} from '@angular/common/http';\n\nimport {CacheService,VisualizationSelectionFactory,VisSelection} from '@npn/common';\n\n// using class instead of interface so can use instanceof\nexport class EntityBase {\n    id:string;\n    title:string;\n    selections:VisSelection[];\n    resources?:string;\n}\nexport class Refuge extends EntityBase {\n    network_id:number;\n    boundary_id:string;\n}\nexport class PhenologyTrail extends EntityBase {\n    network_ids:number[];\n}\n\n// this means that the app can no longer function outside of the context of Drupal, period.\nconst API_ROOT = '/api';\n\nexport enum DashboardMode {\n    REFUGE = 'refuge',\n    PHENO_TRAIL = 'phenology_trail'\n};\n\nexport const DashboardModeState = (function() {\n    let mode:DashboardMode = DashboardMode.REFUGE;\n    return {\n        get: ():DashboardMode => mode,\n        set: (m:DashboardMode) => mode = m,\n    };\n})();\n\n@Injectable()\nexport class EntityService {\n    constructor(private http: HttpClient,\n                protected cacheService: CacheService,\n                protected selectionFactory: VisualizationSelectionFactory) {\n    }\n\n    parseSelections(json:string):VisSelection[] {\n        let selections = this.selectionFactory.newSelections(JSON.parse(json));\n        /*\n        console.log('JSON',json);\n        console.log('SELECTIONS',selections);\n        */\n        return selections;\n    }\n\n    private apiUrl(entity_id) {\n        return `${API_ROOT}/${DashboardModeState.get()}/${entity_id}`;\n    }\n\n    private castEntity(entityId,apiResult:any):EntityBase {\n        // actually constructing an instance so that other classes can use instanceof\n        let entity;\n        switch(DashboardModeState.get()) {\n            case DashboardMode.REFUGE:\n                entity = new Refuge();\n                break;\n            case DashboardMode.PHENO_TRAIL:\n                entity = new PhenologyTrail();\n                break;\n            default:\n                throw new Error(`Unsupported DASHBOARD_MODE \"${DashboardModeState.get()}\"`);\n        }\n        Object.assign(entity,apiResult);\n        entity.id = entityId;\n        let selections = (entity.selections||[]).map(s => JSON.parse(s));\n        entity.selections = this.selectionFactory.newSelections(selections);\n        return entity;\n    }\n\n    get(entity_id):Promise<EntityBase> {\n        return this.http.get(this.apiUrl(entity_id))\n                .toPromise()\n                .then(response => this.castEntity(entity_id,response));\n    }\n\n    save(entity:EntityBase):Promise<EntityBase> {\n        let r = {...{},...entity} as any;\n        r.selections = (r.selections||[]).map(s => JSON.stringify(s.external) );\n        let json = JSON.stringify(r);\n        console.log(`JSON ${json}`);\n        return this.http.put(this.apiUrl(entity.id),json,{headers:{'Content-Type':'application/json'}})\n                .toPromise()\n                .then(response => this.castEntity(entity.id,response));\n    }\n}\n","import {Component,Input, Pipe, PipeTransform} from '@angular/core';\nimport {EntityBase} from './entity.service';\nimport { DomSanitizer } from '@angular/platform-browser';\n\n@Pipe({ name: 'safeHtml'})\nexport class SafeHtmlPipe implements PipeTransform  {\n  constructor(private sanitized: DomSanitizer) {}\n  transform(value) {\n    return this.sanitized.bypassSecurityTrustHtml(value);\n  }\n}\n\n@Component({\n    selector: 'fws-dashboard-resources',\n    template: `\n    <div [innerHtml]=\"entity && entity.resources ? (entity.resources | safeHtml) : ''\"></div>\n    <a mat-raised-button *ngIf=\"!userIsLoggedIn\" [href]=\"'//www.usanpn.org/user/register?default_group_id='+entity.network_id\">Register</a>\n    <a mat-raised-button *ngIf=\"!userIsLoggedIn\" href=\"/user/login\">Login</a>\n    <a mat-raised-button *ngIf=\"userIsLoggedIn\" href=\"//mynpn.usanpn.org/npnapps/\" target=\"_blank\">My Observation Deck</a>\n    `,\n    styles:[`\n        a[mat-raised-button] {\n            margin-right: 5px;\n        }\n    `]\n})\nexport class ResourcesComponent {\n    @Input()\n    entity:EntityBase;\n    @Input()\n    userIsLoggedIn:boolean = false;\n}\n","/**\n * Ways in which a species' title can be displayed.\n * @see SpeciesTitlePipe\n */\nexport enum SpeciesTitleFormat {\n    CommonName = 'common-name',\n    ScientificName = 'scientific-name'\n};\n\nexport interface AppSettings {\n    /** 'common-name' || 'scientific-name */\n    speciesTitleFormat?: SpeciesTitleFormat;\n}\n\n/**\n * Holds application level settings that can be altered by the user.\n * This is just a class and not an `@Injectable` service because it has\n * no `@Injectable` dependencies so it's just more simple.\n */\nclass ApplicationSettings implements AppSettings {\n    private settings:AppSettings = {\n        speciesTitleFormat: SpeciesTitleFormat.CommonName\n    };\n\n    get speciesTitleFormat():SpeciesTitleFormat { return this.settings.speciesTitleFormat; }\n    set speciesTitleFormat(f:SpeciesTitleFormat) { this.settings.speciesTitleFormat = f; }\n}\n\nexport const APPLICATION_SETTINGS = new ApplicationSettings();","import { Injectable, Inject } from '@angular/core';\nimport { NpnConfiguration, NPN_CONFIGURATION } from './config';\nimport { Md5 } from 'ts-md5/dist/md5';\n\n@Injectable()\nexport class CacheService {\n    ttl: number = (60 * 60 * 1000); // default 1 hour\n\n    // has to inject NpnConfiguration since can't use NpnServiceUtils\n    // w/out introducing a circular dependency.\n    constructor(@Inject(NPN_CONFIGURATION) public config: NpnConfiguration) {\n        if ((typeof (config.cacheTTL)) === 'number') {\n            this.ttl = config.cacheTTL * 60 * 1000; // value in minutes\n        }\n        console.log(`CacheService Time To Live ${this.ttl / 60000} minutes`);\n        if (this.ttl === 0) {\n            console.log('Caching disabled clearing local session storage');\n            sessionStorage.clear();\n        }\n    }\n\n    cacheKey(key: any): string {\n        if (typeof (key) !== 'string') {\n            key = JSON.stringify(key);\n        }\n        // not sure about the .toString() on the end since Md=5.hashStr returns string Int32Array\n        return Md5.hashStr(key).toString();\n    }\n\n    get(key: any): any {\n        if (this.ttl <= 0) {\n            return null; // caching disabled\n        }\n        let ck = this.cacheKey(key),\n            entry: any = sessionStorage.getItem(ck);\n        if (entry) {\n            entry = JSON.parse(entry) as CacheEntry;\n            if (Date.now() < entry.expiry) {\n                console.log('cache hit', ck, key);\n                return entry.data;\n            }\n            console.log('cache expired', ck);\n            window.sessionStorage.removeItem(ck);\n        } else {\n            console.log('cache miss', ck);\n        }\n        return null;\n    }\n\n    set(key: any, data: any): void {\n        if (this.ttl <= 0) {\n            return null; // caching disabled\n        }\n        let ck = this.cacheKey(key);\n        if (data) {\n            let entry: CacheEntry = {\n                expiry: (Date.now() + this.ttl),\n                data: data\n            };\n            console.log('caching', ck, data);\n            try {\n                sessionStorage.setItem(ck, JSON.stringify(entry));\n            } catch (ex) {\n                console.log('error storing item in cache', ex);\n                // the assumption here is that this has happened because\n                // we've stored too much, do the simplest thing\n                // wipe it clean and try again.\n                console.log('clearing');\n                sessionStorage.clear();\n                try {\n                    sessionStorage.setItem(ck, JSON.stringify(entry));\n                } catch (ex) {\n                    console.log('error on second store attempt (giving up).', ex);\n                }\n            }\n        } else {\n            console.log('removing from cache', ck);\n            sessionStorage.removeItem(ck);\n        }\n    }\n}\n\nclass CacheEntry {\n    expiry: number;\n    data: any;\n}\n","import { InjectionToken } from '@angular/core';\n\n/**\n * @todo rename dataApiRoot2 and the corresponding methods in NpnServiceUtils\n */\nexport class NpnConfiguration {\n    cacheTTL?: number; // # of minutes for CacheService\n    apiRoot: string; // URL of NPN web services\n    dataApiRoot: string; // URL of NPN data web services (e.g. //data-dev.usanpn.org:3006)\n    dataApiUseStatisticsCache?: boolean; // the value for the useCache parameter for data statistics calls.\n    dataApiRoot2: string; // URL of NPN data2 web services (new, e.g. https://data-dev.usanpn.org/webservices).\n    popApiRoot: string;\n    geoServerRoot: string; // URL of the NPN geo server\n    [x: string]: any; // not going to dictate what else it might have\n}\n\nexport const NPN_CONFIGURATION = new InjectionToken<NpnConfiguration>('NpnConfiguration');\n","export const CURRENT_YEAR = -1;\nexport const CURRENT_YEAR_LABEL = 'Current year';\nexport const CURRENT_YEAR_VALUE = (new Date()).getFullYear();","/**\n * detect IE\n * returns version of IE or false, if browser is not Internet Explorer\n */\nexport function detectIE() {\n    var ua = window.navigator.userAgent;\n  \n    // Test values; Uncomment to check result …\n  \n    // IE 10\n    // ua = 'Mozilla/5.0 (compatible; MSIE 10.0; Windows NT 6.2; Trident/6.0)';\n  \n    // IE 11\n    // ua = 'Mozilla/5.0 (Windows NT 6.3; Trident/7.0; rv:11.0) like Gecko';\n  \n    // IE 12 / Spartan\n    // ua = 'Mozilla/5.0 (Windows NT 10.0; WOW64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/39.0.2171.71 Safari/537.36 Edge/12.0';\n  \n    // Edge (IE 12+)\n    // ua = 'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/46.0.2486.0 Safari/537.36 Edge/13.10586';\n  \n    var msie = ua.indexOf('MSIE ');\n    if (msie > 0) {\n      // IE 10 or older => return version number\n      return parseInt(ua.substring(msie + 5, ua.indexOf('.', msie)), 10);\n    }\n  \n    var trident = ua.indexOf('Trident/');\n    if (trident > 0) {\n      // IE 11 => return version number\n      var rv = ua.indexOf('rv:');\n      return parseInt(ua.substring(rv + 3, ua.indexOf('.', rv)), 10);\n    }\n  \n    var edge = ua.indexOf('Edge/');\n    if (edge > 0) {\n      // Edge (IE 12+) => return version number\n      return parseInt(ua.substring(edge + 5, ua.indexOf('.', edge)), 10);\n    }\n  \n    // other browser\n    return false;\n  }\n  ","import {Pipe,PipeTransform} from '@angular/core';\n\nconst ONE_DAY_MILLIS = (24*60*60*1000);\n\n@Pipe({name: 'doy'})\nexport class DoyPipe implements PipeTransform {\n    transform(date,ignoreLeapYear?:boolean): any {\n        if(typeof(date) === 'string') {\n            var parts = date.split('-');\n            if(parts.length === 3) {\n                var year = parseInt(parts[0]),\n                    month = parseInt(parts[1]),\n                    day = parseInt(parts[2]);\n                if(!isNaN(year) && !isNaN(month) && !isNaN(day) && month < 13 && day < 32) {\n                    date = new Date(year,(month-1),day);\n                }\n            }\n        }\n        if(date instanceof Date) {\n            date = new Date(date.getTime());\n            if(ignoreLeapYear) {\n                // ignore leap years, using 2010 which is known to be a non-leap year\n                date.setFullYear(2010);\n            }\n            var doy = date.getDate();\n            while (date.getMonth() > 0) {\n                // back up to the last day of the last month\n                date.setDate(1);\n                date.setTime(date.getTime()-ONE_DAY_MILLIS);\n                doy += date.getDate();\n            }\n            return doy;\n        }\n        return date;\n    }\n}\n","// https://stackoverflow.com/questions/26501688/a-typescript-guid-class\nexport function newGuid() {\n    return 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g, function(c) {\n        var r = Math.random()*16|0, v = c == 'x' ? r : (r&0x3|0x8);\n        return v.toString(16);\n    });\n}","export * from './public_api';","import {Pipe,PipeTransform} from '@angular/core';\nimport {DatePipe} from '@angular/common';\n\nconst JAN_ONE_2010 = new Date(2010/*(new Date()).getFullYear()*/,0);\nconst JAN_ONE_THIS_YEAR = new Date((new Date()).getFullYear(),0);\nconst ONE_DAY = (24*60*60*1000);\n\n/**\n * Simplified version of thirtyYearAvgDayOfYear that simply takes a number day of year\n * and returns a formatted date.  The optional second argument defines the date format\n * which defaults to 'MMM d'.  The optional third argument defines whether or not the\n * current year should be used as oposed to one known to have 365 days (2010).\n *\n * This filter equates doy 0 with doy 1 since legend scales are inconsistent in this regard.\n */\n@Pipe({name: 'legendDoy'})\nexport class LegendDoyPipe implements PipeTransform {\n    constructor(private datePipe: DatePipe) {}\n\n    transform(doy,fmt?,current_year?): any {\n        doy = Math.round(doy);\n        if(doy === 0) {\n            doy = 1;\n        }\n        fmt = fmt||'MMM d'; // e.g. Jan 1\n        return this.datePipe.transform(new Date((current_year ? JAN_ONE_THIS_YEAR : JAN_ONE_2010).getTime()+((doy-1)*ONE_DAY)),fmt);\n    }\n}\n","import { Subject } from 'rxjs';\n\n/**\n * Simple base class that can be re-used in support of a common pattern where\n * Observable subscriptions may outlast the life of a given component.\n * Extending classes will have a simple Subject, `componentDestroyed` that will\n * emit a single time when the componene is destroyed.\n *\n * This class implenents `ngOnDestroy` so if an extending class over-rides that\n * function it should call the parent implementation or a leak might occur.\n *\n * E.g.\n * ```\n * anObservable.pipe(takeUntil(this.componentDestroyed)).subscribe(...);\n * ```\n */\nexport class MonitorsDestroy {\n    protected componentDestroyed:Subject<any> = new Subject();\n\n    ngOnDestroy() {\n        this.componentDestroyed.next();\n        this.componentDestroyed.complete();\n    }\n}\n","import { Injectable } from '@angular/core';\nimport { NpnServiceUtils } from './npn-service-utils.service';\nimport { Station } from './station';\nimport { Network } from './network';\n\n@Injectable()\nexport class NetworkService {\n\n    constructor(private serviceUtils:NpnServiceUtils) {}\n\n    /**\n     * Get all stations for a network or list of networks.\n     * \n     * @param networkIds A single networkId or an array of networkIds.\n     */\n    getStations(networkIds:number|number[]): Promise<Station[]> {\n        const ids:number[] = Array.isArray(networkIds) ? networkIds : [networkIds];\n        const params = ids.reduce((map,id,i) => {\n                map[`network_ids[${i}]`] = id;\n                return map;\n            },{});\n        return this.serviceUtils.cachedGet(\n            this.serviceUtils.apiUrl('/npn_portal/stations/getAllStations.json'),\n            params\n        );\n    }\n\n    /**\n     * Get station ids nearby to a network (functional for only networks with boundaries).\n     * \n     * @param networkId A single networkId\n     * @param radius The radius to constrain the results by.\n     */\n    getNearbyStationIds(networkId:number,radius:number):Promise<number []> {\n        return this.serviceUtils.cachedGet(\n            this.serviceUtils.dataApiUrl2(`/v0/stations/nearby_stations/${networkId}/${radius}`)\n        ).then(response => response.Station_IDs);\n    }\n\n    /**\n     * Get a single Network by id\n     * \n     * @todo unfortunate that this takes a single networkId and yet returns an array, the function should unwrap the response so callers don't have to.\n     * \n     * @param networkId The id of the Network to fetch.\n     */\n    getNetwork(networkId:number): Promise<Network[]> {\n        return this.serviceUtils.cachedGet(\n            this.serviceUtils.dataApiUrl2(`/v0/networks/${networkId}`)\n        );\n    }\n\n    /**\n     * Get a set of Networks by id.\n     * \n     * @param networkIds The networkIds.\n     */\n    getNetworks(networkIds:number[]): Promise<Network[]> {\n        // ARGH there is a service that can do this in one request but the dataApiUrl2 \n        // service doesn't do this and we don't yet have a link to the new services (not sure if they should be used)\n        // e.g. curl -X GET \"https://data-dev.usanpn.org:3004/v0/networks?network_id=295,724\" -H \"accept: application/json\"\n        // in a development setup dataApiRoot2 is https://data-dev.usanpn.org/webservices (prefixed with /webservices and no 3004)\n        /*\n        return this.serviceUtils.cachedGet(\n            this.serviceUtils.dataApiUrl2('/v0/networks'),\n            {network_id:networkIds.join(',')}\n        );*/\n        // not re-using the getNetwork function because I think it should be fixed to not return an array\n        // but currently fetching the networks with one request per which is less efficient than it could be\n        return Promise.all(\n            networkIds.map(id => this.serviceUtils.cachedGet(this.serviceUtils.dataApiUrl2(`/v0/networks/${id}`)))\n        ).then(results => {\n            // TODO: What to do when given a bad network id?\n            return results.map(result=> result.length == 1 ? result[0] : null).filter(network => !!network);\n        });\n    }\n}\n","import { NgModule, InjectionToken } from '@angular/core';\nimport { HttpClientModule } from '@angular/common/http';\n\nimport { CacheService } from './cache.service';\nimport { SpeciesService } from './species.service';\nimport { NetworkService } from './network.service';\nimport { StationService } from './station.service';\n\nimport { SpeciesTitlePipe, TaxonomicSpeciesTitlePipe } from './species-title.pipe';\nimport { DoyPipe } from './doy.pipe';\nimport { LegendDoyPipe } from './legend-doy.pipe';\n\nimport { DatePipe } from '@angular/common';\n\nimport { NPN_CONFIGURATION } from './config';\nimport { NpnServiceUtils } from './npn-service-utils.service';\nimport { NpnLogoComponent } from './npn-logo.component';\n\nexport const NPN_BASE_HREF = new InjectionToken<string>('npnBaseHref');\n\n@NgModule({\n    imports:[\n        HttpClientModule\n    ],\n    declarations: [\n        SpeciesTitlePipe,\n        TaxonomicSpeciesTitlePipe,\n        LegendDoyPipe,\n        DoyPipe,\n        NpnLogoComponent\n    ],\n    exports: [\n        SpeciesTitlePipe,\n        TaxonomicSpeciesTitlePipe,\n        LegendDoyPipe,\n        DoyPipe,\n        NpnLogoComponent\n    ],\n    providers: [\n        CacheService,\n        SpeciesService,\n        NetworkService,\n        StationService,\n        NpnServiceUtils,\n        SpeciesTitlePipe,\n        TaxonomicSpeciesTitlePipe,\n        DatePipe,\n        DoyPipe,\n        LegendDoyPipe,\n        { provide: NPN_BASE_HREF, useValue: '/' },\n        {\n            provide: NPN_CONFIGURATION, useValue: {\n                apiRoot: '//www-dev.usanpn.org',\n                dataApiRoot: '//data-dev.usanpn.org:3006',\n                geoServerRoot: '//geoserver-dev.usanpn.org/geoserver'\n            }\n        }\n    ]\n})\nexport class NpnCommonModule { }","import { Component, Input, HostBinding } from \"@angular/core\";\n\n@Component({\n    selector: 'npn-logo',\n    template: `\n    <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 391 391\"><g>\n        <path class=\"swirl-top\" d=\"M182,1c-36.3,2.4-68.6,13.4-95.3,32.5c-5.6,4-11.8,8.7-13.7,10.4l-3.5,3L73,46c5.8-1.6,15.6-1.2,22.2,1.1\n                c9.4,3.1,19.3,10.1,30.3,21.3C137.1,80.2,145.6,91,168,122c17.1,23.8,26.5,34.3,39.5,44.2c16.2,12.4,28.9,16.3,49.5,15.5\n                c21.7-0.9,38.4-7.7,53.2-21.6c17.4-16.3,25.7-36.1,25.8-61c0-10.3,0-10.3-2.2-9.6c-21.5,6.6-48.9,3.2-72.9-9.1\n                c-27.3-14.1-51.2-45.7-48.4-64.1c0.7-5.1,6-11,10.6-12c5.3-1,3-2.1-5.8-2.7C199.9,0.4,193.3,0.3,182,1z\"/>\n        <path class=\"swirl-top\" d=\"M256.5,5.9c-8.8,0.9-11.6,1.9-13.9,5.3c-2.2,3.1-2,6.5,0.8,12.5c6.1,13.1,19.8,28.5,30.3,34\n                c11,5.9,28.3,8.6,41.2,6.4l6.5-1.1l8.2,4.5c4.5,2.5,8.7,4.5,9.3,4.5c2.5,0,0.8-4.1-3.6-9l-4.6-5.2l-0.1-10.2\n                c-0.1-9.3-0.4-10.7-3.3-16.7c-5.4-10.8-16-19.1-30-23.2C291.1,5.8,267.9,4.8,256.5,5.9z M315.8,40.2c2.7,2.7,0.7,7.8-2.9,7.8\n                c-2.1,0-4.9-2.6-4.9-4.5C308,40,313.3,37.7,315.8,40.2z\"/>\n        <path class=\"swirl-top\" d=\"M72.5,50.6c-9.9,2.3-10.4,2.6-18.8,11.3c-4.5,4.7-11.1,12.2-14.6,16.6c-9.7,12.3-26,37.8-23,35.9\n                c0.8-0.5,4.6-3,8.6-5.7c9.7-6.4,23.9-13.1,34.8-16.3c8-2.5,10.6-2.7,24-2.7s15.9,0.2,23.8,2.6c4.8,1.5,12.4,4.5,16.9,6.8l8.1,4.1\n                l-3.8-6.9c-11.6-20.8-25.7-37.2-36.6-42.2C85.7,51.2,76.8,49.6,72.5,50.6z\"/>\n        <path class=\"swirl-left\" d=\"M354.6,81.9c1.3,5,0.7,31.5-1,40.5c-4.6,24.2-16.5,43.5-35.4,57.4c-14.1,10.4-23.8,14.3-55.1,22.2\n                c-23.8,6-32.9,8.9-44.6,14.5c-22.7,10.9-35.8,23.3-45,42.6c-5.4,11.5-7.5,21.2-7.5,35.1c0,15.5,1.9,23.6,8.5,37.4\n                c10.3,21.3,27.7,35.9,51.2,43c7.6,2.4,10.6,2.7,22.3,2.8c15.3,0,23.2-1.5,34.5-6.7c19-8.6,31.2-17.5,48-34.8\n                c17.5-18,28.4-33.6,39.6-56.3c28.1-57.2,26.1-119.5-5.7-181.6C358.2,85.8,353.6,78.3,354.6,81.9z M329.4,194.2\n                c-30.6,42.4-63.6,80-84.9,96.8c-13.1,10.3-34,19-49.9,20.6l-6.4,0.7l-0.7-7.7c-1.4-14.8,2.6-33.4,9.7-45.3\n                c5-8.5,14.6-17.5,23.6-22.1c8.9-4.7,17.5-7.3,43.7-13.7c10.5-2.6,23.5-6.4,29.1-8.6c10.9-4.2,24.4-12.7,33.4-20.8\n                c3-2.8,5.7-5.1,5.8-5.1C333,189,331.5,191.4,329.4,194.2z\"/>\n        <path class=\"swirl-right\" d=\"M67.5,108c-17.8,3.8-37.3,16-48,30.2C8.7,152.5,3.6,167,2,187.1C-0.1,215,7.8,248,24.4,280.3\n                c34.1,66.3,95.1,104.5,174.1,109.1l9,0.5l-6.5-1.4c-56.1-12.9-106.1-51.7-136.8-106.2c-14.5-25.7-20.6-47.5-20.7-73.8\n                c0-23.4,4.2-40,14.8-57.7c4.2-6.9,12.6-17.3,13.4-16.5c0.2,0.3-1.6,4.5-4,9.3C58.6,161.8,55,177.6,55,199c0,37.8,14.2,78,39.4,111.7\n                c14.5,19.5,39,42.1,58.8,54.2c14.9,9,31.2,16.2,46.5,20.5c14.6,4,15.2,3.9,5.5-1.4c-45.2-24.2-65.1-62.5-55.7-107.3\n                c0.9-4.3,3.9-15.1,6.6-24c9.7-31.5,12.1-43.7,12-63c0-9.1-0.5-14.3-2.1-20.2C154.6,125.4,111.9,98.7,67.5,108z\"/>\n    </g></svg>\n    `,\n    styles:[`\n    :host {\n        display: block;\n    }\n    svg {\n        width: 100%;\n        height: 100%;\n    }\n    :host.spin > svg {\n        animation-name: spin;\n        animation-duration: 1250ms;\n        animation-iteration-count: infinite;\n        animation-timing-function: linear;\n    }\n    @keyframes spin {\n        from { transform: rotate(0deg); }\n        to { transform: rotate(360deg); }\n    }\n    `]\n})\nexport class NpnLogoComponent {\n    @Input() @HostBinding('class.spin') spin:boolean = false;\n}\n","import { Injectable, Inject } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { CacheService } from './cache.service';\n\nimport { NpnConfiguration, NPN_CONFIGURATION } from './config';\n\n/**\n * @todo rename dataApi[2], etc. (along with NpnConfiguration) to be more meaningful.\n */\n@Injectable()\nexport class NpnServiceUtils {\n    constructor(public http: HttpClient,\n        public cache: CacheService,\n        @Inject(NPN_CONFIGURATION) public config: NpnConfiguration) {\n    }\n\n    public apiUrl(suffix: string) {\n        return `${this.config.apiRoot}${suffix}`;\n    }\n\n    public dataApiUrl(suffix: string) {\n        return `${this.config.dataApiRoot}${suffix}`;\n    }\n\n    public dataApiUrl2(suffix: string) {\n        return `${this.config.dataApiRoot2}${suffix}`;\n    }\n\n    public geoServerUrl(suffix: string) {\n        return `${this.config.geoServerRoot}${suffix}`;\n    }\n\n    public popApipUrl(suffix:string) {\n        return `${this.config.popApiRoot}${suffix}`;\n    }\n\n    get dataApiUseStatisticsCache(): boolean {\n        return typeof (this.config.dataApiUseStatisticsCache) === 'boolean' ?\n            this.config.dataApiUseStatisticsCache : false;\n    }\n\n    public get(url: string, params?: any, asText?: boolean): Promise<any> {\n        params = params || {};\n        return asText\n            ? this.http.get(url, { params: params, responseType: 'text' }).toPromise()\n            : this.http.get<any>(url, { params: params }).toPromise()\n    }\n\n    public cachedGet(url: string, params?: any, asText?: boolean): Promise<any> {\n        params = params || {};\n        const cacheKey = {\n            u: url,\n            params: params\n        };\n        const data = this.cache.get(cacheKey);\n        if (data) {\n            return Promise.resolve(data);\n        }\n        return this.get(url, params, asText)\n            .then(data => {\n                this.cache.set(cacheKey, data);\n                return data;\n            });\n    }\n\n    /**\n     * Allows a client to populate the cache with an object as would\n     * be done by `cachedGet` or `cachedPost` so that subsequent calls\n     * to either return this cached object.  This is useful in cases where\n     * an error response from a server should be replaced with a default\n     * (e.g. 404 cache a default for some resource).\n     * \n     * @param url \n     * @param data \n     * @param paramsOrBody \n     */\n    public cachedSet(url:string,data:any,paramsOrBody?:any):any {\n        paramsOrBody = paramsOrBody || {};\n        const cacheKey = {\n            u: url,\n            params: paramsOrBody\n        };\n        this.cache.set(cacheKey,data);\n        return data;\n    }\n\n    public post<T = any>(url:string,body:string):Promise<T> {\n        return <Promise<T>>this.http.post(url,body,{headers: {'Content-Type':'application/x-www-form-urlencoded'}}).toPromise();\n    }\n\n    public cachedPost<T = any>(url:string,body:string):Promise<T> {\n        const cacheKey = {\n            u: url,\n            params: body\n        };\n        const data = this.cache.get(cacheKey);\n        if(data) {\n            return Promise.resolve(data);\n        }\n        return this.post<T>(url,body)\n            .then(response => {\n                this.cache.set(cacheKey,response);\n                return response;\n            });\n    }\n}\n","export class Phenophase {\n    phenophase_id: number;\n    [x: string]: any\n}\n\n// NOTE: property names are inconsistent with how they work for species\n// i.e. why not `phenophase_class_id` and `phenophase_class_name` ??\nexport interface PhenophaseClass {\n    pheno_class_id: number;\n    pheno_class_name: string;\n    pheno_class_sequence: number;\n}\n\nexport interface TaxonomicPhenophase extends PhenophaseClass,Phenophase {\n\n}\n\nexport type TaxonomicPhenophaseType = Phenophase|PhenophaseClass;\n\nexport enum TaxonomicPhenophaseRank {\n    PHENOPHASE = 'phenophase',\n    CLASS = 'class'\n}\n","export { NpnCommonModule, NPN_BASE_HREF } from './npn-common.module';\nexport * from './species';\nexport * from './phenophase';\nexport * from './station';\nexport * from './network';\nexport * from './static-color';\n\nexport { CacheService } from './cache.service';\nexport * from './species.service';\nexport { NetworkService } from './network.service';\nexport { StationService } from './station.service';\nexport { getStaticColor } from './static-color';\n\nexport * from './species-title.pipe';\nexport { DoyPipe } from './doy.pipe';\nexport { LegendDoyPipe } from './legend-doy.pipe';\nexport * from './guid';\nexport * from './config';\nexport { NpnServiceUtils } from './npn-service-utils.service';\nexport * from './detect-ie';\nexport * from './monitors-destroy';\nexport * from './application-settings';\nexport * from './constants';","import { Pipe, PipeTransform } from '@angular/core';\n\nimport { SpeciesTitleFormat, APPLICATION_SETTINGS } from './application-settings';\nimport { Species, TaxonomicSpeciesType, TaxonomicSpeciesRank, TaxonomicClass, TaxonomicOrder, TaxonomicFamily, TaxonomicGenus } from './species';\n\n@Pipe({ name: 'speciesTitle' })\nexport class SpeciesTitlePipe implements PipeTransform {\n    transform(item: Species, format?: SpeciesTitleFormat): any {\n        if (item) {\n            switch(format || APPLICATION_SETTINGS.speciesTitleFormat) {\n                case SpeciesTitleFormat.CommonName:\n                    if (item.common_name) {\n                        let lower = item.common_name.toLowerCase();\n                        return lower.substring(0, 1).toUpperCase() + lower.substring(1);\n                    }\n                    return item.common_name;\n                case SpeciesTitleFormat.ScientificName:\n                    return item && item.genus\n                        ? `${item.genus} ${item.species}`\n                        : undefined;\n            }\n        }\n        return item;\n    }\n}\n\n@Pipe({name: 'taxonomicSpeciesTitle'})\nexport class TaxonomicSpeciesTitlePipe implements PipeTransform {\n    constructor(private speciesTitle:SpeciesTitlePipe) {}\n    transform(item:TaxonomicSpeciesType,rank:TaxonomicSpeciesRank = TaxonomicSpeciesRank.SPECIES,format:SpeciesTitleFormat = APPLICATION_SETTINGS.speciesTitleFormat):any {\n        if(item && typeof(item) === 'object') {\n            let o;\n            switch(rank) {\n                case TaxonomicSpeciesRank.SPECIES:\n                    o = item as Species;\n                    return this.speciesTitle.transform(o,format);\n                case TaxonomicSpeciesRank.CLASS:\n                    o = item as TaxonomicClass;\n                    return format === SpeciesTitleFormat.CommonName\n                        ? o.class_common_name||`${o.class_name} (Scientific)` // || should not be necessary\n                        : o.class_name;\n                case TaxonomicSpeciesRank.ORDER:\n                    o = item as TaxonomicOrder;\n                    return format === SpeciesTitleFormat.CommonName\n                        ? o.order_common_name||`${o.order_name} (Scientific)` // || should not be necessary\n                        : o.order_name;\n                case TaxonomicSpeciesRank.FAMILY:\n                    o = item as TaxonomicFamily;\n                    return format === SpeciesTitleFormat.CommonName\n                        ? o.family_common_name||`${o.family_name} (Scientific)` // || should not be necessary\n                        : o.family_name;\n                case TaxonomicSpeciesRank.GENUS:\n                    o = item as TaxonomicGenus;\n                    return format === SpeciesTitleFormat.CommonName\n                        ? o.genus_common_name||`${o.genus} (Scientific)` // || should not be necessary\n                        : o.genus;\n            }\n        }\n        return item;\n    }\n}\n","import { Injectable } from '@angular/core';\nimport { DatePipe } from '@angular/common';\n\nimport { HttpParams } from '@angular/common/http';\n\nimport { Species, TaxonomicSpecies, TaxonomicClass, TaxonomicFamily, TaxonomicGenus, TaxonomicOrder, TaxonomicSpeciesRank, TaxonomicSpeciesType } from './species';\nimport { Phenophase, TaxonomicPhenophaseRank, PhenophaseClass } from './phenophase';\nimport { NpnServiceUtils } from './npn-service-utils.service';\nimport { CURRENT_YEAR, CURRENT_YEAR_VALUE } from './constants';\n\nexport interface SpeciesTaxonomicInfo {\n    species: TaxonomicSpecies[];\n    classes?: TaxonomicClass[];\n    orders?: TaxonomicOrder[];\n    families?: TaxonomicFamily[];\n    genera?: TaxonomicGenus[];\n}\n\nexport interface PhenophaseTaxonomicInfo {\n    phenophases: Phenophase[];\n    classes: PhenophaseClass[];\n}\n\n/**\n * @todo need utilities that can be used to generate keys from plot and data based on the plot.\n */\nexport interface SpeciesPlot {\n    /** Dictates what IS found in the `species` property.  If not specified defaults to SPECIES (legacy) */\n    speciesRank?: TaxonomicSpeciesRank;\n    species?: TaxonomicSpeciesType;\n    /** Dictates what IS found in the `phenophase` property.  If not specified defaults to PHENOPHASE (legacy) */\n    phenophaseRank?: TaxonomicPhenophaseRank;\n    phenophase?: Phenophase|PhenophaseClass;\n    /** Many plots have colors associated with them */\n    color?: string;\n    /** Some plots may be for an individual year */\n    year?: number;\n}\n\nexport interface SpeciesPlotKeys {\n    speciesIdKey: string;\n    phenophaseIdKey: string;\n}\n\n/**\n * @param plot The plot\n * @return {SpeciesPlotKeys} The names of the id keys associated with data records.\n */\nexport function getSpeciesPlotKeys(plot:SpeciesPlot):SpeciesPlotKeys {\n    let speciesIdKey;\n    let phenophaseIdKey;\n    switch(plot.speciesRank||TaxonomicSpeciesRank.SPECIES) {\n        case TaxonomicSpeciesRank.SPECIES:\n            speciesIdKey = 'species_id';\n            break;\n        case TaxonomicSpeciesRank.CLASS:\n            speciesIdKey = 'class_id';\n            break;\n        case TaxonomicSpeciesRank.ORDER:\n            speciesIdKey = 'order_id';\n            break;\n        case TaxonomicSpeciesRank.FAMILY:\n            speciesIdKey = 'family_id';\n            break;\n        case TaxonomicSpeciesRank.GENUS:\n            speciesIdKey = 'genus_id';\n            break;           \n    }\n    switch(plot.phenophaseRank||TaxonomicPhenophaseRank.PHENOPHASE) {\n        case TaxonomicPhenophaseRank.PHENOPHASE:\n            phenophaseIdKey = 'phenophase_id';\n            break;\n        case TaxonomicPhenophaseRank.CLASS:\n            phenophaseIdKey = 'pheno_class_id';\n            break;\n    }\n    return {speciesIdKey,phenophaseIdKey};\n}\n\nfunction mapByNumericId(list,key) {\n    return list.reduce((map,o) => {\n            if(typeof(o[key]) === 'number') {\n                map[o[key]] = o;\n            }\n            return map;\n        },{});\n}\n@Injectable()\nexport class SpeciesService {\n    constructor(private serviceUtils:NpnServiceUtils,private datePipe: DatePipe) {}\n\n    getAllSpecies(params?: any): Promise<Species[]> {\n        // NOTE: when there are multiple species phenophase controls on the screen the result can\n        // be multiple simultaneous queries...\n        //console.log('SpeciesService.getAllSpecies:params', params);\n        params = params||{};\n        const url = this.serviceUtils.apiUrl('/npn_portal/species/getSpeciesFilter.json');\n        let postParams = new HttpParams()\n        Object.keys(params).forEach(key => postParams = postParams.set(`${key}`, `${params[key]}`));\n        return this.serviceUtils.cachedPost(url,postParams.toString());\n    }\n\n    // all species related results are cached locally but not in the session cache since they can get large\n    private higherSpeciesCache = {};\n\n    private _allSpecies(params:HttpParams = new HttpParams()): Promise<TaxonomicSpecies[]> {\n        params = params.set('include_restricted','false');\n        const input = params.toString();\n        const cacheKey = this.serviceUtils.cache.cacheKey({service:'getSpecies',input});\n        if(!this.higherSpeciesCache[cacheKey]) {\n            return this.higherSpeciesCache[cacheKey] = this.serviceUtils.post(\n                this.serviceUtils.apiUrl('/npn_portal/species/getSpecies.json'),\n                input\n            );\n        }\n        return this.higherSpeciesCache[cacheKey].then(results => JSON.parse(JSON.stringify(results)));\n    }\n\n    private _filterSpecies(params:HttpParams = new HttpParams()): Promise<TaxonomicSpecies[]> {\n        const input = params.toString();\n        const cacheKey = this.serviceUtils.cache.cacheKey({service:'getSpeciesFilter',input});\n        if(!this.higherSpeciesCache[cacheKey]) {\n            return this.higherSpeciesCache[cacheKey] = this.serviceUtils.post(\n                this.serviceUtils.apiUrl('/npn_portal/species/getSpeciesFilter.json'),\n                input\n            );\n        }\n        return this.higherSpeciesCache[cacheKey].then(results => JSON.parse(JSON.stringify(results)));\n    }\n\n    /**\n     * Creates Promises/requests to get species data for a set of years.  The resulting data will almost\n     * certainly contain duplicates.\n     * \n     * @param params The base HttpParams to use when retrieving species (via /npn_portal/species/getSpeciesFilter.json)\n     * @param years The years to request species for.\n     */\n    private _allSpeciesPromises(params:HttpParams = new HttpParams(),years:number[] = []): Promise<TaxonomicSpecies[]>[] {\n        years = years||[]; // in case null is actually passed in\n        // if we aren't doing any filtering then use the getSpecies service because\n        // it's much faster for that use case, it just doesn't return numbers of observations\n        if(!years.length && !params.keys().length) {\n            return [this._allSpecies(params)];\n        }\n        return !years.length\n            ? [this._filterSpecies(params)]\n            // sets of input request parameters for filtering\n            // e.g. [2013,2010,2012] ->\n            // [['2010-01-01','2010-12-31'],['2012-01-01','2013-12-31']]\n            : years.slice()\n                .map(y => y === CURRENT_YEAR ? CURRENT_YEAR_VALUE : y)\n                .sort().reduce((rngs,year) => {\n                    if(!rngs.length) {\n                        rngs[0] = [year,year];\n                    } else {\n                        const rng = rngs[rngs.length-1];\n                        if(rng[1] === year-1) {\n                            rng[1] = year;\n                        } else {\n                            rngs.push([year,year]);\n                        }\n                    }\n                    return rngs;\n                },[])\n                //.map(range => [`${range[0]}-01-01`,`${range[1]}-12-31`])\n                .map(range => this._filterSpecies(params.set('start_date',`${range[0]}-01-01`).set('end_date',`${range[1]}-12-31`)));\n    }\n\n    /**\n     * Requests species data for a set of years and consolidates the results into a single array of `TaxonomicSpecies`.\n     * \n     * @param params The base HttpParams to use when retrieving species (via /npn_portal/species/getSpeciesFilter.json)\n     * @param years The years to request species for.\n     */\n    getAllSpeciesConsolidated(params:HttpParams = new HttpParams(),years:number[] = null): Promise<TaxonomicSpecies[]> {\n        return Promise.all(this._allSpeciesPromises(params,years))\n            .then((results:TaxonomicSpecies[][]) => {\n                console.log('getAllSpeciesConsolidated.results',results.map(r => r.length).join(', '));\n                let consolidated:TaxonomicSpecies[];\n                if(results.length === 1) {\n                    consolidated = results[0]; // nothing to consolidate\n                } else {\n                    const idMap = {};\n                    consolidated = results.reduce((set,list) => {\n                        list.forEach(species => {\n                            const {species_id} = species;\n                            if(idMap[species_id]) {\n                                // already in set, bump observation count\n                                //console.log(`getAllSpeciesConsolidated.consolidating species observations [${species_id}] ${idMap[species_id].number_observations} + ${species.number_observations}`);\n                                idMap[species_id].number_observations += species.number_observations;\n                            } else {\n                                set.push(idMap[species_id] = species);\n                            }\n                        });\n                        return set;\n                    },[])\n                }\n                if(consolidated.length && typeof(consolidated[0].number_observations) === 'number') {\n                    // sort by number_observations\n                    consolidated.sort((a,b) => b.number_observations - a.number_observations);\n                }\n                console.log('getAllSpeciesConsolidated.consolidated',consolidated.length);\n                return consolidated;\n            });\n    }\n\n    /**\n     * Requests species data for a set of years and organizes the results into an instance of `SpeciesTaxonomicInfo`.\n     * \n     * @param params The base HttpParams to use when retrieving species (via /npn_portal/species/getSpeciesFilter.json)\n     * @param years The years to request species for.\n     */\n    getAllSpeciesHigher(params:HttpParams = new HttpParams(),years:number[] = null): Promise<SpeciesTaxonomicInfo> {\n        return this.getAllSpeciesConsolidated(params,years)\n            .then((species:TaxonomicSpecies[]) => {\n                const gatherById = key => mapByNumericId(species,key);\n                const classIds = gatherById('class_id');\n                const orderIds = gatherById('order_id');\n                const familyIds = gatherById('family_id');\n                const genusIds = gatherById('genus_id');\n\n                return {\n                    species,\n                    classes: Object.keys(classIds).map(id => {\n                            const {class_id,class_name,class_common_name,kingdom} = classIds[id];\n                            return {class_id,class_name,class_common_name,kingdom}\n                        })\n                        .filter(r => !!r.class_id && !!r.class_name/* && !!r.class_common_name*/) // keep only complete records\n                        /*.sort((a,b) => a.class_common_name.localeCompare(b.class_common_name))*/,\n                    orders: Object.keys(orderIds).map(id => {\n                            const {order_id,order_name,order_common_name,kingdom} = orderIds[id];\n                            return {order_id,order_name,order_common_name,kingdom};\n                        })\n                        .filter(r => !!r.order_id && !!r.order_name/* && !!r.order_common_name*/) // keep only complete records\n                        /*.sort((a,b) => a.order_common_name.localeCompare(b.order_common_name))*/,\n                    families: Object.keys(familyIds).map(id => {\n                            const {family_id,family_name,family_common_name,kingdom} = familyIds[id];\n                            return {family_id,family_name,family_common_name,kingdom};\n                        })\n                        .filter(r => !!r.family_id && !!r.family_name/* && !!r.family_common_name*/) // keep only complete records\n                        /*.sort((a,b) => a.family_common_name.localeCompare(b.family_common_name))*/,\n                    genera: Object.keys(genusIds).map(id => {\n                        const {genus_id,genus,genus_common_name, kingdom} = genusIds[id];\n                        return {genus_id,genus,genus_common_name, kingdom};\n                    })\n                    .filter(r => !!r.genus_id && !!r.genus/* && !!r.family_common_name*/) // keep only complete records\n                    /*.sort((a,b) => a.family_common_name.localeCompare(b.family_common_name))*/\n                };\n            });\n    }\n\n    /**\n     * Flatten a list of SpeciesPlots into the list of species_ids that they constitute.\n     * \n     * @param plots \n     * @return {Promise<number []>} Promise resolved with the set of species_ids.\n     */\n    getSpeciesIds(plots:SpeciesPlot[]):Promise<number []> {\n        return this.getAllSpeciesHigher()\n            .then(info => plots.reduce((ids,plot) => {\n                const addId = id => {\n                    if(ids.indexOf(id) === -1) {\n                        ids.push(id);\n                    }\n                };\n                const keys = getSpeciesPlotKeys(plot);\n                let taxId;\n                switch(plot.speciesRank||TaxonomicSpeciesRank.SPECIES) {\n                    case TaxonomicSpeciesRank.SPECIES:\n                        taxId = (plot.species as Species).species_id;\n                        break;\n                    case TaxonomicSpeciesRank.CLASS:\n                        taxId = (plot.species as TaxonomicClass).class_id;\n                        break;\n                    case TaxonomicSpeciesRank.ORDER:\n                        taxId = (plot.species as TaxonomicOrder).order_id;\n                        break;\n                    case TaxonomicSpeciesRank.FAMILY:\n                        taxId = (plot.species as TaxonomicFamily).family_id;\n                        break;\n                    case TaxonomicSpeciesRank.GENUS:\n                        taxId = (plot.species as TaxonomicGenus).genus_id;\n                        break;\n                }\n                // pull out all species that match and add them to the set\n                info.species.filter(species => species[keys.speciesIdKey] == taxId)\n                    .forEach(species => addId(species.species_id));\n                return ids;\n            },[]));\n    }\n\n    generatePhenophaseTaxonomicInfo(phenophases:Phenophase[]):PhenophaseTaxonomicInfo {\n        const phenoClassIds = mapByNumericId(phenophases,'pheno_class_id');\n        return {\n            phenophases,\n            classes: Object.keys(phenoClassIds).map(id => {\n                    const {pheno_class_id,pheno_class_name,pheno_class_sequence} = phenoClassIds[id];\n                    return {pheno_class_id,pheno_class_name,pheno_class_sequence};\n                })\n                .filter(r => !!r.pheno_class_id && !!r.pheno_class_name)\n                .sort((a,b) => {\n                    if(a.pheno_class_sequence > b.pheno_class_sequence) {\n                        return 1;\n                    } else if(a.pheno_class_sequence < b.pheno_class_sequence) {\n                        return -1;\n                    } else {\n                        return 0;\n                    }\n                })\n        };\n    }\n\n    private _getPhenophases(species: TaxonomicSpeciesType, rank: TaxonomicSpeciesRank, date?: Date): Promise<Phenophase[]> {\n        const params: any = {};\n        const url = rank === TaxonomicSpeciesRank.SPECIES\n            ? this.serviceUtils.apiUrl('/npn_portal/phenophases/getPhenophasesForSpecies.json')\n            : this.serviceUtils.apiUrl('/npn_portal/phenophases/getPhenophasesForTaxon.json')\n        let o;\n        switch(rank) {\n            case TaxonomicSpeciesRank.SPECIES:\n                o = species as Species;\n                params.species_id = o.species_id;\n                break;\n            case TaxonomicSpeciesRank.CLASS:\n                o = species as TaxonomicClass;\n                params.class_id = o.class_id;\n                break;\n            case TaxonomicSpeciesRank.ORDER:\n                o = species as TaxonomicOrder;\n                params.order_id = o.order_id;\n                break;\n            case TaxonomicSpeciesRank.FAMILY:\n                o = species as TaxonomicFamily;\n                params.family_id = o.family_id;\n                break;\n            case TaxonomicSpeciesRank.GENUS:\n                o = species as TaxonomicGenus;\n                params.genus_id = o.genus_id;\n                break;\n        }\n        \n        if (date) {\n            params.date = this.datePipe.transform(date, 'y-MM-dd')\n        } else {\n            params.return_all = true;\n        }\n        return this.serviceUtils.cachedGet(url,params)\n            .then(phases => phases && phases.length\n                ? this.removeRedundantPhenophases(phases[0].phenophases as Phenophase[])\n                : []);\n    }\n\n    private _getPhenodefinitions(species: TaxonomicSpeciesType, rank: TaxonomicSpeciesRank, date?: Date): Promise<Phenophase[]> {\n        const params: any = {};\n        const url = rank === TaxonomicSpeciesRank.SPECIES\n            ? this.serviceUtils.apiUrl('/npn_portal/phenophases/getPhenophasesForSpecies.json')\n            : this.serviceUtils.apiUrl('/npn_portal/phenophases/getPhenophasesForTaxon.json')\n        let o;\n        switch(rank) {\n            case TaxonomicSpeciesRank.SPECIES:\n                o = species as Species;\n                params.species_id = o.species_id;\n                break;\n            case TaxonomicSpeciesRank.CLASS:\n                o = species as TaxonomicClass;\n                params.class_id = o.class_id;\n                break;\n            case TaxonomicSpeciesRank.ORDER:\n                o = species as TaxonomicOrder;\n                params.order_id = o.order_id;\n                break;\n            case TaxonomicSpeciesRank.FAMILY:\n                o = species as TaxonomicFamily;\n                params.family_id = o.family_id;\n                break;\n            case TaxonomicSpeciesRank.GENUS:\n                o = species as TaxonomicGenus;\n                params.genus_id = o.genus_id;\n                break;\n        }\n        \n        if (date) {\n            params.date = this.datePipe.transform(date, 'y-MM-dd')\n        } else {\n            params.return_all = true;\n        }\n        return this.serviceUtils.cachedGet(url,params)\n            .then(phases => phases && phases.length\n                ? this.removeRedundantPhenodefinitions(phases[0].phenophases as Phenophase[])\n                : []);\n    }\n\n    getAllPhenophases(species: TaxonomicSpeciesType, rank:TaxonomicSpeciesRank): Promise<Phenophase[]> {\n        return this._getPhenophases(species,rank);\n    }\n\n    getAllPhenodefinitions(species: TaxonomicSpeciesType, rank:TaxonomicSpeciesRank): Promise<Phenophase[]> {\n        return this._getPhenodefinitions(species,rank);\n    }\n\n    getPhenophasesForDate(species: TaxonomicSpeciesType, rank:TaxonomicSpeciesRank, date: Date): Promise<Phenophase[]> {\n        return this._getPhenophases(species, rank, date);\n    }\n\n    getPhenodefinitionsForDate(species: TaxonomicSpeciesType, rank:TaxonomicSpeciesRank, date: Date): Promise<Phenophase[]> {\n        return this._getPhenodefinitions(species, rank, date);\n    }\n\n    getPhenophasesForYear(species: TaxonomicSpeciesType, rank:TaxonomicSpeciesRank, year: number) {\n        let jan1 = new Date(year, 0, 1),\n            dec31 = new Date(year, 11, 31);\n        return Promise.all([\n            this.getPhenophasesForDate(species, rank, jan1),\n            this.getPhenophasesForDate(species, rank, dec31)\n        ]).then(lists => this.mergeRedundantPhenophaseLists(lists));\n    }\n\n    getPhenodefinitionsForYear(species: TaxonomicSpeciesType, rank:TaxonomicSpeciesRank, year: number) {\n        let jan1 = new Date(year, 0, 1),\n            dec31 = new Date(year, 11, 31);\n        return Promise.all([\n            this.getPhenodefinitionsForDate(species, rank, jan1),\n            this.getPhenodefinitionsForDate(species, rank, dec31)\n        ]).then(lists => this.mergeRedundantPhenodefinitionLists(lists));\n    }\n\n    getPhenophasesForYears(species: TaxonomicSpeciesType, rank:TaxonomicSpeciesRank, years:number[]): Promise<Phenophase[]> {\n        return Promise.all(years.map(y => this.getPhenophasesForYear(species, rank, y)))\n                .then(lists => this.mergeRedundantPhenophaseLists(lists));\n    }\n\n    getPhenodefinitionsForYears(species: TaxonomicSpeciesType, rank:TaxonomicSpeciesRank, years:number[]): Promise<Phenophase[]> {\n        return Promise.all(years.map(y => this.getPhenodefinitionsForYear(species, rank, y)))\n                .then(lists => this.mergeRedundantPhenodefinitionLists(lists));\n    }\n\n    getPhenophasesContiguousYears(species: TaxonomicSpeciesType, rank:TaxonomicSpeciesRank, startYear?: number, endYear?: number): Promise<Phenophase[]> {\n        if(startYear) {\n            if (startYear && !endYear) {\n                throw new Error('Missing end year.');\n            }\n            if (startYear > endYear) {\n                throw new Error('start year cannot be greater than end');\n            }\n            let years = [startYear], i = startYear;\n            while (i++ < endYear) {\n                years.push(i);\n            }\n            return this.getPhenophasesForYears(species,rank,years);\n        }\n        return this.getAllPhenophases(species,rank);\n    }\n\n    private removeRedundantPhenophases(list) {\n        let seen = [];\n        return list.filter(function (pp) {\n            if (seen[pp.phenophase_id]) {\n                return false;\n            }\n            seen[pp.phenophase_id] = pp;\n            return true;\n        });\n    }\n\n    private removeRedundantPhenodefinitions(list){\n        let seen = {};\n        return list.filter(function (pp) {\n            if (seen[pp.phenophase_id]) {\n                return false;\n            }\n            seen[pp.phenophase_id] = pp;\n            return true;\n        });\n    }\n    private mergeRedundantPhenophaseLists(lists) {\n        return this.removeRedundantPhenophases(\n            lists.reduce(function (arr, l) {\n                return arr.concat(l);\n            }, []));\n    }\n\n    private mergeRedundantPhenodefinitionLists(lists) {\n        return this.removeRedundantPhenodefinitions(\n            lists.reduce(function (arr, l) {\n                return arr.concat(l);\n            }, []));\n    }\n}\n","\ninterface HasKingdom {\n    kingdom?: string;\n}\n\nexport interface Species extends HasKingdom {\n    species_id: string;\n    [x: string]: any;\n}\n\nexport interface TaxonomicClass extends HasKingdom {\n    class_id: number;\n    class_name: string;\n    class_common_name: string;\n}\n\nexport interface TaxonomicOrder extends HasKingdom {\n    order_id:number;\n    order_name:string;\n    order_common_name:string; // sometimes empty?\n}\n\nexport interface TaxonomicFamily extends HasKingdom {\n    family_id:number;\n    family_name:string;\n    family_common_name:string;\n}\n\nexport interface TaxonomicGenus extends HasKingdom {\n    genus_id:number;\n    genus:string;\n    genus_common_name:string;\n}\n\nexport interface TaxonomicSpecies extends TaxonomicClass,TaxonomicFamily,TaxonomicOrder,TaxonomicGenus,Species {\n    genus: string;\n    itis_taxonomic_sn: number;\n    number_observations?: number; // depends on the service getSpeciesFilter.json returns this\n    species_type?:any[]; // has type but not using\n}\n\nexport type TaxonomicSpeciesType = Species|TaxonomicClass|TaxonomicOrder|TaxonomicFamily|TaxonomicGenus;\n\nexport enum TaxonomicSpeciesRank {\n    SPECIES = 'species',\n    GENUS = 'genus',\n    FAMILY = 'family',\n    ORDER = 'order',\n    CLASS = 'class'\n}","export const STATIC_COLORS  = [\n    '#1f77b4','#ff7f0e','#2ca02c','#d62728','#222299', '#c51b8a',  '#8c564b', '#637939', '#843c39',\n    '#5254a3','#636363',\n    '#bcbd22', '#7b4173','#e7ba52', '#222299',  '#f03b20', '#1b9e77','#e377c2',  '#ef8a62', '#91cf60', '#9467bd'\n  ];\n/**\n * Fetches a color by numeric index.  The domain of colors is finite so if the\n * index overflows the array then it will wrap around as necessary.\n * I.e. if index=colors.length+1 index=0\n * @param index The numeric index to fetch a color for.\n */\nexport function getStaticColor(index:number):string {\n    return STATIC_COLORS[index%STATIC_COLORS.length];\n}","import { Injectable } from '@angular/core';\nimport { NpnServiceUtils } from './npn-service-utils.service';\nimport { Station } from './station';\n\n@Injectable()\nexport class StationService {\n    constructor(private serviceUtils:NpnServiceUtils){}\n\n    getStation(stationId:number):Promise<Station> {\n        // fetching an individual station is rather rare, not using the cache\n        // since if a user is poking around how likely is it they will click the same\n        // station marker repeatedly?\n        return this.serviceUtils.get(this.serviceUtils.apiUrl('/npn_portal/stations/getStationDetails.json'),{ids:`${stationId}`})\n            .then((results:Station[]) => results && results.length ? results[0] : null);\n    }\n}","import { Injectable } from \"@angular/core\";\nimport { NpnServiceUtils } from \"../common\";\nimport { Observable, from, of } from \"rxjs\";\nimport { map, tap } from 'rxjs/operators';\nimport { Geometry } from \"geojson\";\n\n\nexport interface BoundaryType {\n    type_id: number;\n    name: string;\n    description: string;\n}\n\nexport interface FullGeometry {\n    geometry: Geometry;\n}\n\nexport interface Boundary {\n    boundary_id: number; \n    type_id: 1;\n    name: string;\n    short_name: string;\n    full: FullGeometry;\n}\n\nconst BOUNDARY_API_ROOT = '/v0/boundaries';\n\ninterface BoundaryCache {\n    [typeId:string]: Promise<Boundary[]>;\n}\n\n@Injectable()\nexport class BoundaryService {\n    private _boundaryCache:BoundaryCache = {};\n\n    constructor(private serviceUtils:NpnServiceUtils){}\n\n    getBoundaryTypes():Observable<BoundaryType[]> {\n        return from(\n            this.serviceUtils.cachedGet(this.serviceUtils.dataApiUrl2(`${BOUNDARY_API_ROOT}/types`))\n        );\n    }\n\n    getBoundaries(typeId:number):Observable<Boundary[]> {\n        if(!this._boundaryCache[typeId]) {\n            this._boundaryCache[typeId] = this.serviceUtils.get(\n                this.serviceUtils.dataApiUrl2(`${BOUNDARY_API_ROOT}`),\n                {type_id:`\"${typeId}\"`}\n            )\n            .then(boundaries => (boundaries||[]).sort((a,b) => a.name.localeCompare(b.name)));\n        }\n        return from(this._boundaryCache[typeId]);\n    }\n\n    boundariesToFeatureCollection(boundaries:Boundary[]):any/*<FeatureCollection>*/ {\n        return {\n            type: 'FeatureCollection',\n            features: boundaries.map(b => ({\n                type: 'Feature',\n                geometry: b.full.geometry,\n                properties: {...b,full:undefined}\n            }))\n        }\n    }\n}","import { MapLayerLegend } from './map-layer-legend';\nimport { GriddedPipeProvider } from './pipes';\nimport { WmsMapLayerLegend } from './wms-map-layer-legend';\n\nexport class DefaultMapLayerLegend extends WmsMapLayerLegend {\n    constructor(protected griddedPipes:GriddedPipeProvider) {\n        super(\n            null, // no corresponding layer so no gridded functionality\n            griddedPipes,\n            [\n                {quantity:-9999, color:'', original_label:'',label:''}, // first data always ignored.\n                {quantity: 0, color: 'rgb(62,38,168)', original_label: '', label: 'Jan'},\n                {quantity: 32, color: 'rgb(71,64,227)', original_label: '', label: 'Feb'},\n                {quantity: 60, color: 'rgb(70,96,252)', original_label: '', label: 'Mar'},\n                {quantity: 91, color: 'rgb(47,130,249)', original_label: '', label: 'Apr'},\n                {quantity: 121, color: 'rgb(35,160,229)', original_label: '', label: 'May'},\n                {quantity: 152, color: 'rgb(2,183,204)', original_label: '', label: 'Jun'},\n                {quantity: 182, color: 'rgb(46,196,164)', original_label: '', label: 'Jul'},\n                {quantity: 213, color: 'rgb(101,205,110)', original_label: '', label: 'Aug'},\n                {quantity: 244, color: 'rgb(182,197,50)', original_label: '', label: 'Sep'},\n                {quantity: 274, color: 'rgb(244,186,58)', original_label: '', label: 'Oct'},\n\n                {quantity: 305, color: 'rgb(249,216,44)', original_label: '', label: 'Nov'},\n                {quantity: 335, color: 'rgb(249,251,21)', original_label: '', label: 'Dec'},\n            ],{\n                name: 'Default',\n                legend_label_filter: {\n                    name: 'legendDoy'\n                }\n            },\n            null // styleDefinition\n        );\n    }\n\n    get layerName():string {\n        return 'no-layer';\n    }\n}\n/*\nhttps://bl.ocks.org/pstuffa/3393ff2711a53975040077b7453781a9\nschemeCategory20\nrgb(174,199,232) // light blue\nrgb(255,187,120) // light orange\nrgb(152,223,138) // light green\nrgb(255,152,150) // ligth red\nrgb(197,176,213) // light purple\nrgb(196,156,148) // light brown\nrgb(247, 182, 210) // light pink\nrgb(199, 199, 199) // light grey\nrgb(219, 219, 141) // light green 2\nrgb(158, 218, 229) // light aqua\n */","// this may not be the best or final home for this functionality...\nexport function googleFeatureBounds(feature) {\n    var geo = feature.getGeometry(),\n        type = geo.getType();\n    /*if(!type || /LineString/.test(type)) {\n        // TODO ? generate bounds of a [Multi]LineString?\n    } else {*/\n    if (type && /Polygon/.test(type)) {\n        var bounds = new google.maps.LatLngBounds(),\n            arr = geo.getArray(),\n            rings = type === 'Polygon' ?\n                arr :\n                arr.reduce(function (c, p) {\n                    c.push(p.getArray()[0]);\n                    return c;\n                }, []), i, j;\n        for (i = 0; i < rings.length; i++) {\n            var ringArr = rings[i].getArray();\n            for (j = 0; j < ringArr.length; j++) {\n                bounds.extend(new google.maps.LatLng(ringArr[j].lat(), ringArr[j].lng()));\n            }\n        }\n        return bounds;\n    }\n}","import {Inject,Injectable} from '@angular/core';\nimport {NPN_CONFIGURATION,NpnConfiguration} from '../common/index';\n\nexport const MAP_STYLES:any[] = [{\n    featureType: 'poi',\n    elementType: 'labels',\n    stylers: [{ visibility: 'off' }]\n}, {\n    featureType: 'transit.station',\n    elementType: 'labels',\n    stylers: [{ visibility: 'off' }]\n},\n{\n    featureType: 'poi.park',\n    stylers: [{ visibility: 'off' }]\n},\n{\n    featureType: 'landscape',\n    stylers: [{ visibility: 'off' }]\n}];\n\nconst EXTENT_DATE_FMT_REGEX = /^(\\d\\d\\d\\d)-0?(\\d+)-0?(\\d+)/;\n\nexport function parseExtentDate(s:string):Date {\n    let match = EXTENT_DATE_FMT_REGEX.exec(s.replace(/T.*$/, '')),\n    year = parseInt(match[1]),\n    month = parseInt(match[2]) - 1,\n    day = parseInt(match[3]);\n    return new Date(year, month, day);\n}\n\nexport interface NpnLayerFilterDef {\n    name: string;\n    args?: any[];\n    // WmsMapLayer stores some stuff here??\n    values?: any[];\n}\n\nexport enum MapLayerType {\n    STANDARD = 'standard',\n    PEST = 'pest'\n}\n\ninterface NpnLayerCommon {\n    name: string;\n    layerBasis?: string;\n    /** contains a description of a given layer.  this value can also be specified at the top level so that it applies to all layers in all categories (as the default). */\n    description?: string;\n    /** specifies a boolean indicating if a layer supports plotting of data on it or not (default true). */\n    supports_data?: boolean;\n    /** specifies an angular filter and optional arguments used to translate point data into strings for legends and map info windows. */\n    legend_label_filter?: NpnLayerFilterDef;\n    /** specifies an angular filter and optional arguments used to translate point data into strings for point data map info windows (if not specified then `legend_label_filter` will be used). */\n    gridded_label_filter?: NpnLayerFilterDef;\n    /** specifies an angualr filter and optional arguments used to filter extent values for layers. */\n    extent_values_filter?: NpnLayerFilterDef;\n    /** specifies anangular filter and optional arguments used to select a default value.  (if not specified the default provided by the server will be used). */\n    extent_default_filter?: NpnLayerFilterDef;\n    /** specifies a string that should be placed on the legend below the cell labels (units separated from legend labels). */\n    legend_units?: string;\n    legend_delimiter_every?: number;\n    /** specifies a boolean indicating if a layer supports plotting of time series data (default false). */\n    supports_time_series?: boolean;\n    /** if `supports_data` is true (or unspecified) the indicates that a given layer should only support plotting of data for the year of the currently selected extent on it (default false). */\n    current_year_only?: boolean;\n    /** defaults to `WmsLayerType.STANDARD` */\n    type?: MapLayerType;\n}\n\nexport enum MapLayerServiceType {\n    WMS = 'wms',\n    WCS = 'wcs'\n};\n\nexport interface MapLayerExtentValue {\n    /** The raw extent value from the WMS layer definition */\n    value: string;\n    /** If `value` represents a Date then the parsed Date object. */\n    date?: Date;\n    /** The value transformed into a readable label. */\n    label: string;\n    /** Add extent value to a service request's parameters */\n    addToParams: (params:any,serviceType:MapLayerServiceType) => void;\n}\n\nexport enum MapLayerExtentType {\n    DATE = 'date',\n    YEAR = 'year',\n    DOY = 'doy'\n}\n\nexport interface MapLayerExtent {\n    current?: MapLayerExtentValue;\n    label: string;\n    type: MapLayerExtentType;\n    values?: MapLayerExtentValue[];\n}\n\nexport interface MapLayerBoundingBox {\n    westBoundLongitude: number;\n    eastBoundLongitude: number;\n    southBoundLatitude: number;\n    northBoundLatitude: number;\n    getBounds: () => google.maps.LatLngBounds;\n}\n\nexport interface MapLayerStyle {\n    name: string;\n    title: string;\n    legend: string; // URL\n}\n\nexport interface MapLayerDefinition extends NpnLayerCommon {\n    title?: string;\n    abstract?: string;\n    /** Minimum width for legend style (e.g. '200px' or '50%') used to set the `min-width` CSS style on the corresponding legend. */\n    minLegendWidth?: string;\n    extent?: MapLayerExtent;\n    bbox?: MapLayerBoundingBox;\n    style?: MapLayerStyle;\n    /** A place for special map implementations to put special info... */\n    meta?: any;\n}\n\n// definition of separate over-rides document\nexport interface MapLayerDefinitionMap {\n    [name:string]: MapLayerDefinition;\n}\n\nexport interface MapLayerCategory extends NpnLayerCommon {\n    layers: MapLayerDefinition[];\n}\n\nexport interface MapLayerDefs {\n    description?: string;\n    categories: MapLayerCategory[];\n}\n\nexport interface LegendData {\n    color: string;\n    quantity: number;\n    original_label: string;\n    label: string;\n}\n\nexport interface GriddedPointData {\n    point: number;\n    legendData: LegendData;\n    formatted: string;\n}\n\nexport const CATEGORY_PEST = 'Pheno Forecasts';\nexport const CATEGORY_TEMP_ACCUM_30_YR_AVG = 'Temperature Accumulations, Daily 30-year Average';\nexport const CATEGORY_TEMP_ACCUM_CURRENT = 'Temperature Accumulations, Current Day';\nexport const CATEGORY_TEMP_ACCUM_CURRENT_AK = 'Temperature Accumulations, Current Day, Alaska';\nexport const CATEGORY_TEMP_ACCUM_DAILY_ANOM = 'Temperature Accumulations, Daily Anomaly';\nexport const CATEGORY_SIX_HIST_ANNUAL = 'Spring Indices, Historical Annual';\nexport const CATEGORY_SIX_CURRENT_YEAR = 'Spring Indices, Current Year';\nexport const CATEGORY_SIX_CURRENT_YEAR_AK = 'Spring Indices, Current Year, Alaska';\nexport const CATEGORY_SIX_DAILY_ANOM = 'Spring Indices, Daily Anomaly';\nexport const CATEGORY_SIX_30_YR_AVG = 'Spring Indices, 30-Year Average';\n\n/**\n * Holds all current supported map layers broken down by category.  This structure\n * originated with the original visualization tool and is very meaningful in that\n * commonality in configuration can be configured on the parent category for a given\n * layer and optionally over-ridden below that (for this like pipes to translate values to\n * strings, etc.).\n * \n * IMPORTANT: See `visualizations/map/consolidated-map-layer-control.component.ts`\n * for the temp accumulations and six layers that code relies on the order\n * of the indexes of the nested layers for those two sets so do NOT change that\n * here.\n */\nexport const MAP_LAYERS:MapLayerDefs = {\n    \"description\": \"\",\n    \"categories\": [{\n        \"name\": CATEGORY_PEST,\n        \"supports_data\": false, // TODO they do support data but...\n        \"layerBasis\": \"gdd:agdd_50f\",\n        \"legend_label_filter\": {\n            \"name\": \"legendGddUnits\",\n            \"args\": [false]\n        },\n        \"gridded_label_filter\": {\n            \"name\": \"legendGddUnits\",\n            \"args\": [true]\n        },\n        type: MapLayerType.PEST,\n        \"layers\": [{\n            name: 'apple_maggot',\n            title: 'Apple Maggot',\n            abstract: 'Apple maggot larvae cause damage to ripening fruit. If left untreated, these pest insects can spread across the entire tree. These insects primarily affect apple trees, but can also impact plum, apricot, pear, cherry and hawthorn trees. <a href=\"https://www.usanpn.org/data/forecasts/Apple_maggot\" target=\"_blank\">Learn more</a>',\n            meta: {\n                agddDefaultThreshold: 900\n            }\n        },{\n            name: 'asian_longhorned_beetle',\n            title: 'Asian Longhorned Beetle',\n            abstract: 'As a generalist pest, Asian longhorned beetle poses a great potential threat to eastern forests. It is currently contained in three small quarantined areas (a fourth was recently eradicated). Burning firewood where you buy it is critical to stopping the spread of this pest. <a href=\"https://www.usanpn.org/data/forecasts/Asian_Longhorned_beetle\" target=\"_blank\">Learn more</a>',\n            meta: {\n                agddSupports30YearAvg: false,\n                agddDefaultThreshold: 690\n            }\n        },{\n            name: 'bagworm',\n            title: 'Bagworm',\n            abstract: 'Bagworm caterpillars defoliate over 50 families of evergreen and deciduous trees and shrubs, primarily arborvitae, juniper, pine, and spruce. Stripping of leaves and needles is most noticeable in uppermost parts of plants. If left untreated, these pests are capable of extensive defoliation which can cause branch dieback or death. <a href=\"https://www.usanpn.org/data/forecasts/Bagworm\" target=\"_blank\">Learn more</a>',\n            meta: {\n                agddDefaultThreshold: 600\n            }\n        },{\n            name: 'bronze_birch_borer',\n            title: 'Bronze Birch Borer',\n            abstract: 'Bronze birch borer frequently kills birch trees by boring into the wood. <a href=\"https://www.usanpn.org/data/forecasts/Bronze_birch_borer\" target=\"_blank\">Learn more</a>',\n            meta: {\n                agddDefaultThreshold: 450\n            }\n        },{\n            name: 'precipitation:buffelgrass_prism',\n            title: 'Buffelgrass',\n            abstract: 'Winter moth is a non-native insect pest that causes damage to deciduous trees, particularly maples and oaks. <a href=\"https://www.usanpn.org/data/forecasts/Winter_moth\" target=\"_blank\">Learn more</a>'\n        },{\n            name: 'eastern_tent_caterpillar',\n            title: 'Eastern Tent Caterpillar',\n            abstract: 'Eastern Tent Caterpillars are a native moth and while they can defoliate trees, the trees rarely die as a consequence. <a href=\"https://www.usanpn.org/data/forecasts/Eastern_tent_caterpillar\" target=\"_blank\">Learn more</a>',\n            meta: {\n                agddSupports30YearAvg: false,\n                agddDefaultThreshold: 90\n            }\n        },{\n            name: 'emerald_ash_borer',\n            title: 'Emerald Ash Borer',\n            abstract: 'Emerald ash borer is a beetle that causes significant harm to ash trees throughout the eastern United States. <a href=\"https://www.usanpn.org/data/forecasts/EAB\" target=\"_blank\">Learn more</a>',\n            meta: {\n                agddDefaultThreshold: 450\n            }\n        },{\n            name: 'gypsy_moth',\n            title: 'Gypsy Moth',\n            abstract: 'European gypsy moth caterpillars feed on deciduous trees, causing major defoliation and tree mortality. They are considered one of the worst forest pests in the United States. <a href=\"https://www.usanpn.org/data/forecasts/Gypsy_moth\" target=\"_blank\">Learn more</a>',\n            meta: {\n                agddSupports30YearAvg: false,\n                agddBaseTemp: 37.4,\n                agddDefaultThreshold: 571\n            }\n        },{\n            name: 'hemlock_woolly_adelgid',\n            layerBasis: 'gdd:agdd', // based on a different map than the others.\n            title: 'Hemlock Woolly Adelgid',\n            abstract: 'Hemlock woolly adelgid can be deadly to hemlock trees and, in the eastern United States, lacks enemies that keep their populations in check. Researchers wish to identify the optimal window to release insect predators; you can support this effort by observing hemlock woolly adelgid life cycle stages using Nature’s Notebook. <a href=\"https://www.usanpn.org/data/forecasts/HWA\" target=\"_blank\">Learn more</a>'\n        },{\n            name: 'magnolia_scale',\n            title: 'Magnolia Scale',\n            abstract: 'Magnolia scale is a pest native to the Eastern United States that affects magnolia trees and tulip trees. They cause stress to their host trees by removing sap which can lead to yellowing leaves, twig dieback, and even death. <a href=\"https://www.usanpn.org/data/forecasts/Magnolia_scale\" target=\"_blank\">Learn more</a>',\n            meta: {\n                agddDefaultThreshold: 1938\n            }\n        },{\n            name: 'lilac_borer',\n            title: 'Lilac Borer',\n            abstract: 'Lilac borer is a clear-wing moth that can damage lilac, ash, and privet trees and shrubs by burrowing into the heartwood. <a href=\"https://www.usanpn.org/data/forecasts/Lilac_borer\" target=\"_blank\">Learn more</a>',\n            meta: {\n                agddDefaultThreshold: 500\n            }\n        },{\n            name: 'pine_needle_scale',\n            title: 'Pine Needle Scale',\n            abstract: 'Pine needle scale is a native pest that affects ornamental pines and Christmas tree plantations. <a href=\"https://www.usanpn.org/data/forecasts/Pine_needle_scale\" target=\"_blank\">Learn more</a>',\n            meta: {\n                agddSupports30YearAvg: false,\n                agddDefaultThreshold: 298\n            }\n        },{\n            name: 'winter_moth',\n            title: 'Winter Moth',\n            abstract: 'Winter moth is a non-native insect pest that causes damage to deciduous trees, particularly maples and oaks. <a href=\"https://www.usanpn.org/data/forecasts/Winter_moth\" target=\"_blank\">Learn more</a>',\n            meta: {\n                agddDefaultThreshold: 20\n            }\n        }]\n    },{\n        \"name\": CATEGORY_TEMP_ACCUM_30_YR_AVG,\n        \"supports_data\": false,\n        \"legend_label_filter\": {\n            \"name\": \"legendGddUnits\",\n            \"args\": [false]\n        },\n        \"gridded_label_filter\": {\n            \"name\": \"legendGddUnits\",\n            \"args\": [true]\n        },\n        \"extent_default_filter\": {\n            \"name\": \"agddDefaultTodayElevation\"\n        },\n        \"legend_units\" : \"Growing Degree Days\",\n        \"legend_delimiter_every\" : 2000,\n        \"layers\":[{\n                \"name\": \"gdd:30yr_avg_agdd\"\n            },{\n                \"name\": \"gdd:30yr_avg_agdd_50f\"\n            }]\n    },{\n        \"name\": CATEGORY_TEMP_ACCUM_CURRENT,\n        \"supports_data\": false,\n        \"legend_label_filter\": {\n            \"name\": \"legendGddUnits\",\n            \"args\": [false]\n        },\n        \"gridded_label_filter\": {\n            \"name\": \"legendGddUnits\",\n            \"args\": [true]\n        },\n        \"extent_default_filter\": {\n            \"name\": \"agddDefaultTodayTime\"\n        },\n        \"legend_units\" : \"Growing Degree Days\",\n        \"legend_delimiter_every\" : 2000,\n        \"supports_time_series\": true,\n        \"layers\":[{\n                \"name\": \"gdd:agdd\"\n            },{\n                \"name\": \"gdd:agdd_50f\"\n            }]\n    },{\n        \"name\": CATEGORY_TEMP_ACCUM_CURRENT_AK,\n        \"supports_data\": false,\n        \"legend_label_filter\": {\n            \"name\": \"legendGddUnits\",\n            \"args\": [false]\n        },\n        \"gridded_label_filter\": {\n            \"name\": \"legendGddUnits\",\n            \"args\": [true]\n        },\n        \"extent_values_filter\": {\n            \"name\": \"extentDates\",\n            \"args\": [null,\"today\"]\n        },\n        \"legend_units\" : \"Growing Degree Days\",\n        \"legend_delimiter_every\" : 2000,\n        \"layers\":[{\n            \"name\": \"gdd:agdd_alaska\"\n        },{\n            \"name\": \"gdd:agdd_alaska_50f\"\n        }]\n    },{\n        \"name\": CATEGORY_TEMP_ACCUM_DAILY_ANOM,\n        \"supports_data\": false,\n        \"legend_label_filter\": {\n            \"name\": \"legendAgddAnomaly\",\n            \"args\": [false]\n        },\n        \"gridded_label_filter\": {\n            \"name\": \"legendAgddAnomaly\",\n            \"args\": [true]\n        },\n        \"extent_default_filter\": {\n            \"name\": \"agddDefaultTodayTime\"\n        },\n        \"legend_units\" : \"Growing Degree Days\",\n        \"legend_delimiter_every\" : 100,\n        \"layers\":[{\n                \"name\": \"gdd:agdd_anomaly\"\n            },{\n                \"name\": \"gdd:agdd_anomaly_50f\"\n            }]\n    },{\n        \"name\": CATEGORY_SIX_HIST_ANNUAL,\n        \"legend_label_filter\": {\n            \"name\": \"legendDoy\"\n        },\n        \"current_year_only\": true,\n        \"layers\":[{\n\t\t\t\t\"name\": \"si-x:average_leaf_prism\"\n            },{\n\t\t\t\t\"name\": \"si-x:average_bloom_prism\"\n            },{\n                \"name\": \"si-x:arnoldred_leaf_prism\"\n            },{\n                \"name\": \"si-x:arnoldred_bloom_prism\"\n            },{\n                \"name\": \"si-x:lilac_leaf_prism\"\n            },{\n                \"name\": \"si-x:lilac_bloom_prism\"\n            },{\n                \"name\": \"si-x:zabelli_leaf_prism\"\n            },{\n                \"name\": \"si-x:zabelli_bloom_prism\"\n            }]\n    },{\n        \"name\": CATEGORY_SIX_CURRENT_YEAR,\n        \"legend_label_filter\": {\n            \"name\": \"legendDoy\"\n        },\n        \"extent_default_filter\": {\n            \"name\": \"agddDefaultTodayTime\"\n        },\n        \"current_year_only\": true,\n        \"layers\": [{\n\t\t\t\t\"name\": \"si-x:average_leaf_ncep\"\n            },{\n\t\t\t\t\"name\": \"si-x:average_bloom_ncep\"\n            },{\n                \"name\": \"si-x:arnoldred_leaf_ncep\"\n            },{\n                \"name\": \"si-x:arnoldred_bloom_ncep\"\n            },{\n                \"name\": \"si-x:lilac_leaf_ncep\"\n            },{\n                \"name\": \"si-x:lilac_bloom_ncep\"\n            },{\n                \"name\": \"si-x:zabelli_leaf_ncep\"\n            },{\n                \"name\": \"si-x:zabelli_bloom_ncep\"\n            }]\n    },{\n        \"name\": CATEGORY_SIX_CURRENT_YEAR_AK,\n        \"legend_label_filter\": {\n            \"name\": \"legendDoy\"\n        },\n        \"extent_values_filter\": {\n            \"name\": \"extentDates\",\n            \"args\": [null,\"today\"]\n        },\n        \"current_year_only\": true,\n        \"layers\": [{\n            \"name\": \"si-x:average_leaf_ncep_alaska\"\n        },{\n            \"name\": \"si-x:average_bloom_ncep_alaska\"\n        },{\n            \"name\": \"si-x:arnoldred_leaf_ncep_alaska\"\n        },{\n            \"name\": \"si-x:arnoldred_bloom_ncep_alaska\"\n        },{\n            \"name\": \"si-x:lilac_leaf_ncep_alaska\"\n        },{\n            \"name\": \"si-x:lilac_bloom_ncep_alaska\"\n        },{\n            \"name\": \"si-x:zabelli_leaf_ncep_alaska\"\n        },{\n            \"name\": \"si-x:zabelli_bloom_ncep_alaska\"\n        }]\n    },{\n        \"name\": CATEGORY_SIX_DAILY_ANOM,\n        \"supports_data\": false,\n        \"legend_label_filter\": {\n            \"name\": \"legendSixAnomaly\"\n        },\n        \"extent_default_filter\": {\n            \"name\": \"agddDefaultTodayTime\"\n        },\n        \"layers\": [{\n                \"name\": \"si-x:leaf_anomaly\"\n            },{\n                \"name\": \"si-x:bloom_anomaly\"\n            }]\n    },{\n        \"name\": CATEGORY_SIX_30_YR_AVG,\n        \"legend_label_filter\": {\n            \"name\": \"legendDoy\"\n        },\n        \"extent_default_filter\": {\n            \"name\": \"agddDefaultTodayElevation\"\n        },\n        \"layers\": [{\n                \"name\": \"si-x:30yr_avg_six_leaf\"\n            },{\n                \"name\": \"si-x:30yr_avg_six_bloom\"\n            }]\n    }]\n};\n\n// not safe to change since the capabilities document format changes based on version\n// so a version change -may- require code changes wrt interpreting the document\nexport const WMS_VERSION = '1.1.1';\nexport const BOX_SIZE = 256;\nexport const BASE_WMS_ARGS = {\n    service: 'WMS',\n    request: 'GetMap',\n    version: WMS_VERSION,\n    layers: undefined, // gets filled in per layer\n    styles: '',\n    format: 'image/png',\n    transparent: true,\n    height: BOX_SIZE,\n    width: BOX_SIZE,\n    srs: 'EPSG:3857' // 'EPSG:4326'\n};\n\n@Injectable()\nexport class GriddedUrls {\n    readonly geoServerUrl:string;\n    readonly wmsBaseUrl;\n    readonly wmsCapabilitiesUrl;\n\n    constructor(@Inject(NPN_CONFIGURATION) public config:NpnConfiguration) {\n        this.geoServerUrl = config.geoServerRoot;\n        this.wmsBaseUrl = `${this.geoServerUrl}/wms`;\n        this.wmsCapabilitiesUrl = `${this.wmsBaseUrl}?service=wms&version=${WMS_VERSION}&request=GetCapabilities`;\n    }\n}\n","export * from './public_api';\n","module.exports = \":host {\\n  display: block; }\\n  :host.standard {\\n    height: 125px; }\\n  :host.pest {\\n    height: 200px;\\n    width: 460px !important; }\\n  :host.pest.emerald_ash_borer {\\n      height: 245px; }\\n  :host.pest.hemlock_woolly_adelgid {\\n      height: 175px; }\\n  :host.pest.precipitation_buffelgrass_prism {\\n      height: 100px; }\\n  :host.no-layer {\\n    height: 95px; }\\n  .gridded-legend {\\n  width: 100%;\\n  height: 100%; }\\n\"","import { Component, Input, ElementRef, SimpleChanges, HostListener, HostBinding } from '@angular/core';\n\nimport { MapLayerLegend } from './map-layer-legend';\n\nimport { Selection } from 'd3-selection';\nimport * as d3 from 'd3';\n\n@Component({\n    selector: 'map-layer-legend',\n    template:`\n    <svg class=\"gridded-legend\"></svg>\n    `,\n    styleUrls:[\n        './map-layer-legend.component.scss'\n    ]\n})\nexport class MapLayerLegendComponent {\n    @Input()\n    legendTitle:string;\n    @Input()\n    legend:MapLayerLegend;\n\n    private svg: Selection<any,any,any,any>;\n\n    constructor(protected rootElement: ElementRef) {}\n\n    @HostBinding('class')\n    get legendClass() {\n        const {layerType,layerName} = this.legend;\n        return `${layerType||''} ${layerName ? layerName.replace(/:/g,'_') : ''}`;\n    }\n\n    @HostBinding('style.min-width')\n    get minLegendWidth():string {\n        return this.legend.ldef.minLegendWidth||null;\n    }\n\n    ngAfterViewInit() {\n        this.svg = d3.select(this.rootElement.nativeElement).select('svg');\n    }\n\n    ngOnChanges(changes:SimpleChanges):void {\n        setTimeout(() => this.redraw());\n    }\n\n    @HostListener('window:resize')\n    redraw() {\n        if(this.svg) {\n            this.svg.selectAll('g').remove();\n            if(this.legend) {\n                this.legend.redraw(this.svg,this.legendTitle);\n            }\n        }\n    }\n}\n","import * as $jq_ from 'jquery';\nconst $jq = $jq_;\n\nimport { MapLayer } from './map-layer';\nimport { GriddedPipeProvider } from './pipes';\n\nimport { Selection } from 'd3-selection';\nimport { MapLayerDefinition, MapLayerServiceType, LegendData, GriddedPointData, MapLayerType } from './gridded-common';\nimport { WcsDataService } from './wcs-data.service';\nimport { Observable } from 'rxjs';\nimport { map } from 'rxjs/operators';\n\nconst IDENTITY = d => d;\n\nexport abstract class MapLayerLegend {\n    private layer:MapLayer;\n    private lformat:Function;\n    private gformat:Function;\n    private title_data:LegendData;\n    private data:LegendData[];\n\n    constructor(protected wcsDataService:WcsDataService,\n                protected griddedPipes:GriddedPipeProvider,\n                protected color_map:(any|LegendData[]),\n                /*\n                NOTE: per the original implementation which binds extents directly into the definition this is public\n                may want to later revisit some abstraction, used externally via WmsMapLegendComponent\n                 */\n                public ldef:MapLayerDefinition,\n                protected styleDefinition:any) {\n            console.log('MapLayerLegend.color_map',color_map);\n            console.log('MapLayerLegend.ldef',ldef);\n            console.log('MapLayerLegend.styleDefinition',styleDefinition);\n            let get_filter = (filter_def) => {\n                let pipe = this.griddedPipes.get(filter_def.name);\n                if(!pipe) {\n                    console.error(`MapLayerLegend: Unable to find pipe named ${filter_def.name}`);\n                }\n                return function(l,q) {\n                    let args = [q];\n                    if(filter_def.args) {\n                        args = args.concat(filter_def.args);\n                    }\n                    return pipe.transform.apply(pipe, args);\n                };\n            };\n            this.lformat = ldef.legend_label_filter ? get_filter(ldef.legend_label_filter) : IDENTITY;\n            if(ldef.name == 'precipitation:buffelgrass_prism') {\n                let gridded_label_filter_clone = Object.assign({}, ldef.gridded_label_filter);\n                gridded_label_filter_clone.name = 'legendBuffelgrassUnits';\n                this.gformat = ldef.gridded_label_filter ? get_filter(gridded_label_filter_clone) : undefined;\n            } else {\n                this.gformat = ldef.gridded_label_filter ? get_filter(ldef.gridded_label_filter) : undefined;\n            }\n            let data:LegendData[];\n            if(Array.isArray(color_map)) {\n                data = color_map;\n            } else {\n                let entries = color_map.find('ColorMapEntry');\n                if(entries.length === 0) {\n                    entries = color_map.find('sld\\\\:ColorMapEntry');\n                }\n                data = entries.toArray().reduce((arr,entry,i) => {\n                    var e = $jq(entry),\n                        q = parseFloat(e.attr('quantity')),\n                        l = e.attr('label');\n                    arr.push({\n                        color: e.attr('color'),\n                        quantity: q,\n                        original_label: l,\n                        label: i === 0 ? l : this.lformat(l,q) // why the special case for index 0?\n                    });\n                    return arr;\n                },[]);\n            }\n            this.title_data = data[0];\n            this.data = data.slice(1);\n    }\n\n    setLayer(l:MapLayer):MapLayerLegend {\n        this.layer = l;\n        return this;\n    }\n\n    getLayer():MapLayer {\n        return this.layer;\n    }\n\n    get layerType():MapLayerType {\n        return this.layer\n            ? this.layer.layerType\n            : null;\n    }\n\n    get layerName():string {\n        return this.layer \n            ? this.layer.layerName\n            : null;\n    }\n\n    getData():LegendData[] {\n        return this.data;\n    }\n\n    getStyleDefinition():any {\n        return this.styleDefinition;\n    }\n\n    getTitle():string {\n        return this.title_data.label;\n    }\n\n    getColors():string[] {\n        return this.data.map(d => d.color);\n    }\n\n    getQuantities():number[] {\n        return this.data.map(d => d.quantity);\n    }\n\n    getLabels():string[] {\n        return this.data.map(d => d.label);\n    }\n\n    getOriginalLabels():string[] {\n        return this.data.map(d => d.original_label);\n    }\n\n    formatPointData(q):string {\n        return (this.gformat||this.lformat)(q,q);\n    }\n\n    getPointData(q):LegendData {\n        var i,d,n;\n        for(i = 0; i < this.data.length; i++) {\n            d = this.data[i];\n            n = (i+1) < this.data.length ? this.data[i+1] : undefined;\n            if(q == d.quantity) {\n                return d;\n            }\n            if(n && q >= d.quantity && q < n.quantity) {\n                return d;\n            }\n        }\n    }\n\n    getGriddedPointData(latLng:google.maps.LatLng):Observable<GriddedPointData> {\n        const augment = (params:any) => {\n            if(this.layer.extent && this.layer.extent.current) {\n                this.layer.extent.current.addToParams(params,MapLayerServiceType.WCS)\n            }\n        };\n        return this.wcsDataService.getGriddedData(\n            this.layer.layerBasis,\n            latLng,\n            5,\n            augment\n        ).pipe(\n            map((tuples:number[]) => {\n                console.log(`MapLayerLegend: gridded tuples`,tuples);\n                const point = tuples && tuples.length ? tuples[0] : undefined;\n                if(point === -9999 || isNaN(point)) {\n                    return null;\n                }\n                const legendData = this.getPointData(point);\n                const formatted = this.formatPointData(point);\n                const result = {point,legendData,formatted};\n                console.log('MapLayerLegend: gridded result',result);\n                return result;\n            })\n        );\n    }\n\n    abstract redraw(svg:Selection<any,any,any,any>,legendTitle:string):void;\n}\n\n\n","import {MapLayerDefinition, GriddedUrls, MapLayerType, MapLayerExtent, MapLayerExtentType} from './gridded-common';\nimport { GriddedPipeProvider } from './pipes';\nimport { NpnMapLayerService } from './npn-map-layer.service';\nimport { MapLayerLegend } from './map-layer-legend';\nimport { SupportsOpacity } from './supports-opacity-control.component';\n\nexport abstract class MapLayer implements SupportsOpacity {\n    protected griddedPipes:GriddedPipeProvider;\n    protected griddedUrls:GriddedUrls;\n    protected opacity:number = 0.75;\n\n    constructor(\n        protected map:google.maps.Map,\n        protected layer_def:MapLayerDefinition,\n        protected layerService:NpnMapLayerService\n    ) {\n        this.griddedPipes = layerService.griddedPipes;\n        this.griddedUrls = layerService.griddedUrls;\n    }\n\n    /**\n     * Callers are responsible for turning a layer off\n     * before switching the underlying map and turning it back on.\n     * \n     * @param map The new map.\n     */\n    setMap(map:google.maps.Map) {\n        this.map = map;\n    }\n\n    getMap():google.maps.Map {\n        return this.map;\n    }\n\n    get layerDefinition():MapLayerDefinition { return this.layer_def; }\n\n    get layerBasis():string {\n        if (this.layerName == \"precipitation:buffelgrass_prism\")\n            return this.layerName;\n        return this.layer_def && this.layer_def.layerBasis\n            ? this.layer_def.layerBasis\n            : this.layerName;\n    }\n    get layerName():string {\n        return this.layer_def\n            ? this.layer_def.name\n            : null;\n    }\n    get layerType():MapLayerType {\n        return  this.layer_def && this.layer_def.type\n            ? this.layer_def.type\n            : MapLayerType.STANDARD;\n    }\n    get extent():MapLayerExtent {\n        return this.layer_def\n            ? this.layer_def.extent\n            : null;\n    }\n    get extentType():MapLayerExtentType { \n        return (this.layer_def && this.layer_def.extent)\n            ? this.layer_def.extent.type\n            : null;\n    }\n    get title():string {\n        return (this.layer_def && this.layer_def.title)\n            ? this.layer_def.title // this.layer_def.title.replace(/^(.*?)\\s+-\\s+(.*)$/,'$2')\n            : undefined;\n    }\n\n    hasAbstract() {\n        return this.layer_def\n            ? !!this.layer_def.abstract\n            : false;\n    }\n\n    getAbstract() {\n        return (this.layer_def && this.layer_def.abstract)\n            ? this.layer_def.abstract.replace(/\\s*developer notes.*$/i,'')\n            : undefined;\n    }\n    \n    getLegend():Promise<MapLayerLegend> {\n        return this.layer_def\n            ? this.layerService.getLegend(this.layer_def)\n                .then(legend => legend.setLayer(this))\n            : Promise.resolve(null);\n    }\n\n    /**\n     * Sets the current opacity (0-1) for this layer.\n     * Sub-classes will over-ride to pass along the value\n     */\n    setOpacity(opacity:number) { this.opacity = opacity; }\n    /** Gets the current opacity for this layer. */\n    getOpacity():number { return this.opacity; }\n\n    /** Turn the layer on. */\n    abstract on():MapLayer;\n    /** Then the layer off. */\n    abstract off():MapLayer;\n    /** Called when a layer's current extent changes to update the layer in place. */\n    abstract bounce():MapLayer;\n}\n\n// NOTE: this function replaces all encoded spaces (%20) with '+'\n// this is perhaps a kludge solution to the fact that %20 is three chars while + is one\n// and for some map layers sending a value for sld_body using %20 can result in\n// overflowing the maximum length of a URI breaking thos emaps.  This is a simple \n// workaround to that issue.\nexport function encodeHttpParams(params) {\n    if(!params) {\n        return '';\n    }\n    let parts = [];\n    Object.keys(params).forEach(k => {\n        if(params[k]) {\n            let ok = encodeURIComponent(k),\n                ov = encodeURIComponent(params[k]).replace(/%20/g,'+');\n            parts.push(`${ok}=${ov}`);\n        }\n    });\n    return parts.join('&');\n}\n\n// this code converts coordinates from ESPG:4326 to ESPG:3857, it originated @\n// http://gis.stackexchange.com/questions/52188/google-maps-wms-layer-with-3857\n// that author stated it came from StackOverflow which I tried to find to attribute properly but could not.\n// the issue here is that if requests are sent to the map service with ESPG:4326 coordinates everything\n// appears accurate when tightly zoomed however as you zoom out beyond a certain point the layers begin to\n// migrate north, the farther zoomed out the more drastic the migration (e.g. from Mexico into N. Canada)\n// while dealing in traditional lat/lng for google maps they are actually projected in 3857 (metres, not meters).\n// the main thing is that 4326 coordinates are projected onto a sphere/ellipsoid while 3857 are translated to\n// a flat surface.\n// unfortunately while google maps projection must be performing such transformations it doesn't expose this ability.\nexport function srsConversion(latLng) {\n    if ((Math.abs(latLng.lng()) > 180 || Math.abs(latLng.lat()) > 90)) {\n        return;\n    }\n\n    var num = latLng.lng() * 0.017453292519943295;\n    var x = 6378137.0 * num;\n    var a = latLng.lat() * 0.017453292519943295;\n\n    return {lng: x, lat: 3189068.5 * Math.log((1.0 + Math.sin(a)) / (1.0 - Math.sin(a)))};\n}\n","import { NgModule } from '@angular/core';\nimport { DatePipe, DecimalPipe } from '@angular/common';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\n\nimport { MatSliderModule, MatSelectModule } from '@angular/material';\n\nimport { NpnMapLayerService } from './npn-map-layer.service';\nimport { NpnCommonModule } from '../common/index';\nimport { MapLayerLegendComponent } from './map-layer-legend.component';\nimport { SupportsOpacityControl } from './supports-opacity-control.component';\nimport { GriddedUrls } from './gridded-common';\nimport { WcsDataService } from './wcs-data.service';\nimport { BoundaryService } from './boundary.service';\n\nimport {\n    LegendGddUnitsPipe, LegendBuffelgrassUnitsPipe, AgddDefaultTodayElevationPipe, LegendAgddAnomalyPipe,\n    AgddDefaultTodayTimePipe, LegendSixAnomalyPipe, LegendDoyPipe, ExtentDatesPipe,\n    ThirtyYearAvgDayOfYearPipe,GriddedPipeProvider\n} from './pipes';\n\n@NgModule({\n    imports: [\n        FormsModule, ReactiveFormsModule,\n        MatSliderModule,\n        MatSelectModule,\n        NpnCommonModule\n    ],\n    declarations: [\n        MapLayerLegendComponent,\n        SupportsOpacityControl,\n        LegendBuffelgrassUnitsPipe, LegendGddUnitsPipe, AgddDefaultTodayElevationPipe, LegendAgddAnomalyPipe,\n        AgddDefaultTodayTimePipe, LegendSixAnomalyPipe, LegendDoyPipe, ExtentDatesPipe,\n        ThirtyYearAvgDayOfYearPipe,\n    ],\n    exports: [\n        MapLayerLegendComponent,\n        SupportsOpacityControl,\n    ],\n    providers: [\n        DatePipe, DecimalPipe,\n        LegendBuffelgrassUnitsPipe, LegendGddUnitsPipe, AgddDefaultTodayElevationPipe, LegendAgddAnomalyPipe,\n        AgddDefaultTodayTimePipe, LegendSixAnomalyPipe, LegendDoyPipe, ExtentDatesPipe,\n        ThirtyYearAvgDayOfYearPipe, GriddedPipeProvider,\n        NpnMapLayerService,\n        GriddedUrls,\n        WcsDataService,\n        BoundaryService\n    ]\n})\nexport class NpnGriddedModule { }","import { Injectable } from '@angular/core';\nimport * as $jq_ from 'jquery';\nconst $jq = $jq_;\n\nimport { NpnServiceUtils } from '../common/index';\n// TODO MAP_LAYERS here has been coded into the application\n// it may differ from the FWS apps to the vis-tool???\n// depending on how that shakes out perhaps a \"provider\" Injectable\n// that individual apps then wire into this service instance??\nimport {\n    MAP_LAYERS,\n    GriddedUrls,\n    MapLayerDefs,\n    MapLayerDefinition,\n    parseExtentDate,\n    MapLayerExtentValue,\n    MapLayerExtent,\n    MapLayerBoundingBox,\n    MapLayerStyle,\n    MapLayerExtentType,\n    WMS_VERSION,\n    MapLayerType,\n    MapLayerServiceType,\n    MapLayerDefinitionMap\n} from './gridded-common';\nimport { MapLayer } from './map-layer';\nimport { PestMapLayer } from \"./pest-map-layer\";\nimport { WmsMapLayer } from \"./wms-map-layer\";\nimport { GriddedPipeProvider } from './pipes';\nimport { MapLayerLegend } from './map-layer-legend';\nimport { PestMapLayerLegend } from \"./pest-map-layer-legend\";\nimport { WmsMapLayerLegend } from \"./wms-map-layer-legend\";\nimport { WcsDataService } from './wcs-data.service';\nimport { DefaultMapLayerLegend } from './default-map-layer-legend';\nimport { MapsAPILoader } from '@agm/core';\n\nconst DEEP_COPY = (o) => JSON.parse(JSON.stringify(o));\n\n@Injectable()\nexport class NpnMapLayerService {\n    private legends:any = {};\n    private layerDefs:any;\n\n    constructor(\n        public serviceUtils:NpnServiceUtils,\n        public wcsDataService:WcsDataService,\n        public griddedPipes:GriddedPipeProvider,\n        public griddedUrls:GriddedUrls,\n        private mapsApiLoader: MapsAPILoader\n    ) {}\n\n    newLayer(map:google.maps.Map,layerName:string):Promise<MapLayer> {\n        return this.mapsApiLoader.load()\n            .then(() => this.getLayerDefinition(layerName)\n            .then(layerDef => {\n                if(layerDef) {\n                    switch(layerDef.type||MapLayerType.STANDARD) {\n                        case MapLayerType.STANDARD:\n                            return new WmsMapLayer(map,layerDef,this);\n                        case MapLayerType.PEST:\n                            {\n                                if(layerDef.name == 'precipitation:buffelgrass_prism')\n                                    return new WmsMapLayer(map,layerDef,this);\n                                else\n                                    return new PestMapLayer(map,layerDef,this);\n                            }\n                    }\n                }\n            }));\n    }\n\n    getDefaultLegend():MapLayerLegend {\n        const key = 'DEFAULT';\n        if(this.legends[key]) {\n            return this.legends[key];\n        }\n        return (this.legends[key] = new DefaultMapLayerLegend(this.griddedPipes));\n    }\n    \n    // this is separate from WmsLayer itself because FWS apps use\n    // legends separate from layers (for now).  If the clipped stuff\n    // is worked into a sub-class of NpnMapLayer then this should likely\n    // move into the layer implementation itself.\n    getLegend(input:MapLayerDefinition | string):Promise<MapLayerLegend> {\n        const definition:Promise<MapLayerDefinition> = typeof(input) === 'string'\n            ? this.getLayerDefinition(input as string)\n            : Promise.resolve(input as MapLayerDefinition);\n        return definition.then(layerDef => {\n            let layerBasis = layerDef.layerBasis;\n            const layerName = layerDef.name;\n            if(layerName == 'precipitation:buffelgrass_prism') {\n                layerBasis = layerName;\n            }\n            if(this.legends[layerName]) {\n                return Promise.resolve(this.legends[layerName]);\n            }\n            return this.serviceUtils.cachedGet(this.griddedUrls.wmsBaseUrl,{\n                    service: 'wms',\n                    request: 'GetStyles',\n                    version: WMS_VERSION,\n                    layers: layerBasis||layerName\n                },true /* as text*/)\n                .then(xml => {\n                    const legend_data = $jq($jq.parseXML(xml));\n                    const findChildren = (tagName,jqParent) => {\n                        let found = jqParent.find(tagName);\n                        return found.length === 0\n                            ? jqParent.find('sld\\\\:'+tagName) // FF\n                            : found;\n                    };\n                    const userStyles = findChildren('UserStyle',legend_data);\n                    const userStyleElm = !!layerBasis\n                        ? userStyles.toArray().reduce((found,e) => {\n                                if(found) {\n                                    return found;\n                                }\n                                const styleName = findChildren('Name',$jq(e)).first().text();\n                                return styleName === layerName || styleName == 'buffelgrass_inches' ? e : null;\n                            },null)\n                        : userStyles.toArray()[0]; \n                    let color_map = findChildren('ColorMap',$jq(userStyleElm));\n                    let l:MapLayerLegend;\n                    if(color_map.length !== 0) {\n                        switch(layerDef.type||MapLayerType.STANDARD) {\n                            case MapLayerType.STANDARD:\n                                l = new WmsMapLayerLegend(\n                                    this.wcsDataService,\n                                    this.griddedPipes,\n                                    $jq(color_map.toArray()[0]),\n                                    layerDef,\n                                    legend_data);\n                                break;\n                            case MapLayerType.PEST:\n                                l = new PestMapLayerLegend(\n                                    this.wcsDataService,\n                                    this.griddedPipes,\n                                    $jq(color_map.toArray()[0]),\n                                    layerDef,\n                                    legend_data);\n                                break;\n                        }\n                    }\n                    return this.legends[layerName] = l;\n                });\n        });\n    }\n\n    private getLayerOverrides():Promise<MapLayerDefinitionMap> {\n        const url = 'assets/npn-map-layer-overrides.json';\n        return this.serviceUtils.cachedGet(url)\n            // on any error (e.g. 404 not fond) return an empty document (cached to avoid subsequent failures)\n            .catch(err => this.serviceUtils.cachedSet(url,{}));\n    }\n\n    getLayerDefinitions():Promise<MapLayerDefs> {\n        function mergeLayersIntoConfig(wms_layer_defs,overrides) {\n            let result = DEEP_COPY(MAP_LAYERS),\n                base_description = result.description;\n            result.categories.forEach(function(category){\n                // layers can inherit config like filters (if all in common) from\n                // the base category\n                let base_config = DEEP_COPY(category);\n                delete base_config.name;\n                delete base_config.layers;\n                base_config.description = base_config.description||base_description;\n                category.layers = category.layers.map(l => {\n                    let base_copy = DEEP_COPY(base_config);\n                    return {...base_copy,...wms_layer_defs[l.name],...l,...overrides[l.name]||{}};\n                });\n            });\n            return result;\n        }\n        if(this.layerDefs) {\n            return Promise.resolve(this.layerDefs);\n        }\n        return Promise.all([\n                this.serviceUtils.cachedGet(this.griddedUrls.wmsCapabilitiesUrl,null,true/*as text*/),\n                this.getLayerOverrides()\n            ]).then(results => {\n                const [xml,overrides] = results;\n                let wms_capabilities = $jq($jq.parseXML(xml));\n                console.debug('WmsMapLayerService:capabilities',wms_capabilities);\n                let wms_layer_defs = this._getLayers(wms_capabilities.find('Layer'));\n                console.debug('WmsMapLayerService:wms layer definitions',wms_layer_defs);\n                console.debug('WmsMapLayerService:wms layer overrides',overrides);\n                this.layerDefs = mergeLayersIntoConfig(wms_layer_defs,overrides);\n                console.debug('WmsMapLayerService:layer definitions',this.layerDefs);\n                return this.layerDefs;\n            });\n    }\n\n    getLayerDefinition(layerName:string):Promise<MapLayerDefinition> {\n        return this.getLayerDefinitions()\n                .then(definitions => {\n                    let layerMap = definitions.categories.reduce((map,c) => {\n                            c.layers.forEach(l => {\n                                map[l.name] = l;\n                            });\n                            return map;\n                        },{});\n                    return layerMap[layerName];\n                });\n    }\n\n    // private functions used to parse layer info out of WMS Capabilities response\n    // remain instance functions since they use some injected services\n    // returns an associative array of machine name layer to layer definition\n    private _getLayers(layers):({[name:string]: MapLayerDefinition}) {\n        if(!layers || layers.length < 2) { // 1st layer is parent, children are the real layers\n            return;\n        }\n        // make it a normal array, not a jQuery one\n        let ls = [];\n        layers.slice(1).each(function(i,o) {\n            ls.push(o);\n        });\n        return ls.map(l => this._layerToObject(l)).reduce((map,l) => {\n            map[l.name] = l;\n            return map;\n        },{});\n    }\n    private _layerToObject(layer):MapLayerDefinition {\n        let l = $jq(layer),\n            o = {\n                name: l.find('Name').first().text(),\n                // redmine #761\n                title: l.find('Title').first().text().replace(/\\((.+?)\\)/g, ''),\n                abstract: l.find('Abstract').first().text(),\n                bbox: this._parseBoundingBox(l.find('EX_GeographicBoundingBox').first()),\n                style: this._parseStyle(l.find('Style').first()),\n                extent: this._parseExtent(l.find('Extent').first()) // TODO see unmigrated code below\n            };\n        if(!o.bbox) {\n            o.bbox = this._parseLatLonBoundingBox(l.find('LatLonBoundingBox').first());\n        }\n        return o;\n    }\n    private _parseStyle(style):MapLayerStyle {\n        let s = $jq(style);\n        return {\n            name: s.find('Name').first().text(),\n            // redmine #761\n            title: s.find('Title').first().text().replace(/\\((.+?)\\)/g, ''),\n            legend: s.find('OnlineResource').attr('xlink:href') // not very specific...\n        };\n    }\n    private _parseLatLonBoundingBox(bb) {\n        if(bb.length) {\n            let bbox = {\n                westBoundLongitude: parseFloat(bb.attr('minx')),\n                eastBoundLongitude: parseFloat(bb.attr('maxx')),\n                southBoundLatitude: parseFloat(bb.attr('miny')),\n                northBoundLatitude: parseFloat(bb.attr('maxy')),\n                getBounds: function() { // TODO, cut/paste\n                    return new google.maps.LatLngBounds(\n                        new google.maps.LatLng(bbox.southBoundLatitude,bbox.westBoundLongitude), // sw\n                        new google.maps.LatLng(bbox.northBoundLatitude,bbox.eastBoundLongitude) // ne\n                    );\n                }\n            };\n            return bbox;\n        }\n    }\n    private _parseBoundingBox(bb):MapLayerBoundingBox {\n        if(bb.length) {\n            let bbox = {\n                westBoundLongitude: parseFloat(bb.find('westBoundLongitude').text()),\n                eastBoundLongitude: parseFloat(bb.find('eastBoundLongitude').text()),\n                southBoundLatitude: parseFloat(bb.find('southBoundLatitude').text()),\n                northBoundLatitude: parseFloat(bb.find('northBoundLatitude').text()),\n                getBounds: function() {\n                    return new google.maps.LatLngBounds(\n                        new google.maps.LatLng(bbox.southBoundLatitude,bbox.westBoundLongitude), // sw\n                        new google.maps.LatLng(bbox.northBoundLatitude,bbox.eastBoundLongitude) // ne\n                    );\n                }\n            };\n            // some bounding boxes seem to be messed up with lat/lons of 0 && -1\n            // so if any of those numbers occur throw away the bounding box.\n            return ![bbox.westBoundLongitude,bbox.eastBoundLongitude,bbox.southBoundLatitude,bbox.northBoundLatitude].reduce(function(v,n){\n                return v||(n === 0 || n === -1);\n            },false) ? bbox : undefined;\n        }\n    }\n    // represents an extent value of month/day/year\n    private _dateExtentValue(value:string,dateFmt?:string):MapLayerExtentValue {\n        const d = parseExtentDate(value);\n        return {\n            value: value,\n            date: d,\n            label: this.griddedPipes.get('date').transform(d,(dateFmt||'longDate')),\n            addToParams: function(params:any,serviceType:MapLayerServiceType):void {\n                switch(serviceType) {\n                    case MapLayerServiceType.WMS:\n                        params.time = value;\n                        break;\n                    case MapLayerServiceType.WCS:\n                        params.subset = params.subset||[];\n                        params.subset.push(`http://www.opengis.net/def/axis/OGC/0/time(\"${value}\")`);\n                        break;\n                }\n            }\n        };\n    }\n    // represents an extent value of day of year\n    private _doyExtentValue(value:string):MapLayerExtentValue {\n        return {\n            value: value,\n            label: this.griddedPipes.get('thirtyYearAvgDayOfYear').transform(value),\n            addToParams: function(params:any,serviceType:MapLayerServiceType):void {\n                switch(serviceType) {\n                    case MapLayerServiceType.WMS:\n                        params.elevation = value;\n                        break;\n                    case MapLayerServiceType.WCS:\n                        params.subset = params.subset||[];\n                        params.subset.push(`http://www.opengis.net/def/axis/OGC/0/elevation(${value})`);\n                        break;\n                }\n            }\n        };\n    }\n    private _parseExtent(extent):MapLayerExtent {\n        var e = $jq(extent),\n            content = e.text(),\n            dfltValue = e.attr('default'),\n            dflt,values,\n            name = e.attr('name'),\n            start,end,yearFmt = 'yyyy',i;\n        if(!name || !content) {\n            return undefined;\n        }\n        function findDefault(current,value) {\n            return current||(value.value == dfltValue ? value : undefined);\n        }\n        if(name === 'time') {\n            if(content.indexOf('/') === -1) { // for now skip <lower>/<upper>/<resolution>\n                values = content.split(',').map(d => this._dateExtentValue(d));\n                // ugh\n                dfltValue = dfltValue.replace(/0Z/,'0.000Z'); // extent values in ms preceision but not the default...\n                dflt = values.reduce(findDefault,undefined);\n                return {\n                    label: 'Date',\n                    type: MapLayerExtentType.DATE,\n                    current: dflt, // bind the extent value to use here\n                    values: values\n                };\n            } else {\n                values = /^([^\\/]+)\\/(.*)\\/P1Y$/.exec(content);\n                if(values && values.length === 3) {\n                    start = this._dateExtentValue(values[1],yearFmt);\n                    end = this._dateExtentValue(values[2],yearFmt);\n                    if(end.date.getFullYear() > start.date.getFullYear()) { // should never happen but to be safe\n                        values = [start];\n                        for(i = start.date.getFullYear()+1; i < end.date.getFullYear();i++) {\n                            values.push(this._dateExtentValue(i+'-01-01T00:00:00.000Z',yearFmt));\n                        }\n                        values.push(end);\n                        return {\n                            label: 'Year',\n                            type: MapLayerExtentType.YEAR,\n                            current: end,\n                            values: values\n                        };\n                    }\n                }\n            }\n        } else if (name === 'elevation') {\n            values = content.split(',').map(e => this._doyExtentValue(e));\n            dflt = values.reduce(findDefault,undefined);\n            return {\n                label: 'Day of Year',\n                type: MapLayerExtentType.DOY,\n                current: dflt, // bind the extent value to use here\n                values: values\n            };\n        }\n    }\n}\n","import { Selection } from 'd3-selection';\nimport { MapLayerLegend } from './map-layer-legend';\nimport { Observable, from } from 'rxjs';\nimport { switchMap, map } from 'rxjs/operators';\nimport { GriddedPointData } from './gridded-common';\nimport { PestMapLayer } from './pest-map-layer';\n\nexport class PestMapLayerLegend extends MapLayerLegend {\n    getGriddedPointData(latLng:google.maps.LatLng):Observable<GriddedPointData> {\n        if(this.layerName == 'precipitation:buffelgrass_prism')\n            return super.getGriddedPointData(latLng);\n        const layer:PestMapLayer = this.getLayer() as PestMapLayer;\n        return from(layer.getPestDescription())\n            .pipe(\n                switchMap(pest => {\n                    if(pest && pest.lowerThreshold && pest.startMonthDay && pest.agddMethod) {\n                        // special case WRT gridded data for this pest.\n                        const params:any = {\n                            climateProvider: 'NCEP',\n                            temperatureUnit: 'fahrenheit',\n                            startDate: layer.extent.current.date.getFullYear()+`-${pest.startMonthDay}`,\n                            endDate: layer.extent.current.date.toISOString().replace(/T.*$/,''),\n                            latitude: `${latLng.lat()}`,\n                            longitude: `${latLng.lng()}`\n                        };\n                        if(!pest.upperThreshold) {\n                            params.base = `${pest.lowerThreshold}`;\n                        } else {\n                            params.lowerThreshold = `${pest.lowerThreshold}`;\n                            params.upperThreshold = `${pest.upperThreshold}`;\n                        }\n                        return from(\n                            this.wcsDataService.serviceUtils.get(\n                                this.wcsDataService.serviceUtils.dataApiUrl(`/v0/agdd/${pest.agddMethod}/pointTimeSeries`),\n                                params\n                            )\n                        ).pipe(\n                            map(response => {\n                                const {timeSeries} = response;\n                                if(timeSeries) {\n                                    const point = timeSeries.length\n                                        ? timeSeries[timeSeries.length-1].agdd\n                                        : 0;\n                                    const legendData = this.getPointData(point);\n                                    const formatted = this.formatPointData(point);\n                                    const result = {point,legendData,formatted}\n                                    console.log('PestMapLayerLegend: custom gridded result',result);\n                                    return result;\n                                }\n                                return null;\n                            })\n                        );\n                    }\n                    return super.getGriddedPointData(latLng);\n                })\n            )\n    }\n\n    redraw(svg: Selection<any, any, any, any>, legendTitle: string): void {\n        const legend = this;\n        const width = parseFloat(svg.style('width').replace('px', '')),\n              height = parseFloat(svg.style('height').replace('px', '')),\n            // only data w/out 'ignore' in them\n            data = legend.getData().filter(d => d.original_label.indexOf('ignore') === -1), cell_width = 20, cell_height = 20;\n        console.debug('PestMapLegend.svg dimensions', width, height);\n        console.debug('PestMapLegend.legend cell width', cell_width);\n        console.debug('PestMapLegend.data', data);\n        const g = svg.append('g'), cell = g.selectAll('g.cell')\n            .data(data)\n            .enter()\n            .append('g')\n            .attr('class', 'cell')\n            .attr('transform', function (d, i) { return 'translate(' + 0 + ',' + (i * cell_width) + ')'; });\n        // add the  colored legend boxes.\n        cell.append('rect')\n            .attr('height', cell_height)\n            .attr('width', cell_width)\n            .style('stroke', 'black')\n            .style('stroke-width', '1px')\n            .style('fill', d => d.color)\n            .append('title').text(d => `${d.quantity}`);\n        // add the labels\n        cell.append('text')\n            .attr('dx', '2.4em')\n            .attr('dy', (cell_width / 1.5))\n            .style('text-anchor', 'start')\n            .text(d => d.original_label);\n        function label_cell(cell, label, anchor) {\n            cell.append('text')\n                .attr('dx', '2.4em')\n                .attr('dy', (cell_width / 1.5) /*cell_height+tick_length+(2*tick_padding)*/) // need to know line height of text\n                .style('text-anchor', anchor)\n                .text(label);\n        }\n        const legendHeight = cell_height * data.length;\n        /* TODO, this won't work no such element, and doesn't seem appropriate as we should futz with the size of the SVG\n        var pLegend = document.getElementsByClassName('pest-legend');\n        pLegend[0].style.height = legendHeight + 48 + 10 +'px';\n        if(legend.pest == 'Hemlock Woolly Adelgid') {\n            pLegend[0].style.width = 445 + 'px';\n        } else {\n            pLegend[0].style.width = 350 + 'px';\n        }\n        // pLegend[0].style.width = 405 + 'px';\n        */\n        let treatmentMethod = null;\n        if (['emerald_ash_borer', 'lilac_borer', 'apple_maggot'].indexOf(legend.ldef.name) !== -1) {\n            treatmentMethod = 'Window for Managing Adults';\n        }\n        else if (legend.ldef.name === 'winter_moth') {\n            treatmentMethod = 'Window for Managing Caterpillars';\n        }\n        if (treatmentMethod) {\n            svg.append('g').append('text').attr('dx', 5)\n                .attr('dy', 20 + legendHeight)\n                .attr('font-size', '16px')\n                .attr('text-anchor', 'right').text(legend.ldef.title + ' Forecast' + ', ' + legend.ldef.extent.current.label);\n            svg.append('g').append('text').attr('dx', 5)\n                .attr('dy', 38 + legendHeight)\n                .attr('font-size', '14px')\n                .attr('text-anchor', 'right').text(treatmentMethod);\n            svg.append('g').append('text').attr('dx', 5)\n                .attr('dy', 54 + legendHeight)\n                .attr('font-size', '11px')\n                .attr('text-anchor', 'right').text('USA National Phenology Network, www.usanpn.org');\n        }\n        else {\n            svg.append('g').append('text').attr('dx', 5)\n                .attr('dy', 30 + legendHeight)\n                .attr('font-size', '16px')\n                .attr('text-anchor', 'right').text(legend.ldef.title + ' Forecast' + ', ' + legend.ldef.extent.current.label);\n            svg.append('g').append('text').attr('dx', 5)\n                .attr('dy', 48 + legendHeight)\n                .attr('font-size', '11px')\n                .attr('text-anchor', 'right').text('USA National Phenology Network, www.usanpn.org');\n        }\n    }\n}\n","import { MapLayerDefinition, MapLayerExtentType, MapLayerServiceType, MapLayerExtentValue } from './gridded-common';\nimport { NpnMapLayerService } from './npn-map-layer.service';\nimport { MapLayer } from './map-layer';\nimport { ONE_DAY_MILLIS } from '../visualizations/vis-selection';\n\nexport interface PestDescription {\n    species: string;\n    lowerThreshold?: number;\n    upperThreshold?: number;\n    base?: number;\n    startMonthDay?: string;\n    agddMethod?: string;\n}\n\n/**\n * Wrapper for google.maps.GroundOverlay creation/interaction to allow\n * the on/off methods of the PestMapLayer to be synchronous even though\n * the creating of the underlying GroundOverlay is asynchronous.\n * I.e. the app may want to turn \"off\" a layer before it's actually \"on\"\n */\nclass GroundOverlayWrapper {\n    private overlayReadyResolver;\n    private overlayReady:Promise<google.maps.GroundOverlay> = new Promise(resolve => this.overlayReadyResolver = resolve);\n    constructor(data:Promise<any>,private opacity:number,private map:google.maps.Map) {\n        data.then(response => {\n            const { bbox, clippedImage } = response;\n            const [west, south, east, north] = bbox;\n            const overlay = new google.maps.GroundOverlay(clippedImage, { north, south, east, west }, { clickable: false });\n            overlay.setOpacity(this.opacity);\n            overlay.setMap(this.map);\n            this.overlayReadyResolver(overlay);\n        });\n    }\n\n    on() {\n        this.overlayReady.then(overlay => overlay.setMap(this.map));\n    }\n\n    off() {\n        this.overlayReady.then(overlay => overlay.setMap(null));\n    }\n\n    setOpacity(opacity:number) {\n        this.overlayReady.then(overlay => overlay.setOpacity(this.opacity = opacity));\n    }\n}\n\nexport class PestMapLayer extends MapLayer {\n    private overlay: GroundOverlayWrapper;\n    constructor(protected map: google.maps.Map, protected layer_def: MapLayerDefinition, protected layerService: NpnMapLayerService) {\n        super(map, layer_def, layerService);\n        const currentValue = this.newExtentValue(new Date()).value;\n        const minDateMillis = new Date(new Date().getFullYear() - 1, 0, 1).getTime();\n        const maxDateMillis = new Date(new Date().getTime() + (6*ONE_DAY_MILLIS)).getTime();\n        const values = [];\n        let cMillis = minDateMillis;\n        while(cMillis <= maxDateMillis) {\n            const d = new Date(cMillis);\n            values.push(this.newExtentValue(d));\n            cMillis += ONE_DAY_MILLIS;\n        }\n        layer_def.extent = {\n            current: values.reduce((found,v) => found||(v.value === currentValue ? v : undefined),undefined),\n            label: 'Date',\n            type: MapLayerExtentType.DATE,\n            values\n        };\n        console.log('PestMapLayer.extent',layer_def.extent);\n    }\n    newExtentValue(date: Date): MapLayerExtentValue {\n        date.setHours(0, 0, 0, 0);\n        const value = date.toISOString().replace(/T.*Z$/,'T00:00:00.000Z');\n        return {\n            value,\n            date,\n            label: `${date.toLocaleString('en-us', { month: 'long' })} ${date.getDate()}, ${date.getFullYear()}`,\n            addToParams(params: any, serviceType: MapLayerServiceType): void {\n                switch (serviceType) {\n                    case MapLayerServiceType.WMS:\n                        params.date = value.substring(0, 10);\n                        break;\n                    case MapLayerServiceType.WCS:\n                        params.subset = params.subset||[];\n                        params.subset.push(`http://www.opengis.net/def/axis/OGC/0/time(\"${value}\")`);\n                        break;\n                }\n            }\n        };\n    }\n    setOpacity(opacity:number) {\n        this.opacity = opacity;\n        if(this.overlay) {\n            this.overlay.setOpacity(opacity);\n        }\n    }\n    private _on(): PestMapLayer {\n        const params: any = {\n            species: this.layer_def.title\n        };\n        this.layer_def.extent.current.addToParams(params, MapLayerServiceType.WMS);\n        this.overlay = new GroundOverlayWrapper(this.layerService.serviceUtils.get(this.layerService.serviceUtils.dataApiUrl('/v0/agdd/pestMap'), params),this.opacity,this.map);\n        this.overlay.on();\n        return this;\n    }\n    on(): PestMapLayer {\n        //TODO Analytics.trackEvent('gridded-layer','on',this.title);\n        return this._on();\n    }\n    private _off(): PestMapLayer {\n        if (this.overlay) {\n            this.overlay.off();\n            this.overlay = null;\n        }\n        return this;\n    }\n    off(): PestMapLayer {\n        //TODO Analytics.trackEvent('gridded-layer','off',this.title);\n        return this._off();\n    }\n    bounce(): PestMapLayer {\n        return this._off()._on();\n    }\n\n    getPestDescription():Promise<PestDescription> {\n        const species = this.title;\n        return this.layerService.serviceUtils.cachedGet(\n            this.layerService.serviceUtils.dataApiUrl('/v0/agdd/pestDescriptions')\n        ).then((descriptions:PestDescription[]) => descriptions.find(d => d.species === species));\n    }\n\n    getTimeSeriesUrl():Promise<string> {\n        return this.getPestDescription()\n            .then(pest => this.layerService.serviceUtils.dataApiUrl(`/v0/agdd/${pest.agddMethod||'simple'}/pointTimeSeries`));\n    }\n}\n","import { Pipe, PipeTransform, Injectable } from '@angular/core';\nimport { DatePipe, DecimalPipe } from '@angular/common';\nimport { parseExtentDate } from './gridded-common';\nimport { ONE_DAY_MILLIS } from '../visualizations/vis-selection';\n\nconst ONE_DAY = (24*60*60*1000);\nconst JAN_ONE_2010 = new Date(2010,0);\nconst JAN_ONE_THIS_YEAR = new Date((new Date()).getFullYear(),0);\n\n@Pipe({name: 'legendGddUnits'})\nexport class LegendGddUnitsPipe implements PipeTransform {\n    constructor(private decimalPipe:DecimalPipe) {}\n    transform(n:number,includeUnits?:boolean) {\n        return this.decimalPipe.transform(n,'1.0-0')+(includeUnits ? ' AGDD' : '');\n    }\n}\n\n@Pipe({name: 'legendBuffelgrassUnits'})\nexport class LegendBuffelgrassUnitsPipe implements PipeTransform {\n    constructor(private decimalPipe:DecimalPipe) {}\n    transform(n:number,includeUnits?:boolean) {\n        return this.decimalPipe.transform(n,'1.0-2')+(includeUnits ? ' INCHES' : '');\n    }\n}\n\n@Pipe({name: 'agddDefaultTodayElevation'})\nexport class AgddDefaultTodayElevationPipe implements PipeTransform {\n    constructor(private datePipe:DatePipe) {}\n\n    transform(values:any[]):any {\n        let todayLabel = this.datePipe.transform(new Date(),'MMMM d');\n        return (values||[]).reduce((dflt,v) =>{\n            return dflt||(v.label == todayLabel ? v : undefined);\n        },undefined);\n    }\n}\n\n@Pipe({name: 'legendAgddAnomaly'})\nexport class LegendAgddAnomalyPipe implements PipeTransform {\n    constructor(private decimalPipe:DecimalPipe) {}\n    transform(n:number,includeUnits?:boolean):string {\n        if(n === 0) {\n            return 'No Difference';\n        }\n        let lt = n < 0;\n        return this.decimalPipe.transform(Math.abs(n),'1.0')+(includeUnits ? ' AGDD ' : ' ')+(lt ? '<' : '>') +' Avg';\n    }\n}\n\n@Pipe({name: 'agddDefaultTodayTime'})\nexport class AgddDefaultTodayTimePipe implements PipeTransform {\n    constructor(private datePipe:DatePipe) {}\n\n    transform(values:any[]):string {\n        let todayLabel = this.datePipe.transform(new Date(),'MMMM d, y');\n        return (values||[]).reduce(function(dflt,v){\n            return dflt||(v.label == todayLabel ? v : undefined);\n        },undefined);\n    };\n}\n\n@Pipe({name: 'legendSixAnomaly'})\nexport class LegendSixAnomalyPipe implements PipeTransform {\n    transform(n:number):string {\n        if(n === 0) {\n            return 'No Difference';\n        }\n        var lt = n < 0,\n            abs = Math.abs(n);\n        return abs+' Days '+(lt ? 'Early' : 'Late');\n    };\n}\n\n@Pipe({name: 'legendDoy'})\nexport class LegendDoyPipe implements PipeTransform {\n    constructor(private datePipe:DatePipe) {}\n\n    transform(doy:number,fmt:string,current_year?:boolean):string {\n        doy = Math.round(doy);\n        if(doy === 0) {\n            doy = 1;\n        }\n        fmt = fmt||'MMM d'; // e.g. Jan 1\n        return this.datePipe.transform(new Date((current_year ? JAN_ONE_THIS_YEAR : JAN_ONE_2010).getTime()+((doy-1)*ONE_DAY)),fmt);\n    }\n}\n\n@Pipe({name: 'extentDates'})\nexport class ExtentDatesPipe implements PipeTransform {\n    constructor(private datePipe:DatePipe) {}\n\n    toTime(s:string):number {\n        let d = new Date();\n        if(s === 'yesterday' || s === 'today' || s === 'tomorrow') {\n            if(s === 'yesterday') {\n                d.setTime(d.getTime()-ONE_DAY);\n            } else if (s === 'tomorrow') {\n                d.setTime(d.getTime()+ONE_DAY);\n            }\n            s = this.datePipe.transform(d,'yyyy-MM-dd 00:00:00');\n        } else if(s.indexOf('T') === -1) {\n            s = d.getFullYear()+'-'+s+' 00:00:00';\n        }\n        return parseExtentDate(s).getTime();\n    }\n\n    transform(arr:string[],after:string,before:string):string[] {\n        var a = after ? this.toTime(after) : undefined,\n            b = before ? this.toTime(before) : undefined;\n        if(a || b) {\n            arr = arr.filter((d) => {\n                var t = parseExtentDate(d).getTime();\n                return (!a || (a && t > a)) && (!b || (b && t < b));\n            });\n        }\n        return arr;\n    }\n}\n\nexport enum DoyTxType {\n    DATE = 'date',\n    DOY_STRING = 'doy', // as used by WMS extents e.g. 1.0\n    LABEL = 'label'\n}\nconst DOY_LABEL_FMT = 'MMMM d';\n\n@Pipe({name: 'thirtyYearAvgDayOfYear'})\nexport class ThirtyYearAvgDayOfYearPipe implements PipeTransform {\n    constructor(private datePipe:DatePipe) {}\n\n    transform(input:string | Date,txTo:DoyTxType = DoyTxType.LABEL):any {\n        if(typeof(input) === 'string') {\n            const doy = parseFloat(input);\n            if(!isNaN(doy)) {\n                input = new Date(JAN_ONE_2010.getTime()+((doy-1)*ONE_DAY));\n            }\n        }\n        if (input instanceof Date) {\n            switch(txTo) {\n                case DoyTxType.DATE:\n                    return input;\n                case DoyTxType.LABEL:\n                    return this.datePipe.transform(input,DOY_LABEL_FMT);\n                case DoyTxType.DOY_STRING:\n                    if(input.getFullYear() !== 2010) {\n                        input.setFullYear(2010);\n                    }\n                    input.setHours(0,0,0,0);\n                    const diff = input.getTime() - JAN_ONE_2010.getTime();\n                    const doy = (diff/ONE_DAY_MILLIS)+1.0;\n                    return doy.toFixed(1);\n            }\n        }\n        console.warn(`ThirtyYearAvgDayOfYearPipe.transform unexpected input for translation to \"${txTo}\"`,input);\n        return input;\n    }\n}\n\n@Injectable()\nexport class GriddedPipeProvider {\n    readonly pipes:any = {};\n\n    constructor(\n        private extentDates:ExtentDatesPipe,\n        private legendDoy:LegendDoyPipe,\n        private legendSixAnomaly:LegendSixAnomalyPipe,\n        private agddDefaultTodayTime:AgddDefaultTodayTimePipe,\n        private legendAgddAnomaly:LegendAgddAnomalyPipe,\n        private agddDefaultTodayElevation:AgddDefaultTodayElevationPipe,\n        private legendGddUnits:LegendGddUnitsPipe,\n        private legendBuffelgrassUnits:LegendBuffelgrassUnitsPipe,\n        private thirtyYearAvgDayOfYear:ThirtyYearAvgDayOfYearPipe,\n        private date:DatePipe\n    ) {\n        this.pipes.extentDates = extentDates;\n        this.pipes.legendDoy = legendDoy;\n        this.pipes.legendSixAnomaly = legendSixAnomaly;\n        this.pipes.agddDefaultTodayTime = agddDefaultTodayTime;\n        this.pipes.legendAgddAnomaly = legendAgddAnomaly;\n        this.pipes.agddDefaultTodayElevation = agddDefaultTodayElevation;\n        this.pipes.legendGddUnits = legendGddUnits;\n        this.pipes.legendBuffelgrassUnits = legendBuffelgrassUnits;\n        this.pipes.thirtyYearAvgDayOfYear = thirtyYearAvgDayOfYear;\n        this.pipes.date = date;\n    }\n\n    get(pipeName:string):PipeTransform {\n        return this.pipes[pipeName];\n    }\n}","//export * from './wms-map-layer';\nexport * from './npn-gridded.module';\nexport * from './map-layer';\nexport * from './npn-map-layer.service';\nexport * from './map-layer-legend';\nexport * from './wcs-data.service';\nexport { SupportsOpacity } from './supports-opacity-control.component';\nexport { MapLayerLegendComponent } from './map-layer-legend.component';\nexport * from './google-feature-bounds';\nexport * from './gridded-common';\nexport { GriddedPipeProvider, DoyTxType } from './pipes';\nexport * from './wms-map-layer';\nexport * from './wms-map-layer-legend';\nexport * from './pest-map-layer';\nexport * from './pest-map-layer-legend';\nexport * from './default-map-layer-legend';\nexport * from './boundary.service';","import {Component,Input,OnChanges,SimpleChanges} from '@angular/core';\n\n// NOTE: these functions are already defined on google.maps.ImageMapType\n// re-using the function names and can later just claim that ImageMapType\n// implements this interface\nexport interface SupportsOpacity {\n    setOpacity(o:number);\n    getOpacity():number;\n}\n\n@Component({\n    selector: 'supports-opacity-control',\n    template:`\n    <label>Opacity\n        <mat-slider min=\"0\" max=\"100\" step=\"1\" tickInterval=\"25\" [thumbLabel]=\"opacity\" [(ngModel)]=\"opacity\" (change)=\"opacityChanged()\" [disabled]=\"!supportsOpacity\"></mat-slider>\n    </label>\n    `\n})\nexport class SupportsOpacityControl implements OnChanges {\n    @Input()\n    supportsOpacity:SupportsOpacity;\n    opacity:number = 100;\n\n    opacityChanged() {\n        if(this.supportsOpacity) {\n            this.supportsOpacity.setOpacity(this.opacity/100.0);\n        }\n    }\n\n    ngOnChanges(changes:SimpleChanges):void {\n        console.log('SupportsOpacityControl.ngOnchanges',changes);\n        if(changes.supportsOpacity && changes.supportsOpacity.currentValue) {\n            this.opacity = Math.round(changes.supportsOpacity.currentValue.getOpacity()*100);\n        }\n    }\n}\n","import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { map } from 'rxjs/operators';\nimport { HttpParams, HttpParameterCodec } from '@angular/common/http';\n\nimport * as $jq_ from 'jquery';\nconst $jq = $jq_;\n\nimport { MapLayerLegend } from './map-layer-legend';\nimport { NpnServiceUtils } from '../common/index';\n\nconst TO_RADIANS = (degrees:number) => degrees * Math.PI / 180;\nconst TO_DEGREES = (radians:number) => radians * 180 / Math.PI;\nexport const DESTINATION_POINT = (latLng:google.maps.LatLng,brng:number,dist:number):google.maps.LatLng => {\n    // 0=N,90=E,180=S,270=W dist in km\n    dist = dist / 6371;\n    brng = TO_RADIANS(brng);\n\n    let lat1 = TO_RADIANS(latLng.lat()),\n        lon1 = TO_RADIANS(latLng.lng());\n\n    let lat2 = Math.asin(Math.sin(lat1) * Math.cos(dist) +\n                         Math.cos(lat1) * Math.sin(dist) * Math.cos(brng));\n\n    let lon2 = lon1 + Math.atan2(Math.sin(brng) * Math.sin(dist) *\n                                 Math.cos(lat1),\n                                 Math.cos(dist) - Math.sin(lat1) *\n                                 Math.sin(lat2));\n\n    if (isNaN(lat2) || isNaN(lon2)) {\n         return null;\n     }\n\n    return new google.maps.LatLng(TO_DEGREES(lat2),TO_DEGREES(lon2));\n}\n\n@Injectable()\nexport class WcsDataService {\n    constructor(public serviceUtils:NpnServiceUtils) {}\n\n    newInfoWindowHandler(map:google.maps.Map) {\n        return new GriddedInfoWindowHandler(this,map);\n    }\n\n    // NOTE: the original from the npn-vis-tool passed in a layer object and augmented\n    // WCS parameters based on its extent.  At the moment full layers are not in use\n    // and don't exist for the set of current components.  All usage at the moment\n    // ties back to the ClippedWmsMapSelection class so look there when the time comes\n    getGriddedData(layerName:string,\n                   latLng:google.maps.LatLng,\n                   gridSize:number,\n                   paramsAugment?:(args:any) => void):Observable<number[]> {\n        const edges = [0,80,180,270].map(bearing => DESTINATION_POINT(latLng,bearing,(gridSize/2)));\n        const wcsArgs = {\n                service: 'WCS',\n                request: 'GetCoverage',\n                version: '2.0.1',\n                coverageId: layerName.replace(':','__'), // convention\n                format: 'application/gml+xml',\n                subset: []\n            };\n        // add edges\n        wcsArgs.subset.push('http://www.opengis.net/def/axis/OGC/0/Long('+[edges[3].lng(),edges[1].lng()].join(',')+')');\n        wcsArgs.subset.push('http://www.opengis.net/def/axis/OGC/0/Lat('+[edges[2].lat(),edges[0].lat()].join(',')+')');\n        // date extent example...\n        // http://www.opengis.net/def/axis/OGC/0/time(\"2018-01-31T00:00:00.000Z\")\n        if(paramsAugment) {\n            paramsAugment(wcsArgs);\n        }\n        console.log('wcsArgs',wcsArgs);\n        /*\n        TODO re-test issue post Angular 6\n        // see: https://github.com/angular/angular/issues/11058\n        // will need to change when upgrading Angular version and moving to HttpClient\n        let urlParams:URLSearchParams = new URLSearchParams('',new GhQueryEncoder());\n        */\n        let params = new HttpParams({encoder:new CustomEncoder()});\n        Object.keys(wcsArgs).filter(key => key !== 'subset').forEach(key => params = params.set(key,wcsArgs[key]));\n        wcsArgs.subset.forEach(v => params = params.append('subset',v));\n        return this.serviceUtils.http.get(`${this.serviceUtils.config.geoServerRoot}/wcs`,{params,responseType:'text'})\n            .pipe(\n                map(response => {\n                    let wcsData = $jq($jq.parseXML(response)),\n                        tuples = wcsData.find('tupleList').text();\n                    return tuples ?\n                        tuples.trim().split(' ').map(t => parseFloat(t)) :\n                        [];\n                })\n            )\n    }\n}\n\nclass CustomEncoder implements HttpParameterCodec {\n    encodeKey(key: string): string {\n      return encodeURIComponent(key);\n    }\n  \n    encodeValue(value: string): string {\n      return encodeURIComponent(value);\n    }\n  \n    decodeKey(key: string): string {\n      return decodeURIComponent(key);\n    }\n  \n    decodeValue(value: string): string {\n      return decodeURIComponent(value);\n    }\n  }\n\n/*\nclass GhQueryEncoder extends QueryEncoder {\n    encodeKey(k: string): string {\n        k = super.encodeKey(k);\n        return k.replace(/\\+/gi, '%2B');\n    }\n    encodeValue(v: string): string {\n        v = super.encodeKey(v);\n        return v.replace(/\\+/gi, '%2B');\n    }\n}\n*/\n\n/**\n * IMPORTANT: This is code that came from the legacy application and is currently still used by some FWS\n * applications (clipped-wms-map).  The functionality has been re-implemented within `MapLayerLegend`\n * and this class should probably be re-visited/removed\n */\nexport class GriddedInfoWindowHandler {\n    infoWindow:google.maps.InfoWindow;\n    constructor(private dataService:WcsDataService,private map:google.maps.Map) {}\n\n    open(latLng:google.maps.LatLng,layerName:string,legend:MapLayerLegend,paramsAugment?:(args:any) => void) {\n        this.dataService.getGriddedData(layerName,latLng,5,paramsAugment)\n            .subscribe((tuples:number[]) => {\n                console.log('GriddedInfoWindowHandler.tuples',tuples);\n                let point = tuples && tuples.length ? tuples[0] : undefined;\n                if(point === -9999 || isNaN(point)) {\n                    console.log(`GriddedInfoWindowHandler: received -9999 or Nan (${point}) ignoring`);\n                    return;\n                }\n                let html = `<div id=\"griddedPointInfoWindow\">`;\n                let legendPoint = legend.getPointData(point);\n                if(legendPoint) {\n                    html += `<div class=\"gridded-legend-color\" style=\"background-color: ${legendPoint.color};\">&nbsp;</div>`;\n                }\n                html += `<div class=\"gridded-point-data\">${legend.formatPointData(point)}</div>`;\n                html += `</div>`;\n                if(!this.infoWindow) {\n                    this.infoWindow = new google.maps.InfoWindow({\n                        maxWidth: 200,\n                        content: 'contents'\n                    });\n                }\n                this.infoWindow.setContent(html);\n                this.infoWindow.setPosition(latLng);\n                this.infoWindow.open(this.map);\n            });\n    }\n\n    close() {\n        if(this.infoWindow) {\n            this.infoWindow.close();\n        }\n    }\n}\n","import { Selection } from 'd3-selection';\nimport * as d3 from 'd3';\nimport { MapLayerLegend } from './map-layer-legend';\n\nexport class WmsMapLayerLegend extends MapLayerLegend {\n    redraw(svg: Selection<any, any, any, any>, legendTitle: string): void {\n        const legend = this;\n        if (svg) {\n            svg.selectAll('g').remove();\n        }\n        if (!legend || !svg) {\n            return;\n        }\n        let width = parseFloat(svg.style('width').replace('px', '')), height = parseFloat(svg.style('height').replace('px', '')), data = legend.getData(), mid_idx = Math.floor(data.length / 2), cell_width = width / data.length, cell_height = 30, top_pad = 2;\n        console.debug('WmsMapLegend.svg dimensions', width, height);\n        console.debug('WmsMapLegend.legend cell width', cell_width);\n        let g = svg.append('g'), cell = g.selectAll('g.cell')\n            .data(data)\n            .enter()\n            .append('g')\n            .attr('class', (d, i) => {\n                return 'cell' +\n                    ((i === 0) ? ' first' :\n                        ((i === mid_idx) ? ' middle' :\n                            ((i === data.length - 1) ? ' last' : '')));\n            })\n            .attr('transform', function (d, i) { return 'translate(' + (i * cell_width) + ',' + top_pad + ')'; })\n            .append('rect')\n            .attr('height', cell_height)\n            .attr('width', cell_width)\n            .style('stroke', 'black')\n            .style('stroke-width', '1px')\n            .style('fill', function (d, i) { return d.color; });\n        if (legend.ldef.legend_delimiter_every) {\n            let every = legend.ldef.legend_delimiter_every, running_total = 0, separators = data.map(function (d, i) {\n                if ((i + 1) === data.length) {\n                    return true;\n                }\n                running_total += (data[i + 1].quantity - data[i].quantity);\n                if (running_total >= every) {\n                    running_total = 0;\n                    return true;\n                }\n                return false;\n            }), top_bottom = [(cell_width + 1), cell_height, (cell_width + 1), cell_height].join(','), //{ stroke-dasharray: $w,$h,$w,$h }\n                top_right_bottom = [((cell_width * 2) + cell_height), cell_height].join(','), //{ stroke-dasharray: (($w*2)+$h),$h }\n                top_left_bottom = [(cell_width + 1), cell_height, (cell_width + cell_height + 1), 0].join(','); ////{ stroke-dasharray: $w,$h,($w+$h),0 }\n            console.debug('WmsMapLegend.legend_delimiter_every', every);\n            cell.style('stroke-dasharray', function (d, i) {\n                if (i === 0) {\n                    return separators[i] ? undefined : top_left_bottom;\n                }\n                return separators[i] ? top_right_bottom : top_bottom;\n            })\n                // top_bottom removes the left/right borders which leaves a little whitespace\n                // which looks odd so in cases where there is no right border increase a cell's width\n                // by 1px to cover that gap\n                .attr('width', function (d, i) {\n                    var w = parseFloat(d3.select(this).attr('width'));\n                    if (i === 0) {\n                        return separators[i] ? w : w + 1;\n                    }\n                    return separators[i] ? w : w + 1;\n                });\n            g.selectAll('g.cell').append('line')\n                .attr('stroke', function (d, i) { return separators[i] ? 'black' : 'none'; })\n                .attr('stroke-width', 2)\n                .attr('x1', cell_width - 1)\n                .attr('x2', cell_width - 1)\n                .attr('y1', 0)\n                .attr('y2', cell_height);\n        }\n        cell.append('title').text(function (d) { return d.label; });\n        let tick_length = 5, tick_padding = 3;\n        function label_cell(cell, label, anchor) {\n            let tick_start = (top_pad + cell_height + tick_padding);\n            cell.append('line')\n                .attr('x1', (cell_width / 2))\n                .attr('y1', tick_start)\n                .attr('x2', (cell_width / 2))\n                .attr('y2', tick_start + tick_length)\n                .attr('stroke', 'black')\n                .attr('stroke-width', '1');\n            cell.append('text')\n                .attr('dx', (cell_width / 2))\n                .attr('dy', '4em' /*cell_height+tick_length+(2*tick_padding)*/) // need to know line height of text\n                .style('text-anchor', anchor)\n                .text(label);\n        }\n        label_cell(svg.select('g.cell.first'), data[0].label, 'start');\n        label_cell(svg.select('g.cell.middle'), data[mid_idx].label, 'middle');\n        label_cell(svg.select('g.cell.last'), data[data.length - 1].label, 'end');\n        if (legend.ldef.legend_units) {\n            svg.append('g')\n                .append('text')\n                .attr('dx', (width / 2))\n                .attr('dy', 75 + top_pad)\n                .attr('text-anchor', 'middle')\n                .text(legend.ldef.legend_units);\n        }\n        // if given an explicit title use it o/w use the info from the\n        // legend definition, etc.\n        let legend_title;\n        if (legendTitle) {\n            legend_title = legendTitle;\n        }\n        else {\n            legend_title = legend.ldef.title;\n            if (legend.ldef.extent && legend.ldef.extent.current) {\n                legend_title += `, ${legend.ldef.extent.current.label}`;\n            }\n        }\n        if(!!legend_title) {\n            svg.append('g').append('text').attr('dx', 5)\n                .attr('dy', 100 + top_pad)\n                .attr('font-size', '18px')\n                .attr('text-anchor', 'right').text(legend_title);\n        }\n        svg.append('g').append('text').attr('dx', 5)\n            .attr('dy', (!!legend_title ? 118 : 85) + top_pad)\n            .attr('font-size', '11px')\n            .attr('text-anchor', 'right').text('USA National Phenology Network, www.usanpn.org');\n    }\n}\n","import { BOX_SIZE, BASE_WMS_ARGS, MapLayerDefinition, MapLayerServiceType } from './gridded-common';\nimport { NpnMapLayerService } from './npn-map-layer.service';\nimport { MapLayer, srsConversion, encodeHttpParams } from './map-layer';\nimport * as $jq_ from 'jquery';\nconst $jq = $jq_;\n\nexport class WmsMapLayer extends MapLayer {\n    private wmsArgs: any;\n    private sldBody: any;\n    private styleRange: number[];\n    googleLayer: google.maps.ImageMapType;\n    //[x: string]: any; // allow arbitrary properties\n\n    constructor(protected map: google.maps.Map, protected layer_def: MapLayerDefinition, protected layerService: NpnMapLayerService) {\n        super(map, layer_def, layerService);\n        if (layer_def.extent_values_filter) {\n            console.debug('layer ' + layer_def.name + ' has an extent_values_filter, processing', layer_def.extent_values_filter);\n            const valuesPipe = this.griddedPipes.get(layer_def.extent_values_filter.name), extentValues = layer_def.extent.values.map(e => e.value), filterArgs = [extentValues].concat(layer_def.extent_values_filter.args || []), filteredValues = valuesPipe.transform.apply(valuesPipe, filterArgs);\n            console.debug('filteredValues', (filteredValues.length > 1 ? (filteredValues[0] + '...' + filteredValues[filteredValues.length - 1]) : filteredValues));\n            layer_def.extent.values = layer_def.extent.values.filter(function (v) {\n                return filteredValues.indexOf(v.value) !== -1;\n            });\n            if (layer_def.extent.current && filteredValues.indexOf(layer_def.extent.current.value) === -1) {\n                console.debug('current extent value has become invalid, replacing with last option');\n                layer_def.extent.current = layer_def.extent.values.length ? layer_def.extent.values[layer_def.extent.values.length - 1] : undefined;\n            }\n        }\n        if (layer_def.extent_default_filter) {\n            console.debug('layer ' + layer_def.name + ' has an extent_default_filter, processing', layer_def.extent_default_filter);\n            let defaultPipe = this.griddedPipes.get(layer_def.extent_default_filter.name), defaultFilterArgs = [layer_def.extent.values].concat(layer_def.extent_default_filter.values || []);\n            layer_def.extent.current = defaultPipe.transform.apply(defaultPipe, defaultFilterArgs) || layer_def.extent.current;\n            console.debug('resulting default value', layer_def.extent.current);\n        }\n        /*\n        if(layer_def.description) {\n            layer_def.$description = $sce.trustAsHtml(layer_def.description);\n        }*/\n        this.wmsArgs = { ...BASE_WMS_ARGS, ...{ layers: layer_def.name } };\n        this.googleLayer = new google.maps.ImageMapType({\n            getTileUrl: (coord: google.maps.Point, zoom: number) => {\n                let proj = this.map.getProjection(), zfactor = Math.pow(2, zoom), top = proj.fromPointToLatLng(new google.maps.Point(coord.x * BOX_SIZE / zfactor, coord.y * BOX_SIZE / zfactor)), bot = proj.fromPointToLatLng(new google.maps.Point((coord.x + 1) * BOX_SIZE / zfactor, (coord.y + 1) * BOX_SIZE / zfactor)), ctop = srsConversion(top), cbot = srsConversion(bot), base = {};\n                if (this.extent && this.extent.current) {\n                    this.extent.current.addToParams(base, MapLayerServiceType.WMS);\n                }\n                var args: any = { bbox: [ctop.lng, cbot.lat, cbot.lng, ctop.lat].join(',') };\n                if (this.sldBody) {\n                    args.sld_body = this.sldBody;\n                }\n                let all_args = { ...base, ...this.wmsArgs, ...args };\n                return this.griddedUrls.wmsBaseUrl + '?' + encodeHttpParams(all_args);\n            },\n            tileSize: new google.maps.Size(BOX_SIZE, BOX_SIZE),\n            //isPng: true,\n            name: (layer_def.title || layer_def.name)\n        });\n        this.googleLayer.setOpacity(this.opacity);\n    }\n    setOpacity(opacity:number) {\n        this.opacity = opacity;\n        if(this.googleLayer) {\n            this.googleLayer.setOpacity(opacity);\n        }\n    }\n    on(): WmsMapLayer {\n        //TODO Analytics.trackEvent('gridded-layer','on',this.title);\n        this.map.overlayMapTypes.push(this.googleLayer);\n        return this;\n    }\n    off(): WmsMapLayer {\n        if (this.map.overlayMapTypes.getLength()) {\n            //TODO Analytics.trackEvent('gridded-layer','off',this.title);\n            this.map.overlayMapTypes.pop();\n        }\n        // TODO deal with pest map which is a google.maps.GroundOverlay\n        return this;\n    }\n    bounce(): WmsMapLayer {\n        if (this.map.overlayMapTypes.getLength()) {\n            this.map.overlayMapTypes.pop();\n        }\n        this.map.overlayMapTypes.push(this.googleLayer);\n        return this;\n    }\n\n    /**\n     * Sets the style to pass to the WMS service, used to limit the layer to a range.\n     * \n     * @param style The new style (XML as a stirng)\n     */\n    setStyle(style:any) {\n        if(style !== this.sldBody) { // avoid off/on if nothing is changing\n            if(style) {\n                console.debug('style:',style);\n            }\n            this.sldBody = style;\n            this.bounce();\n        }\n    }\n\n    /**\n     * @returns The style range if any was set.\n     */\n    getStyleRange():number[] {\n        return this.styleRange;\n    }\n\n    /**\n     * Sets the style range to pass along to the server.\n     * \n     * @param range The new style range.\n     */\n    setStyleRange(range:number[]):Promise<void> {\n        if(!(this.styleRange = range)) {\n            this.setStyle(undefined);\n            return Promise.resolve();\n        }\n        return this.getLegend().then(legend => {\n            const styleDef = legend.getStyleDefinition(),\n                data = legend.getData(),\n                minQ = data[range[0]].quantity,\n                maxQ = data[range[1]].quantity,\n                $styleDef = $jq(styleDef);\n            let colors = $styleDef.find('ColorMapEntry');\n            let colorMap = $styleDef.find('ColorMap');\n            // only want the first style assosiated with the layer\n            // todo: instead of picking first style, generalize to pick by name\n            while (styleDef[0].firstElementChild.firstElementChild.children.length > 2) {\n                styleDef[0].firstElementChild.firstElementChild.removeChild(styleDef[0].firstElementChild.firstElementChild.lastChild);\n            }    \n            if(colors.length === 0) {\n                colors = $styleDef.find('sld\\\\:ColorMapEntry'); // FF\n            }\n            if(colorMap.length === 0) {\n                colorMap = $styleDef.find('sld\\\\:ColorMap'); // FF\n            }\n            if(colorMap) {\n                colorMap.attr('type','intervals');\n            }\n            colors.each(function() {\n                var cme = $jq(this),\n                    q = parseInt(cme.attr('quantity'));\n                /*if(q === -9999) {\n                    cme.attr('opacity','0.0');\n                    //cme.remove();\n                } else {*/\n                    cme.attr('opacity',(q > minQ && q <= maxQ) ? '1.0' : '0.0');\n                /*}*/\n            });\n            this.setStyle(xmlToString(styleDef[0]));\n        });\n    }\n}\n\n\nfunction xmlToString(xmlData) {\n    let xmlString;\n    if ((window as any).ActiveXObject) {\n        xmlString = xmlData.xml; // MSIE\n    } else {\n        xmlString = (new XMLSerializer()).serializeToString(xmlData);\n    }\n    return xmlString;\n}","export * from './public_api';","import {NgModule} from '@angular/core';\nimport {HttpClientModule} from '@angular/common/http';\n\nimport {VisualizationsModule} from './visualizations';\nimport {NpnCommonModule} from './common';\n\nimport {FormsModule} from '@angular/forms';\n\n@NgModule({\n  declarations: [\n  ],\n  imports: [\n    NpnCommonModule,\n    VisualizationsModule,\n    HttpClientModule,\n    FormsModule\n  ]\n})\nexport class NpnLibModule { }\n","export * from './common/public_api';\nexport * from './gridded/public_api';\nexport * from './visualizations/public_api';\nexport * from './npn-lib.module';","import {selectionProperty,GET_EXTERNAL,SET_EXTERNAL, GroupHttpParams, SelectionGroup} from '../vis-selection';\nimport {\n    TaxonomicSpeciesTitlePipe,\n    DoyPipe,\n    SpeciesPlot,\n    TaxonomicSpeciesType,\n    TaxonomicSpeciesRank,\n    TaxonomicPhenophaseType,\n    TaxonomicPhenophaseRank,\n    SpeciesTitlePipe,\n    getSpeciesPlotKeys,\n    CURRENT_YEAR,\n    CURRENT_YEAR_VALUE\n} from '../../common';\nimport {ActivityCurvesSelection} from './activity-curves-selection';\n\nimport * as d3 from 'd3';\nimport { HttpParams } from '@angular/common/http';\n\nexport interface ActivityCurveMagnitudeData {\n    start_doy?: number;\n    end_doy?: number;\n    start_date: string;\n    end_date: string;\n}\n\nexport class ActivityCurve implements SpeciesPlot {\n    @selectionProperty()\n    id:number;\n\n    childId:number = 0;\n\n    @selectionProperty()\n    speciesRank:TaxonomicSpeciesRank;\n    @selectionProperty()\n    private _species:TaxonomicSpeciesType;\n    @selectionProperty({\n        ser: d => d,\n        des: d => {\n            // when deserializing re-align with the actual metric object\n            // so equality checks elsewhere work.\n            return !!d\n                ? ALL_METRICS.find(m => m.id === d.id)\n                : d;\n        }\n    })\n    private _metric;\n    @selectionProperty()\n    phenophaseRank:TaxonomicPhenophaseRank;\n    @selectionProperty()\n    private _phenophase:TaxonomicPhenophaseType;\n    @selectionProperty()\n    private _year:number;\n\n    private _originalMetrics;\n    private _metrics;\n\n    @selectionProperty()\n    private _color:string;\n    orient:string;\n\n    doyFocus:number;\n\n    private $data:ActivityCurveMagnitudeData[];\n    private $metricData:any;\n    private $x;\n    private $y;\n\n    selection:ActivityCurvesSelection;\n    private _group:SelectionGroup;\n    private _children:ActivityCurve[];\n\n    private get children():ActivityCurve[] {\n        return this._children||[];\n    }\n\n    private get curveId():string {\n        return `${this.id}-${this.childId}`;\n    }\n\n    private copy(childIndex:number):ActivityCurve {\n        const copy = new ActivityCurve();\n        copy.id = this.id;\n        copy.childId = childIndex;\n        copy.color = this.color;\n        copy.orient = this.orient;\n        copy.speciesRank = this.speciesRank;\n        copy._species = this._species;\n        copy._metric = this._metric;\n        copy.phenophaseRank = this.phenophaseRank;\n        copy._phenophase = this._phenophase;\n        copy._year = this._year;\n        copy._color = this._color;\n        copy.selection = this.selection;\n        return copy;\n    }\n\n    get external() { return GET_EXTERNAL.apply(this,arguments); }\n    set external(o) { SET_EXTERNAL.apply(this,arguments); }\n\n    private reset() {\n        delete this.$data;\n        delete this.$metricData;\n        this.children.forEach(c => {\n            delete c.$data;\n            delete c.$metricData;\n        });\n    }\n\n    private updateCheck(requiresUpdate?:boolean) {\n        if(this.selection && this.isValid()) {\n            if(!this.plotted() || requiresUpdate) {\n                this.selection.update();\n            } else {\n                this.selection.redraw();\n            }\n        }\n    }\n\n    get actualYear() {\n        return this._year === CURRENT_YEAR ? CURRENT_YEAR_VALUE : this._year;\n    }\n    get year() {\n        return this._year;\n    }\n    set year(y) {\n        this.reset();\n        this._year = y;\n        this.children.forEach(c => c._year = y);\n        this.updateCheck(true);\n    }\n\n    get phenophase():TaxonomicPhenophaseType {\n        return this._phenophase;\n    }\n    set phenophase(p:TaxonomicPhenophaseType) {\n        this.reset();\n        this._phenophase = p;\n        this.children.forEach(c => c._phenophase = p);\n        this.updateCheck(true);\n    }\n\n    get color():string {\n        return this._color;\n    }\n    set color(c:string) {\n        this._color = c;\n        this.updateCheck(false);\n    }\n\n    get metric() {\n        return this._metric;\n    }\n    set metric(m) {\n        delete this.$metricData;\n        this._metric = m;\n        this.children.forEach(c => {\n            delete c.$metricData;\n            c._metric = m\n        });\n        this.updateCheck();\n    }\n\n    get species():TaxonomicSpeciesType {\n        return this._species;\n    }\n    set species(s:TaxonomicSpeciesType) {\n        this.reset();\n        this._species = s;\n        this.children.forEach(c => c._species = s);\n        this.phenophase = undefined;\n        this._metrics = this._species && this._species.kingdom \n            ? (ACTIVITY_CURVE_KINGDOM_METRICS[this._species.kingdom]||[])\n            : [];\n        this._originalMetrics = this._metrics;\n        if(this._metric && this._metrics.indexOf(this._metric) === -1) {\n            // previous metric has become invalid\n            this.metric = undefined;\n        }\n        if(this._metrics.length && !this._metric) {\n            this.metric = this._metrics[0];\n        }\n    }\n\n    get validMetrics() {\n        return (this._metrics||[]);\n    }\n\n    /**\n     * Puts all valid metrics back if they were overridden\n     */\n    overrideValidMetricsReset() {\n        this._metrics = this._originalMetrics;\n    }\n\n    /**\n     * Change which metrics are selectable.  This codes does NOT validate\n     * the input it should only ever be a subset of the originally valid\n     * metrics.\n     * \n     * @param valid The new set of valid metrics.\n     */\n    overrideValidMetrics(valid:any[]) {\n        this._metrics = valid;\n        if(this._metric && this._metrics.indexOf(this._metric) === -1) {\n            // previous metric has become invalid\n            delete this._metric;\n            if(this.selection) {\n                this.selection.redraw();\n            }\n        }\n    }\n\n    /**\n     * @return The metric label for the curve axis.\n     */\n    axisLabel(): string {\n        return this.metric ? this.metric.label : '?';\n    }\n\n    doyDataValue() {\n        let self = this,\n            data = self.data() as ActivityCurveMagnitudeData[],\n            value,d,i;\n        if(self.doyFocus && data) {\n            for(i = 0; i < data.length; i++) {\n                d = data[i];\n                if(self.doyFocus >= d.start_doy && self.doyFocus <= d.end_doy) {\n                    value = (self.metric.valueFormat||IDENTITY)(d[self.metric.id]);\n                    if(d[self.metric.sampleSize] !== -9999) {\n                        value += ' N:'+ d[self.metric.sampleSize];\n                    }\n                    return value;\n                }\n            }\n        }\n    }\n\n    /**\n     * @return Formatted label for the legend.\n     */\n    legendLabel(includeMetric:boolean) {\n        let doyFocusValue = this.doyDataValue();\n        const pp = this.phenophase as any;\n        return `${this.actualYear}: `+\n               SPECIES_TITLE(this.species,this.speciesRank)+' - '+(pp.phenophase_name||pp.pheno_class_name)+\n               (includeMetric ? ` (${this.metric.label})` : '')+\n               (this._group ? ` (${this._group.label})` : '')+\n               (typeof(doyFocusValue) !== 'undefined' ? ` [${doyFocusValue}]` : '');\n    }\n\n    /**\n     * @return The metric id.\n     */\n    metricId() {\n        return this.metric? this.metric.id : undefined;\n    }\n\n    group(g:SelectionGroup):ActivityCurve {\n        this._group = g;\n        return this;\n    }\n\n    data(_?:ActivityCurveMagnitudeData[]):ActivityCurveMagnitudeData[]|ActivityCurve {\n        if(arguments.length) {\n            delete this.$data;\n            delete this.$metricData;\n            if(_) {\n                _.forEach(function(d) {\n                    d.start_doy = DOY(d.start_date);\n                    d.end_doy = DOY(d.end_date);\n                });\n                _.sort(function(a,b) {\n                    return a.start_doy - b.start_doy;\n                });\n                this.$data = _;\n            }\n            return this;\n        }\n        var self = this,\n            data = self.$data;\n        if(data && self.metric) {\n            // avoid re-filtering with UI updates, store the result and re-use until\n            // something changes\n            if(!self.$metricData) {\n                if(!self.metric.sampleSize) {\n                    console.warn('Metric does not define a sampleSize property, cannot filter out invalid data points.');\n                }\n                data = data.filter(function(d){\n                    if(self.metric.sampleSize && d[self.metric.sampleSize] === -9999) {\n                        //console.log('SAMPLE_SIZE filter.');\n                        return false;\n                    }\n                    return d[self.metric.id] !== -9999;\n                });\n                if(data.length !== self.$data.length) {\n                    console.debug('filtered out '+(self.$data.length-data.length)+'/'+ self.$data.length +' of -9999 records for metric ',self.metric);\n                }\n                /*\n                if(data.length === 26) { // simulate situation for development bi-weekly data\n                    //console.log('DEBUG CODE MODIFYING DATA!!');\n                    // create a single isolated data point and three separate curves\n                    // [0-9] [11] [13-19] [21-25]\n                    data = data.filter(function(d,i) {\n                        return (i !== 10 && i !== 12 && i !== 20);\n                    });\n                }*/\n                self.$metricData = data;\n            } else {\n                data = self.$metricData;\n            }\n        }\n        return data;\n    }\n\n    private endDate(year) {\n        var now = new Date();\n        if(year === now.getFullYear()) {\n            return this.selection.datePipe.transform(now,'yyyy-MM-dd');\n        }\n        return year+'-12-31';\n    }\n\n    /**\n     * Load data for this curve, or curves.  This function will return\n     * multiple curves if its selection is using grouping.  In that case the\n     * returned curves will be copies of this curve with the corresponding data populated\n     * on them.  Changes to this curve (what to plot, year, etc.) will ripple down into\n     * the curve copies so when rendered (via draw) on a visualization they will update.\n     * \n     * @param baseParams \n     */\n    loadData(baseParams:HttpParams):Promise<ActivityCurve []> {\n        let curveParams = baseParams\n            .set('start_date',`${this.actualYear}-01-01`)\n            .set('end_date',this.endDate(this.actualYear));\n        const keys = getSpeciesPlotKeys(this);\n        curveParams = curveParams.set(`${keys.speciesIdKey}[0]`,`${this.species[keys.speciesIdKey]}`);\n        if((this.speciesRank||TaxonomicSpeciesRank.SPECIES) !== TaxonomicSpeciesRank.SPECIES) {\n            curveParams = curveParams.set('taxonomy_aggregate','1');\n        }\n        curveParams = curveParams.set(`${keys.phenophaseIdKey}[0]`,`${this.phenophase[keys.phenophaseIdKey]}`);\n        if(this.phenophaseRank === TaxonomicPhenophaseRank.CLASS) {\n            curveParams = curveParams.set('pheno_class_aggregate','1');\n        }\n        const apiUrl = this.selection.serviceUtils.apiUrl('/npn_portal/observations/getMagnitudeData.json');\n        if(this.selection.groups && this.selection.groups.length) {\n            return this.selection.toGroupHttpParams(curveParams)\n                .then((groupParams:GroupHttpParams[]) => {\n                    // parallel arrays\n                    this._children = groupParams.map((gp,i) => this.copy(i));\n                    return Promise.all(\n                        this._children.map((curve,i) => this.selection.serviceUtils\n                            .cachedPost(apiUrl,groupParams[i].params.toString())\n                            .then(data => curve.group(groupParams[i].group).data(data) as ActivityCurve))\n                    )\n                });\n        } else {\n            return this.selection.serviceUtils\n                .cachedPost(apiUrl,curveParams.toString())\n                .then(data => [this.data(data) as ActivityCurve]);\n        }   \n    }\n\n    axis() {\n        var y = this.y(),\n            ticks = y.ticks(), // default is ~10 ticks\n            orient = this.orient||'left',\n            axis = orient === 'left' ? d3.axisLeft(y) : d3.axisRight(y);\n        if(ticks.length) {\n            // replace the final tick with the top of the y domain\n            // that -would- have been generated and use them explicitly\n            // this can result in ticks stacked on on another if too close\n            //ticks.push(y.domain()[1]);\n            // this often results in a larger space between the two topmost ticks\n            ticks[ticks.length-1] = y.domain()[1];\n            axis.tickValues(ticks);\n        }\n        return axis;\n    }\n\n    x(_?) {\n        if(arguments.length) {\n            this.$x = _;\n            return this;\n        }\n        return this.$x;\n    }\n\n    y(_?) {\n        if(arguments.length) {\n            this.$y = _;\n            return this;\n        }\n        return this.$y;\n    }\n\n    isValid():boolean {\n        return !!this.species &&\n            !!this.phenophase &&\n            !!this.year &&\n            !!this.metric;\n    }\n\n    plotted(): boolean {\n        // not keeping track of a flag but curves are plotted if they\n        // are valid and have data\n        const data = this.data() as ActivityCurveMagnitudeData[];\n        if(this.isValid() && !!data) {\n            return true; // this curve is plotted\n        }\n        // plotted if any children are plotted\n        return this.children.reduce((plotted,child) => (plotted||(child.plotted ? true: false)),false);\n    }\n\n    shouldRevisualize():boolean {\n        return this.isValid() && !this.data();\n    }\n\n    domain() {\n        var self = this,\n            data = self.data() as ActivityCurveMagnitudeData[],\n            extents;\n        if(data && self.metric) {\n            extents = d3.extent(data,function(d){\n                return d[self.metric.id];\n            });\n            if(extents[0] > 0) {\n                // typically data sets will contain 0 but really always want the\n                // lower extent of any y axis to be zero so make it so\n                extents[0] = 0;\n            } else if(extents[0] < 0) {\n                // this shouldn't happen but don't futz with the domain in this\n                // case or the graph would go wonky\n                console.warn('negative domain start for metric',extents,self.metric);\n            }\n            return extents;\n        }\n    }\n\n    /**\n     * Searches this curve's data for a data point nearest to a doy.\n     * \n     * @param doy The doy to find the nearest data to.\n     * @returns ActivityCurveMagnitudeData or undefined\n     */\n    nearest(doy:number):ActivityCurveMagnitudeData {\n        const data = this.data() as ActivityCurveMagnitudeData[];\n        return data.reduce((found,md) => (found||(doy >= md.start_doy && doy <= md.end_doy ? md : undefined)),undefined);\n    }\n\n    draw(chart) {\n        let self = this,\n            data = self.data() as ActivityCurveMagnitudeData[],\n            datas = [[]],\n            x,y,i,d,dn,line,\n            r = 3;\n        chart.selectAll(`g.curve.curve-${self.curveId}`).remove();\n        const g = chart.append('g')\n            .attr('class',`curve curve-${self.curveId}`);\n        if(data && data.length) {\n            // detect any gaps in the data, break it into multiple curves/points\n            // to plot\n            for(i = 0; i < data.length; i++) {\n                d = data[i];\n                dn = (i+1) < data.length ? data[i+1] : undefined;\n                datas[datas.length-1].push(d);\n                if(dn && dn.start_doy !== (d.end_doy+1)) {\n                    datas.push([]); // there's a gap in the data, start another curve or point\n                }\n            }\n            x = self.x();\n            y = self.y();\n            let x_functor = (d) => x(d.start_doy+Math.round((d.end_doy-d.start_doy)/2)),\n                y_functor = (d) => y(d[self.metric.id]);\n            line = d3.line();\n            switch(self.selection.interpolate) {\n                case INTERPOLATE.monotone:\n                    line.curve(d3.curveMonotoneX);\n                    break;\n                case INTERPOLATE.stepAfter:\n                    line.curve(d3.curveStepAfter);\n                    break;\n                case INTERPOLATE.linear:\n                    line.curve(d3.curveLinear);\n                    break;\n            }\n            line.x(x_functor);\n            line.y(y_functor);\n            console.debug('ActivityCurve.draw',self.species,self.phenophase,self.actualYear,self.metric,self.domain(),y.domain());\n            console.debug('draw.datas',datas);\n            datas.forEach(function(curve_data,i){\n                if(curve_data.length === 1 || self.selection.dataPoints) {\n                    curve_data.forEach(function(d){\n                        g.append('circle')\n                            .attr('class','curve-point curve-point-'+self.curveId)\n                            .attr('r',r)\n                            .attr('fill',self.color)\n                            .attr('cx',x_functor(d))\n                            .attr('cy',y_functor(d));\n                    });\n                }\n                if(curve_data.length > 1) {\n                    g.append('path')\n                        .attr('class','curve curve-'+self.curveId)\n                        .attr('fill','none')\n                        .attr('stroke',self.color)\n                        .attr('stroke-linejoin','round')\n                        .attr('stroke-linecap','round')\n                        .attr('stroke-width',1.5)\n                        .attr('d',line(curve_data));\n                }\n            });\n        }\n    }\n}\nexport enum INTERPOLATE {\n    linear,\n    stepAfter,\n    monotone\n};\nconst DECIMAL = v => v.toFixed(2);\nconst IDENTITY = o => o;\nconst SPECIES_TITLE_PIPE = new TaxonomicSpeciesTitlePipe(new SpeciesTitlePipe());\nconst SPECIES_TITLE = (item: TaxonomicSpeciesType,rank:TaxonomicSpeciesRank) => SPECIES_TITLE_PIPE.transform(item,rank);\nconst DOY_PIPE = new DoyPipe();\nconst DOY = (date,ignoreLeapYear?:boolean): any => DOY_PIPE.transform(date,ignoreLeapYear);\n\nconst COMMON_METRICS:any[] = [{\n            id: 'num_yes_records',\n            sampleSize: 'status_records_sample_size',\n            label: 'Total Yes Records'\n        },{\n            id: 'proportion_yes_records',\n            sampleSize: 'status_records_sample_size',\n            label: 'Proportion Yes Records',\n            valueFormat: DECIMAL,\n            proportion: true\n        }];\nexport const ACTIVITY_CURVE_KINGDOM_METRICS = {\n            Plantae: COMMON_METRICS.concat([{\n                id: 'numindividuals_with_yes_record',\n                sampleSize: 'individuals_sample_size',\n                label: 'Total Individuals with Yes Records'\n            },{\n                id: 'proportion_individuals_with_yes_record',\n                sampleSize: 'individuals_sample_size',\n                label: 'Proportion Individuals with Yes Records',\n                valueFormat: DECIMAL,\n                proportion: true\n            }]),\n            Animalia: COMMON_METRICS.concat([{\n                id: 'numsites_with_yes_record',\n                sampleSize: 'sites_sample_size',\n                label: 'Total Sites with Yes Records'\n            },{\n                id: 'proportion_sites_with_yes_record',\n                sampleSize: 'sites_sample_size',\n                label: 'Proportion Sites with Yes Records',\n                valueFormat: DECIMAL,\n                proportion: true\n            },{\n                id: 'total_numanimals_in-phase',\n                sampleSize: 'in-phase_site_visits_sample_size',\n                label: 'Total Animals In Phase'\n            },\n            {\n                id: 'mean_numanimals_in-phase',\n                sampleSize: 'in-phase_site_visits_sample_size',\n                label: 'Animals In Phase',\n                valueFormat: DECIMAL\n            },{\n                id: 'mean_numanimals_in-phase_per_hr',\n                sampleSize: 'in-phase_per_hr_sites_sample_size',\n                label: 'Animals In Phase per Hour',\n                valueFormat: DECIMAL\n            },{\n                id: 'mean_numanimals_in-phase_per_hr_per_acre',\n                sampleSize: 'phase_per_hr_per_acre_sites_sample_size',\n                label: 'Animals In Phase per Hour per Acre',\n                valueFormat: DECIMAL\n            }])\n        };\n\nconst ALL_METRICS = Object.keys(ACTIVITY_CURVE_KINGDOM_METRICS).reduce((arr,key) =>{\n    ACTIVITY_CURVE_KINGDOM_METRICS[key]\n        .filter(metric => arr.indexOf(metric) === -1)\n        .forEach(metric => arr.push(metric));\n    return arr;\n},[]);","import {Component,Input} from '@angular/core';\n\nimport {INTERPOLATE, ActivityCurve} from './activity-curve';\nimport {ActivityCurvesSelection,ActivityFrequency,ACTIVITY_FREQUENCIES} from './activity-curves-selection';\nimport {STATIC_COLORS} from '../../common';\nimport { faExclamationTriangle } from '@fortawesome/pro-light-svg-icons';\n\nexport const ACTIVITY_CURVES_INTERPOLATES = [{\n    value: INTERPOLATE.linear,\n    label: 'Linear'\n},{\n    value: INTERPOLATE.monotone,\n    label: 'Monotone',\n},{\n    value: INTERPOLATE.stepAfter,\n    label: 'Step after'\n}];\n\n@Component({\n    selector: 'activity-curves-control',\n    template: `\n    <div *ngIf=\"!selection.canAddPlot\" class=\"max-plots-reached\"><fa-icon [icon]=\"faExclamationTriangle\"></fa-icon> One more curve would exceed the maximum of {{selection.MAX_PLOTS}} allowed</div>\n    <div class=\"curve mat-elevation-z1\" *ngFor=\"let curve of selection.curves; index as i\">\n        <label>Curve #{{i+1}}</label>\n        <curve-selection-control\n            [selection]=\"selection\"\n            [curve]=\"curve\"\n            [required]=\"i === 0\"\n            [gatherColor]=\"true\"\n            [allowCurrentYear]=\"allowCurrentYear\"\n            (onSpeciesChange)=\"speciesMetricChange($event)\"\n            (onMetricChange)=\"speciesMetricChange($event)\">\n            </curve-selection-control>\n        <div class=\"action-holder\">\n            <button *ngIf=\"selection.curves.length > 1\" mat-button (click)=\"removeCurve(i)\">Remove curve</button>\n            <button *ngIf=\"i === selection.curves.length-1\" mat-button (click)=\"addCurve()\" [disabled]=\"!selection.canAddPlot\">Add curve</button>\n        </div>\n    </div>\n    <div class=\"curve-common\">\n        <mat-form-field class=\"date-interval\">\n            <mat-select placeholder=\"Date Interval\" [(ngModel)]=\"selection.frequency\">\n                <mat-option *ngFor=\"let f of frequencies\" [value]=\"f\">{{f.label}}</mat-option>\n            </mat-select>\n        </mat-form-field>\n\n        <mat-form-field class=\"line-interpolateion\">\n            <mat-select placeholder=\"Line Interpolation\" [(ngModel)]=\"selection.interpolate\">\n                <mat-option *ngFor=\"let i of interpolates\" [value]=\"i.value\">{{i.label}}</mat-option>\n            </mat-select>\n        </mat-form-field>\n\n        <mat-checkbox [(ngModel)]=\"selection.dataPoints\">Show data points</mat-checkbox>\n    </div>\n    `,\n    styles:[`\n        .curve,\n        .curve-common {\n            display: flex;\n            align-items: center;\n            margin: 2px 2px 5px 2px;\n            padding: 4px;\n        }\n        .curve-common {\n            margin-top: 10px;\n        }\n        .curve >label {\n            white-space: nowrap;\n        }\n        .curve >label:after {\n            content: ':';\n            margin-right: 10px;\n        }\n        .curve >.action-holder {\n            display: flex;\n            flex-direction: column;\n        }\n        .date-interval {\n            width: 125px;\n        }\n        .line-interpolateion {\n            width: 150px;\n        }\n        .action-holder {\n            margin: 10px 0px;\n            text-align: right;\n        }\n    `]\n})\nexport class ActivityCurvesControlComponent {\n    @Input()\n    selection: ActivityCurvesSelection;\n    @Input()\n    allowCurrentYear:boolean = false;\n\n    frequencies:ActivityFrequency[] =  ACTIVITY_FREQUENCIES;\n    interpolates:any[] = ACTIVITY_CURVES_INTERPOLATES;\n    faExclamationTriangle = faExclamationTriangle;\n\n    addCurve() {\n        const curve = new ActivityCurve();\n        curve.id = this.selection.curves.length;\n        curve.color = STATIC_COLORS[curve.id];\n        curve.selection = this.selection;\n        this.selection.curves.push(curve);\n    }\n\n    removeCurve(i) {\n        this.selection.curves.splice(i,1);\n        this.selection.update();\n        this.speciesMetricChange();\n    }\n\n    speciesMetricChange() {\n        // need to prevent more than two metrics being selected\n        const curves = this.selection.curves||[];\n        const selectedMetrics = [];\n        curves.forEach(c => {\n            c.overrideValidMetricsReset();\n            if(selectedMetrics.length === 2) {\n                const valid = c.validMetrics;\n                c.overrideValidMetrics(selectedMetrics.filter(m => valid.indexOf(m) !== -1));\n            } else if (c.metric && selectedMetrics.indexOf(c.metric) === -1) {\n                selectedMetrics.push(c.metric);\n            }\n        });\n    }\n}\n","import { Injectable } from '@angular/core';\nimport { DatePipe } from '@angular/common';\nimport { NpnServiceUtils, SpeciesService, NetworkService } from '../../common';\nimport { ActivityCurvesSelection } from './activity-curves-selection';\n\n@Injectable()\nexport class ActivityCurvesSelectionFactory {\n    constructor(\n        protected serviceUtils:NpnServiceUtils,\n        protected datePipe: DatePipe,\n        protected speciesService:SpeciesService,\n        protected networkService:NetworkService\n    ) {}\n\n    newSelection(): ActivityCurvesSelection {\n        return new ActivityCurvesSelection(this.serviceUtils,this.datePipe,this.speciesService,this.networkService);\n    }\n}\n","import { HttpParams } from '@angular/common/http';\nimport { DatePipe } from '@angular/common';\n\nimport { NpnServiceUtils, TaxonomicSpeciesRank, TaxonomicPhenophaseRank, getSpeciesPlotKeys, SpeciesService, NetworkService, getStaticColor, STATIC_COLORS } from '../../common';\n\nimport { INTERPOLATE, ActivityCurve } from './activity-curve';\nimport { StationAwareVisSelection, selectionProperty, BASE_POP_INPUT, POPInput } from '../vis-selection';\n\nexport class ActivityFrequency {\n    value:string|number;\n    label:string;\n}\nexport const ACTIVITY_FREQUENCY_MONTHLY:ActivityFrequency = {\n    value: 'months',\n    label: 'Monthly'\n};\nexport const ACTIVITY_FREQUENCY_BIWEEKLY:ActivityFrequency = {\n    value: 14,\n    label: 'Bi-weekly'\n};\nexport const ACTIVITY_FREQUENCY_WEEKLY:ActivityFrequency = {\n    value: 7,\n    label: 'Weekly'\n};\nexport const ACTIVITY_FREQUENCIES:ActivityFrequency[] = [\n    ACTIVITY_FREQUENCY_MONTHLY,\n    ACTIVITY_FREQUENCY_BIWEEKLY,\n    ACTIVITY_FREQUENCY_WEEKLY\n];\n\n// @dynamic\nexport class ActivityCurvesSelection extends StationAwareVisSelection {\n    $supportsPop:boolean = true;\n\n    @selectionProperty()\n    $class:string = 'ActivityCurvesSelection';\n\n    defaultInterpolate = INTERPOLATE.monotone;\n    @selectionProperty()\n    private _interpolate: INTERPOLATE = INTERPOLATE.monotone;\n    @selectionProperty()\n    private _dataPoints:boolean = true;\n    defaultFrequency = ACTIVITY_FREQUENCIES[0];\n    @selectionProperty({\n        ser: d => d,\n        des: d => {\n            // when deserializing re-align with the actual metric object\n            // so equality checks elsewhere work.\n            return !!d\n                ? ACTIVITY_FREQUENCIES.find(af => d.value === af.value)\n                : d;\n        }\n    })\n    private _frequency:ActivityFrequency = ACTIVITY_FREQUENCIES[0];\n    @selectionProperty({\n        ser: d => d ? d.external : undefined,\n        des: d => {\n            let ac = new ActivityCurve();\n            ac.external = d;\n            return ac;\n        }\n    })\n    private _curves:ActivityCurve[];\n\n    /** The maximum number of plots we want to allow. */\n    readonly MAX_PLOTS:number = 6;\n\n    constructor(\n        public serviceUtils:NpnServiceUtils,\n        public datePipe: DatePipe,\n        public speciesService:SpeciesService,\n        public networkService:NetworkService\n    ) {\n        super(serviceUtils,networkService);\n        // create a default empty curve\n        const curve0 = new ActivityCurve();\n        curve0.color = STATIC_COLORS[0];\n        curve0.id = 0;\n        this.curves = [curve0];\n    }\n\n    /**\n     * Indicates whether or not adding one more plot will result in a visualization exceeding\n     * the maximum number of allowed plots.\n     */\n    get canAddPlot():boolean {\n        const groups = this.groups ? this.groups.length : 0;\n        const next_plots = (this._curves ? this._curves.length : 0)+1;\n        const next_count = groups ? (groups * next_plots) : next_plots;\n        return next_count <= this.MAX_PLOTS;\n    }\n\n    toPOPInput(input:POPInput = {...BASE_POP_INPUT}):Promise<POPInput> {\n        return super.toPOPInput(input)\n            .then(input => {\n                const yearRange = this.validCurves.reduce((range,curve) => {\n                        if(!range) {\n                            return [curve.year,curve.year];\n                        }\n                        if(curve.year < range[0]) {\n                            range[0] = curve.year;\n                        }\n                        if(curve.year > range[1]) {\n                            range[1] = curve.year;\n                        }\n                        return range;\n                    },undefined);\n                if(yearRange) {\n                    input.startDate = `${yearRange[0]}-01-01`;\n                    input.endDate = `${yearRange[1]}-12-31`;\n                }\n                return this.speciesService.getSpeciesIds(this.validCurves)\n                    .then(ids => {\n                        input.species = ids;\n                        return input;\n                    });\n            });\n    }\n\n    hasValidCurve():boolean {\n        return this.validCurves.length > 0;\n    }\n\n    isValid(): boolean {\n        return  typeof(this._interpolate) === 'number' && // is a numeric based enum with a 0\n            !!this._frequency &&\n            this.hasValidCurve();\n    }\n\n    private updateCheck(requiresUpdate?:boolean) {\n        const anyValid = this.hasValidCurve();\n        const anyPlotted = this.curves.reduce((plotted,curve) => (plotted||curve.plotted()),false);\n        if(requiresUpdate) {\n            if(anyValid) {\n                this.update();\n            }\n        } else {\n            if(anyValid && anyPlotted) {\n                this.redraw();\n            } else if (anyValid) {\n                this.update();\n            }\n        }\n    }\n\n    set frequency(f:ActivityFrequency) {\n        this._frequency = f;\n        // any change in frequency invalidates any data held by curves\n        (this._curves||[]).forEach((c:any) => {\n            c._frequency = f;\n            c.data(null);\n        });\n        this.updateCheck(true);\n    }\n\n    get frequency():ActivityFrequency {\n        return this._frequency;\n    }\n\n    set interpolate(i:INTERPOLATE) {\n        this._interpolate = i;\n        this.updateCheck();\n    }\n\n    get interpolate():INTERPOLATE {\n        return this._interpolate;\n    }\n\n    get dataPoints():boolean {\n        return this._dataPoints;\n    }\n    set dataPoints(dp:boolean) {\n        this._dataPoints = dp;\n        this.updateCheck(false);\n    }\n\n    set curves(cs:ActivityCurve[]) {\n        this._curves = cs;\n        (this._curves||[]).forEach(c => c.selection = this);\n    }\n\n    get curves():ActivityCurve[] {\n        return this._curves;\n    }\n\n    get validCurves():ActivityCurve[] {\n        return (this._curves||[]).filter(c => c.isValid());\n    }\n\n    /**\n     * Load all the curves and their data.  It's ipmortant to understand that this function\n     * may return more curves than are defined on the selection and the resulting curves may\n     * not be references to those held on this selection.\n     */\n    loadCurves(): Promise<ActivityCurve[]> {\n        this.working = true;\n        return this.toURLSearchParams(new HttpParams()\n                .set('request_src','npn-vis-activity-curves')\n                .set('frequency',`${this.frequency.value}`)\n            ).then((baseParams:HttpParams) => {\n                const promises:Promise<ActivityCurve[]>[] = this.curves\n                    .filter(c => (c.data(null) as ActivityCurve).isValid())\n                    .map(c => c.loadData(baseParams));\n                return Promise.all(promises)\n                    .then((curves:ActivityCurve[][]) => {\n                        this.working = false;\n                        const toPlot = curves.reduce((arr,list) => arr.concat(list),[]);\n                        if(this.groups && this.groups.length) {\n                            toPlot.forEach((curve,index) => curve.color = getStaticColor(index));\n                        }\n                        return toPlot;\n                    })\n                    .catch(err => {\n                        this.working = false;\n                        //throw err;\n                        this.handleError(err);\n                        return [];\n                    });\n            });    \n    }\n\n    protected handleError(error: any): void {\n        console.error('ERROR',error);\n    }\n}\n","import { Component, Input, ElementRef } from '@angular/core';\n\nimport { ObservableMedia } from \"@angular/flex-layout\";\n\nimport { LegendDoyPipe } from '../../common';\nimport { VisualizationMargins } from '../visualization-base.component';\nimport { ONE_DAY_MILLIS } from '../vis-selection';\nimport { SvgVisualizationBaseComponent } from '../svg-visualization-base.component';\n\nimport { ActivityCurvesSelection } from './activity-curves-selection';\n\nimport { Axis, axisBottom } from 'd3-axis';\nimport { ScaleLinear, scaleLinear } from 'd3-scale';\nimport * as d3 from 'd3';\nimport { ActivityCurve, ActivityCurveMagnitudeData } from './activity-curve';\n\nconst ROOT_DATE = new Date(2010,0);\nconst D3_DATE_FMT = d3.timeFormat('%m/%d');\nconst DATE_FMT = (d) => {\n    let time = ((d-1)*ONE_DAY_MILLIS)+ROOT_DATE.getTime(),\n        date = new Date(time);\n    return D3_DATE_FMT(date);\n};\nconst PAD_DOMAIN = (d,metric) => {\n    if(d && d.length === 2) {\n        d = [d[0],(d[1]*1.05)];\n        if(metric && metric.proportion && d[1] > 1) {\n            d[1] = 1.0; // don't allow proportions to overflow for clarity.\n        }\n    }\n    return d;\n};\n\nconst DOY_INTERVAL_TICK = (interval) => {\n    var doy = 1,\n        ticks = [];\n    while(doy <= 365) {\n        ticks.push(doy);\n        doy += interval;\n    }\n    return ticks;\n};\nconst X_TICK_CFG = {\n    7: {\n        rotate: 45,\n        values: DOY_INTERVAL_TICK(14)\n    },\n    14: {\n        rotate: 45,\n        values: DOY_INTERVAL_TICK(28)\n    },\n    months: {\n        values: [1,32,60,91,121,152,182,213,244,274,305,335]\n    }\n};\n\nconst DEFAULT_TOP_MARGIN = 80;\nconst LEGEND_VPAD = 4;\nconst MARGIN_VPAD = 10;\n\n@Component({\n    selector: 'activity-curves',\n    templateUrl: '../svg-visualization-base.component.html',\n    styleUrls: ['../svg-visualization-base.component.scss']\n})\nexport class ActivityCurvesComponent extends SvgVisualizationBaseComponent {\n    @Input() selection: ActivityCurvesSelection;\n\n    x: ScaleLinear<number,number>;\n    xAxis: Axis<number>;\n\n    filename:string = 'activity-curves.png';\n    margins: VisualizationMargins = {top: DEFAULT_TOP_MARGIN,left: 80,right: 80,bottom: 80};\n\n    private _curves:ActivityCurve[];\n\n    constructor(protected rootElement: ElementRef,protected media:ObservableMedia,private legendDoyPipe: LegendDoyPipe) {\n        super(rootElement,media);\n    }\n\n    get curves():ActivityCurve[] {\n        return (this._curves||[]).filter(c => c.isValid());\n    }\n\n    /**\n     * Organizes the valid curves into a map of metric to curves using that metric.\n     */\n    private byMetric() {\n        return this.curves.reduce((map,c) => {\n            map[c.metric.id] = map[c.metric.id]||{\n                metric: c.metric,\n                curves: []\n            };\n            map[c.metric.id].curves.push(c);\n            return map;\n        },{});\n    }\n\n    /**\n     * Tests to see if the curves are all using the same metric.\n     */\n    private usingCommonMetric() {\n        const curves = this.curves;\n        // could be byMetric().length === 1 but this could be more performant\n        return curves.length > 0\n            // all curves using same metric.\n            ? curves.reduce((metric,curve) => metric === curve.metric ? metric : undefined,\n                curves[0].metric)\n            : undefined;\n    }\n\n    private newY() {\n        let sizing = this.sizing;\n        return scaleLinear().range([sizing.height,0]).domain([0,100]);\n    }\n\n    private updateLegend(): void {\n        const {chart,sizing,selection} = this;\n        chart.select('.legend').remove();\n        const commonMetric = this.usingCommonMetric();\n        const legend = chart.append('g')\n                .attr('class','legend')\n                // the 150 below was picked just based on the site of the 'Activity Curves' title\n                .attr('transform',`translate(90,-${sizing.margin.top-10})`) // relative to the chart, not the svg\n                .style('font-size','1em');\n        \n        const r = 5;\n        this.curves.filter(c => c.plotted())\n            .forEach((curve,index) => {\n                const yTrans = (((index+1)*(this.baseFontSize() as number))+(index*LEGEND_VPAD));\n                const legendItem = legend.append('g')\n                    .attr('class',`legend-item curve-${curve.id} row-${index}`)\n                    .attr('transform',`translate(0,${yTrans})`);\n                legendItem.append('circle')\n                    .attr('r',r)\n                    .attr('fill',curve.color);\n                legendItem.append('text')\n                    .style('font-size', this.baseFontSize(true))\n                    .attr('x',(2*r))\n                    .attr('y',(r/2))\n                    .text(curve.legendLabel(!commonMetric));\n            });\n    }\n\n    private hover():void {\n        let svg = this.svg,\n            selection = this.selection,\n            sizing = this.sizing,\n            self = this,\n            x = this.x;\n        let hover = svg.append('g')\n            .attr('transform', 'translate(' + sizing.margin.left + ',' + sizing.margin.top + ')')\n            .style('display','none');\n        let hoverLine = hover.append('line')\n                .attr('class','focus')\n                .attr('fill','none')\n                .attr('stroke','green')\n                .attr('stroke-width',1)\n                .attr('x1',0)\n                .attr('y1',0)\n                .attr('x2',0)\n                .attr('y2',sizing.height),\n            hoverDoy = hover.append('text')\n                .attr('class','focus-doy')\n                .attr('y',10)\n                .attr('x',0)\n                .text('hover doy');\n        let focusOff = () => {\n                this.curves.forEach(function(c) { delete c.doyFocus; });\n                hover.style('display','none');\n                this.updateLegend();\n            },\n            focusOn = () => {\n                // only turn on if something has been plotted\n                if(this.curves.reduce(function(plotted,c){\n                        return plotted||c.plotted();\n                    },false)) {\n                    hover.style('display',null);\n                }\n            };\n\n        // left as function due to d3's use of `this`\n        function updateFocus() {\n            let coords = d3.mouse(this),\n                xCoord = coords[0],\n                yCoord = coords[1],\n                doy = Math.round(x.invert(xCoord)),\n                dataPoint:ActivityCurveMagnitudeData = self.curves.reduce(function(dp:ActivityCurveMagnitudeData,curve){\n                    if(!dp && curve.plotted()) {\n                        dp = curve.nearest(doy);\n                    }\n                    return dp;\n                },undefined);\n            hoverLine.attr('transform','translate('+xCoord+')');\n            hoverDoy\n                .style('text-anchor',doy < 324 ? 'start' : 'end')\n                .attr('x',xCoord+(10*(doy < 324 ? 1 : -1)))\n                .text(dataPoint ?\n                    self.legendDoyPipe.transform(dataPoint.start_doy)+' - '+self.legendDoyPipe.transform(dataPoint.end_doy) :\n                    self.legendDoyPipe.transform(doy));\n            self.curves.forEach(function(c) { c.doyFocus = doy; });\n            self.updateLegend();\n        }\n        svg.append('rect')\n            .attr('class','overlay')\n            .attr('transform', 'translate(' + this.margins.left + ',' + this.margins.top + ')')\n            .style('fill','none')\n            .style('pointer-events','all')\n            .attr('x',0)\n            .attr('y',0)\n            .attr('width',sizing.width)\n            .attr('height',sizing.height)\n            .on('mouseover',focusOn)\n            .on('mouseout',focusOff)\n            .on('mousemove',updateFocus);\n    }\n\n    protected reset(): void {\n        // make room for the legend based on the number of plots\n        this.margins.top = DEFAULT_TOP_MARGIN;\n        const fontSize = this.baseFontSize() as number;\n        if(this.selection) {\n            const plotCount = this.curves.filter(c => c.plotted()).length;\n            if(plotCount) {\n                this.margins.top = ((plotCount+1)*fontSize)+(plotCount*LEGEND_VPAD)+MARGIN_VPAD;\n            }\n        }\n        super.reset();\n        let chart = this.chart,\n            sizing = this.sizing;\n\n        this.x = scaleLinear().range([0,sizing.width]).domain([1,365]);\n        this.xAxis = axisBottom<number>(this.x).tickFormat(DATE_FMT);\n\n        this.curves.forEach(c => c.x(this.x).y(this.newY()));\n\n        const titleFontSize = 18;\n        const titleDy = this.margins.top-titleFontSize-fontSize;\n        this.chart.append('g')\n             .attr('class','chart-title')\n             .append('text')\n             .attr('y', '0')\n             .attr('dy',`-${titleDy}`)\n             .attr('x', '0')\n             .attr('dx','-3em')\n             .style('text-anchor','start')\n             .style('font-size',`${titleFontSize}px`)\n             .text('Activity Curves');\n        this.commonUpdates();\n    }\n\n    protected update(): void {\n        this.reset();\n        this.selection.loadCurves().then(curves => {\n            this._curves = curves;\n            this.reset();\n            this.redraw()\n        });\n    }\n\n    protected redrawSvg(): void {\n        let chart = this.chart,\n            sizing = this.sizing,\n            selection = this.selection;\n\n        chart.selectAll('g .axis').remove();\n\n        const mapped = this.byMetric();\n        const metricIds = Object.keys(mapped);\n        metricIds.forEach(metricId => {\n            const metric = mapped[metricId].metric;\n            const curves:ActivityCurve[] = mapped[metricId].curves;\n            \n            // build domain that encapsulates all curves using a given metric\n            const domain = d3.extent(curves.reduce((arr,c) => arr.concat(c.domain()),[]));\n            const y = this.newY().domain(PAD_DOMAIN(domain,metric));\n            curves.forEach(c => c.y(y));\n        });\n\n        metricIds.forEach((metricId,index) => {\n            const orientation = index === 0 ? 'left' : 'right';\n            const primaryCurve:ActivityCurve = mapped[metricId].curves[0];\n            primaryCurve.orient = orientation;\n            chart.append('g')\n                .attr('class', `y axis ${orientation} ${metricId}`)\n                .attr('transform',`translate(${orientation === 'left' ? 0 : sizing.width})`)\n                .call(primaryCurve.axis())\n                .append('text')\n                    .attr('class','axis-title')\n                    .attr('transform', 'rotate(-90)')\n                    .attr('y', '0')\n                    .attr('dy',`${orientation === 'left' ? '-' : ''}4em`)\n                    .attr('x',-1*(sizing.height/2)) // looks odd but to move in the Y we need to change X because of transform\n                    .style('text-anchor', 'middle')\n                    .attr('fill','#000')\n                    .text(primaryCurve.axisLabel());\n        });\n\n        let xTickConfig = X_TICK_CFG[(selection.frequency||selection.defaultFrequency).value];\n        this.xAxis.tickValues(xTickConfig.values);\n        chart.append('g')\n            .attr('class', 'x axis')\n            .attr('transform', 'translate(0,' + sizing.height + ')')\n            .call(this.xAxis)\n            .append('text')\n            .attr('y','0')\n            .attr('dy','3em')\n            .attr('x',(sizing.width/2))\n            .attr('class','axis-label')\n            .style('text-anchor', 'middle')\n            .text('Date');\n        if(xTickConfig.rotate) {\n            chart.selectAll('g.x.axis g.tick text')\n                .style('text-anchor','end')\n                .attr('transform','rotate(-'+xTickConfig.rotate+')');\n            chart.selectAll('g.x.axis .axis-label')\n                .attr('dy','4em');\n        }\n\n        // if a given metric just has a single curve then color its axis to match\n        metricIds.forEach(metricId => {\n            const curves:ActivityCurve[] = mapped[metricId].curves;\n            if(curves.length === 1) {\n                const axis = chart.select(`g.y.axis.${metricId}`);\n                ['g.tick text','text.axis-title'].forEach(subSelect => axis.selectAll(subSelect).style('fill',curves[0].color))\n            }\n        });\n\n        this.commonUpdates();\n\n        // draw the curves\n        this.curves.forEach(c => c.draw(chart));\n\n        this.updateLegend();\n        this.hover();\n    }\n}\n","import {Component,Input,SimpleChanges, Output, EventEmitter} from '@angular/core';\nimport {FormControl} from '@angular/forms';\n\nimport {MonitorsDestroy, CURRENT_YEAR_VALUE, CURRENT_YEAR, CURRENT_YEAR_LABEL} from '../../common';\nimport {ActivityCurve} from './activity-curve';\nimport {ActivityCurvesSelection} from './activity-curves-selection';\nimport { takeUntil, filter, debounceTime } from 'rxjs/operators';\nimport { HigherSpeciesPhenophaseInputCriteria } from '../common-controls';\nimport { VisSelectionEvent } from '../vis-selection';\n\n@Component({\n    selector: 'curve-selection-control',\n    template: `\n    <mat-form-field class=\"year-input\">\n        <mat-select [placeholder]=\"'Year'+(required ? ' *':'')\" [formControl]=\"yearControl\">\n            <mat-option *ngFor=\"let y of validYears\" [value]=\"y\">{{y === CURRENT_YEAR ? CURRENT_YEAR_LABEL : y}}</mat-option>\n        </mat-select>\n        <mat-error *ngIf=\"yearControl.errors && yearControl.errors.required\">Year is required</mat-error>\n    </mat-form-field>\n\n    <higher-species-phenophase-input\n        [gatherColor]=\"gatherColor\"\n        [selection]=\"selection\"\n        [criteria]=\"criteria\"\n        [(plot)]=\"curve\"\n        [disabled]=\"speciesInputDisabled\"\n        [required]=\"required\"\n        (plotChange)=\"onSpeciesChange.next($event)\">\n    </higher-species-phenophase-input>\n\n    <mat-form-field class=\"metric-input\">\n        <mat-select placeholder=\"Metric\" [(ngModel)]=\"metric\" [disabled]=\"!curve.validMetrics.length\" [disabled]=\"disabled\">\n            <mat-option *ngFor=\"let m of curve.validMetrics\" [value]=\"m\">{{m.label}}</mat-option>\n        </mat-select>\n    </mat-form-field>\n    `,\n    styles: [`\n        .year-input {\n            width: 90px;\n        }\n        .metric-input {\n            width: 255px;\n        }\n    `]\n})\nexport class CurveControlComponent extends MonitorsDestroy {\n    @Input()\n    gatherColor:boolean = false;\n    @Input()\n    required:boolean = true;\n    @Input()\n    disabled:boolean = false;\n    @Input()\n    selection: ActivityCurvesSelection;\n    @Input()\n    curve: ActivityCurve;\n    @Input()\n    allowCurrentYear:boolean = false;\n    CURRENT_YEAR = CURRENT_YEAR;\n    CURRENT_YEAR_LABEL = CURRENT_YEAR_LABEL;\n\n    @Output()\n    onSpeciesChange = new EventEmitter<any>();\n    @Output()\n    onMetricChange = new EventEmitter<any>();\n\n    yearControl:FormControl;\n    criteria:HigherSpeciesPhenophaseInputCriteria;\n\n    get metric():any {\n        return this.curve.metric;\n    }\n    set metric(metric:any) {\n        const oldValue = this.curve.metric;\n        const newValue = this.curve.metric = metric;\n        this.onMetricChange.next({oldValue,newValue});\n    }\n\n    validYears:number[] = [];\n\n    ngOnInit() {\n        this.validYears = (function(allowCurrentYear) {\n            let thisYear = (new Date()).getFullYear(),\n                years: number[] = [],\n                c = 2010;\n            while(c <= thisYear) {\n                years.push(c++);\n            }\n            if(allowCurrentYear) {\n                years.push(CURRENT_YEAR);\n            }\n            return years.reverse();\n        })(this.allowCurrentYear);\n\n        this.selection.pipe(\n            filter(event => event === VisSelectionEvent.SCOPE_CHANGE),\n            debounceTime(500),\n            takeUntil(this.componentDestroyed)\n        ).subscribe(() => this.updateCriteria());\n\n        this.yearControl = new FormControl(this.curve.year,/*Validators.required*/(c) => {\n            if(this.required && !c.value) {\n                return {\n                    required: true\n                };\n            }\n            return null;\n        });\n        if(this.disabled) {\n            this.yearControl.disable();\n        }\n        this.yearControl.valueChanges\n            .pipe(takeUntil(this.componentDestroyed))\n            .subscribe(y => {\n                this.curve.year = y;\n                this.updateCriteria();\n            });\n        setTimeout(() => this.updateCriteria());\n    }\n\n    updateCriteria() {\n        this.criteria = {\n            years: this.curve.year ? [this.curve.year] : [],\n            stationIds: this.selection.getStationIds()\n        };\n    }\n\n    ngOnChanges(changes:SimpleChanges):void {\n        if(changes.disabled && this.yearControl) {\n            if(changes.disabled.currentValue) {\n                this.yearControl.disable();\n            } else {\n                this.yearControl.enable();\n            }\n        }\n    }\n\n    get speciesInputDisabled():boolean {\n        return this.disabled || !this.curve.year;\n    }\n}\n","export * from './public_api';","export * from './activity-curve';\nexport * from './activity-curves-selection';\nexport * from './activity-curves-selection-factory.service';\nexport * from './activity-curves.component';\nexport * from './activity-curves-control.component';\nexport * from './curve-control.component';\n","import { NpnServiceUtils } from '@npn/common/common';\nimport { AgddTimeSeriesSelection } from './agdd-time-series-selection';\nimport { Injectable } from '@angular/core';\nimport { NpnMapLayerService } from '@npn/common/gridded';\n\n@Injectable()\nexport class AgddTimeSeriesSelectionFactory {\n    constructor(private layerService:NpnMapLayerService, protected serviceUtils:NpnServiceUtils) {}\n\n    newSelection(): AgddTimeSeriesSelection {\n        return new AgddTimeSeriesSelection(this.layerService,this.serviceUtils);\n    }\n}","import { VisSelection, selectionProperty } from '../vis-selection';\nimport { NpnServiceUtils } from '@npn/common/common';\n\nimport * as d3 from 'd3';\nimport { MapLayer, NpnMapLayerService, PestMapLayer, CATEGORY_PEST, MapLayerLegend } from '@npn/common/gridded';\nimport { Subject } from 'rxjs';\n\nexport const CATEGORY_PESTS = CATEGORY_PEST;\nexport const CATEGORY_TEMP_ACCUMULATIONS = 'Daily Temperature Accumulations';\n\nconst DATE_FORMAT = d3.timeFormat('%Y-%m-%d');\nexport const DATA_FUNC = (d:TimeSeriesDataPoint):number => !!d.agdd ? d.agdd : d.point_value;\nconst DOY_MAP = (data:TimeSeriesDataPoint[]) => data.reduce((map,d) => {\n        map[d.doy] = DATA_FUNC(d);\n        return map;\n    },{});\n\nexport interface TimeSeriesDataPoint {\n    agdd?: number;\n    gdd?: number;\n    point_value: number;\n    doy: number;\n    date?: string;\n}\n\nconst COERCE_TIME_SERIES_RESPONSE = (data):TimeSeriesDataPoint[] => {\n    if(data && Array.isArray(data.timeSeries)) { // pointTimeSeries response\n        return data.timeSeries as TimeSeriesDataPoint[];\n    }\n    if(data && !Array.isArray(data)) {\n        console.warn('HANDLE_TIME_SERIES_RESPONSE data not array')\n        return [];\n    }\n    return data as TimeSeriesDataPoint[];\n}\n\nexport interface AgddTimeSeriesDataHolder {\n    data: TimeSeriesDataPoint[]; // full series\n    filtered?: TimeSeriesDataPoint[]; // used by the visualization\n    plotted?: boolean;\n    focus?: any;\n    doyMap?: any;\n    year?: any;\n    color?: string;\n}\n\nexport interface AgddTimeSeriesData {\n    average?: AgddTimeSeriesDataHolder;\n    selected?: AgddTimeSeriesDataHolder;\n    previous?: AgddTimeSeriesDataHolder;\n    forecast?: AgddTimeSeriesDataHolder;\n}\n\nexport const AGDD_COLORS = {\n    average: 'black',\n    selected: 'blue',\n    previous: 'orange',\n    forecast: 'red'\n};\n\nconst GDD_AGDD_LAYER_NAME = 'gdd:agdd';\nexport const DEFAULT_AGDD_LAYER_CATEGORY = CATEGORY_TEMP_ACCUMULATIONS;\nexport const DEFAULT_AGDD_LAYER_NAME = GDD_AGDD_LAYER_NAME;\n\nexport class AgddTimeSeriesSelection extends VisSelection {\n    @selectionProperty()\n    $class:string = 'AgddTimeSeriesSelection';\n\n    @selectionProperty()\n    private _latLng:number[];\n    @selectionProperty()\n    _layerCategory:string = DEFAULT_AGDD_LAYER_CATEGORY;\n    @selectionProperty()\n    private _layerName:string = DEFAULT_AGDD_LAYER_NAME;\n    @selectionProperty()\n    private _extentValue:string;\n\n    @selectionProperty()\n    private _showLastYear:boolean = false;\n    @selectionProperty()\n    private _threshold:number;\n    thresholdCeiling:number = 20000;\n    @selectionProperty()\n    private _doy:number;\n\n    layer:MapLayer;\n    legend:MapLayerLegend;\n\n    constructor(private layerService:NpnMapLayerService,protected serviceUtils:NpnServiceUtils) {\n        super();\n    }\n\n    isValid():boolean {\n        return !!this._layerName && !!this.latLng && this.latLng.length === 2;\n    }\n\n    private _monitorLayerChange:Subject<string>;\n    monitorLayerChange():Subject<string> {\n        if(!this._monitorLayerChange) {\n            this._monitorLayerChange = new Subject();\n        }\n        return this._monitorLayerChange;\n    }\n\n    endMonitorLayerChange():void {\n        if(this._monitorLayerChange) {\n            this._monitorLayerChange.complete();\n            this._monitorLayerChange = undefined;\n        }\n    }\n\n    get layerName():string { return this._layerName; }\n    set layerName(l:string) {\n        this._layerName = l;\n        if(this.layer && this.layer.layerName !== l) {\n            this.layer.off(); // shouldn't be necessary\n            this._getLayer = undefined;\n            this.layer = undefined;\n            this.legend = null;\n            this._start = undefined;\n            this._end = undefined;\n            this._selectedData = undefined;\n            this._averageData = undefined;\n            this._previousData = undefined;\n            this._timeSeriesUrl = undefined;\n            this._selectedParamsBasis = undefined;\n            // let the layer initially dictate threshold\n            delete this._threshold;\n        }\n        if(this._monitorLayerChange) {\n            this._monitorLayerChange.next(this._layerName);\n        }\n        this.update();\n    }\n\n    set layerCategory(s:string) {\n        this._layerCategory = s;\n        //this.layerName = null;\n    }\n    get layerCategory():string { return this._layerCategory; }\n\n    private updateExtentValue() {\n        if(this.layer && this._extentValue) {\n            const newValue = this.layer.extent.values.reduce((found,v) => found||(v.value === this._extentValue ? v : undefined),undefined);\n            if(newValue && this.layer.extent.current !== newValue) {\n                this.layer.extent.current = newValue;\n                if(this.layer.getMap()) {\n                    this.layer.bounce();\n                }\n            }\n        }\n    }\n\n    get extentValue():string { return this._extentValue; }\n    set extentValue(v:string) {\n        // technically changes to extent that result in a year\n        // change require an update, but during population\n        // of layer/extent, etc. the selection should be paused\n        // \"end\" date changed as a result.\n        if(v !== this._extentValue) {\n            this._extentValue = v;\n            this._start = undefined;\n            this._end = undefined;\n            this._selectedData = undefined;\n            this._averageData = undefined;\n            this._previousData = undefined;\n            this.updateExtentValue();\n            this.update();\n        }\n    }\n\n    /**\n     * The resulting layer will be disconnected from a map.\n     * External callers may call setMap(m) and on/off but\n     * this selection does not directly use the layer in conjunction\n     * with a map.\n     * \n     * If the selection does not have an associated layerName the\n     * resulting Promise will be rejected immediately.\n     */\n    _getLayer:Promise<MapLayer>;\n    getLayer():Promise<MapLayer> {\n        if(!this.layerName) {\n            return Promise.reject();\n        }\n        if(!this._getLayer) {\n            this._getLayer = this.layerService.newLayer(null,this.layerName)\n                .then(layer => this.layer = layer)\n                .then(layer => {\n                    this.updateExtentValue();\n                    // on aside get legend but still return layer\n                    layer.getLegend().then(l => this.legend = l);\n                    return layer;\n                });\n        }\n        return this._getLayer;\n    }\n\n    /**\n     * The base temperature value for the underlying layer.\n     * This code assumes that only a certain subset of layers\n     * are suitable for this visualization.\n     */\n    get baseTemp():number {\n        let base = 32;\n        if(this.layer) {\n            base = this.layer.layerBasis === GDD_AGDD_LAYER_NAME ? 32 : 50;\n            const meta = this.layer.layerDefinition.meta;\n            // special cases\n            if(meta && meta.agddBaseTemp) {\n                base = meta.agddBaseTemp;\n            }\n        }\n        return base;\n    }\n\n    private _end:Date;\n    /**\n     * Fetches the end date for pulling the time series.\n     * If the current layer extent is for this year then\n     * the end will be the maximum available extent date\n     * otherwise 12/31 of the extent year.\n     */\n    private get end():Date {\n        if(!this._end) {\n            const {layer} = this;\n            if(!layer) {\n                return new Date((new Date).getFullYear(),11,31);\n            }\n            const current = layer.extent.current.date;\n            const extentYear = current.getFullYear();\n            if(extentYear === (new Date()).getFullYear()) {\n                // end is the maximum extent\n                this._end = new Date(layer.extent.values[layer.extent.values.length-1].date.getTime());\n            } else {\n                // dec 31 of the extent year\n                this._end = new Date(extentYear,11,31);\n            }\n        }\n        return this._end;\n    }\n    private _start:Date;\n    private get start():Date {\n        const {layer} = this;\n        if(!layer) {\n            // don't cache\n            return new Date(this.end.getFullYear(),0,1);\n        }\n        return this._start||(this._start = new Date(this.end.getFullYear(),0,1));\n    }\n\n    private _timeSeriesUrl:Promise<string>;\n    private get timeSeriesUrl():Promise<string> {\n        if(!this._timeSeriesUrl) {\n            this._timeSeriesUrl = this.layer instanceof PestMapLayer\n                ? this.layer.getTimeSeriesUrl()\n                : Promise.resolve(this.serviceUtils.dataApiUrl(`/v0/agdd/simple/pointTimeSeries`));\n        }\n        return this._timeSeriesUrl;\n    }\n\n    private get show30YearAverage():boolean {\n        if(this.layer) {\n            const {meta} = this.layer.layerDefinition;\n            if(meta && typeof(meta.agddSupports30YearAvg) === 'boolean') {\n                return meta.agddSupports30YearAvg;\n            }\n        }\n        return true;\n    }\n\n    get threshold():number { \n        if(this._threshold) {\n            return this._threshold;\n        }\n        if(this.layer) {\n            const {meta} = this.layer.layerDefinition;\n            if(meta && typeof(meta.agddDefaultThreshold) === 'number') {\n                return meta.agddDefaultThreshold;\n            }\n        }\n        return 1000;\n    }\n    set threshold(t:number) {\n        this._threshold = t;\n        this.redraw();\n    }\n\n    get latLng():number[] { return this._latLng; }\n    set latLng(ltlng:number[]) {\n        this._latLng = ltlng;\n        this._selectedData = undefined;\n        this._averageData = undefined;\n        this._previousData = undefined;\n        this.update();\n    }\n\n    /** Whether or not the range of the time series can support previous data. */\n    get lastYearValid():boolean {\n        return (this.start.getFullYear()-1) >= 2016; // time series data starts in 2016\n    }\n\n    get showLastYear():boolean {\n        if(this.layer) {\n            return this.lastYearValid ? this._showLastYear : false;\n        }\n        return this._showLastYear;\n    }\n    set showLastYear(b:boolean) {\n        this._showLastYear = b;\n        this.update();\n    }\n\n    // controls visually how much of the year is drawn on the visualization\n    // e.g. allows for zooming in on the beginning of a year\n    get doy():number { return this._doy||365; }\n    set doy(d:number) {\n        this._doy = d;\n        // this is kind of a workaround but redraws update\n        // the bounds of the axes and for some reason inconsistently\n        // lines go wonky, resize re-writes the entire visualization\n        // and the problem does not occur then\n        // doing this since not sufficient time to better understand.\n        //this.redraw();\n        this.resize();\n    }\n\n    private _averageData:Promise<AgddTimeSeriesDataHolder>;\n    private averageData():Promise<AgddTimeSeriesDataHolder> {\n        if(!this._averageData) {\n            const [latitude,longitude] = this.latLng;\n            // this doesn't feel quite robust enough\n            const layer = this.baseTemp === 32 ? 'gdd:30yr_avg_agdd' : 'gdd:30yr_avg_agdd_50f';\n            this._averageData = this.serviceUtils.get(\n                this.serviceUtils.apiUrl('/npn_portal/stations/getTimeSeries.json'),\n                {latitude,longitude,layer})\n                .then(COERCE_TIME_SERIES_RESPONSE)\n                .then(data => ({\n                    data,\n                    doyMap: DOY_MAP(data),\n                    year:'30-year Average',\n                    color: AGDD_COLORS.average\n                }));\n        }\n        return this._averageData;\n    }\n\n    private _selectedParamsBasis:Promise<any>;\n    private get selectedParamsBasis():Promise<any> {\n        if(!this._selectedParamsBasis) {\n            return this._selectedParamsBasis = this.layer instanceof PestMapLayer\n                ? this.layer.getPestDescription()\n                    .then(pest => {\n                        let {lowerThreshold,upperThreshold,base} = pest;\n                        lowerThreshold = lowerThreshold||0;\n                        upperThreshold = upperThreshold||0;\n                        base = base||lowerThreshold||this.baseTemp\n                        return {lowerThreshold,upperThreshold,base};\n                    })\n                : Promise.resolve({\n                    upperThreshold: 0,\n                    lowerThreshold: 0,\n                    base: this.baseTemp\n                });\n        }\n        return this._selectedParamsBasis;\n    }\n\n    private get selectedParams():Promise<any> {\n        const [latitude,longitude] = this.latLng;\n        const startDate = DATE_FORMAT(this.start);\n        const start_date = startDate;\n        const endDate = DATE_FORMAT(this.end);\n        const end_date = endDate;\n        return Promise.all([\n            this.timeSeriesUrl,\n            this.selectedParamsBasis\n        ]).then(results => {\n            const [timeSeriesUrl,paramsBasis] = results;\n            const {lowerThreshold,upperThreshold,base} = paramsBasis;\n            // NOTE: some pests have a \"base\" but lowerThreshold is always being used here.\n            // e.g. Bronze Birch Borer, Emerald Ash Borer\n            return {\n                layer: this.layer.layerBasis,\n                latitude,longitude,\n                climateProvider: 'NCEP',\n                temperatureUnit: 'fahrenheit',\n                timeSeriesUrl,\n                startDate,start_date,\n                endDate,end_date,\n                base,\n                lowerThreshold,\n                upperThreshold\n            };\n        });        \n    }\n\n    private _selectedData:Promise<AgddTimeSeriesDataHolder>;\n    private selectedData():Promise<AgddTimeSeriesDataHolder> { // always the full shooting match, forecast can/will be pulled from this\n        if(!this._selectedData) {\n            this._selectedData = Promise.all([\n                this.timeSeriesUrl,\n                this.selectedParams\n            ]).then(results => {\n                const [timeSeriesUrl,selectedParams] = results;\n                return this.serviceUtils.get(timeSeriesUrl,selectedParams)\n                    .then(COERCE_TIME_SERIES_RESPONSE)\n                    .then(data => ({\n                        data,\n                        doyMap: DOY_MAP(data),\n                        year:this.start.getFullYear(),\n                        color: AGDD_COLORS.selected\n                    }))\n            });  \n        }\n        return this._selectedData;\n    }\n\n    private _previousData:Promise<AgddTimeSeriesDataHolder>;\n    private previousData():Promise<AgddTimeSeriesDataHolder> {\n        if(!this._previousData) {\n            const lastYear = this.start.getFullYear()-1;\n            const start = new Date(lastYear,0,1);\n            const end = new Date(lastYear,11,31);\n            const startDate = DATE_FORMAT(start);\n            const start_date = startDate;\n            const endDate = DATE_FORMAT(end);\n            const end_date = endDate;\n            this._previousData = Promise.all([\n                this.timeSeriesUrl,\n                this.selectedParams\n            ]).then(results => {\n                const [timeSeriesUrl,selectedParams] = results;\n                const params = {...selectedParams,startDate,start_date,endDate,end_date};\n                return this.serviceUtils.get(timeSeriesUrl,params)\n                    .then(COERCE_TIME_SERIES_RESPONSE)\n                    .then(data => ({\n                        data,\n                        doyMap: DOY_MAP(data),\n                        year:lastYear,\n                        color: AGDD_COLORS.previous\n                    }));\n            });  \n        }\n        return this._previousData;\n    }\n\n    data():Promise<AgddTimeSeriesData> {\n        this.working = true;\n        return this.getLayer()\n            .then(layer => {\n                //this._latLng = [25.240821110543152,-80.56457375588832]; // TODO remove dev values.\n                //this._showLastYear = true;\n                const promises = [this.selectedData()];\n                if(this.show30YearAverage) {\n                    promises.push(this.averageData());\n                }\n                if(this.showLastYear && this.lastYearValid) {\n                    promises.push(this.previousData());\n                }\n                return Promise.all(promises)\n                    .then(results => {\n                        let [selected,average,previous] = results;\n                        let forecast:AgddTimeSeriesDataHolder;\n                        if(this.end.getFullYear() === (new Date()).getFullYear()) { // this may always be true depending on \"end\"\n                            const todayFormatted = DATE_FORMAT(new Date());\n                            selected = {\n                                ...selected,\n                                data: selected.data.reduce((arr,d) => {\n                                    if(!forecast) {\n                                        arr.push(d);\n                                        if(todayFormatted === d.date) {\n                                            // include the last day of the selected range in the forecast so the two connect on the graph\n                                            forecast = {\n                                                data:[d],\n                                                year: `${this.start.getFullYear()} forecast`,\n                                                color: AGDD_COLORS.forecast\n                                            };\n                                        }\n                                    } else {\n                                        forecast.data.push(d);\n                                    }\n                                    return arr;\n                                },[])};\n                            if(forecast) {\n                                forecast.doyMap = DOY_MAP(forecast.data);\n                            }\n                        }\n                        this.working = false;\n                        return {average,selected,forecast,previous};\n                    });\n            });\n    }\n}","import { Component, Input, ElementRef, ViewEncapsulation } from '@angular/core';\nimport { SvgVisualizationBaseComponent } from '../svg-visualization-base.component';\nimport { AgddTimeSeriesSelection, AgddTimeSeriesData,  DATA_FUNC, TimeSeriesDataPoint, AGDD_COLORS } from './agdd-time-series-selection';\nimport { VisualizationMargins } from '../visualization-base.component';\nimport { ObservableMedia } from '@angular/flex-layout';\nimport { ONE_DAY_MILLIS } from '../vis-selection';\n\nimport { Axis, axisBottom, axisLeft } from 'd3-axis';\nimport { ScaleLinear, scaleLinear } from 'd3-scale';\nimport * as d3 from 'd3';\nimport { DecimalPipe } from '@angular/common';\n\nconst DEG_F = '\\u00B0' + 'F';\nconst D3_DATE_FMT = d3.timeFormat('%m/%d');\nconst ROOT_DATE = new Date(2010,0);\nconst DATE_FMT = (d) => {\n    let time = ((d-1)*ONE_DAY_MILLIS)+ROOT_DATE.getTime(),\n        date = new Date(time);\n    return D3_DATE_FMT(date);\n};\n@Component({\n    selector: 'agdd-time-series',\n    templateUrl: '../svg-visualization-base.component.html',\n    styleUrls: ['../svg-visualization-base.component.scss']\n})\nexport class AgddTimeSeriesComponent extends SvgVisualizationBaseComponent {\n    @Input() selection:AgddTimeSeriesSelection;\n    filename:string = 'agdd-time-series.png';\n    margins: VisualizationMargins = {top: 80,left: 80,right: 30,bottom: 60};\n\n\n    x: ScaleLinear<number,number>;\n    xAxis: Axis<number>\n\n    y: ScaleLinear<number,number>;\n    yAxis: Axis<number>;\n    _yMax:number;\n    get yMax():number { return this._yMax||20000; }\n\n    _line;\n    get line() { return this._line||(() => {}); }\n\n    thresholdLine;\n\n    private _data:AgddTimeSeriesData;\n    get data():AgddTimeSeriesData { return this._data||{} };\n\n    constructor(protected rootElement:ElementRef,protected media:ObservableMedia,private decimalPipe:DecimalPipe) {\n        super(rootElement,media);\n    }\n\n    private removeLines() {\n        const {data,chart} = this;\n        chart.selectAll('path.gdd').remove();\n        Object.keys(data)\n            .filter(key => !!data[key])\n            .forEach(key => delete data[key].plotted);\n        this.updateLegend();\n    }\n\n    private addLines() {\n        const {data,chart,line} = this;\n        Object.keys(data)\n            .filter(key => !!data[key])\n            .forEach(key => {\n                chart.append('path')\n                    .attr('class','gdd '+key)\n                    .attr('fill','none')\n                    .attr('stroke',data[key].color)\n                    .attr('stroke-linejoin','round')\n                    .attr('stroke-linecap','round')\n                    .attr('stroke-width',1.5)\n                    .attr('d',line(data[key].filtered||data[key].data));\n                data[key].plotted = true;\n            });\n        this.updateLegend();\n    }\n\n    private updateTitle() {\n        //console.log('AGDD: updateTitle');\n        const {chart,sizing,selection} = this;\n        const title = chart.select('.chart-title');\n        title.selectAll('*').remove();\n        title.append('text')\n            .attr('y', '0')\n            .attr('dy','-3em')\n            .attr('x', (sizing.width/2))\n            .style('text-anchor','middle')\n            .style('font-size','18px').text('Accumulated Growing Degree Days');\n        if(selection.latLng && selection.latLng.length === 2) {\n            const [lat,lng] = selection.latLng;\n            title.append('text')\n            .attr('y', '0')\n            .attr('dy','-1.8em')\n            .attr('x', (sizing.width/2))\n            .style('text-anchor','middle')\n            .style('font-size','18px').text(`(Lat: ${lat.toFixed(3)}, Lon: ${lng.toFixed(3)}) ${selection.baseTemp}${DEG_F} Base Temp`);\n        }\n    }\n\n    private updateAxes() {\n        // console.log('AGDD: updateAxes');\n        this.removeLines();\n        const {data,chart,sizing,y,yAxis,x,xAxis,selection} = this;\n        let {yMax} = this;\n        const lineKeys = Object.keys(data).filter(key => !!data[key]);\n        if(lineKeys.length) {\n            // calculate/re-calculate the y-axis domain so that the data fits nicely\n            const maxes = lineKeys.reduce((arr,key) => {\n                    arr.push(d3.max((data[key].filtered||data[key].data),DATA_FUNC));\n                    return arr;\n                },[]);\n            selection.thresholdCeiling = Math.round(yMax = d3.max(maxes));\n            yMax = yMax*1.05;\n            const doy = selection.doy;\n\n            // update x/y axis\n            yAxis.scale(y.domain([0,yMax]));\n            xAxis.scale(x.domain([1,doy]));\n\n            // filter or unfilter the data depending on doy\n            Object.keys(data)\n                .filter(key => !!data[key])\n                .forEach(key => data[key].filtered = doy < 365\n                        ? data[key].filtered = data[key].data.filter(d => d.doy <= doy)\n                        : undefined);\n\n            this.addLines();\n            // update the position of the threshold line\n            const yCoord = this.y(selection.threshold);\n            this.thresholdLine\n                .attr('y1',yCoord).attr('y2',yCoord)\n                // hide the threshold line if it's off the axis\n                .style('display',selection.threshold > selection.thresholdCeiling ? 'none' : null);\n        }\n        chart.selectAll('g .axis').remove();\n        chart.append('g')\n            .attr('class', 'y axis')\n            .call(yAxis)\n            .append('text')\n            .attr('fill','#000')\n            .attr('transform', 'rotate(-90)')\n            .attr('y', '0')\n            .attr('dy','-3.75em')\n            .attr('x',-1*(sizing.height/2)) // looks odd but to move in the Y we need to change X because of transform\n            .style('text-anchor', 'middle')\n            .text('Accumulated Growing Degree Day Units (AGDDs)');\n\n        chart.append('g')\n            .attr('class', 'x axis')\n            .attr('transform', 'translate(0,' + sizing.height + ')')\n            .call(xAxis)\n            .append('text')\n            .attr('fill','#000')\n            .attr('y','0')\n            .attr('dy','2.5em')\n            .attr('x',(sizing.width/2))\n            .style('text-anchor', 'middle')\n            .text('Date');\n        this.commonUpdates();\n    }\n\n    private updateLegend(): void {\n        //console.log('AGDD: updateLegend');\n        const chart = this.chart;\n        chart.selectAll('g.legend').remove();\n        const legend = chart.append('g')\n            .attr('class', 'legend')\n            .attr('transform', 'translate(30,-45)') // relative to the chart, not the svg\n            .style('font-size', '1em');\n        const rect = legend.append('rect')\n                .style('fill', 'white')\n                .style('stroke', 'black')\n                .style('opacity', '0.8')\n                .attr('width', 130)\n                .attr('height', 60);\n        const data = this.data,\n            fontSize = 14, r = 5, vpad = 4,\n            keys = ['average', 'selected', 'forecast', 'previous']; //Object.keys(data), hard coding to control order\n        const plotCnt = keys.reduce((cnt, key) => {\n                let row;\n                if (data[key] && data[key].plotted && (data[key].filtered || data[key].data).length) {\n                    row = legend.append('g')\n                        .attr('class', 'legend-item ' + key)\n                        .attr('transform', 'translate(10,' + (((cnt + 1) * fontSize) + (cnt * vpad)) + ')');\n                    row.append('circle')\n                        .attr('r', r)\n                        .attr('fill', data[key].color);\n                    row.append('text')\n                        .style('font-size', fontSize + 'px')\n                        .attr('x', (2 * r))\n                        .attr('y', (r / 2))\n                        .text(data[key].year);\n                    cnt++;\n                }\n                return cnt;\n            }, 0);\n        rect.style('display',plotCnt === 0 ? 'none' : null);\n        if (plotCnt < 3) {\n            rect.attr('height', 45);\n        } else if (plotCnt > 3) {\n            rect.attr('height', 80);\n        }\n    }\n\n    private hover():void {\n        const {svg,sizing,x,y,yMax} = this;\n        const self = this;\n        const hover = svg.append('g')\n            .attr('transform', 'translate(' + sizing.margin.left + ',' + sizing.margin.top + ')')\n            .style('display','none');\n        const hoverLine = hover.append('line')\n                .attr('class','focus')\n                .attr('fill','none')\n                .attr('stroke','green')\n                .attr('stroke-width',1)\n                .attr('x1',x(1))\n                .attr('y1',y(0))\n                .attr('x2',x(1))\n                .attr('y2',y(yMax));\n        const hoverInfoDy = '1.2em',\n            hoverInfoX = 15,\n            hoverInfo = hover.append('text')\n                .attr('class','gdd-info')\n                .attr('font-size',16)\n                .attr('y',40),\n            doyInfo = hoverInfo.append('tspan').attr('dy','1em').attr('x',hoverInfoX),\n            doyLabel = doyInfo.append('tspan').attr('class','gdd-label').text('DOY: '),\n            doyValue = doyInfo.append('tspan').attr('class','gdd-value'),\n            infoKeys = ['average','previous','selected','forecast'],\n            infos = infoKeys.reduce(function(map,key){\n                map[key] = hoverInfo.append('tspan').attr('dy',hoverInfoDy).attr('x',hoverInfoX);\n                return map;\n            },{}),\n            infoLabels = infoKeys.reduce(function(map,key){\n                map[key] = infos[key]\n                    .append('tspan')\n                    .attr('class','gdd-label '+key)\n                    .style('font-weight','bold')\n                    .style('fill',AGDD_COLORS[key]);\n                return map;\n            },{}),\n            infoValues = infoKeys.reduce(function(map,key){\n                map[key] = infos[key].append('tspan').attr('class','gdd-value');\n                return map;\n            },{}),\n            infoDiffs = ['previous','forecast','selected'].reduce(function(map,key){\n                map[key] = infos[key].append('tspan').attr('class','gdd-diff');\n                return map;\n            },{});\n        function focusOff() {\n            hover.style('display','none');\n        }\n        function focusOn() {\n            hover.style('display',null);\n        }\n        const nuberFmt = n => this.decimalPipe.transform(n,'1.0-0');\n        // clear any \"focus\" values on existing data otherwise focus rings won't\n        // show up after resize.\n        infoKeys.filter(k => !!this.data[k]).forEach(k => delete this.data[k].focus);\n        function updateFocus() {\n            let coords = d3.mouse(this),\n                data = self.data,\n                xCoord = coords[0],\n                doy = Math.round(x.invert(xCoord)),\n                lineKeys = Object.keys(data).filter(k => !!data[k]),\n                temps;\n            hoverLine.attr('transform','translate('+xCoord+')');\n            temps = lineKeys.reduce(function(map,key) {\n                var temp;\n                if(data[key].plotted) {\n                    // get the value for doy\n                    temp = data[key].doyMap[doy];\n                    if(typeof(temp) !== 'undefined') {\n                        map[key] = {\n                            year: data[key].year,\n                            gdd: temp\n                        };\n                        if(!data[key].focus) {\n                            // create a focus ring for this line\n                            data[key].focus = hover.append('circle')\n                                .attr('r',4.5)\n                                .attr('fill','none')\n                                .attr('stroke','steelblue');\n                        }\n                        data[key].focus\n                            .style('display',null)\n                            .attr('transform','translate('+xCoord+','+y(temp)+')');\n                    } else if (data[key].focus) {\n                        // invalid doy, hide focus ring\n                        data[key].focus.style('display','none');\n                    }\n                }\n                return map;\n            },{});\n            const idFunc = d => d.doy;\n            \n            //console.debug('temps for doy '+doy,temps);\n            doyValue.text(`${doy} (${DATE_FMT(doy)})`);\n            Object.keys(infos).forEach(function(key) {\n                var temp,diff,avgDoy,diffDoy,text,i;\n                if(temps[key]) {\n                    infos[key].style('display',null);\n                    infoLabels[key].text((temps[key].year||'30-year Average')+': ');\n                    temp = temps[key].gdd;\n                    infoValues[key].text(nuberFmt(temp)+' GDD');\n                    if(infoDiffs[key] && temps.average != null) {\n                        diff = temp-temps.average.gdd;\n                        text = ' ('+(diff > 0 ? '+' : '')+nuberFmt(diff)+' GDD';\n                        // on what day did the current temperature happen\n                        for(i = 0; i < data.average.data.length; i++) {\n                            if(DATA_FUNC(data.average.data[i]) > temp) {\n                                avgDoy = idFunc(data.average.data[i]);\n                                break;\n                            }\n                        }\n                        // this can happen when the year being compared\n                        // is now hotter than the average has ever been\n                        // i.e. late in the year\n                        if(avgDoy > 0 && avgDoy < 366) {\n                            diffDoy = (avgDoy-doy);\n                            text +='/'+(diffDoy > 0 ?'+' : '')+diffDoy+' days';\n                        }\n\n                        text += ')';\n                        infoDiffs[key]\n                        .attr('class','gdd-diff '+(diff > 0 ? 'above' : 'below'))\n                        .style('fill',(diff > 0 ? 'red' : 'blue'))\n                        .text(text);\n                    }\n                } else {\n                    infos[key].style('display','none');\n                }\n            });\n\n        }\n        svg.append('rect')\n            .attr('class','overlay')\n            .attr('transform', 'translate(' + sizing.margin.left + ',' + sizing.margin.top + ')')\n            .style('fill','none')\n            .style('pointer-events','all')\n            .attr('x',0)\n            .attr('y',0)\n            .attr('width',x(365))\n            .attr('height',y(0))\n            .on('mouseover',focusOn)\n            .on('mouseout',focusOff)\n            .on('mousemove',updateFocus);\n    }\n\n    protected redrawSvg(): void {\n        //console.log('AGDD: redrawSvg');\n        this.updateAxes();\n        this.updateTitle();\n    }\n\n    public reset():void {\n        //console.log('AGDD: reset');\n        super.reset();\n        const {chart,sizing,yMax} = this;\n        chart.append('g').attr('class','chart-title');\n        this.updateTitle();\n\n        this.x = scaleLinear().range([0,sizing.width]).domain([1,365]);\n        this.xAxis = axisBottom<number>(this.x).tickFormat(DATE_FMT);\n\n        this.y = scaleLinear().range([sizing.height,0]).domain([0,yMax])\n        this.yAxis = axisLeft<number>(this.y);\n\n        const line = d3.line<TimeSeriesDataPoint>();\n        line.curve(d3.curveLinear);\n        line.x(d => this.x(d.doy));\n        line.y(d => typeof(d.agdd) === 'number' ? this.y(d.agdd) : this.y(d.point_value));\n        this._line = line;\n\n        this.thresholdLine = chart.append('line')\n            .attr('class','threshold')\n            .attr('fill','none')\n            .attr('stroke','green')\n            .attr('stroke-width',1)\n            .attr('x1',this.x(1))\n            .attr('y1',this.y(this.yMax))\n            .attr('x2',this.x(365))\n            .attr('y2',this.y(yMax))\n            .style('display','none');\n        \n        this.hover();\n        this.updateAxes();\n        this.commonUpdates();\n    }\n\n    protected update():void {\n        //console.log('AGDD: update');\n        this._data = undefined;\n        this.reset(); // would like to be able to avoid but\n        this.selection.data()\n            .then(d => this._data = d)\n            .then(() => {\n                this.reset();\n                this.redraw();\n            });\n    }\n}","import { Component, Input, SimpleChanges, NgZone } from '@angular/core';\nimport {\n    AgddTimeSeriesSelection,\n    CATEGORY_PESTS,\n    CATEGORY_TEMP_ACCUMULATIONS,\n    DEFAULT_AGDD_LAYER_NAME\n} from './agdd-time-series-selection';\nimport { MonitorsDestroy } from '@npn/common/common';\nimport { takeUntil, startWith } from 'rxjs/operators';\nimport { MapLayer, NpnMapLayerService, MapLayerDefinition, MapLayerDefs, CATEGORY_PEST } from '@npn/common/gridded';\n\n@Component({\n    selector: 'agdd-ts-map-layer-control',\n    template: `\n    <mat-form-field class=\"layer-category\">\n        <mat-select placeholder=\"Layer category\" [(ngModel)]=\"selection.layerCategory\" (selectionChange)=\"categoryChange()\">\n            <mat-option [value]=\"CATEGORY_PESTS\">{{CATEGORY_PESTS}}</mat-option>\n            <mat-option [value]=\"CATEGORY_TEMP_ACCUMULATIONS\">{{CATEGORY_TEMP_ACCUMULATIONS}}</mat-option>\n        </mat-select>\n    </mat-form-field>\n    <div [ngSwitch]=\"selection.layerCategory\" *ngIf=\"selection.layerCategory && layerDefinitions\">\n        <pest-map-layer-control *ngSwitchCase=\"CATEGORY_PESTS\" [selection]=\"selection\" [layerDefinitions]=\"layerDefinitions\"></pest-map-layer-control>\n        <temp-accum-map-layer-control *ngSwitchCase=\"CATEGORY_TEMP_ACCUMULATIONS\" [selection]=\"selection\" [layerDefinitions]=\"layerDefinitions\" agddTimeSeries=\"true\"></temp-accum-map-layer-control>\n    </div>\n    <div *ngIf=\"selection.layer\" class=\"layer-controls\">\n        <extent-control [selection]=\"selection\"></extent-control>\n        <supports-opacity-control [supportsOpacity]=\"selection.layer\"></supports-opacity-control>\n        <p *ngIf=\"selection.layer.hasAbstract()\" [innerHTML]=\"selection.layer.getAbstract()\"></p>\n    </div>\n    `,\n    styles:[`\n    :host {\n        display: block;\n    }\n    mat-form-field.layer-category {\n        display: block;\n    }\n    .layer-controls {\n        width: 400px;\n    }\n    .layer-controls >p {\n        margin: 12px 0px 0px 0px;\n    }\n    `]\n})\nexport class AgddTsMapLayerControl extends MonitorsDestroy {\n    @Input() selection: AgddTimeSeriesSelection;\n    @Input() map;/*:google.maps.Map;*/\n\n    layerDefinitions:MapLayerDefs;\n    pests:MapLayerDefinition[];\n\n    CATEGORY_PESTS = CATEGORY_PESTS;\n    CATEGORY_TEMP_ACCUMULATIONS = CATEGORY_TEMP_ACCUMULATIONS;\n    marker;\n    layer:MapLayer;\n    private mapResolver;\n    private getMap = new Promise<google.maps.Map>(resolve => this.mapResolver = resolve);\n\n    constructor(private layerService:NpnMapLayerService,private zone:NgZone){\n        super();\n    }\n\n    ngOnInit() {\n        this.layerService.getLayerDefinitions().then((defs:MapLayerDefs) => {\n            this.layerDefinitions = defs;\n            this.pests = this.layerDefinitions.categories.find(c => c.name === CATEGORY_PEST).layers;\n        });\n        const {selection,componentDestroyed} = this;\n        // would be nice to just watch the selection but updates only come through if a selection is valid\n        componentDestroyed.subscribe(() => selection.endMonitorLayerChange());\n        selection.monitorLayerChange().pipe(\n            startWith(selection.layerName),\n            takeUntil(componentDestroyed)\n        ).subscribe(layerName => {\n            console.log(`AgddTsMapLayerControl.layerName=${layerName}`);\n            if(this.layer && this.layer.layerName !== layerName) {\n                this.layer.off();\n                this.layer = undefined;\n            }\n            if(layerName && !this.layer) {\n                Promise.all([\n                    this.getMap,\n                    selection.getLayer()\n                ]).then(results => {\n                    const [map,layer] = results;\n                    layer.setMap(map);\n                    layer.on();\n                    this.layer = layer;\n                });\n            }\n        });\n\n        this.getMap.then(map => {\n            const updateLatLng = event => {\n                console.log(`AgddTsMapLayerControl.updateLatLng ${event.latLng.lat()},${event.latLng.lng()}`);\n                this.zone.run(() => {\n                    selection.latLng = [\n                        event.latLng.lat(),\n                        event.latLng.lng()\n                    ]\n                });\n            };\n            if(selection.latLng && selection.latLng.length === 2) {\n                const {latLng} = selection;\n                this.marker = new google.maps.Marker({\n                    map,\n                    draggable:true,\n                    position: new google.maps.LatLng(latLng[0],latLng[1])\n                });\n                this.marker.addListener('dragend',updateLatLng);\n            }\n            google.maps.event.addListener(map,'click',event => {\n                if(!this.marker) {\n                    this.marker = new google.maps.Marker({\n                        map,\n                        draggable:true,\n                        position: event.latLng\n                    });\n                    this.marker.addListener('dragend',updateLatLng);\n                }\n                this.marker.setPosition(event.latLng);\n                updateLatLng(event);\n            });\n        });\n    }\n\n    ngOnChanges(changes:SimpleChanges) {\n        if(changes && changes.map && changes.map.currentValue) {\n            this.mapResolver(changes.map.currentValue);\n        }\n    }\n\n    categoryChange() {\n        this.selection.layerName = this.selection.layerCategory === CATEGORY_PESTS\n            ? this.pests[0].name\n            : DEFAULT_AGDD_LAYER_NAME;\n    }\n}","export * from './public_api';","export * from './agdd-time-series-selection';\nexport * from './agdd-time-series-selection.factory';\nexport * from './agdd-time-series.component';\nexport * from './agdd-ts-map-layer-control.component';","import {Component,Input,OnInit} from '@angular/core';\n\nimport {CalendarSelection} from './calendar-selection';\nimport { HigherSpeciesPhenophaseInputCriteria } from '../common-controls';\nimport { filter, debounceTime, takeUntil } from 'rxjs/operators';\nimport { VisSelectionEvent } from '../vis-selection';\nimport { MonitorsDestroy, CURRENT_YEAR, CURRENT_YEAR_LABEL  } from '@npn/common/common';\nimport { faExclamationTriangle } from '@fortawesome/pro-light-svg-icons';\n\nconst THIS_YEAR = (new Date()).getFullYear();\nconst VALID_YEARS = (function(){\n    let max = THIS_YEAR+1,\n        current = 1900,\n        years:number[] = [];\n    while(current < max) {\n        years.push(current++);\n    }\n    return years;\n})();\n\n@Component({\n    selector: 'calendar-control',\n    template: `\n    <div *ngIf=\"!selection.canAddPlot\" class=\"max-plots-reached\"><fa-icon [icon]=\"faExclamationTriangle\"></fa-icon> One more year or species/phenophase combination would exceed the maximum of {{selection.MAX_PLOTS}} plots</div>\n    <div>\n        <div class=\"year-input-wrapper\" *ngFor=\"let plotYear of selection.years;index as idx\">\n            <mat-form-field class=\"year-input\">\n                <mat-select placeholder=\"Year {{idx+1}}\" [(ngModel)]=\"selection.years[idx]\" (ngModelChange)=\"yearChange()\" id=\"year_{{idx}}\">\n                    <mat-option *ngFor=\"let y of selectableYears(selection.years[idx])\" [value]=\"y\">{{y === CURRENT_YEAR ? CURRENT_YEAR_LABEL : y}}</mat-option>\n                </mat-select>\n            </mat-form-field>\n            <button *ngIf=\"selection.years?.length > 0\" mat-button class=\"remove-year\" (click)=\"removeYear(idx)\">Remove</button>\n            <button *ngIf=\"idx === (selection.years.length-1)\" mat-button class=\"add-year\" (click)=\"addYear()\" [disabled]=\"!selection.canAddPlot\">Add</button>\n        </div>\n    </div>\n\n    <div class=\"phenophase-input-wrapper\" *ngFor=\"let spi of selection.plots; index as idx\">\n        <higher-species-phenophase-input\n            gatherColor=\"true\"\n            [selection]=\"selection\"\n            [criteria]=\"criteria\"\n            [plot]=\"spi\"\n            (plotChange)=\"selection.update()\"></higher-species-phenophase-input>\n        <button *ngIf=\"idx > 0\" mat-button class=\"remove-plot\" (click)=\"removePlot(idx)\">Remove</button>\n        <button *ngIf=\"idx === (selection.plots.length-1)\" mat-button class=\"add-plot\" (click)=\"addPlot()\" [disabled]=\"!plotsValid() || !selection.canAddPlot\">Add</button>\n    </div>\n\n    <mat-checkbox [(ngModel)]=\"selection.negative\" (change)=\"redrawChange()\">Display negative data</mat-checkbox>\n    <mat-checkbox [(ngModel)]=\"selection.meta.userNegativeToggle\" *ngIf=\"onVisControlOptions\" class=\"meta-userNegativeToggle\">Allow users to toggle negative data</mat-checkbox>\n\n    <label for=\"label-size-input\">Label size\n        <mat-slider id=\"label-size-input\" min=\"0\" max=\"10\" step=\"0.25\" [(ngModel)]=\"selection.fontSizeDelta\" (change)=\"redrawChange()\" [disabled]=\"!selection.isValid()\"></mat-slider>\n    </label>\n\n    <label for=\"label-position-input\">Label position\n        <mat-slider id=\"label-position-input\" min=\"0\" max=\"100\" step=\"1\" [(ngModel)]=\"selection.labelOffset\" (change)=\"redrawChange()\" [disabled]=\"!selection.isValid()\"></mat-slider>\n    </label>\n\n    <label for=\"label-band-size-input\">Band size\n        <mat-slider invert id=\"label-band-size-input\" min=\"0\" max=\"0.95\" step=\"0.05\" [(ngModel)]=\"selection.bandPadding\" (change)=\"redrawChange()\" [disabled]=\"!selection.isValid()\"></mat-slider>\n    </label>\n    `,\n    styles:[`\n        .year-input-wrapper {\n            display: inline-block;\n            margin-right: 15px;\n        }\n        .year-input {\n            width: 90px;\n        }\n        .phenophase-input-wrapper {\n            display: block;\n        }\n        label[for=\"label-size-input\"],\n        .meta-userNegativeToggle {\n            margin-left: 15px;\n        }\n    `]\n})\nexport class CalendarControlComponent extends MonitorsDestroy {\n    @Input()\n    selection: CalendarSelection;\n    /** set to true if want to gather input about allowing users to have visualization time controls */\n    @Input()\n    onVisControlOptions:boolean = false;\n    @Input()\n    allowCurrentYear:boolean = false;\n\n    maxYears = 5;\n    criteria:HigherSpeciesPhenophaseInputCriteria;\n    faExclamationTriangle = faExclamationTriangle;\n\n    validYears = VALID_YEARS.slice();\n    CURRENT_YEAR = CURRENT_YEAR;\n    CURRENT_YEAR_LABEL = CURRENT_YEAR_LABEL;\n\n    selectableYears(y:number) {\n        if(y) {\n            // validYears including y but excluding any others in the selection\n            return this.validYears.filter(yr => {\n                return yr === y || this.selection.years.indexOf(yr) === -1;\n            });\n        }\n        return this.validYears;\n    }\n\n    ngOnInit() {\n        if(this.onVisControlOptions) {\n            this.selection.meta = this.selection.meta||{};\n        }\n        if(this.allowCurrentYear) {\n            this.validYears.push(CURRENT_YEAR);\n        }\n        this.selection.pipe(\n            filter(event => event === VisSelectionEvent.SCOPE_CHANGE),\n            debounceTime(500),\n            takeUntil(this.componentDestroyed)\n        ).subscribe(() => this.updateCriteria());\n        \n        if(this.selection.years.length === 0) {\n            this.addYear();\n        }\n        if(this.selection.plots.length === 0) {\n            this.addPlot();\n        }\n        setTimeout(() => this.updateCriteria());\n    }\n\n    updateCriteria() {\n        this.criteria = {\n            years: this.selection.years,\n            stationIds: this.selection.getStationIds()\n        };\n    }\n\n    yearChange() {\n        this.updateCriteria();\n        this.selection.update();\n    }\n\n    redrawChange(change?) {\n        if(change && !change.oldValue && change.newValue) { // e.g. no color to a color means a plot that wasn't valid is now potentially valid.\n            this.selection.update();\n        } else {\n            this.selection.redraw();\n        }\n    }\n\n    addPlot() {\n        this.selection.plots.push({});\n    }\n\n    removePlot(index:number) {\n        this.selection.plots.splice(index,1);\n        this.selection.update();\n    }\n\n    addYear() {\n        let y = THIS_YEAR;\n        while(this.selection.years.indexOf(y) !== -1) {\n            y--;\n        }\n        this.selection.years.push(y);\n        this.yearChange();\n    }\n\n    removeYear(index:number) {\n        this.selection.years.splice(index,1);\n        this.yearChange();\n    }\n\n    plotsValid() {\n        return this.selection.plots.length === this.selection.validPlots.length;\n    }\n}\n","import { Injectable } from '@angular/core';\nimport { NpnServiceUtils, TaxonomicSpeciesTitlePipe, SpeciesService, NetworkService } from '../../common';\nimport { CalendarSelection } from './calendar-selection';\n\n@Injectable()\nexport class CalendarSelectionFactory {\n    requestSrc: string = 'npn-vis-calendar';\n\n    constructor(\n        private serviceUtils:NpnServiceUtils,\n        private speciesTitle:TaxonomicSpeciesTitlePipe,\n        private speciesService:SpeciesService,\n        private networkService:NetworkService\n    ) {}\n\n    newSelection(): CalendarSelection {\n        return new CalendarSelection(this.serviceUtils,this.speciesTitle,this.speciesService,this.networkService);\n    }\n}\n","import {ObservationDateVisSelection} from '../observation-date-vis-selection';\n\nimport {selectionProperty} from '../vis-selection';\n\nexport class CalendarSelection extends ObservationDateVisSelection {\n    @selectionProperty()\n    $class:string = 'CalendarSelection';\n\n    @selectionProperty()\n    labelOffset:number = 4;\n    @selectionProperty()\n    bandPadding:number = 0.5;\n    @selectionProperty()\n    fontSizeDelta:number = 0;\n    @selectionProperty()\n    monthFormat?:string;\n\n    isValid():boolean {\n        return typeof(this.labelOffset) === 'number' &&\n               typeof(this.bandPadding) === 'number' &&\n               typeof(this.fontSizeDelta) === 'number' &&\n                super.isValid();\n    }\n}\n\nexport {ObservationDataDataPoint,ObservationDateData} from '../observation-date-vis-selection';\n","module.exports = \"<div class=\\\"vis-container\\\">\\n    <div class=\\\"vis-working\\\" *ngIf=\\\"selection.working\\\">\\n        <npn-logo spin=\\\"false\\\"></npn-logo>\\n    </div>\\n    <div class=\\\"chart-container\\\">\\n        <visualization-download *ngIf=\\\"!thumbnail && !mobileMode\\\" svgWrapperId=\\\"{{id}}\\\" filename=\\\"{{filename}}\\\"></visualization-download>\\n        <div [class]=\\\"clazz\\\" id=\\\"{{id}}\\\"><svg class=\\\"svg-visualization\\\"></svg></div>\\n    </div>\\n    <mat-checkbox *ngIf=\\\"!thumbnail && selection.meta?.userNegativeToggle\\\" [(ngModel)]=\\\"selection.negative\\\" (change)=\\\"selection.redraw()\\\" class=\\\"meta-userNegativeToggle\\\">Display negative data</mat-checkbox>\\n    <div *ngIf=\\\"disclaimer && !thumbnail\\\" class=\\\"vis-disclaimer\\\">{{disclaimer}}</div>\\n</div>\\n<!--pre *ngIf=\\\"record\\\">{{record | json}}</pre-->\\n\"","import {Component,Input, ElementRef} from '@angular/core';\nimport { ObservableMedia } from \"@angular/flex-layout\";\n\nimport {ONE_DAY_MILLIS} from '../vis-selection';\nimport {CalendarSelection,ObservationDataDataPoint,ObservationDateData} from './calendar-selection';\nimport {VisualizationMargins} from '../visualization-base.component';\nimport {SvgVisualizationBaseComponent} from '../svg-visualization-base.component';\n\nimport {Axis,axisBottom,axisRight} from 'd3-axis';\nimport {ScaleBand,scaleBand} from 'd3-scale';\nimport * as d3 from 'd3';\nimport { ObservationDatePlotData } from '../observation-date-vis-selection';\n\n@Component({\n    selector: 'calendar',\n    templateUrl: 'calendar.component.html',\n    styleUrls: ['../svg-visualization-base.component.scss']\n})\nexport class CalendarComponent extends SvgVisualizationBaseComponent {\n    @Input() selection: CalendarSelection;\n\n    filename:string = 'calendar.png';\n    margins: VisualizationMargins = {top: 20, right: 35, bottom: 45, left: 35};\n\n    x: ScaleBand<number>;\n    xAxis: Axis<number>;\n\n    y: ScaleBand<number>;\n    yAxis: Axis<number>\n\n    private processed:ObservationDateData;\n    private data:ObservationDatePlotData[];\n\n    constructor(protected rootElement: ElementRef, protected media: ObservableMedia) {\n        super(rootElement,media);\n    }\n\n    // the doy of the first of each month doesn't change from year to year just what\n    // day of the week days fall on so what year is used to calculate them is irrelevant\n    xTickValues(): number[] {\n        var firsts = [1],i,count = 1;\n        for(i = 1; i < 12; i++) {\n            var date = new Date(1900,i);\n            // back up 1 day\n            date.setTime(date.getTime()-ONE_DAY_MILLIS);\n            count += date.getDate();\n            firsts.push(count);\n        }\n        return this.x.domain().filter(function(d){\n            return firsts.indexOf(d) !== -1;\n        });\n    }\n\n    protected commonUpdates(): void {\n        // forces all text to 14 px\n        super.commonUpdates();\n        // labels are customizable in size\n        let bw = this.y.bandwidth();\n        let dy = -1*((bw/2)+this.selection.labelOffset),\n            labelFontSize = (this.baseFontSize() as number)+this.selection.fontSizeDelta;\n        this.chart.selectAll('.y.axis text')\n            .attr('x', 0)\n            .attr('dy', dy)\n            .attr('style', `text-anchor: start; font-size: ${labelFontSize}px;`);\n    }\n\n    private getMonthFormat(): string {\n        if(this.selection.monthFormat) {\n            return this.selection.monthFormat;\n        }\n        if(this.sizing && this.sizing.width < 800) {\n            return '%b';\n        }\n        return '%B';\n    }\n\n    protected reset(): void {\n        super.reset();\n        this.processed = undefined;\n        let chart = this.chart,\n            sizing = this.sizing,\n            d3_month_fmt = d3.timeFormat(this.getMonthFormat());\n\n        this.x = scaleBand<number>().range([0,sizing.width]).domain(d3.range(1,366))\n            .paddingInner(-0.1).paddingOuter(0.5);\n        this.xAxis = axisBottom<number>(this.x).tickValues(this.xTickValues())\n            .tickFormat((i) => {\n                let date = new Date(1900,0);\n                date.setTime(date.getTime()+(ONE_DAY_MILLIS*i));\n                return d3_month_fmt(date);\n            });\n        this.y = scaleBand<number>().range([sizing.height,0]).domain(d3.range(0,6)).paddingOuter(0.5);\n        this.yAxis = axisRight<number>(this.y).tickSize(sizing.width).tickFormat(i => {\n            return this.processed && this.processed.data && i < this.processed.labels.length ?\n                this.processed.labels[i] : '';\n        });\n\n        chart.append('g')\n            .attr('class', 'x axis')\n            .attr('transform', 'translate(0,' + sizing.height + ')')\n            .call(this.xAxis);\n\n        chart.append('g')\n            .attr('class', 'y axis')\n            .call(this.yAxis);\n        chart.selectAll('g .y.axis line')\n            .style('stroke','#777')\n            .style('stroke-dasharray','2,2');\n\n        // hide y axis ticks and domain\n        //chart.selectAll('g .y.axis .tick line').style('display','none');\n        chart.selectAll('g .y.axis .domain').style('display','none');\n\n        this.commonUpdates();\n    }\n\n    protected update(): void {\n        this.reset();\n        this.selection.getData().then(data => {\n            this.data = data;\n            this.redraw();\n        })\n        .catch(this.handleError);\n    }\n\n    protected redrawSvg(): void {\n        if(!this.data) {\n            return;\n        }\n        const processed = this.processed = this.selection.postProcessData(this.data);\n\n        // update y axis\n        this.y.paddingInner(this.selection.bandPadding);\n        if(processed && processed.labels) {\n            this.y.domain(d3.range(0,processed.labels.length));\n        }\n        this.yAxis.scale(this.y);\n        this.chart.selectAll('g .y.axis')\n            .call(this.yAxis);\n\n        this.chart.selectAll('.doy').remove();\n        if(processed && processed.data) {\n            let doys = this.chart.selectAll('.doy').data(processed.data, d => {\n                let point = d as ObservationDataDataPoint; // why is this necessary\n                return`${point.y}-${point.x}-${point.color}`;\n            });\n            doys = doys.enter().insert('line',':first-child').attr('class','doy');\n            let dx = Math.ceil(this.x.bandwidth()/2),\n                dy = this.y.bandwidth()/2;\n            doys.attr('x1', d => this.x(d.x)-dx)\n                .attr('y1', (d,i) => this.y(d.y)+dy)\n                .attr('x2', d => this.x(d.x)+dx)\n                .attr('y2', (d,i) => this.y(d.y)+dy)\n                .attr('doy-point',d => `(${d.x},${d.y})`)\n                .attr('stroke', d => d.color)\n                .attr('stroke-width', `${this.y.bandwidth()}`)\n                .append('title')\n                .text(function(d) {\n                    return d.x; // x is the doy\n                });\n        }\n        this.commonUpdates();\n    }\n}\n","export * from './public_api';","export {CalendarSelection} from './calendar-selection';\nexport {CalendarSelectionFactory} from './calendar-selection-factory.service';\nexport {CalendarComponent} from './calendar.component';\nexport {CalendarControlComponent} from './calendar-control.component';\n","import {Component, Input, OnInit} from '@angular/core';\nimport {ClippedWmsMapSelection} from './clipped-wms-map-selection';\n\n@Component({\n    selector: 'clipped-wms-map-control',\n    template: `\n    <mat-form-field class=\"map-service-input\">\n        <mat-select placeholder=\"Map\" [(ngModel)]=\"selection.service\" (ngModelChange)=\"serviceChange()\">\n            <mat-option *ngFor=\"let s of validServices\" [value]=\"s.value\">{{s.label}}</mat-option>\n        </mat-select>\n    </mat-form-field>\n    <mat-form-field class=\"map-layer-input\">\n        <mat-select placeholder=\"Layer\" [(ngModel)]=\"selection.layer\" (ngModelChange)=\"layerChange()\">\n            <mat-option *ngFor=\"let l of validLayers\" [value]=\"l\">{{l.label}}</mat-option>\n        </mat-select>\n    </mat-form-field>\n    <mat-checkbox [(ngModel)]=\"selection.useBufferedBoundary\" (change)=\"layerChange()\">Use Buffered Boundary</mat-checkbox>\n    `,\n    styles:[`\n        .map-service-input {\n            width: 225px;\n        }\n        .map-layer-input {\n            width: 155px;\n        }\n        mat-form-field {\n            padding-right: 10px;\n        }\n    `]\n})\nexport class ClippedWmsMapControl implements OnInit {\n    @Input()\n    selection: ClippedWmsMapSelection;\n\n    validServices:any[];\n    validLayers:any[];\n\n    serviceChange() {\n        this.validLayers = this.selection.validLayers;\n        let selection = this.selection,\n            layers = this.selection.validLayers;\n        selection.layer = layers.length ? layers[0] : undefined;\n        this.layerChange();\n    }\n\n    layerChange() {\n        let selection = this.selection;\n        if(selection.isValid()) {\n            selection.update();\n        } else {\n            selection.reset();\n        }\n    }\n\n    ngOnInit() {\n        this.validServices = this.selection.validServices;\n        this.serviceChange();\n    }\n}\n","import { Injectable, Inject } from '@angular/core';\n\nimport { DatePipe } from '@angular/common';\nimport { NpnServiceUtils, NetworkService } from '../../common';\nimport { WcsDataService, NpnMapLayerService } from '../../gridded';\n\nimport { ClippedWmsMapSelection } from './clipped-wms-map-selection';\n\n@Injectable()\nexport class ClippedWmsMapSelectionFactory {\n    constructor(protected serviceUtils:NpnServiceUtils,\n                protected datePipe: DatePipe,\n                protected layerService:NpnMapLayerService,\n                protected dataService:WcsDataService,\n                protected networkService:NetworkService) {}\n\n    newSelection(): ClippedWmsMapSelection {\n        return new ClippedWmsMapSelection(this.serviceUtils,this.datePipe,this.layerService,this.dataService,this.networkService);\n    }\n}\n","import { NetworkAwareVisSelection, selectionProperty, ONE_DAY_MILLIS } from '../vis-selection';\nimport { NpnServiceUtils, NetworkService } from '../../common';\nimport {\n    MapLayerLegend,\n    SupportsOpacity,\n    googleFeatureBounds,\n    WcsDataService,\n    GriddedInfoWindowHandler,\n    NpnMapLayerService\n} from '../../gridded';\n\nimport { DatePipe } from '@angular/common';\n\nconst SIX_NODATA_DISCLAIMER = `This Refuge has not yet met the requirements for the Spring Leaf Index model. Check back later in the year.`;\n\nconst SIX_LAYERS:ClippedLayerDef[] = [{\n    id: 'current',\n    label: 'Current Si-x leaf index',\n    layerName: 'si-x:average_leaf_ncep',\n    clippingService: 'si-x/area/clippedImage',\n    statisticsService: 'si-x/area/statistics',\n    noDataDisclaimer: SIX_NODATA_DISCLAIMER\n},{\n    id: 'forecast',\n    label: '6-day forecast',\n    layerName: 'si-x:average_leaf_ncep',\n    clippingService: 'si-x/area/clippedImage',\n    statisticsService: 'si-x/area/statistics',\n    forecast: true,\n    noDataDisclaimer: SIX_NODATA_DISCLAIMER\n},{\n    id: 'anomaly',\n    label: 'Anomaly',\n    layerName: 'si-x:leaf_anomaly',\n    clippingService: 'si-x/anomaly/area/clippedImage',\n    statisticsService: 'si-x/anomaly/area/statistics',\n    noDataDisclaimer: SIX_NODATA_DISCLAIMER\n}];\nconst AGDD_LAYERS:ClippedLayerDef[] = [{\n    id: 'current',\n    label: 'Current AGDD',\n    layerName: 'gdd:agdd',\n    clippingService: 'agdd/area/clippedImage',\n    statisticsService: 'agdd/area/statistics',\n},{\n    id: 'forecast',\n    label: '6-day forecast',\n    layerName: 'gdd:agdd',\n    clippingService: 'agdd/area/clippedImage',\n    statisticsService: 'agdd/area/statistics',\n    forecast: true,\n},{\n    id: 'anomaly',\n    label: 'Anomaly',\n    layerName: 'gdd:agdd_anomaly',\n    clippingService: 'agdd/anomaly/area/clippedImage',\n    statisticsService: 'agdd/anomaly/area/statistics',\n}];\n\nexport class ClippedWmsMapSelection extends NetworkAwareVisSelection {\n    @selectionProperty()\n    $class:string = 'ClippedWmsMapSelection';\n\n    @selectionProperty() // may need to use get/set pattern\n    service:string = 'si-x'; // si-x || agdd\n    @selectionProperty()\n    layer:ClippedLayerDef = SIX_LAYERS[0];\n    @selectionProperty()\n    fwsBoundary:string;\n    @selectionProperty()\n    useBufferedBoundary:boolean = false;\n\n    legend:MapLayerLegend;\n    overlay:ImageOverlay;\n    data:WmsMapSelectionData;\n    private features:any[];\n    private listeners:any[];\n    private infoWindowHandler:GriddedInfoWindowHandler;\n\n    // these are not persisted but status of spring dashboard or\n    // other components can tailor them.\n    public explicitDate:Date;\n    public forecastDays:number = 6;\n\n    constructor(protected serviceUtils:NpnServiceUtils,\n                protected datePipe:DatePipe,\n                protected mapLayerService:NpnMapLayerService,\n                protected dataService:WcsDataService,\n                protected networkService:NetworkService) {\n        super(networkService);\n    }\n\n    isValid():boolean {\n        return (this.service === 'si-x' || this.service === 'agdd') && !!this.layer && !!this.fwsBoundary;\n    }\n\n    get validServices(): any[] {\n        return [{\n            value: 'si-x',\n            label: 'Spring index'\n        },{\n            value: 'agdd',\n            label: 'Accumulated growing degree days'\n        }];\n    }\n    get validLayers(): any[] {\n        switch(this.service) {\n            case 'si-x':\n                return SIX_LAYERS;\n            case 'agdd':\n                return AGDD_LAYERS;\n        }\n        return [];\n    }\n\n    get apiDate(): string {\n        // always \"today\" or 6 days in the future for forecast\n        let d = this.explicitDate ?\n            new Date(this.explicitDate.getTime()) : new Date();\n        if(this.layer && this.layer.forecast) {\n            d.setTime(d.getTime()+(this.forecastDays*ONE_DAY_MILLIS));\n        }\n        return this.datePipe.transform(d,'y-MM-dd');\n    }\n\n    getBoundary(): Promise<any> {\n        const url = this.serviceUtils.dataApiUrl('/v1/si-x/area/boundary');\n        const params = {\n                format: 'geojson',\n                fwsBoundary: this.fwsBoundary\n            };\n        return this.serviceUtils.cachedGet(url,params)\n            .then(response => {\n                if(response && response.boundary) {\n                    return this.serviceUtils.cachedGet(response.boundary,{});\n                }\n                throw new Error('missing boundary in response.');\n            });\n    }\n\n    getData(): Promise<any> {\n        let url = this.serviceUtils.dataApiUrl(`/v1/${this.layer.clippingService}`),\n            params = {\n                layerName: this.layer.layerName,\n                fwsBoundary: this.fwsBoundary,\n                date: this.apiDate,\n                useBufferedBoundary: this.useBufferedBoundary,\n                style: true,\n                fileFormat: 'png'\n            };\n        return this.serviceUtils.cachedGet(url,params);\n    }\n\n    getStatistics(): Promise<any> {\n        const url = this.serviceUtils.dataApiUrl(`/v1/${this.layer.statisticsService}`);\n        const params = {\n                layerName: this.layer.layerName,\n                fwsBoundary: this.fwsBoundary,\n                date: this.apiDate,\n                useBufferedBoundary: this.useBufferedBoundary,\n                useCache: this.serviceUtils.dataApiUseStatisticsCache\n            };\n        return this.serviceUtils.cachedGet(url,params)\n            .then(stats => {\n                // translate the date string to a date object.\n                let dateParts = /^(\\d{4})-(\\d{2})-(\\d{2})/.exec(stats.date);\n                stats.date = new Date(\n                    parseInt(dateParts[1]),\n                    parseInt(dateParts[2])-1,\n                    parseInt(dateParts[3])\n                );\n                return stats;\n            });\n\n    }\n\n    getAllData(): Promise<WmsMapSelectionData> {\n        return Promise.all([\n                this.getData(),\n                this.getBoundary(),\n                this.getStatistics()\n            ])\n            .then(arr => ({\n                    data: arr[0],\n                    boundary: arr[1],\n                    statistics: arr[2]\n                }));\n    }\n\n    fitBounds(map: google.maps.Map) {\n        let bounds = undefined;\n        if(this.data && this.data.data) {\n            bounds = this.toBounds(this.data.data.bbox);\n            if(bounds) {\n                map.fitBounds(bounds);\n            }\n        }\n        if(!bounds && this.features && this.features.length) {\n            let allBounds = this.features.map(f => googleFeatureBounds(f)).filter(b => !!b);\n            if(allBounds.length) {\n                let bounds = allBounds[0];\n                if(allBounds.length > 1) {\n                    // union in the others\n                    allBounds.slice(1).forEach(b => bounds.union(b));\n                }\n                map.fitBounds(bounds);\n            }\n        }\n    }\n\n    resizeMap(map: google.maps.Map): Promise<any> {\n        return new Promise(resolve => {\n            this.fitBounds(map);\n            resolve();\n        });\n    }\n\n    removeFrom(map: google.maps.Map): Promise<any> {\n        return new Promise(resolve => {\n            if(this.overlay) {\n                this.overlay.remove();\n            }\n            (this.features||[]).forEach(f => {\n                map.data.remove(f);\n            });\n            (this.listeners||[]).forEach(l => google.maps.event.removeListener(l));\n            if(this.infoWindowHandler) {\n                this.infoWindowHandler.close();\n            }\n            this.data = undefined;\n            this.features = undefined;\n            this.listeners = undefined;\n            this.infoWindowHandler = undefined;\n            this.overlay = undefined;\n            this.legend = undefined;\n            resolve();\n        });\n    }\n\n    addTo(map: google.maps.Map): Promise<any> {\n        return new Promise((_resolve,_reject) => {\n            this.working = true;\n            let resolve = (d?:any) => {\n                    this.working = false;\n                    _resolve(d);\n                },\n                reject = (e?:any) => {\n                    this.working = false;\n                    _reject(e);\n                };\n            if(this.overlay && this.features) {\n                return reject('already added to map, call removeFrom');\n            }\n            this.getAllData()\n                .then(all => {\n                    if(this.overlay && this.features) {\n                        console.log('in promise, already have overlay and features');\n                        return resolve();\n                    }\n                    // have to do this so that the google api classes aren't\n                    // touched too early and our class extension invalid\n                    lazyClassLoader();\n\n                    this.data = all;\n                    let data = all.data,\n                        bounds = this.toBounds(data.bbox),\n                        clippedImage = data.clippedImage;\n                    if(bounds) {\n                        map.panTo(bounds.getCenter());\n                        /*\n                        let rect = new google.maps.Rectangle({\n                            strokeColor: '#FF0000',\n                            strokeOpacity: 0.8,\n                            strokeWeight: 2,\n                            fillColor: '#FF0000',\n                            fillOpacity: 0.35,\n                            map: map,\n                            bounds: bounds\n                        });*/\n                        map.fitBounds(bounds);\n\n                        this.overlay = new ImageOverLayImpl(bounds,clippedImage,map);\n                        this.overlay.add();\n                        this.infoWindowHandler = this.dataService.newInfoWindowHandler(map);\n                        let wcsDateArg = `http://www.opengis.net/def/axis/OGC/0/time(\"${this.apiDate}T00:00:00.000Z\")`,\n                            wcsParamAugmenter = (params:any) => {\n                                params.subset = params.subset||[];\n                                params.subset.push(wcsDateArg);\n                            };\n                        this.listeners = this.listeners||[];\n                        this.listeners.push(map.addListener('click',(event) =>\n                            this.infoWindowHandler.open(event.latLng,this.layer.layerName,this.legend,wcsParamAugmenter)));\n                    }\n\n                    this.addBoundary(map,all.boundary);\n\n                    this.mapLayerService.getLegend(data.layerClippedFrom)\n                        .then(legend => {\n                            console.debug('ClippedWmsMapSelection.legend:',legend);\n                            this.legend = legend;\n                            resolve();\n                        })\n                        .catch(reject);\n                })\n                .catch(reject);\n        });\n\n    }\n\n    addBoundary(map: google.maps.Map,geoJson:any) {\n        console.log('ClippedWmsMapSelection.addBoundary',geoJson);\n        this.features = map.data.addGeoJson(geoJson);\n        map.data.setStyle(feature => {\n            return {\n                strokeColor: '#000000',\n                strokeOpacity: 0.8,\n                strokeWeight: 2,\n                fillColor: '#FF0000',\n                fillOpacity: 0.0,\n                clickable: false,\n            };\n        });\n        this.fitBounds(map);\n    }\n\n    private toBounds(bbox:number[]): google.maps.LatLngBounds {\n        if(bbox && bbox.length === 4) {\n            let sw_lng = bbox[0],\n                sw_lat = bbox[1],\n                ne_lng = bbox[2],\n                ne_lat = bbox[3];\n            return new google.maps.LatLngBounds(\n              new google.maps.LatLng(sw_lat,sw_lng),\n              new google.maps.LatLng(ne_lat,ne_lng)\n            );\n            /*\n            let coords = /^BOX\\(\\s*(-?\\d+\\.\\d+)\\s+(-?\\d+\\.\\d+),\\s*(-?\\d+\\.\\d+)\\s+(-?\\d+\\.\\d+)\\s*\\)/.exec(this.box);\n            if(coords.length === 5) {\n                let sw_lng = parseFloat(coords[1]),\n                    sw_lat = parseFloat(coords[2]),\n                    ne_lng = parseFloat(coords[3]),\n                    ne_lat = parseFloat(coords[4]);\n                return new google.maps.LatLngBounds(\n                  new google.maps.LatLng(sw_lat,sw_lng),\n                  new google.maps.LatLng(ne_lat,ne_lng)\n                );\n            }*/\n        }\n        return null;\n    }\n    // lat + N of equator, - S of equator\n    // lng + E of meridian - W of meridian\n}\n\nexport interface ClippedLayerDef {\n    id: string;\n    label: string;\n    layerName: string;\n    clippingService: string;\n    statisticsService: string;\n    noDataDisclaimer?: string;\n    forecast?: boolean;\n}\n\ninterface ClippedImageResponse {\n    date: string;\n    layerClippedFrom: string;\n    clippedImage: string;\n    bbox: number [];\n}\n\ninterface WmsMapSelectionData {\n    data: ClippedImageResponse;\n    boundary: any; // geoJson\n    statistics: any;\n};\n\ninterface ImageOverlay extends google.maps.OverlayView,SupportsOpacity {\n    add();\n    remove();\n}\nlet ImageOverLayImpl: { new (bounds: google.maps.LatLngBounds, image: string, map: google.maps.Map): ImageOverlay };\n\nfunction lazyClassLoader() {\n    ImageOverLayImpl = class ImageOverLayImpl extends google.maps.OverlayView implements ImageOverlay {\n        bounds: google.maps.LatLngBounds;\n        image: string;\n        map: google.maps.Map;\n        div_:any;\n        opacity:number = 0.75;\n\n        constructor(bounds: google.maps.LatLngBounds, image: string, map: google.maps.Map) {\n            super();\n            this.bounds = bounds;\n            this.image = image;\n            this.map = map;\n        }\n\n        add() {\n            (this as any).setMap(this.map);\n        }\n\n        remove() {\n            (this as any).setMap(null);\n        }\n\n        setOpacity(o:number) {\n            this.opacity = o;\n            if(this.div_) {\n                this.div_.style.opacity = o;\n            }\n        }\n\n        getOpacity():number {\n            return this.opacity;\n        }\n\n        onAdd() {\n            let div = document.createElement('div');\n            div.style.borderStyle = 'none';\n            div.style.borderWidth = '0px';\n            div.style.position = 'absolute';\n\n            // Create the img element and attach it to the div.\n            let img = document.createElement('img');\n            img.src = this.image;\n            img.style.width = '100%';\n            img.style.height = '100%';\n            img.style.position = 'absolute';\n            div.appendChild(img);\n\n            this.div_ = div;\n\n            // Add the element to the \"overlayLayer\" pane.\n            var panes = (this as any).getPanes();\n            panes.overlayLayer.appendChild(div);\n            this.setOpacity(this.opacity);\n        }\n\n        draw() {\n            // We use the south-west and north-east\n            // coordinates of the overlay to peg it to the correct position and size.\n            // To do this, we need to retrieve the projection from the overlay.\n            var overlayProjection = (this as any).getProjection();\n\n            // Retrieve the south-west and north-east coordinates of this overlay\n            // in LatLngs and convert them to pixel coordinates.\n            // We'll use these coordinates to resize the div.\n            var sw = overlayProjection.fromLatLngToDivPixel(this.bounds.getSouthWest());\n            var ne = overlayProjection.fromLatLngToDivPixel(this.bounds.getNorthEast());\n\n            // Resize the image's div to fit the indicated dimensions.\n            var div = this.div_;\n            div.style.left = sw.x + 'px';\n            div.style.top = ne.y + 'px';\n            div.style.width = (ne.x - sw.x) + 'px';\n            div.style.height = (sw.y - ne.y) + 'px';\n        }\n\n        onRemove() {\n            this.div_.parentNode.removeChild(this.div_);\n            this.div_ = null;\n        }\n    }\n}\n","import {Component, Input, OnInit, Pipe, PipeTransform} from '@angular/core';\nimport { DecimalPipe } from '@angular/common';\n\nimport { ClippedWmsMapSelection, ClippedLayerDef } from './clipped-wms-map-selection';\nimport * as d3 from 'd3';\n\n// wraps DecimalPipe and supplies custom formatting for specific layers for mean/min/max\n@Pipe({\n    name: 'clippedStatValue'\n})\nexport class ClippedStatValuePipe implements PipeTransform {\n    readonly dateFormat = d3.timeFormat('%B %e');\n    constructor(private decimalPipe:DecimalPipe) {}\n    transform(value:any,nFormat:string,layer:ClippedLayerDef):any {\n        if(layer && layer.layerName === 'si-x:leaf_anomaly') {\n            let transformed = this.decimalPipe.transform(Math.abs(value),nFormat);\n            if(value < 0) {\n                return `${transformed} days early`;\n            } else {\n                return `${transformed} days late`;\n            }\n        }\n        // for non-anomaly maps value is DOY, display as date with DOY in parens.\n        const rounded = Math.floor(value);\n        const dateFmt = this.dateFormat(this.getDate(rounded));\n        return `${dateFmt} (${rounded})`;\n    }\n\n    private getDate(rounded:number):Date {\n        const d = new Date(2010,0,1); // 2010 not a leap year\n        d.setTime(d.getTime()+((rounded-1)*24*60*60*1000));\n        return d;\n    }\n}\n\nconst COUNT_TT = 'Number of map pixels included in the calculations';\nconst SIX_COMPLETE = 'Proportion of area that has reached the First Leaf Index';\nconst AGDD_COMPLETE = 'Highest amount of warmth accumulated since Jan 1 in the area, measured in growing degree days (GDDs)';\n\nconst SIX_TOOLTIPS = {\n    count: COUNT_TT,\n    mean: 'Mean day of year First Leaf Index was reached',\n    stdDev: 'Standard deviation of mean day of year First Leaf Index was reached',\n    min: 'Earliest day of year First Leaf Index was reached',\n    max: 'Latest day of year First Leaf Index was reached',\n    complete: SIX_COMPLETE\n};\nconst AGDD_TOOLTIPS = {\n    count: COUNT_TT,\n    mean: 'Warmth accumulated since Jan 1, averaged across the area, measured in growing degree days (GDDs)',\n    stdDev: 'Standard deviation in warmth accumulated since Jan 1, averaged across the area, measured in growing degree days (GDDs)',\n    min: 'Lowest amount of warmth accumulated since Jan 1 in the area, measured in growing degree days (GDDs)',\n    max: AGDD_COMPLETE\n};\nconst SIX_ANOMALY_TOOLTIPS = {\n    count: COUNT_TT,\n    mean: 'Measure of how early or late spring arrived in this area this year compared to long-term average. Calculated as average of values for pixels displayed',\n    stdDev: 'The standard deviation of the average number of days different from a long-term average (1981-2010) for the pixels displayed',\n    min: 'Earliest day compared to a long-term average (1981-2010) for the pixels displayed',\n    max: 'Latest day compared to a long-term average (1981-2010) for the pixels displayed',\n    complete: SIX_COMPLETE\n};\nconst AGDD_ANOMALY_TOOLTIPS = {\n    count: COUNT_TT,\n    mean: 'Difference in the warmth accumulated since Jan 1 from a long-term average (1981-2010), measured in growing degree days (GDDs)',\n    stdDev: 'Standard deviation in difference in the warmth accumulated since Jan 1 from a long-term average (1981-2010), measured in growing degree days (GDDs)',\n    min: 'Lowest difference in the warmth accumulated since Jan 1 from a long-term average (1981-2010), measured in growing degree days (GDDs)',\n    max: 'Highest difference in the warmth accumulated since Jan 1 from a long-term average (1981-2010), measured in growing degree days (GDDs)',\n    complete: AGDD_COMPLETE\n};\n@Component({\n    selector: 'clipped-wms-map-statistics',\n    template: `\n    <table *ngIf=\"statistics\" [ngClass]=\"{'no-data': statistics.count === 0}\">\n        <tbody>\n            <tr><td>Date</td><td>{{statistics.date | date:'longDate'}}</td></tr>\n            <tr *ngIf=\"statistics.count !== 0\" [matTooltip]=\"tooltips['count']\"><td>Count</td><td>{{statistics.count}}</td></tr>\n            <tr *ngIf=\"statistics.count !== 0\" [matTooltip]=\"tooltips['mean']\"><td>Mean</td><td>{{statistics.mean | clippedStatValue:'1.1-1':selection.layer}}</td></tr>\n            <tr *ngIf=\"statistics.count !== 0\" [matTooltip]=\"tooltips['stdDev']\"><td>Std Dev</td><td>{{statistics.stddev | number:'1.1-1'}}</td></tr>\n            <tr *ngIf=\"statistics.count !== 0\" [matTooltip]=\"tooltips['min']\"><td>Min</td><td>{{statistics.min  | clippedStatValue:'1.0-1':selection.layer}}</td></tr>\n            <tr *ngIf=\"statistics.count !== 0\" [matTooltip]=\"tooltips['max']\"><td>Max</td><td>{{statistics.max  | clippedStatValue:'1.0-1':selection.layer}}</td></tr>\n            <tr *ngIf=\"!gdd && statistics.count !== 0\" [matTooltip]=\"tooltips['complete']\"><td>Complete</td><td>{{statistics.percentComplete | number:'1.0-1'}}%</td></tr>\n            <tr><td *ngIf=\"statistics.count === 0 && selection.layer.noDataDisclaimer\" colspan=\"2\" class=\"no-data-disclaimer\">{{selection.layer.noDataDisclaimer}}</td></tr>\n        </tbody>\n    </table>\n    `,\n    styles:[`\n        :host {\n            line-height: 12px;\n        }\n        table.no-data {\n            max-width: 250px;\n        }\n        tr td:first-of-type {\n            font-weight: bold;\n            text-align: right;\n            padding-right: 5px;\n        }\n        tr td:first-of-type:after {\n            content: ':';\n        }\n        tr td.no-data-disclaimer {\n            text-align: center;\n        }\n        tr td.no-data-disclaimer:after {\n            content: '';\n        }\n    `],\n    providers: [ClippedStatValuePipe]\n})\nexport class ClippedWmsMapStatisticsComponent {\n    @Input()\n    selection:ClippedWmsMapSelection;\n\n    statistics:any;\n    gdd:boolean;\n    tooltips:any;\n\n    ngDoCheck() {\n        if(this.selection && this.selection.data && this.selection.data.statistics) {\n            this.statistics = this.selection.data.statistics;\n            this.gdd = this.selection && /^gdd/.test(this.selection.layer.layerName);\n            this.tooltips = this.gdd ?\n                (this.selection.layer.id === 'anomaly' ? AGDD_ANOMALY_TOOLTIPS : AGDD_TOOLTIPS) :\n                (this.selection.layer.id === 'anomaly' ? SIX_ANOMALY_TOOLTIPS : SIX_TOOLTIPS);\n        }\n    }\n}\n","module.exports = \"<div class=\\\"vis-container\\\">\\n    <div class=\\\"vis-working\\\" *ngIf=\\\"selection.working\\\">\\n        <npn-logo spin=\\\"false\\\"></npn-logo>\\n    </div>\\n    <div class=\\\"map-wrapper\\\">\\n        <agm-map (mapReady)=\\\"mapReady($event)\\\"  [streetViewControl]=\\\"false\\\"  [styles]=\\\"mapStyles\\\" [scrollwheel]=\\\"false\\\"></agm-map>\\n        <map-layer-legend *ngIf=\\\"!thumbnail && selection.legend && selection.data && selection.data.statistics && selection.data.statistics.count !== 0\\\" [legend]=\\\"selection.legend\\\"></map-layer-legend>\\n        <clipped-wms-map-statistics *ngIf=\\\"!thumbnail && selection && selection.data && selection.data.statistics\\\"\\n            [selection]=\\\"selection\\\"></clipped-wms-map-statistics>\\n    </div>\\n    <supports-opacity-control *ngIf=\\\"!thumbnail\\\" [supportsOpacity]=\\\"selection.overlay\\\"></supports-opacity-control>\\n</div>\\n\"","module.exports = \".vis-container {\\n  display: block;\\n  position: relative; }\\n  .vis-container agm-map {\\n    /*\\n        encapsulation: ViewEncapsulation.None or this rule won't be able to apply\\n        */ }\\n  .vis-container agm-map img[src*=usanpn] {\\n      -ms-interpolation-mode: nearest-neighbor;\\n          image-rendering: pixelated;\\n      image-rendering: -moz-crisp-edges; }\\n  .map-wrapper {\\n  position: relative; }\\n  .map-wrapper map-layer-legend .gridded-legend {\\n    margin-top: 10px;\\n    border-bottom: 1px solid #aaa; }\\n  @media (min-width: 992px) {\\n    .map-wrapper map-layer-legend,\\n    .map-wrapper clipped-wms-map-statistics {\\n      position: absolute;\\n      left: 10px;\\n      padding: 8px;\\n      border: 1px solid #aaa;\\n      background-color: rgba(255, 255, 255, 0.85);\\n      border-radius: 5px; }\\n    .map-wrapper map-layer-legend {\\n      bottom: 25px;\\n      width: 60%; }\\n      .map-wrapper map-layer-legend .gridded-legend {\\n        margin-top: 0px;\\n        border-bottom: none;\\n        width: 100%;\\n        height: 125px;\\n        border: none; }\\n    .map-wrapper clipped-wms-map-statistics {\\n      top: 10px; } }\\n\"","import {Component,Input,ElementRef, ViewEncapsulation} from '@angular/core';\nimport { ObservableMedia } from \"@angular/flex-layout\";\n\nimport {MapVisualizationBaseComponent} from '../map-visualization-base.component';\n\nimport {ClippedWmsMapSelection} from './clipped-wms-map-selection';\n\n@Component({\n    selector: 'clipped-wms-map',\n    templateUrl: './clipped-wms-map.component.html',\n    styleUrls: ['./clipped-wms-map.component.scss'],\n    encapsulation: ViewEncapsulation.None\n})\nexport class ClippedWmsMapComponent extends MapVisualizationBaseComponent {\n    @Input() selection: ClippedWmsMapSelection;\n\n    constructor(protected rootElement: ElementRef, protected media: ObservableMedia) {\n        super(rootElement,media);\n    }\n\n    mapReady(map:google.maps.Map): void {\n        this.getMapResolver(map);\n    }\n\n    protected reset():void {\n        this.getMap().then(m => {\n            this.selection.removeFrom(m)\n                .then(() => {\n                    super.reset();\n                });\n        });\n    }\n\n    protected update():void {\n        this.resize();\n        this.getMap().then(m => {\n            this.selection.removeFrom(m)\n                .then(() => {\n                    this.selection.addTo(m)\n                });\n        });\n    }\n\n    protected resize():void {\n        super.resize();\n        this.getMap().then(m => this.selection.resizeMap(m));\n    }\n}\n","export * from './public_api';","export { ClippedWmsMapSelection } from './clipped-wms-map-selection';\nexport { ClippedWmsMapSelectionFactory } from './clipped-wms-map-selection-factory';\nexport { ClippedWmsMapControl } from './clipped-wms-map-control.component';\nexport { ClippedWmsMapComponent } from './clipped-wms-map.component';\nexport { ClippedWmsMapStatisticsComponent, ClippedStatValuePipe } from './clipped-wms-map-statistics.component';\n","import { Component, Output, EventEmitter, Input, SimpleChanges } from '@angular/core';\nimport { FormControl, FormGroup, Validators } from '@angular/forms';\nimport { VisSelection, StationAwareVisSelection, NetworkAwareVisSelection } from '../vis-selection';\nimport { Subject, Observable, from, combineLatest, of } from 'rxjs';\nimport { switchMap, map, takeUntil, debounceTime, filter, tap } from 'rxjs/operators';\nimport { MonitorsDestroy,\n         SpeciesService,\n         SpeciesPlot,\n         TaxonomicSpeciesRank,\n         SpeciesTaxonomicInfo,\n         PhenophaseTaxonomicInfo,\n         TaxonomicSpeciesTitlePipe,\n         TaxonomicPhenophaseRank,\n         STATIC_COLORS } from '../../common';\nimport { HttpParams } from '@angular/common/http';\nimport { faInfoCircle } from '@fortawesome/pro-light-svg-icons';\n\nexport interface HigherSpeciesPhenophaseInputCriteria {\n    years?: number[];\n    stationIds?: Promise<number []>;\n}\n\n/**\n * Filtering of applicable species is based upon the `criteria` input.\n */\n@Component({\n    selector: 'higher-species-phenophase-input',\n    template: `\n    <mat-form-field class=\"species-rank-input\">\n        <mat-select [placeholder]=\"speciesTaxRankPlaceholder\" [formControl]=\"speciesRank\">\n            <mat-option *ngFor=\"let r of speciesRanks\" [value]=\"r.rank\">{{r.label}}</mat-option>\n        </mat-select>\n    </mat-form-field>\n    <mat-form-field class=\"species-input\">\n        <input matInput [placeholder]=\"speciesPlaceholder\" aria-label=\"Species\"\n            [matAutocomplete]=\"sp\"\n            [formControl]=\"species\" (focus)=\"speciesFocus()\" />\n        <mat-autocomplete #sp=\"matAutocomplete\" [displayWith]=\"speciesLabel\">\n            <mat-option *ngFor=\"let o of $filteredSpeciesList | async\" [value]=\"o.item\">\n              {{o.label}}\n            </mat-option>\n        </mat-autocomplete>\n        <mat-progress-bar *ngIf=\"fetchingSpeciesList\" mode=\"query\"></mat-progress-bar>\n        <mat-hint *ngIf=\"showSpeciesHint\" align=\"end\"><fa-icon [icon]=\"hintIcon\" [matTooltip]=\"speciesHint\"></fa-icon></mat-hint>\n    </mat-form-field>\n    <mat-form-field class=\"pheno-input\">\n        <mat-select [placeholder]=\"phenophasePlaceholder\" [formControl]=\"phenophase\">\n            <mat-option *ngFor=\"let o of phenophaseList\" [value]=\"o.item\">{{o.label}}</mat-option>\n        </mat-select>\n        <mat-progress-bar *ngIf=\"fetchingPhenophaseList\" mode=\"query\"></mat-progress-bar>\n        <mat-hint *ngIf=\"phenophaseHint\" align=\"end\"><fa-icon [icon]=\"hintIcon\" [matTooltip]=\"phenophaseHint\"></fa-icon></mat-hint>\n    </mat-form-field>\n    <mat-form-field *ngIf=\"actuallyGatherColor\" class=\"color-input\">\n        <mat-select  [placeholder]=\"colorPlaceholder\" [formControl]=\"color\">\n        <mat-select-trigger><div class=\"color-swatch\" [ngStyle]=\"{'background-color':color.value}\"></div></mat-select-trigger>\n        <mat-option *ngFor=\"let c of colorList\" [value]=\"c\"><div class=\"color-swatch\" [ngStyle]=\"{'background-color':c}\"></div></mat-option>\n        </mat-select>\n    </mat-form-field>\n<pre *ngIf=\"debug\">\nspecies={{speciesTaxInfo?.species.length | number}} classes={{speciesTaxInfo?.classes.length | number}} orders={{speciesTaxInfo?.orders.length | number}} families={{speciesTaxInfo?.families.length | number}}\nphenophases={{phenophaseTaxInfo?.phenophases.length | number}} classes={{phenophaseTaxInfo?.classes.length | number}}\n</pre>\n    `,\n    styles:[`\n    .color-swatch {\n        display: inline-block;\n        width: 20px;\n        height: 20px;\n    }\n    .color-input {\n        width: 70px;\n    }\n    `]\n})\nexport class HigherSpeciesPhenophaseInputComponent extends MonitorsDestroy {\n    @Input() required:boolean = true;\n    @Input() disabled:boolean = false;\n    \n    private criteriaUpdate:Subject<HigherSpeciesPhenophaseInputCriteria> = new Subject();\n    _criteria:HigherSpeciesPhenophaseInputCriteria;\n\n    @Input() debug:boolean = false;\n    @Input() selection:VisSelection; // for access to network args\n    @Input() plot:SpeciesPlot;\n    @Output() plotChange = new EventEmitter<SpeciesPlot>();\n\n    speciesRank:FormControl = new FormControl();\n    speciesRanks = [{\n        label: 'Species',\n        rank: TaxonomicSpeciesRank.SPECIES\n    },{\n        label: 'Genus',\n        rank: TaxonomicSpeciesRank.GENUS\n    },{\n        label: 'Family',\n        rank: TaxonomicSpeciesRank.FAMILY\n    },{\n        label: 'Order',\n        rank: TaxonomicSpeciesRank.ORDER\n    },{\n        label: 'Class',\n        rank: TaxonomicSpeciesRank.CLASS\n    }\n    ];\n    species:FormControl = new FormControl();\n    fetchingSpeciesList:boolean = false;\n    speciesList:any[];\n    $filteredSpeciesList:Observable<any []>;\n    speciesLabel; // closure for translating species items to strings.\n    speciesTaxInfo:SpeciesTaxonomicInfo; // just for debug purposes\n\n    phenophase:FormControl = new FormControl();\n    fetchingPhenophaseList:boolean = false;\n    phenophaseList:any[];\n    phenophaseHint;\n    phenophaseTaxInfo:PhenophaseTaxonomicInfo; // just for debug purposes\n\n    ignoreGatherColor:boolean = false;\n    /**\n     * Whether or not to gather color and set on the plot\n     * This input is ignored if the selection is an instanceof NetworkAwareVisSelection\n     * and is using grouping.  In that scenario visualizations will need to calculate\n     * colors based on groups.length*plots.length.\n     */\n    @Input() gatherColor:boolean = false;\n    color:FormControl = new FormControl();\n    colorList:string[] = STATIC_COLORS;\n\n    private group:FormGroup;\n\n    hintIcon = faInfoCircle;\n\n    constructor(\n        private speciesService:SpeciesService,\n        public speciesTitle:TaxonomicSpeciesTitlePipe\n    ) {\n        super();\n        this.speciesLabel = item => this.speciesTitle.transform(item,this.speciesRank.value);\n    }\n\n    ngOnInit() {\n        this.criteriaUpdate\n            .pipe(takeUntil(this.componentDestroyed))\n            .subscribe(() => this.ignoreGatherColor =\n                (this.selection instanceof NetworkAwareVisSelection &&\n                 !!this.selection.groups &&\n                 this.selection.groups.length > 0));\n\n        const $speciesTaxonomicInfo:Observable<SpeciesTaxonomicInfo> = this.criteriaUpdate.pipe(\n            tap(() => this.fetchingSpeciesList = true),\n            switchMap(criteria => from((criteria.stationIds||Promise.resolve([])).then(stationIds => {\n                        let params = new HttpParams();\n                        (stationIds||[]).forEach((id,idx) => params = params.set(`station_ids[${idx}]`,`${id}`))\n                        return params;\n                    })).pipe(\n                        switchMap(params => {\n                            /*\n                            IMPORTANT: the network_id/person_id parameters are being added here to cover a special case when the\n                            vis tool is opened restricted to a network (groupId) or individual (personId).  The application very\n                            intentionally does not typically use these request parameters but translates results to lists of stations\n                            instead to support geographic boundaries.  Doing this creates a situation where a visitor _could_ more\n                            easily create a selection that results in no data on a visualization if they are using boundaries that do\n                            not intersect with the location of their stations.  This is assumed acceptable since they will either not\n                            use boundaries or know where their sites are located and draw boundaries accordingly...\n                             */\n                            if(this.selection instanceof StationAwareVisSelection) {\n                                const {groupId,personId} = this.selection;\n                                if(!!groupId) {\n                                    params = params.set('network_id', groupId);\n                                }\n                                if(!!personId) {\n                                    params = params.set('person_id', personId);\n                                }\n                            }\n                            return this.speciesService.getAllSpeciesHigher(params,criteria.years);\n                        })\n                    )),\n            tap(() => this.fetchingSpeciesList = false)\n        );\n\n        combineLatest(\n            this.speciesRank.valueChanges,\n            $speciesTaxonomicInfo\n        ).pipe(\n            filter(input => !!input[0] && !!input[1]),\n            map(input => {\n                const [rank,info] = input;\n                this.speciesTaxInfo = info;\nconsole.log('speciesTaxInfo',info);\n                switch(rank) {\n                    case TaxonomicSpeciesRank.SPECIES:\n                        return info.species;\n                    case TaxonomicSpeciesRank.CLASS:\n                        return info.classes;\n                    case TaxonomicSpeciesRank.ORDER:\n                        return info.orders;\n                    case TaxonomicSpeciesRank.FAMILY:\n                        return info.families;\n                    case TaxonomicSpeciesRank.GENUS:\n                        return info.genera; // TODO: make sure this works, KW just made genus plural\n                }\n                throw new Error(`Invalid species rank \"${rank}\"`);\n            }),\n            takeUntil(this.componentDestroyed)\n        ).subscribe((list:any[]) => {\n            const rank = this.speciesRank.value as TaxonomicSpeciesRank;\n            const species = this.species.value as any;\n            this.speciesList = list.map(item => {\n                const label = this.speciesLabel(item);\n                const lower = label.toLowerCase();\n                return {item,label,lower};\n            });\n            if(rank !== TaxonomicSpeciesRank.SPECIES) {\n                this.speciesList.sort((a,b) => a.label.localeCompare(b.label));\n            }\n            this.$filteredSpeciesList = this.species.valueChanges.pipe(\n                debounceTime(500),\n                filter(s => typeof(s) === 'string'),\n                map(s => {\n                    if(s && this.speciesList) {\n                        s = s.trim().toLowerCase();\n                        return this.speciesList.filter(o => o.lower.indexOf(s) !== -1);\n                    }\n                    return this.speciesList\n                        ? this.speciesList.slice()\n                        : [];\n                })\n            );\n            // clear the current value if it is no longer valid\n            if(species) {\n                switch(rank) {\n                    case TaxonomicSpeciesRank.SPECIES:\n                        if(!species.species_id) {\n                            this.species.setValue(null);\n                        }\n                        break;\n                    case TaxonomicSpeciesRank.CLASS:\n                        if(!species.class_id || !!species.species_id) {\n                            this.species.setValue(null);\n                        }\n                        break;\n                    case TaxonomicSpeciesRank.ORDER:\n                        if(!species.order_id || !!species.species_id) {\n                            this.species.setValue(null);\n                        }\n                        break;\n                    case TaxonomicSpeciesRank.FAMILY:\n                        if(!species.family_id || !!species.species_id) {\n                            this.species.setValue(null);\n                        }\n                        break;\n                    case TaxonomicSpeciesRank.GENUS:\n                        if(!species.genus_id || !!species.species_id) {\n                            this.species.setValue(null);\n                        }\n                        break;\n                }\n            } else {\n                this.species.setValue(null);\n            }\n        });\n\n        // whenever species changes go update the available phenophases/classes\n        // TODO deal with station_ids?\n        const $phenophaseTaxInfo:Observable<PhenophaseTaxonomicInfo> = combineLatest(\n            this.species.valueChanges,\n            this.criteriaUpdate.pipe(debounceTime(500)),\n        ).pipe(\n            tap(() => this.fetchingPhenophaseList = true),\n            switchMap(input => {\nconsole.log('$phenophaseTaxInfo.input',input);\n                const [species,criteria] = input;\n                return !!species && typeof(species) === 'object'\n                ? from(\n                    (criteria.years && criteria.years.length\n                    ? this.speciesService.getPhenodefinitionsForYears(species,this.speciesRank.value,criteria.years)\n                    : this.speciesService.getAllPhenodefinitions(species,this.speciesRank.value))\n                    .then(phenos => this.speciesService.generatePhenophaseTaxonomicInfo(phenos)))\n                : of(null)\n            }),\n            tap(() => this.fetchingPhenophaseList = false),\n        );\n\n        // when the in\n        const $phenoListChange = $phenophaseTaxInfo.pipe(\n            map(info => {\n                this.phenophaseTaxInfo = info\n                if(info) {\nconsole.log('phenophaseTaxInfo',info);\n                    return info.classes.map(item => ({\n                        item,\n                        label: item.pheno_class_name\n                    }));\n                }\n                return [];\n            }),\n            tap(list => this.phenophaseList = list),\n            takeUntil(this.componentDestroyed),\n        );\n\n        //  species or list of phenophases changed, need to check validity of phenophase if set\n        combineLatest(\n            this.species.valueChanges,\n            $phenoListChange\n        ).pipe(\n            takeUntil(this.componentDestroyed)\n        ).subscribe(input => {\n            const [species,phenoList] = input;\n            if(!species) {\n                if(this.phenophase.enabled) {\n                    this.phenophase.disable({emitEvent:false});\n                }\n                return this.phenophase.setValue(null);\n            }\n            if(this.phenophase.disabled) {\n                this.phenophase.enable({emitEvent:false});\n            }\n            const phenophase = this.phenophase.value;\n            if(phenophase && phenoList.length) {\n                const key = 'pheno_class_id';\n                const id = phenophase[key];\n                //console.log(`check pheno validity id=${id}`,phenophase,phenoList);\n                if(!id) { // can't be valid, rank changed\n                    return this.phenophase.setValue(null);\n                }\n                const valid = (phenoList as any[]).reduce((found,i) => (found||(i.item[key] === id ? i : null)),null);\n                this.phenophase.setValue(valid ? valid.item : null);\n            }\n        });\n       \n        this.speciesRank.setValue((this.plot ? this.plot.speciesRank : null)||TaxonomicSpeciesRank.SPECIES);\n        this.species.setValue(this.plot ? this.plot.species : null);\n        this.phenophase.setValue(this.plot ? this.plot.phenophase : null);\n        this.color.setValue(this.plot ? this.plot.color : null);\n\n        combineLatest(\n            this.phenophase.valueChanges,\n            $phenophaseTaxInfo\n        ).pipe(\n            takeUntil(this.componentDestroyed)\n        ).subscribe((input:any[]) => {\n            const [pheno,list] = input;\n            this.phenophaseHint = (!!pheno && !!list && !!list.phenophases && list.phenophases.length)\n                ? ('Phenophases included: ' + list.phenophases\n                    .filter(pp => pheno.pheno_class_id == pp.pheno_class_id) // phenophases of class\n                    .sort((a,b) => a.seq_num - b.seq_num)\n                    .map(pp => pp.phenophase_name.trim()) // map t name\n                    .reduce((arr,ppn) => { // eliminate any duplicate names\n                        if(arr.indexOf(ppn) === -1) {\n                            arr.push(ppn);\n                        }\n                        return arr;\n                    },[])\n                    .join(', '))\n                : undefined;\n        });\n\n        // gather up any input changes and propagate them outward\n        this.group = new FormGroup({\n            speciesRank: this.speciesRank,\n            species: this.species,\n            phenophase: this.phenophase,\n            color: this.color,\n        });\n        this.checkDisabled();\n        this.checkRequired();\n        this.criteriaUpdate.next(this.criteria||{});\n        this.group.valueChanges\n            .pipe(\n                //tap(v => console.log('selection changed',v)),\n                // TODO expand the condition that decides when a plot is complete...\n                map(v => !!v.speciesRank && !!v.species && typeof(v.species) === 'object'\n                    && !!v.phenophase\n                    && (!this.actuallyGatherColor || !!v.color)\n                    ? v\n                    : null\n                ),\n                takeUntil(this.componentDestroyed)\n            )\n            .subscribe(v => {\n                //setTimeout(() => {\n                    // edit the plot in place, it may be a class\n                    this.plot.speciesRank = v ? v.speciesRank : null;\n                    this.plot.species = v ? v.species : null;\n                    this.plot.phenophaseRank = TaxonomicPhenophaseRank.CLASS;\n                    this.plot.phenophase = v ? v.phenophase : null;\n                    if(this.actuallyGatherColor) {\n                        this.plot.color = v ? v.color : null;\n                    } else {\n                        delete this.plot.color; // just to be safe, mostly stesting\n                    }\n                    this.plotChange.next(this.plot);\n                //});\n            });\n    }\n\n    @Input()\n    set criteria(c:HigherSpeciesPhenophaseInputCriteria) {\n        this.criteriaUpdate.next(this._criteria = c);\n    }\n\n    get criteria():HigherSpeciesPhenophaseInputCriteria {\n        return this._criteria;\n    }\n\n    checkDisabled() {\n        if(this.group) {\n            if(this.disabled) {\n                this.group.disable();\n            } else {\n                this.group.enable();\n            }\n        }\n    }\n\n    checkRequired() {\n        if(this.group) {\n            const validators = this.required\n                ? [Validators.required]\n                : null;\n            Object.keys(this.group.controls).forEach(key => this.group.controls[key].setValidators(validators));\n            this.group.updateValueAndValidity();\n        }\n    }\n\n    ngOnChanges(changes:SimpleChanges) {\n        if(changes.disabled) {\n            this.checkDisabled();\n        }\n        if(changes.required) {\n            this.checkRequired();\n        }\n    }\n\n    ngOnDestroy() {\n        super.ngOnDestroy();\n        this.criteriaUpdate.complete();\n    }\n\n    get speciesTaxRankPlaceholder():string {\n        return 'Taxonomic rank'+(this.required ? ' *' : '');\n    }\n\n    get speciesPlaceholder():string {\n        const rank = this.speciesRank\n            ? this.speciesRank.value as TaxonomicSpeciesRank\n            : TaxonomicSpeciesRank.SPECIES;\n        let label;\n        switch(rank) {\n            case TaxonomicSpeciesRank.SPECIES:\n                label = 'Species';\n                break;\n            case TaxonomicSpeciesRank.CLASS:\n                label = 'Class';\n                break;\n            case TaxonomicSpeciesRank.ORDER:\n                label = 'Order';\n                break;\n            case TaxonomicSpeciesRank.FAMILY:\n                label = 'Family';\n                break;\n            case TaxonomicSpeciesRank.GENUS:\n                label = 'Genus';\n                break;\n        }\n        return label + (!this.fetchingPhenophaseList && (this.speciesList||[]).length ? ` (${(this.speciesList||[]).length})` : '') + (this.required ? ' *' : '');\n    }\n\n    get phenophasePlaceholder():string {\n        return 'Phenophase class' /*+ ((this.phenophaseList||[]).length ? ` (${(this.phenophaseList||[]).length})`: '')*/ + (this.required ? ' *' : '');\n    }\n\n    get actuallyGatherColor():boolean {\n        return this.gatherColor && !this.ignoreGatherColor;\n    }\n\n    get colorPlaceholder():string {\n        return 'Color'+(this.required ? ' *' : '');\n    }\n\n    speciesFocus() {\n        if(!this.species.value) {\n            this.species.setValue(' ');\n        }\n    }\n\n    get showSpeciesHint():boolean {\n        const rank = this.speciesRank.value;\n        const s = this.species.value;\n        return rank === TaxonomicSpeciesRank.SPECIES && !!s\n            && (typeof(s.class_common_name) === 'string' && typeof(s.class_name) === 'string')\n            && (typeof(s.order_common_name) === 'string' && typeof(s.order_name) === 'string')\n            && (typeof(s.family_common_name) === 'string' && typeof(s.family_name) === 'string');\n    }\n\n    get speciesHint():string {\n        const species = this.species.value;\n        const classDisplay = this.speciesTitle.transform(species,TaxonomicSpeciesRank.CLASS);\n        const orderDisplay = this.speciesTitle.transform(species,TaxonomicSpeciesRank.ORDER);\n        const familyDisplay = this.speciesTitle.transform(species,TaxonomicSpeciesRank.FAMILY);\n        const genusDisplay = this.speciesTitle.transform(species,TaxonomicSpeciesRank.GENUS);\n        return `Class: \"${classDisplay}\" Order: \"${orderDisplay}\" Family: \"${familyDisplay}\" Genus: \"${genusDisplay}`;\n    }\n\n}","export * from './public_api';","export * from './year-range-input.component';\nexport * from './higher-species-phenophase-input.component';\n","import {Component,Input,Output,EventEmitter,OnInit} from '@angular/core';\nimport { CURRENT_YEAR, CURRENT_YEAR_LABEL } from '../../common';\n\n@Component({\n    selector: 'year-range-input',\n    template: `\n    <mat-form-field class=\"start-year\">\n        <mat-select placeholder=\"Start year\" [(ngModel)]=\"start\">\n            <mat-option *ngFor=\"let y of validStarts\" [value]=\"y\">{{y}}</mat-option>\n        </mat-select>\n    </mat-form-field>\n    <mat-form-field class=\"end-year\">\n        <mat-select placeholder=\"End year\" [(ngModel)]=\"end\" [disabled]=\"!start\">\n            <mat-option *ngFor=\"let y of validEnds\" [value]=\"y\">{{y === CURRENT_YEAR ? CURRENT_YEAR_LABEL : y}}</mat-option>\n        </mat-select>\n    </mat-form-field>\n    `,\n    styles:[`\n        .start-year {\n            width: 75px;\n        }\n        .end-year {\n            width: 90px;\n        }\n        mat-form-field {\n            padding-right: 10px;\n        }\n    `]\n})\nexport class YearRangeInputComponent {\n    @Output() startChange = new EventEmitter<number>();\n    startValue:number;\n    @Output() onStartChange = new EventEmitter<any>();\n\n    @Output() endChange = new EventEmitter<number>();\n    endValue:number;\n    @Output() onEndChange = new EventEmitter<any>();\n\n    @Input()\n    maxSpan:number = 10;\n    @Input()\n    allowCurrentYear:boolean = false;\n    CURRENT_YEAR = CURRENT_YEAR;\n    CURRENT_YEAR_LABEL = CURRENT_YEAR_LABEL;\n\n    validStarts:number[] = (function(){\n        let max = (new Date()).getFullYear(),\n            current = 1900,\n            years:number[] = [];\n        while(current <= max) {\n            years.push(current++);\n        }\n        return years.reverse();\n    })();\n    validEnds:number[] = [];\n\n    @Input()\n    get start() {\n        return this.startValue;\n    }\n    set start(s:number) {\n        if(typeof(s) === 'string') {\n            s = +s;\n        }\n        if(s !== this.startValue) {\n            let oldValue = this.startValue;\n            this.startChange.emit(this.startValue = s);\n            this.onStartChange.emit({\n                oldValue: oldValue,\n                newValue: this.startValue\n            });\n            if(s) {\n                let thisYear = (new Date()).getFullYear(),\n                    current = s,//+1,\n                    max = current+this.maxSpan,\n                    ends:number[] = [];\n                if(max > thisYear) {\n                    max = thisYear+1;\n                }\n                while(current < max) {\n                    ends.push(current++);\n                }\n                if(this.allowCurrentYear) {\n                    ends.push(CURRENT_YEAR);\n                }\n                this.validEnds = ends.reverse();\n                // if(this.end > max) {\n                //     this.end = undefined;\n                // }\n            }\n        }\n    }\n\n    @Input()\n    get end() {\n        return this.endValue;\n    }\n    set end(e:number) {\n        if(typeof(e) === 'string') {\n            e = +e;\n        }\n        if(e !== this.endValue) {\n            let oldValue = this.endValue;\n            this.endChange.emit(this.endValue = e);\n            this.onEndChange.emit({\n                oldValue: oldValue,\n                newValue: this.endValue\n            });\n        }\n    }\n\n}\n","export * from './public_api';","import { Component } from '@angular/core';\n\nimport { VisSelection, VisSelectionEvent } from './vis-selection';\nimport { VisualizationBaseComponent, VisualizationSizing, VisualizationMargins } from './visualization-base.component';\nimport { MAP_STYLES } from '../gridded';\n\n/*\nIMPORTANT: see not in VisualizationBaseComponent\n\n@Component({\n  selector: 'map-visualization-base',\n  templateUrl: './map-visualization-base.component.html',\n  styleUrls: ['./map-visualization-base.component.scss']\n})\n*/\nexport class MapVisualizationBaseComponent extends VisualizationBaseComponent {\n    protected latitude: number = 38.8402805;\n    protected longitude: number = -97.61142369999999\n    protected zoom: number = 4;\n\n    protected getMapResolver;\n    protected getMapPromise = new Promise<google.maps.Map>(resolve => {\n        this.getMapResolver = resolve;\n    });\n\n    mapStyles: any[] = MAP_STYLES;\n\n    mapReady(map: google.maps.Map): void {\n        map.addListener('resize', () => {\n            console.log('resize happened');\n            console.log('panning to center');\n            map.setZoom(3);\n            setTimeout(() => {\n                map.panTo(new google.maps.LatLng(this.latitude, this.longitude));\n                map.setZoom(this.zoom);\n            }, 500);\n        });\n        this.getMapResolver(map);\n    }\n\n    getMap(): Promise<google.maps.Map> {\n        return this.getMapPromise;\n    }\n\n    protected resize(): void {\n        this.getMap().then(map => {\n            let sizing = this.getSizeInfo(),\n                root = this.rootElement.nativeElement as HTMLElement,\n                mapElm = root.querySelector('agm-map') as HTMLElement;\n            mapElm.style.width = `${sizing.width}px`;\n            mapElm.style.height = `${sizing.height}px`;\n            google.maps.event.trigger(map, 'resize');\n        });\n    }\n\n    protected reset(): void {\n        this.getMap().then(map => {\n            console.log('Map reset', map);\n            map.panTo(new google.maps.LatLng(this.latitude, this.longitude));\n            map.setZoom(this.zoom);\n        });\n    }\n\n    protected redraw(): void {\n        this.getMap().then(map => {\n            console.log('Map redraw', map);\n        });\n    }\n    protected update(): void {\n        this.resize();\n        this.getMap().then(map => {\n            console.log('Map update', map);\n        });\n    }\n}\n","import { Component, Input, ViewChild, ViewEncapsulation } from '@angular/core';\nimport { MapSelection } from './map-selection';\nimport {\n    NpnMapLayerService,\n    MapLayerDefs,\n    CATEGORY_PEST,\n    MapLayerDefinition,\n    CATEGORY_TEMP_ACCUM_30_YR_AVG,\n    CATEGORY_TEMP_ACCUM_CURRENT_AK,\n    CATEGORY_TEMP_ACCUM_CURRENT,\n    CATEGORY_TEMP_ACCUM_DAILY_ANOM,\n    CATEGORY_SIX_HIST_ANNUAL,\n    CATEGORY_SIX_CURRENT_YEAR_AK,\n    CATEGORY_SIX_CURRENT_YEAR,\n    CATEGORY_SIX_DAILY_ANOM,\n    CATEGORY_SIX_30_YR_AVG\n} from '@npn/common/gridded';\nimport { FormControl } from '@angular/forms';\nimport { merge } from 'rxjs';\nimport { startWith, takeUntil, debounceTime } from 'rxjs/operators';\nimport { MonitorsDestroy } from '@npn/common/common';\nimport { GriddedRangeSliderControl } from './gridded-range-slider-control.component';\n\n// these components were written for the map visualization\n// but they overlap in functionality with the AGDD Time Series\n// requirements so as opposed to using MapSelection|AgddTimeSeriesSelection\n// for the shared controls using a separate interface\n// just so that it's clear (not using Agdd here to avoid circular dependencies).\ninterface HasLayerVisSelection {\n    layerName:string;\n    redraw: () => void;\n    center?: number[];\n}\n\nconst CATEGORY_PESTS = CATEGORY_PEST;\nconst CATEGORY_TEMP_ACCUMULATIONS = 'Daily Temperature Accumulations';\nconst CATEGORY_SPRING_INDICES = 'Spring Indices';\n\n@Component({\n    selector: 'consolidated-map-layer-control',\n    template: `\n    <mat-form-field class=\"layer-category\">\n        <mat-select placeholder=\"Layer category\" [(ngModel)]=\"selection.layerCategory\">\n            <mat-option [value]=\"null\">None</mat-option>\n            <mat-option [value]=\"CATEGORY_PESTS\">{{CATEGORY_PESTS}}</mat-option>\n            <mat-option [value]=\"CATEGORY_TEMP_ACCUMULATIONS\">{{CATEGORY_TEMP_ACCUMULATIONS}}</mat-option>\n            <mat-option [value]=\"CATEGORY_SPRING_INDICES\">{{CATEGORY_SPRING_INDICES}}</mat-option>\n        </mat-select>\n    </mat-form-field>\n    <div [ngSwitch]=\"selection.layerCategory\" *ngIf=\"selection.layerCategory && layerDefinitions\">\n        <pest-map-layer-control *ngSwitchCase=\"CATEGORY_PESTS\" [selection]=\"selection\" [layerDefinitions]=\"layerDefinitions\"></pest-map-layer-control>\n        <temp-accum-map-layer-control *ngSwitchCase=\"CATEGORY_TEMP_ACCUMULATIONS\" [selection]=\"selection\" [layerDefinitions]=\"layerDefinitions\"></temp-accum-map-layer-control>\n        <spring-index-map-layer-control *ngSwitchCase=\"CATEGORY_SPRING_INDICES\" [selection]=\"selection\" [layerDefinitions]=\"layerDefinitions\"></spring-index-map-layer-control>\n    </div>\n    <div *ngIf=\"selection.layer\" class=\"layer-controls\">\n        <extent-control [selection]=\"selection\"></extent-control>\n        <supports-opacity-control [supportsOpacity]=\"selection\"></supports-opacity-control>\n        <gridded-range-slider [selection]=\"selection\"></gridded-range-slider>\n        <p *ngIf=\"selection.layer.hasAbstract()\" [innerHTML]=\"selection.layer.getAbstract()\"></p>\n    </div>\n    `,\n    styles:[`\n    :host {\n        display: block;\n    }\n    mat-form-field.layer-category {\n        display: block;\n    }\n    .layer-controls {\n        width: 400px;\n    }\n    .layer-controls >p {\n        margin: 12px 0px 0px 0px;\n    }\n    `],\n    encapsulation: ViewEncapsulation.None\n})\nexport class ConsolidatedMapLayerControlComponent {\n    @Input() selection:MapSelection;\n    layerDefinitions:MapLayerDefs;\n    @ViewChild(GriddedRangeSliderControl) rangeSlider:GriddedRangeSliderControl;\n\n    CATEGORY_PESTS = CATEGORY_PESTS;\n    CATEGORY_TEMP_ACCUMULATIONS = CATEGORY_TEMP_ACCUMULATIONS;\n    CATEGORY_SPRING_INDICES = CATEGORY_SPRING_INDICES;\n\n    constructor(\n        private layerService:NpnMapLayerService\n    ) {}\n\n    ngOnInit() {\n        this.layerService.getLayerDefinitions().then((defs:MapLayerDefs) => this.layerDefinitions = defs);\n    }\n}\n\n@Component({\n    selector: 'pest-map-layer-control',\n    template: `\n    <mat-form-field>\n        <mat-select placeholder=\"Phenoforecast\" [(ngModel)]=\"selection.layerName\" (selectionChange)=\"selection.redraw()\">\n            <mat-option *ngFor=\"let l of layers\" [value]=\"l.name\">{{l.title}}</mat-option>\n        </mat-select>\n    </mat-form-field>\n    `,\n    styles: [`\n    mat-form-field {\n        display: block;\n    }\n    `]\n})\nexport class PestMapLayerControlComponent {\n    @Input() selection:HasLayerVisSelection;\n    @Input() layerDefinitions:MapLayerDefs;\n\n    layers:MapLayerDefinition[];\n\n    ngOnInit() {\n        this.layers = this.layerDefinitions.categories.find(c => c.name === CATEGORY_PEST).layers;\n        if(!this.selection.layerName) {\n            this.selection.layerName = this.layers[0].name;\n            this.selection.redraw();\n        }\n    }\n}\n\nconst LOWER_44_CENTER:number[] = [38.535680, -99.248833];\nconst AK_CENTER:number[] = [64.559308, -141.465422];\n\nenum TEMP_ACCUM_BASE {\n    DAILY_30Y_AVG = 'Daily 30-year Average',\n    CUR_DAY = 'Current Day',\n    DAILY_ANOM = 'Daily Anomaly'\n}\n@Component({\n    selector: 'temp-accum-map-layer-control',\n    template: `\n    <div class=\"base-ak\">\n        <mat-form-field class=\"base-layer\">\n            <mat-select placeholder=\"Layer\" [formControl]=\"baseLayer\">\n                <mat-option *ngFor=\"let b of baseOpts\" [value]=\"b\">{{b}}</mat-option>\n            </mat-select>\n        </mat-form-field>\n        <mat-checkbox *ngIf=\"!!alaska\" [formControl]=\"alaska\">Alaska</mat-checkbox>\n    </div>\n    <mat-form-field>\n        <mat-select placeholder=\"Degree base\" [formControl]=\"degreeBase\">\n            <mat-option [value]=\"32\">32 &deg;</mat-option>\n            <mat-option [value]=\"50\">50 &deg;</mat-option>\n        </mat-select>\n    </mat-form-field>   \n    `,\n    styles:[`\n    :host {\n        display: block;\n    }\n    .base-ak {\n        display:flex;\n        align-items: center;\n    }\n    .base-layer {\n        padding-right: 10px;\n        flex-grow: 1;\n    }\n    `]\n})\nexport class TempAccumMapLayerControlComponent extends MonitorsDestroy {\n    @Input() selection:HasLayerVisSelection;\n    @Input() layerDefinitions:MapLayerDefs;\n    @Input() agddTimeSeries:boolean = false;\n\n    baseLayer:FormControl;\n    baseOpts = [TEMP_ACCUM_BASE.DAILY_30Y_AVG,TEMP_ACCUM_BASE.CUR_DAY,TEMP_ACCUM_BASE.DAILY_ANOM];\n    degreeBase:FormControl;\n    alaska:FormControl;\n\n    ngOnInit() {\n        const categories = this.layerDefinitions.categories.reduce((map,cat) => (map[cat.name] = cat) && map,{});\n        //console.log('TempAccumMapLayerControlComponent: TEMP ACCUM CATEGORIES',categories);\n        let initBaseValue = TEMP_ACCUM_BASE.DAILY_30Y_AVG;\n        let initDegValue = 32;\n        let initAkValue = false;\n        const initLayerName = this.selection.layerName;\n        if(initLayerName) {\n            // re-build values based on which layer was selected\n            const initCatName = [\n                CATEGORY_TEMP_ACCUM_30_YR_AVG,\n                CATEGORY_TEMP_ACCUM_CURRENT_AK,\n                CATEGORY_TEMP_ACCUM_CURRENT,\n                CATEGORY_TEMP_ACCUM_DAILY_ANOM\n            ].find(catName => !!categories[catName].layers.find(l => l.name === initLayerName));\n            const initCat = categories[initCatName];\n            //console.log(`TempAccumMapLayerControlComponent: ${initLayerName} is in \"${initCatName}\"`,initCat);\n            switch(initCatName) {\n                case CATEGORY_TEMP_ACCUM_30_YR_AVG:\n                    initBaseValue = TEMP_ACCUM_BASE.DAILY_30Y_AVG;\n                    break;\n                case CATEGORY_TEMP_ACCUM_CURRENT:\n                case CATEGORY_TEMP_ACCUM_CURRENT_AK:\n                    initBaseValue = TEMP_ACCUM_BASE.CUR_DAY;\n                    break;\n                case CATEGORY_TEMP_ACCUM_DAILY_ANOM:\n                    initBaseValue = TEMP_ACCUM_BASE.DAILY_ANOM;\n                    break;\n            }\n            initDegValue = initCat.layers[0].name === initLayerName\n                ? 32\n                : 50;\n            initAkValue = initCatName === CATEGORY_TEMP_ACCUM_CURRENT_AK;\n        }\n        console.log(`TempAccumMapLayerControlComponent: initBaseValue=\"${initBaseValue}\" initDegValue=${initDegValue} initAkValue=${initAkValue}`);\n        this.baseLayer = new FormControl(initBaseValue);\n        if(this.agddTimeSeries) {\n            this.baseLayer.disable();\n        }\n        this.degreeBase = new FormControl(initDegValue);\n        if(!this.agddTimeSeries) {\n            this.alaska = new FormControl(initAkValue);\n            this.baseLayer.valueChanges\n                .pipe(\n                    startWith(this.baseLayer.value),\n                    takeUntil(this.componentDestroyed)\n                )\n                .subscribe(baseLayer => {\n                    if(baseLayer === TEMP_ACCUM_BASE.CUR_DAY) {\n                        this.alaska.enable();\n                    } else {\n                        this.alaska.disable();\n                        if(this.alaska.value) {\n                            this.alaska.setValue(false);\n                        }\n                    }\n                });\n        }\n        (this.alaska\n            ? merge( this.baseLayer.valueChanges,this.degreeBase.valueChanges,this.alaska.valueChanges)\n            : merge( this.baseLayer.valueChanges,this.degreeBase.valueChanges))\n        .pipe(\n            startWith(null),\n            debounceTime(250),\n            takeUntil(this.componentDestroyed)\n        ).subscribe(() => {\n            const base:TEMP_ACCUM_BASE = this.baseLayer.value;\n            const degrees:number = this.degreeBase.value;\n            // IMPORTANT: in gridded-comomon for all temp accumulations layer sets there are two\n            // layers, the first is 32 degree and the second is 50 degree\n            const degreesIndex = degrees === 32 ? 0 : 1;\n            const ak:boolean = this.alaska ? this.alaska.value : false;\n            let categoryName = null;\n            switch(base) {\n                case TEMP_ACCUM_BASE.DAILY_30Y_AVG:\n                    categoryName = CATEGORY_TEMP_ACCUM_30_YR_AVG;\n                    break;\n                case TEMP_ACCUM_BASE.CUR_DAY:\n                    categoryName = ak ? CATEGORY_TEMP_ACCUM_CURRENT_AK : CATEGORY_TEMP_ACCUM_CURRENT;\n                    break;\n                case TEMP_ACCUM_BASE.DAILY_ANOM:\n                    categoryName = CATEGORY_TEMP_ACCUM_DAILY_ANOM;\n                    break;\n            }\n            this.selection.layerName = categories[categoryName].layers[degreesIndex].name;\n            this.selection.redraw();\n        });\n        if(this.alaska) {\n            this.alaska.valueChanges\n                .pipe(takeUntil(this.componentDestroyed))\n                .subscribe(ak => this.selection.center = ak ? AK_CENTER : LOWER_44_CENTER);\n        }\n    }\n}\n\nenum SIX_BASE {\n    HIST_ANNUAL = 'Historic Annual',\n    CUR_YEAR = 'Current Year',\n    DAILY_ANOM = 'Daily Anomaly',\n    THIRTY_YR_AVG = '30-Year Average'\n}\nenum SIX_LORB {\n    LEAF = 'First Leaf',\n    BLOOM = 'First Bloom'\n}\n@Component({\n    selector: 'spring-index-map-layer-control',\n    template: `\n    <div class=\"base-ak\">\n        <mat-form-field class=\"base-layer\">\n            <mat-select placeholder=\"Layer\" [formControl]=\"baseLayer\">\n                <mat-option *ngFor=\"let b of baseOpts\" [value]=\"b\">{{b}}</mat-option>\n            </mat-select>\n        </mat-form-field>\n        <mat-checkbox [formControl]=\"alaska\">Alaska</mat-checkbox>\n    </div>\n    <mat-form-field>\n        <mat-select placeholder=\"Leaf or bloom\" [formControl]=\"leafOrBloom\">\n            <mat-option *ngFor=\"let o of leafOrBloomOpts\" [value]=\"o\">{{o}}</mat-option>\n        </mat-select>\n    </mat-form-field>\n    `,\n    styles:[`\n    :host {\n        display: block;\n    }\n    .base-ak {\n        display:flex;\n        align-items: center;\n    }\n    .base-layer {\n        padding-right: 10px;\n        flex-grow: 1;\n    }\n    `]\n})\nexport class SpringIndexMapLayerControlComponent extends MonitorsDestroy {\n    @Input() selection:MapSelection;\n    @Input() layerDefinitions:MapLayerDefs;\n\n    baseLayer:FormControl;\n    baseOpts = [SIX_BASE.HIST_ANNUAL,SIX_BASE.CUR_YEAR,SIX_BASE.DAILY_ANOM,SIX_BASE.THIRTY_YR_AVG];\n    alaska:FormControl;\n    leafOrBloom:FormControl;\n    leafOrBloomOpts = [SIX_LORB.LEAF,SIX_LORB.BLOOM];\n\n    ngOnInit() {\n        const categories = this.layerDefinitions.categories.reduce((map,cat) => (map[cat.name] = cat) && map,{});\n        let initBaseValue = SIX_BASE.HIST_ANNUAL;\n        let initAkValue = false;\n        let initLeafOrBloomValue = SIX_LORB.LEAF;\n        const initLayerName = this.selection.layerName;\n        if(initLayerName) {\n            // re-build values based on which layer was selected\n            const initCatName = [\n                CATEGORY_SIX_HIST_ANNUAL,\n                CATEGORY_SIX_CURRENT_YEAR_AK,\n                CATEGORY_SIX_CURRENT_YEAR,\n                CATEGORY_SIX_DAILY_ANOM,\n                CATEGORY_SIX_30_YR_AVG\n            ].find(catName => !!categories[catName].layers.find(l => l.name === initLayerName));\n            const initCat = categories[initCatName];\n            switch(initCatName) {\n                case CATEGORY_SIX_HIST_ANNUAL:\n                    initBaseValue = SIX_BASE.HIST_ANNUAL;\n                    break;\n                case CATEGORY_SIX_CURRENT_YEAR:\n                case CATEGORY_SIX_CURRENT_YEAR_AK:\n                    initBaseValue = SIX_BASE.CUR_YEAR;\n                    break;\n                case CATEGORY_SIX_DAILY_ANOM:\n                    initBaseValue = SIX_BASE.DAILY_ANOM;\n                    break;\n                case CATEGORY_SIX_30_YR_AVG:\n                    initBaseValue = SIX_BASE.THIRTY_YR_AVG;\n            }\n            initLeafOrBloomValue = initCat.layers[0].name === initLayerName\n                ? SIX_LORB.LEAF\n                : SIX_LORB.BLOOM;\n            initAkValue = initCatName === CATEGORY_SIX_CURRENT_YEAR_AK;\n        }\n        console.log(`SpringIndexMapLayerControlComponent: initBaseValue=\"${initBaseValue}\" initLeafOrBloomValue=\"${initLeafOrBloomValue}\" initAkValue=${initAkValue}`);\n        this.baseLayer = new FormControl(initBaseValue);\n        this.alaska = new FormControl(initAkValue);\n        this.leafOrBloom = new FormControl(initLeafOrBloomValue);\n\n        this.baseLayer.valueChanges\n        .pipe(\n            startWith(this.baseLayer.value),\n            takeUntil(this.componentDestroyed)\n        )\n        .subscribe(baseLayer => {\n            if(baseLayer === SIX_BASE.CUR_YEAR || baseLayer === SIX_BASE.DAILY_ANOM) {\n                this.selection.year = new Date().getFullYear();\n                this.selection.extentValue = new Date().toISOString().split('T')[0]+\"00:00:00.000Z\";\n            }\n            if(baseLayer === SIX_BASE.CUR_YEAR) {\n                this.alaska.enable();\n            } else {\n                this.alaska.disable();\n                if(this.alaska.value) {\n                    this.alaska.setValue(false);\n                }\n            }\n        });\n        merge(\n            this.baseLayer.valueChanges,\n            this.alaska.valueChanges,\n            this.leafOrBloom.valueChanges\n        ).pipe(\n            startWith(null),\n            debounceTime(250),\n            takeUntil(this.componentDestroyed)\n        ).subscribe(() => {\n            const base:SIX_BASE = this.baseLayer.value;\n            const leafOrBloom:SIX_LORB = this.leafOrBloom.value;\n            // IMPORTANT: in gridded-common for all six layer sets the first two are first leaf and bloom in that order\n            const lorbIndex = leafOrBloom == SIX_LORB.LEAF ? 0 : 1;\n            const ak:boolean = this.alaska.value;\n            let categoryName = null;\n            switch(base) {\n                case SIX_BASE.HIST_ANNUAL:\n                    categoryName = CATEGORY_SIX_HIST_ANNUAL\n                    break;\n                case SIX_BASE.CUR_YEAR:\n                    categoryName = ak ? CATEGORY_SIX_CURRENT_YEAR_AK : CATEGORY_SIX_CURRENT_YEAR;\n                    break;\n                case SIX_BASE.DAILY_ANOM:\n                    categoryName = CATEGORY_SIX_DAILY_ANOM;\n                    break;\n                case SIX_BASE.THIRTY_YR_AVG:\n                    categoryName = CATEGORY_SIX_30_YR_AVG;\n                    break;\n            }\n            this.selection.layerName = categories[categoryName].layers[lorbIndex].name;\n            this.selection.redraw();\n        });\n        this.alaska.valueChanges\n        .pipe(takeUntil(this.componentDestroyed))\n        .subscribe(ak => this.selection.center = ak ? AK_CENTER : LOWER_44_CENTER);\n    }\n}","import { Component, Input, PipeTransform } from '@angular/core';\n\nimport {\n    MapLayer,\n    MapLayerExtentType,\n    MapLayerExtentValue,\n    GriddedPipeProvider,\n    DoyTxType\n} from '../../gridded';\n\nimport * as d3 from 'd3';\nimport { MapSelection } from './map-selection';\n\nexport interface HasLayerSelection {\n    layer:MapLayer;\n    extentValue:string;\n}\n\n@Component({\n    selector: 'extent-control',\n    template: `\n    <div [ngSwitch]=\"selection.layer.extentType\">\n        <extent-date-control *ngSwitchCase=\"date\" [selection]=\"selection\"></extent-date-control>\n        <extent-year-control *ngSwitchCase=\"year\" [selection]=\"selection\"></extent-year-control>\n        <extent-doy-control *ngSwitchCase=\"doy\" [selection]=\"selection\"></extent-doy-control>\n    </div>\n    `\n})\nexport class ExtentControl {\n    @Input() selection:HasLayerSelection;\n    date = MapLayerExtentType.DATE;\n    year = MapLayerExtentType.YEAR;\n    doy = MapLayerExtentType.DOY;\n}\n\n@Component({\n    selector: 'extent-date-control',\n    template: `\n    <h4>Date</h4>\n    <mat-form-field>\n        <input matInput [matDatepicker]=\"extentDatePicker\" [min]=\"minDate\" [max]=\"maxDate\" [value]=\"selectedDate\"\n            (dateChange)=\"selectedDate = $event.value\">\n        <mat-datepicker-toggle matSuffix [for]=\"extentDatePicker\"></mat-datepicker-toggle>\n        <mat-datepicker #extentDatePicker></mat-datepicker>\n    </mat-form-field>\n    `\n})\nexport class ExtentDateControl {\n    @Input() selection:HasLayerSelection;\n\n    _selectedDate:Date;\n    minDate:Date;\n    maxDate:Date;\n\n    set selectedDate(d:Date) {\n        d.setHours(0,0,0,0);\n        this._selectedDate = d;\n        this.selection.extentValue = d.toISOString().replace(/T.*Z$/,'T00:00:00.000Z');\n    }\n    get selectedDate():Date {\n        return this._selectedDate;\n    }\n\n    private lastLayer:MapLayer;\n    ngDoCheck():void {\n        if(this.selection.layer && this.selection.layer !== this.lastLayer) {\n            const layer = this.lastLayer = this.selection.layer;\n            if(layer) {\n                this.minDate = layer.extent.values[0].date;\n                this.maxDate = layer.extent.values[layer.extent.values.length-1].date;\n                this.selectedDate = layer.extent.current.date;\n            }\n        }\n    }\n}\n\n@Component({\n    selector: 'extent-doy-control',\n    template: `\n    <h4>Day of year</h4>\n    <div class=\"controls\">\n        <mat-form-field>\n            <mat-select placeholder=\"Month\" [(value)]=\"selectedMonth\">\n                <mat-option *ngFor=\"let m of months\" [value]=\"m\">{{m | date:'MMMM'}}</mat-option>\n            </mat-select>\n        </mat-form-field>\n        <mat-form-field>\n            <mat-select placeholder=\"Day\" [(value)]=\"selectedDayOfMonth\">\n                <mat-option *ngFor=\"let d of monthDays\" [value]=\"d\">{{d}}</mat-option>\n            </mat-select>\n        </mat-form-field>\n        <div class=\"current-value\">{{selection?.layer?.extent.current.value | number:'1.0-0'}}</div>\n    </div>\n    `,\n    styles:[`\n    .controls {\n        display: flex;\n        align-items: center;\n        justify-content: space-between;\n    }\n    `]\n})\nexport class ExtentDoyControl {\n    @Input() selection:HasLayerSelection;\n\n    thirtyYearAvgDayOfYear:PipeTransform;\n    baseYear:number;\n    months:Date [];\n    monthDays:number [];\n\n    _selectedMonth:Date;\n    _selectedDayOfMonth: number;\n\n    constructor(private pipes:GriddedPipeProvider) {\n        this.thirtyYearAvgDayOfYear = pipes.get('thirtyYearAvgDayOfYear');\n        this.baseYear = this.thirtyYearAvgDayOfYear.transform('1.0',DoyTxType.DATE).getFullYear();\n        this.months = d3.range(0,12).map(m => new Date(this.baseYear,m));\n    }\n\n    get selectedMonth():Date {\n        return this._selectedMonth;\n    }\n    set selectedMonth(d:Date) {\n        this.setSelectedMonth(d);\n        // user changed month\n        this.selectedDayOfMonth = 1;\n    }\n\n    private setSelectedMonth(d:Date) {\n        this._selectedMonth = d;\n        this.monthDays = d3.range(1,getDaysInMonth(d)+1);\n    }\n\n    get selectedDayOfMonth():number { return this._selectedDayOfMonth; }\n    set selectedDayOfMonth(d:number) {\n        this._selectedDayOfMonth = d;\n        this._selectedMonth.setDate(d);\n        this.selection.extentValue = this.thirtyYearAvgDayOfYear.transform(this._selectedMonth,DoyTxType.DOY_STRING);\n    }\n\n    private lastLayer:MapLayer;\n    ngDoCheck():void {\n        if(this.selection.layer && this.selection.layer !== this.lastLayer) {\n            const layer = this.lastLayer = this.selection.layer;\n            if(layer) {\n                const currentDate = this.thirtyYearAvgDayOfYear.transform(layer.extent.current.value,true);\n                this.setSelectedMonth(this.months[currentDate.getMonth()]);\n                this.selectedDayOfMonth = currentDate.getDate();\n            }\n        }\n    }\n}\n\n@Component({\n    selector: 'extent-year-control',\n    template: `\n    <h4>Year</h4>\n    <mat-form-field>\n        <mat-select placeholder=\"Year\" [(value)]=\"selectedExtent\">\n            <mat-option *ngFor=\"let ext of selection.layer?.extent.values\" [value]=\"ext\">{{ext.label}}</mat-option>\n        </mat-select>\n    </mat-form-field>\n    `\n})\nexport class ExtentYearControl {\n    @Input() selection:HasLayerSelection;\n\n    _selectedExtent:MapLayerExtentValue;\n\n    get selectedExtent():MapLayerExtentValue { return this._selectedExtent; }\n    set selectedExtent(ext:MapLayerExtentValue) {\n        this._selectedExtent = ext;\n        this.selection.extentValue = ext.value;\n    }\n\n    private lastLayer:MapLayer;\n    ngDoCheck():void {\n        if(this.selection.layer && this.selection.layer !== this.lastLayer) {\n            const layer = this.lastLayer = this.selection.layer;\n            if(layer) {\n                this.selectedExtent = layer.extent.current;\n            }\n        }\n    }\n}\n\n\nconst ONE_DAY = (24*60*60*1000);\n\nfunction getDaysInMonth(date:Date):number {\n    let month = date.getMonth(),\n        tmp;\n    if(month === 11) {\n        return 31;\n    }\n    tmp = new Date(date.getTime());\n    tmp.setDate(1);\n    tmp.setMonth(tmp.getMonth()+1);\n    tmp.setTime(tmp.getTime()-ONE_DAY);\n    console.debug('last day of month '+(month+1)+' is '+tmp);\n    return tmp.getDate();\n}","import { Component, Input, EventEmitter } from '@angular/core';\nimport { WmsMapLayer, MapLayer } from '../../gridded';\nimport { Options } from 'ng5-slider';\nimport { MapSelection } from './map-selection';\n\n// TODO the selection object does not change (the layer within it does)\n// so this control is not updating when switching layers\n// also on load from shared URL the layer probably isn't there yet when\n// the selection is available since it's loaded asynchronously so the \n// control does not render properly\n@Component({\n    selector: 'gridded-range-slider',\n    template: `\n    <ng5-slider *ngIf=\"options\" [(value)]=\"min\" [(highValue)]=\"max\" [options]=\"options\" [manualRefresh]=\"manualRefresh\"></ng5-slider>\n    `\n})\nexport class GriddedRangeSliderControl {\n    @Input() selection:MapSelection;\n    options:Options;\n    _min:number;\n    _max:number;\n    manualRefresh:EventEmitter<void> = new EventEmitter();\n\n    resize() {\n        this.manualRefresh.next();\n    }\n\n    get max():number { return this._max; }\n    set max(m:number) {\n        this._max = m;\n        this.updateRange();\n    }\n\n    get min():number { return this._min; }\n    set min(m:number) { \n        this._min = m;\n        this.updateRange();\n    }\n\n    private updateRange() {\n        if(this.min === this.options.floor && this.max === this.options.ceil) {\n            // complete range selected, clear any style range\n            this.selection.styleRange = undefined;\n        } else {\n            this.selection.styleRange = [this.min,this.max];\n        }\n    }\n\n    private lastLayer:MapLayer;\n    ngDoCheck():void {\n        if(this.selection.layer && this.selection.layer !== this.lastLayer) {\n            if((this.lastLayer = this.selection.layer) instanceof WmsMapLayer) {\n                this.selection.layer.getLegend().then(legend => {\n                    const data = legend.getData();\n                    const existingRange = this.selection.styleRange;\n                    this._min = existingRange ? existingRange[0] : 0;\n                    this._max = existingRange ? existingRange[1] : (data.length-1);\n                    this.options = {\n                        floor: 0,\n                        ceil: (data.length-1),\n                        step: 1,\n                        showTicks: true,\n                        showSelectionBar: true,\n                        translate: n => data[n].label,\n                        getTickColor: n => data[n].color,\n                        getPointerColor: n => data[n].color,\n                        getSelectionBarColor: n => data[n].color\n                    };\n                });\n            } else {\n                this.options = undefined;\n            }\n        }\n    }\n}","export * from './public_api';","import { Injectable } from '@angular/core';\nimport { MapSelection } from './map-selection';\nimport { NpnMapLayerService } from '../../gridded';\nimport { NpnServiceUtils, SpeciesService, NetworkService } from '../../common';\n\n@Injectable()\nexport class MapSelectionFactory {\n    constructor(\n        private layerService:NpnMapLayerService,\n        private serviceUtils:NpnServiceUtils,\n        private speciesService:SpeciesService,\n        private networkService:NetworkService\n    ) {}\n\n    newSelection():MapSelection {\n        return new MapSelection(this.layerService,this.serviceUtils,this.speciesService,this.networkService);\n    }\n}","import {\n    selectionProperty,\n    POPInput,\n    BASE_POP_INPUT\n} from '../vis-selection';\nimport {\n    MapLayer,\n    NpnMapLayerService,\n    MapLayerLegend,\n    WmsMapLayer,\n    SupportsOpacity\n} from '../../gridded';\nimport { SiteOrSummaryVisSelection, SiteOrSummaryPlotData } from '../site-or-summary-vis-selection';\nimport { NpnServiceUtils, SpeciesService, NetworkService } from '@npn/common/common';\nimport { HttpParams } from '@angular/common/http';\n\n/**\n * Note: This type of selection contains more functionality than the underlying visualization\n * will care to make use of.  I.e. if `individualPhenometrics` is set to true then summarized\n * data would be used and if `networkIds` were populated on the selection they would be used\n * \n * @dynamic\n */\nexport class MapSelection extends SiteOrSummaryVisSelection implements SupportsOpacity {\n    $supportsPop:boolean = true;\n\n    @selectionProperty()\n    $class = 'MapSelection';\n\n    @selectionProperty()\n    _layerCategory:string;\n    @selectionProperty()\n    _layerName:string;\n    @selectionProperty()\n    opacity:number = 0.75;\n    @selectionProperty()\n    _styleRange:number[];\n    @selectionProperty()\n    _extentValue:string;\n    @selectionProperty()\n    _center:number[]; // lat,lng\n    @selectionProperty()\n    _zoom:number;\n\n    @selectionProperty() // vis supports a single year of data\n    _year:number;\n\n    private map:google.maps.Map;\n    layer:MapLayer;\n    legend:MapLayerLegend;\n\n    constructor(\n        private layerService:NpnMapLayerService,\n        protected serviceUtils:NpnServiceUtils,\n        protected speciesService:SpeciesService,\n        protected networkService:NetworkService\n    ) {\n        super(serviceUtils,speciesService,networkService);\n    }\n\n    toURLSearchParams(params: HttpParams = new HttpParams()): Promise<HttpParams> {\n        params = params.set('request_src','npn-vis-map')\n            .set('start_date',`${this.year}-01-01`)\n            .set('end_date',`${this.year}-12-31`);\n        return super.toURLSearchParams(params);\n    }\n\n    toPOPInput(input:POPInput = {...BASE_POP_INPUT}):Promise<POPInput> {\n        return super.toPOPInput(input)\n            .then(input => {\n                input.startDate = `${this.year}-01-01`;\n                input.endDate = `${this.year}-12-31`;\n                return input;\n            });\n    }\n\n    get year():number {\n        return this._year;\n    }\n    set year(y:number) {\n        this._year = y;\n        this.update();\n    }\n\n    set layerCategory(s:string) {\n        this._layerCategory = s;\n        this.layerName = null;\n        this.redraw();\n    }\n    get layerCategory():string { return this._layerCategory; }\n\n    set layerName(s:string) {\n        console.debug(`MapSelection.layerName=${s}`);\n        this._layerName = s;\n        if(this.layer && this.layer.layerName !== s) {\n            this.layer.off();\n            this.layer = undefined;\n            this.legend = undefined;\n            // TODO allow propagation of styleRange\n            // when switching layers\n            this.styleRange = undefined;\n        }\n    }\n\n    get layerName():string {\n        return this._layerName;\n    }\n\n    set styleRange(range:number[]) {\n        console.debug(`MapSelection.styleRange=${range}`);\n        this._styleRange = range;\n        if(this.layer && this.layer instanceof WmsMapLayer) {\n            this.layer.setStyleRange(range);\n        }\n    }\n\n    get styleRange():number[] {\n        return this._styleRange;\n    }\n\n    // returns true if a change was made\n    private updateExtentValue():boolean {\n        if(this.layer && this._extentValue) {\n            const newValue = this.layer.extent.values.reduce((found,v) => found||(v.value === this._extentValue ? v : undefined),undefined);\n            if(!newValue) {\n                // this is OK if it happens, since we can keep the _extentValue from layer to layer\n                // if the user switches from one layer to another with compatible extents then we can just\n                // re-use it, which seems nice. o/w it should just go back to the \"default\"\n                this._extentValue = undefined;\n            } else if (this.layer.extent.current !== newValue) {\n                this.layer.extent.current = newValue;\n                return true;\n            }\n        }\n        return false;\n    }\n\n    set extentValue(v:string) {\n        this._extentValue = v;\n        if(this.layer && this.updateExtentValue()) {\n            this.redraw();\n        }\n    }\n\n    get extentValue():string {\n        return this._extentValue;\n    }\n\n    // using functions here because of the SupportsOpacity interface.\n    /** Sets the current opacity (0-1) for this layer. */\n    setOpacity(opacity:number) {\n        console.debug(`MapSelection.setOpacity=${opacity}`);\n        this.opacity = opacity;\n        if(this.layer) {\n            this.layer.setOpacity(this.opacity);\n        }\n    }\n    /** Gets the current opacity for this layer. */\n    getOpacity():number { return this.opacity; }\n\n    get center():number[] { return this._center; }\n    set center(latLng:number[]) {\n        this._center = latLng;\n        if(this.map && latLng && latLng.length === 2) {\n            this.map.setCenter(new google.maps.LatLng(latLng[0],latLng[1]));\n        }\n    }\n\n    get zoom():number { return this._zoom; }\n    set zoom(z:number) {\n        this._zoom = z;\n        if(this.map && z !== this.map.getZoom()) {\n            this.map.setZoom(z);\n        }\n    }\n\n    validForLayer():boolean {\n        return !!this.layerName;\n    }\n\n    validForData():boolean {\n        return typeof(this.year) === 'number' && this.validPlots.length > 0 &&\n            typeof(this.numDaysQualityFilter) === 'number';\n    }\n\n    isValid():boolean {\n        return this.validForLayer() || this.validForData();\n    }\n\n    // NOTE: There is no protection against this being called multiple times in fast succession\n    // e.g. setLayerName, updateLayer, change layerName, call updateLayer\n    // and if this happened there could be two Promises arguing over the ability set `this.layer`\n    // which could cause a layer \"sticking\" on the map.\n    updateLayer(map: google.maps.Map):Promise<void> {\n        const {layerName} = this;\n        console.debug(`MapSelection.updateLayer`,this.external);\n        if(this.map !== map) {\n            this.map = map;\n            const latLng = this._center;\n            if(latLng && latLng.length === 2) {\n                this.map.setCenter(new google.maps.LatLng(latLng[0],latLng[1]));\n            }\n            if(this._zoom) {\n                this.map.setZoom(this._zoom);\n            }\n            // this is perhaps a bit weird to have these listeners here\n            // rather than outside but it allows us to more cleanly access\n            // the \"private\" member properties are based upon.\n            map.addListener('center_changed',() => {\n                const latLng = this.map.getCenter();\n                this._center = [\n                    latLng.lat(),\n                    latLng.lng()\n                ];\n            });\n            map.addListener('zoom_changed',() => this._zoom = this.map.getZoom());\n        }\n        if(layerName) {\n            if(!this.layer) {\n                return this.layerService.newLayer(map,layerName)\n                    .then(layer => {\n                        this.layer = layer;\n                        layer.setOpacity(this.opacity);\n                        if(layer instanceof WmsMapLayer) {\n                            layer.setStyleRange(this.styleRange);\n                        }\n                        this.updateExtentValue();\n                        layer.on();\n                        return this.layer.getLegend().then(legend => {this.legend = legend});\n                    });\n            } else {\n                this.layer.bounce();\n            }\n        } else {\n            this.legend = this.layerService.getDefaultLegend();\n        }\n        return Promise.resolve();\n    }\n\n    getData():Promise<SiteOrSummaryPlotData[]> {\n        this.working = true;\n        return (this.validForData()\n            ? super.getData()\n            : Promise.resolve([]))\n            .then(results => {\n                this.working = false;\n                return results;\n            });\n    }\n}","import { Component, Input, SimpleChanges } from '@angular/core';\nimport { MapVisMarker, MAP_VIS_SVG_PATHS } from './map-visualization.component';\nimport { Station } from '../../common';\nimport { GriddedPointData, DefaultMapLayerLegend } from '../../gridded';\nimport { StationService } from '@npn/common/common/station.service';\nimport { MapSelection } from './map-selection';\n\n@Component({\n    selector: 'map-visualization-marker-iw',\n    template: `\n    <npn-logo spin=\"true\" *ngIf=\"!station; else stationInfo\"></npn-logo>\n    <ng-template #stationInfo>\n        <div class=\"station-info\">\n            <h3>{{station.site_name}}</h3>\n            <ul>\n            <li *ngIf=\"station.group_name\"><label>Group:</label> {{station.group_name}}</li>\n            <li><label>Latitude:</label> {{station.latitude}} <label>Longitude:</label> {{station.longitude}}</li>\n            <li *ngIf=\"data && data.legendData\" class=\"gridded-data\"><label>Gridded Layer Value:</label> <div class=\"legend-cell\"\n                [ngStyle]=\"{'background-color': data.legendData.color}\">&nbsp;</div> {{dataText(data)}}</li>\n            </ul>\n        </div>\n        <div class=\"record-info\" *ngFor=\"let r of marker.records\">\n            <h4>{{r | taxonomicSpeciesTitle:r.plot.speciesRank}}, {{r.phenophase_name||r.pheno_class_name||r.phenophase_description}}, {{r.mean_first_yes_year}}\n                <svg class=\"icon\" viewBox=\"0 0 22 22\">\n                    <path [attr.fill]=\"iconFill(r)\" [attr.d]=\"svgs[r.plotIndex]\" stroke='#000'></path>\n                </svg></h4>\n            <ul>\n            <!--<li><label>Observed Day of Onset:</label> {{r.mean_first_yes_doy | number:'1.0-0'}} ({{selection.legend.formatPointData((selection.layerName?.includes('gdd') || selection.layerCategory == 'Pheno Forecasts') ? r.mean_gddf : r.mean_first_yes_doy)}})<span *ngIf=\"r.sd_first_yes_in_days > 0\"> [Standard Deviation: {{r.sd_first_yes_in_days | number:'1.1-1'}}]</span></li> -->\n            <li><label>Observed Day of Onset:</label> {{r.mean_first_yes_doy | number:'1.0-0'}} {{dateMarkerText(r)}} <span *ngIf=\"r.sd_first_yes_in_days > 0\">[Standard Deviation: {{r.sd_first_yes_in_days | number:'1.1-1'}}]</span></li>\n            <li *ngIf=\"showGddInPopup()\"><label>AGDD on Day of Onset:</label> {{gddMarkerText(r)}} </li>\n            </ul>\n        </div>\n    </ng-template>\n    `,\n    styles:[`\n    npn-logo {\n        width: 25px;\n        height: 25px;\n    }\n    svg {\n        border: none;\n        width: 16px;\n        height: 16px;\n    }\n    .legend-cell {\n        width: 15px;\n        height: 15px;\n        border: 1px solid black;\n        display: inline-block;\n        margin: 0 5px;\n    }\n    ul {\n        margin: 0px;\n        padding: 0px 0px 0px 5px;\n    }\n    ul > li {\n        list-style: none;\n        padding: 2px 0px;\n    }\n    label {\n        font-weight: bold;\n    }\n    h3,\n    h4 {\n        text-transform: none !important;\n    }\n    h3 {\n        margin: 0 0 8px !important;\n    }\n    h4 {\n        margin: 5px 0px !important;\n    }\n    li.gridded-data {\n        display:flex;\n        align-items: center;\n    }\n    `]\n})\nexport class MapVisualizationMarkerIw {\n    @Input() marker:MapVisMarker;\n    @Input() selection:MapSelection;\n\n    station:Station;\n    data:GriddedPointData;\n    svgs:any = MAP_VIS_SVG_PATHS;\n\n    constructor(\n        private stationService:StationService\n    ) {}\n\n    dataText(data) {\n        if (this.selection.layerCategory == 'Pheno Forecasts' \n            || (this.selection.layerName && this.selection.layerName.includes('gdd'))) {\n            return `${data.formatted}`; // for gdd layers, data.point and data.formatted are same, formatted is just rounded\n        } else {\n            return `${data.point} (${data.formatted})`;\n        }\n    }\n\n    dateMarkerText(r) {\n        if (this.selection.layerCategory == 'Pheno Forecasts' \n            || (this.selection.layerName && this.selection.layerName.includes('gdd'))) {\n            return '';\n        } else {\n            return `(${this.selection.legend.formatPointData(r.mean_first_yes_doy)})`;\n        }\n    }\n\n    gddMarkerText(r) {\n        if (this.selection.layerCategory == 'Pheno Forecasts' \n            || (this.selection.layerName && this.selection.layerName.includes('gdd'))) {\n            return r.mean_gddf != -9999 ? `${r.mean_gddf} (Daymet, start date Jan 1, base 32${String.fromCharCode(176)})` : 'not available';\n        } else {\n            return ``;\n        }\n    }\n\n    showGddInPopup() {\n        return (this.selection.layerCategory == 'Pheno Forecasts' \n        || (this.selection.layerName && this.selection.layerName.includes('gdd')))\n    }\n\n    ngOnChanges(changes: SimpleChanges):void {\n        if(changes.marker) {\n            this.station = null;\n            this.data = null;\n            if(this.marker) {\n                this.marker.records.forEach(r => {\n                    console.log('POINT DATA',this.selection.legend.getPointData(r.mean_first_yes_doy),r);\n                });\n                const {legend} = this.selection;\n                Promise.all([\n                    this.stationService.getStation(this.marker.site_id),\n                    (legend && !(legend instanceof DefaultMapLayerLegend)) ?\n                        legend.getGriddedPointData(new google.maps.LatLng(this.marker.latitude,this.marker.longitude)).toPromise()\n                        : Promise.resolve(null)\n                ]).then(results => {\n                    console.log('MapVisualizationMarkerIw:results',results);\n                    const [station,data] = results;\n                    this.station = station;\n                    this.data = data;\n                });\n            }\n        }\n    }\n\n    iconFill(r) {\n        const data = this.selection.legend.getPointData(r.mean_first_yes_doy);\n        return data\n            ? data.color\n            : '#ffffff';\n    }\n}\n\n","module.exports = \".vis-container {\\n  display: block;\\n  position: relative; }\\n  .vis-container agm-map {\\n    /*\\n        encapsulation: ViewEncapsulation.None or this rule won't be able to apply\\n        */ }\\n  .vis-container agm-map img[src*=usanpn] {\\n      -ms-interpolation-mode: nearest-neighbor;\\n          image-rendering: pixelated;\\n      image-rendering: -moz-crisp-edges; }\\n  .map-wrapper {\\n  position: relative;\\n  width: 100%;\\n  height: 100%; }\\n  .map-wrapper map-layer-legend .gridded-legend {\\n    margin-top: 10px;\\n    border-bottom: 1px solid #aaa; }\\n  .map-wrapper .npnlogo {\\n    position: absolute;\\n    width: 180px;\\n    bottom: 75px;\\n    right: 70px;\\n    z-index: 1; }\\n  .map-wrapper .usgslogo {\\n    position: absolute;\\n    height: 50px;\\n    width: 130px;\\n    bottom: 15px;\\n    right: 70px;\\n    z-index: 1; }\\n  .map-wrapper .ualogo {\\n    position: absolute;\\n    height: 50px;\\n    bottom: 15px;\\n    right: 205px;\\n    z-index: 1; }\\n  .map-wrapper npn-logo.working {\\n    position: absolute;\\n    top: 5px;\\n    right: 5px;\\n    width: 30px;\\n    height: 30px;\\n    z-index: 100; }\\n  @media (min-width: 992px) {\\n    .map-wrapper map-layer-legend {\\n      position: absolute;\\n      left: 10px;\\n      padding: 8px;\\n      border: 1px solid #aaa;\\n      background-color: rgba(255, 255, 255, 0.85);\\n      border-radius: 5px; }\\n    .map-wrapper map-layer-legend {\\n      bottom: 25px;\\n      width: 60%; }\\n      .map-wrapper map-layer-legend .gridded-legend {\\n        margin-top: 0px;\\n        border-bottom: none;\\n        width: 100%;\\n        height: 125px;\\n        border: none; } }\\n  .map-wrapper .gridded-info {\\n    display: flex;\\n    align-items: center; }\\n  .map-wrapper .gridded-info .legend-swatch {\\n      width: 30px;\\n      height: 30px;\\n      border: 1px solid #aaa; }\\n  .map-wrapper .gridded-info .spinner-logo {\\n      width: 30px;\\n      height: 30px; }\\n  .map-wrapper .gridded-info .point-formatted {\\n      font-size: 1.25em;\\n      padding-left: .5em; }\\n  .map-wrapper .spinner-logo > svg {\\n    -webkit-animation-name: loading-anim;\\n            animation-name: loading-anim;\\n    -webkit-animation-duration: 1250ms;\\n            animation-duration: 1250ms;\\n    -webkit-animation-iteration-count: infinite;\\n            animation-iteration-count: infinite;\\n    -webkit-animation-timing-function: linear;\\n            animation-timing-function: linear;\\n    width: 28px;\\n    height: 28px; }\\n  .map-wrapper .spinner-logo > svg .swirl-top {\\n    fill: #f37022; }\\n  .map-wrapper .spinner-logo > svg .swirl-left {\\n    fill: #68bd46; }\\n  .map-wrapper .spinner-logo > svg .swirl-right {\\n    fill: #3b94d0; }\\n  @-webkit-keyframes loading-anim {\\n  from {\\n    -webkit-transform: rotate(0deg);\\n            transform: rotate(0deg); }\\n  to {\\n    -webkit-transform: rotate(360deg);\\n            transform: rotate(360deg); } }\\n  @keyframes loading-anim {\\n  from {\\n    -webkit-transform: rotate(0deg);\\n            transform: rotate(0deg); }\\n  to {\\n    -webkit-transform: rotate(360deg);\\n            transform: rotate(360deg); } }\\n\"","import { Component, Input, ElementRef, ViewChild } from '@angular/core';\nimport { ObservableMedia } from \"@angular/flex-layout\";\n\nimport { MapVisualizationBaseComponent } from '../map-visualization-base.component';\nimport { MapSelection } from './map-selection';\nimport { MapLayerLegendComponent } from '@npn/common/gridded/map-layer-legend.component';\nimport { MouseEvent } from '@agm/core';\nimport { GriddedPointData, MapLayerLegend } from '@npn/common/gridded';\nimport { Species, Phenophase } from '@npn/common/common';\nimport { SiteOrSummaryPlotData } from '../site-or-summary-vis-selection';\n\n@Component({\n    selector: 'map-visualization',\n    template: `\n    <div class=\"vis-container\">\n        <div class=\"map-wrapper\">\n            <npn-logo class=\"working\" *ngIf=\"selection.working\" spin=\"true\"></npn-logo>\n            <agm-map (mapReady)=\"mapReady($event)\" \n                [streetViewControl]=\"false\"  [styles]=\"mapStyles\" [scrollwheel]=\"false\"\n                (mapClick)=\"mapClick($event)\">\n                <agm-info-window *ngIf=\"griddedData || griddedLoading\"\n                    [isOpen]=\"griddedOpen\"\n                    (infoWindowClose)=\"griddedOpen = false\"\n                    [latitude]=\"griddedLat\" [longitude]=\"griddedLng\">\n                    <div *ngIf=\"griddedData || griddedLoading\" class=\"gridded-info\">\n                        <div *ngIf=\"griddedLoading\" class=\"spinner-logo\">\n                        <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 391 391\"><g>\n                            <path class=\"swirl-top\" d=\"M182,1c-36.3,2.4-68.6,13.4-95.3,32.5c-5.6,4-11.8,8.7-13.7,10.4l-3.5,3L73,46c5.8-1.6,15.6-1.2,22.2,1.1\n                                    c9.4,3.1,19.3,10.1,30.3,21.3C137.1,80.2,145.6,91,168,122c17.1,23.8,26.5,34.3,39.5,44.2c16.2,12.4,28.9,16.3,49.5,15.5\n                                    c21.7-0.9,38.4-7.7,53.2-21.6c17.4-16.3,25.7-36.1,25.8-61c0-10.3,0-10.3-2.2-9.6c-21.5,6.6-48.9,3.2-72.9-9.1\n                                    c-27.3-14.1-51.2-45.7-48.4-64.1c0.7-5.1,6-11,10.6-12c5.3-1,3-2.1-5.8-2.7C199.9,0.4,193.3,0.3,182,1z\"/>\n                            <path class=\"swirl-top\" d=\"M256.5,5.9c-8.8,0.9-11.6,1.9-13.9,5.3c-2.2,3.1-2,6.5,0.8,12.5c6.1,13.1,19.8,28.5,30.3,34\n                                    c11,5.9,28.3,8.6,41.2,6.4l6.5-1.1l8.2,4.5c4.5,2.5,8.7,4.5,9.3,4.5c2.5,0,0.8-4.1-3.6-9l-4.6-5.2l-0.1-10.2\n                                    c-0.1-9.3-0.4-10.7-3.3-16.7c-5.4-10.8-16-19.1-30-23.2C291.1,5.8,267.9,4.8,256.5,5.9z M315.8,40.2c2.7,2.7,0.7,7.8-2.9,7.8\n                                    c-2.1,0-4.9-2.6-4.9-4.5C308,40,313.3,37.7,315.8,40.2z\"/>\n                            <path class=\"swirl-top\" d=\"M72.5,50.6c-9.9,2.3-10.4,2.6-18.8,11.3c-4.5,4.7-11.1,12.2-14.6,16.6c-9.7,12.3-26,37.8-23,35.9\n                                    c0.8-0.5,4.6-3,8.6-5.7c9.7-6.4,23.9-13.1,34.8-16.3c8-2.5,10.6-2.7,24-2.7s15.9,0.2,23.8,2.6c4.8,1.5,12.4,4.5,16.9,6.8l8.1,4.1\n                                    l-3.8-6.9c-11.6-20.8-25.7-37.2-36.6-42.2C85.7,51.2,76.8,49.6,72.5,50.6z\"/>\n                            <path class=\"swirl-left\" d=\"M354.6,81.9c1.3,5,0.7,31.5-1,40.5c-4.6,24.2-16.5,43.5-35.4,57.4c-14.1,10.4-23.8,14.3-55.1,22.2\n                                    c-23.8,6-32.9,8.9-44.6,14.5c-22.7,10.9-35.8,23.3-45,42.6c-5.4,11.5-7.5,21.2-7.5,35.1c0,15.5,1.9,23.6,8.5,37.4\n                                    c10.3,21.3,27.7,35.9,51.2,43c7.6,2.4,10.6,2.7,22.3,2.8c15.3,0,23.2-1.5,34.5-6.7c19-8.6,31.2-17.5,48-34.8\n                                    c17.5-18,28.4-33.6,39.6-56.3c28.1-57.2,26.1-119.5-5.7-181.6C358.2,85.8,353.6,78.3,354.6,81.9z M329.4,194.2\n                                    c-30.6,42.4-63.6,80-84.9,96.8c-13.1,10.3-34,19-49.9,20.6l-6.4,0.7l-0.7-7.7c-1.4-14.8,2.6-33.4,9.7-45.3\n                                    c5-8.5,14.6-17.5,23.6-22.1c8.9-4.7,17.5-7.3,43.7-13.7c10.5-2.6,23.5-6.4,29.1-8.6c10.9-4.2,24.4-12.7,33.4-20.8\n                                    c3-2.8,5.7-5.1,5.8-5.1C333,189,331.5,191.4,329.4,194.2z\"/>\n                            <path class=\"swirl-right\" d=\"M67.5,108c-17.8,3.8-37.3,16-48,30.2C8.7,152.5,3.6,167,2,187.1C-0.1,215,7.8,248,24.4,280.3\n                                    c34.1,66.3,95.1,104.5,174.1,109.1l9,0.5l-6.5-1.4c-56.1-12.9-106.1-51.7-136.8-106.2c-14.5-25.7-20.6-47.5-20.7-73.8\n                                    c0-23.4,4.2-40,14.8-57.7c4.2-6.9,12.6-17.3,13.4-16.5c0.2,0.3-1.6,4.5-4,9.3C58.6,161.8,55,177.6,55,199c0,37.8,14.2,78,39.4,111.7\n                                    c14.5,19.5,39,42.1,58.8,54.2c14.9,9,31.2,16.2,46.5,20.5c14.6,4,15.2,3.9,5.5-1.4c-45.2-24.2-65.1-62.5-55.7-107.3\n                                    c0.9-4.3,3.9-15.1,6.6-24c9.7-31.5,12.1-43.7,12-63c0-9.1-0.5-14.3-2.1-20.2C154.6,125.4,111.9,98.7,67.5,108z\"/>\n                        </g></svg>\n                        </div>\n                        <div *ngIf=\"!griddedLoading\" class=\"legend-swatch\" [ngStyle]=\"{'background-color': griddedData.legendData?.color}\">&nbsp;</div>\n                        <div class=\"point-formatted\">{{griddedLoading ? 'Loading...' : griddedData.formatted}}</div>\n                    </div>\n                </agm-info-window>\n                <agm-marker *ngFor=\"let m of markers\"\n                    [latitude]=\"m.latitude\" [longitude]=\"m.longitude\"\n                    [iconUrl]=\"m.icon\"\n                    [title]=\"m.title\" (markerClick)=\"selectedMarker = m\"></agm-marker>\n                <agm-info-window\n                    [isOpen]=\"!!selectedMarker\" (infoWindowClose)=\"selectedMarker = null\"\n                    [latitude]=\"selectedMarker?.latitude\" [longitude]=\"selectedMarker?.longitude\">\n                    <map-visualization-marker-iw [marker]=\"selectedMarker\" [selection]=\"selection\"></map-visualization-marker-iw>\n                </agm-info-window>\n            </agm-map>\n            <map-layer-legend *ngIf=\"!thumbnail && selection.legend\" [legend]=\"selection.legend\"></map-layer-legend>\n            <img src = 'assets/USA-NPN-logo-RGB2019.png' class='npnlogo'/>\n            <img src = 'assets/University-of-Arizona-Logo.png' class='ualogo'/>\n            <img src = 'assets/usgs-logo.png' class='usgslogo'/>\n        </div>\n    </div>\n    `,\n    styleUrls: ['./map-visualization.component.scss']\n})\nexport class MapVisualizationComponent extends MapVisualizationBaseComponent {\n    @Input() selection:MapSelection;\n    @ViewChild(MapLayerLegendComponent) legend:MapLayerLegendComponent;\n\n    griddedLat:number;\n    griddedLng:number;\n    griddedOpen:boolean = false;\n    griddedData:GriddedPointData;\n    griddedLoading:boolean = false;\n\n    markers:MapVisMarker[];\n    selectedMarker:MapVisMarker;\n\n    constructor(protected rootElement: ElementRef, protected media: ObservableMedia) {\n        super(rootElement,media);\n    }\n\n    mapReady(map: google.maps.Map): void {\n        map.setCenter(new google.maps.LatLng(this.latitude, this.longitude));\n        map.setZoom(this.zoom);\n        this.getMapResolver(map);\n    }\n\n    /**\n     * triggered by window re-sizes and other UI logic when available screen\n     * real-estate may have changed.\n     */\n    protected resize():void {\n        console.log('MapVisualization.resize');\n        if(this.legend) {\n            this.legend.redraw();\n        }\n    }\n\n    /**\n     * redraws are triggered by layer related changes.\n     */\n    protected redraw():void {\n        if(this.selection.layerName == \"precipitation:buffelgrass_prism\") {\n            this.zoom = 6;\n            this.latitude = 33.4;\n            this.longitude = -112;\n        }\n        else if(this.selection.layerName != null && this.selection.layerName.includes(\"alaska\")) {\n            this.zoom = 4;\n            this.latitude = 62;\n            this.longitude = -152;\n        }\n        else {\n            this.zoom = 4;\n            this.latitude = 38.8402805;\n            this.longitude = -97.61142369999999;\n        }\n        console.log('MapVisualization.redraw');\n        this.getMap().then(map => this.selection.updateLayer(map).then(() => {\n            map.setCenter(new google.maps.LatLng(this.latitude, this.longitude));\n            map.setZoom(this.zoom);\n            if(this.legend) {\n                this.legend.redraw();\n            }\n            this.updateMarkers();\n        }));\n    }\n\n    private lastUpdateLegend:MapLayerLegend;\n    /**\n     * If the underlying legend coloring markers has changed since the last update\n     * then re-create all markers with new colors.  Markers have to be recreated\n     * since the underlying angular library won't update them if their references\n     * do not change (does not logically deep watch the contents of each marker).\n     */\n    private updateMarkers() {\n        const {legend} = this.selection;\n        if(\n           (!legend || legend !== this.lastUpdateLegend) || // if the legend changed\n           (this.markers.length && !this.markers[0].cloned) // OR the markers are \"new\" (!cloned) so haven't been colored\n           ) {\n            this.lastUpdateLegend = legend;\n            this.markers = (this.markers||[]).map(m => {\n                m = m.clone();\n                const data = legend\n                    ? legend.getPointData(m.doy)\n                    : null;\n                if(legend.layerName.includes('si-x') || legend.layerName.includes('no-layer')) {\n                    m.icon.fillColor = data ? data.color : '#ffffff';\n                } else {\n                    m.icon.fillColor = '#ffffff';\n                }\n                m.title = legend\n                    ? m.records.map(r => legend.formatPointData(r.mean_first_yes_doy)).join(', ')\n                    : m.records.map(r => r.mean_first_yes_doy).join(', ');\n                return m;\n            });\n        }\n    }\n\n    /**\n     * updates are triggered by data related changes and will be called by the application\n     * when setting up the visualization the first time.\n     */\n    protected update():void {\n        console.log('MapVisualization.update');\n        this.markers = [];\n        this.getMap().then(() => { // just to make sure the google apis are loaded\n            this.selection.getData().then((allPlotData:SiteOrSummaryPlotData[]) => {\n                const data = allPlotData.reduce((records,plotData,plotIndex) => {\n                        const filtered = plotData.data\n                            .filter(d => d.mean_first_yes_doy !== -9999) // throw out invalid means\n                            .map(d => {\n                                d.plot = plotData.plot;\n                                d.plotIndex = plotIndex;\n                                return d;\n                            });\n                        return records.concat(filtered);\n                    },[])\n                    .sort((a,b) => a.mean_first_yes_doy - b.mean_first_yes_doy); // sort ascending by doy\n                console.log(`MapVisualization: data.length=${data.length} (filtered)`);\n                const bySiteMap:BySiteMap = {}; // to consolidate multiple species/phenos at a given station/marker\n                    this.markers = data.reduce((arr,d) => {\n                            if(bySiteMap[d.site_id]) {\n                                bySiteMap[d.site_id].addRecord(d);\n                            } else {\n                                const m = new MapVisMarker(d,newGoogleMapsSymbol(MAP_VIS_SVG_PATHS[d.plotIndex]));\n                                arr.push(m);\n                                bySiteMap[d.site_id] = m;\n                            }\n                            return arr;\n                        },[]);\n                console.log(`MapVisualization: markers.length=${this.markers.length}`);\n                this.redraw();\n            });\n        });\n    }\n\n    mapClick($event:MouseEvent) {\n        const {lat,lng} = $event.coords;\n        this.griddedLoading = true;\n        this.griddedLat = lat;\n        this.griddedLng = lng;\n        this.griddedData = null;\n        this.griddedOpen = true;\n        if(this.selection.layer  && this.selection.legend) {\n            this.selection.legend.getGriddedPointData(new google.maps.LatLng(lat,lng))\n                .subscribe(data => {\n                    if(data) {\n                        this.griddedLoading = false;\n                        this.griddedLat = lat;\n                        this.griddedLng = lng;\n                        this.griddedData = data;\n                        this.griddedOpen = true;\n                    }\n                });\n        }\n    }\n\n    markerClick(marker:MapVisMarker) {\n        console.log('MapVisualization.markerClick',marker);\n    }\n}\n\nexport const MAP_VIS_SVG_PATHS:string[] = [\n    'M0 22 L22 22 L10 0 Z', // triangle\n    'M0 22 L22 22 L22 0 L0 0 Z', // square\n    'M4 22 L18 22 L22 10 L18 0 L4 0 L0 10 Z' // hexagon\n];\n\nfunction newGoogleMapsSymbol(path:string):google.maps.Symbol {\n    return {\n        path,\n        anchor: new google.maps.Point(11,11),\n        scale: 1,\n        fillOpacity: 1,\n        fillColor: '#ffffff',\n        strokeColor: '#204d74'\n    };\n}\n\ninterface BySiteMap {\n    [id:string]:MapVisMarker;\n}\n\ninterface MapVisRecord extends Species,Phenophase {\n    site_id:number;\n    mean_first_yes_doy:number;\n    phenophase_id:number;\n    latitude:number;\n    longitude:number;\n    // lots of other stuff\n}\n\nexport class MapVisMarker {\n    title:string;\n    records:MapVisRecord[];\n\n    constructor(public record:MapVisRecord,public icon:google.maps.Symbol,public cloned?:boolean) {\n        this.records = [record];\n    }\n\n    addRecord(record:MapVisRecord) {\n        this.records.push(record);\n        this.icon.strokeColor = '#00ff00';\n    }\n\n    get latitude():number { return this.record.latitude; }\n    get longitude():number { return this.record.longitude; }\n\n    get site_id():number { return this.record.site_id; }\n    get doy():number { return this.record.mean_first_yes_doy; }\n\n    clone():MapVisMarker {\n        const clone = new MapVisMarker(this.record,this.icon,true);\n        clone.records = this.records.slice();\n        return clone;\n    }\n}","export * from './map-selection';\nexport * from './map-selection.factory';\nexport * from './map-visualization.component';\nexport * from './extent-controls';\nexport * from './gridded-range-slider-control.component';\nexport * from './consolidated-map-layer-control.component';\nexport * from './map-visualization-marker-iw.component';","import { HttpParams } from '@angular/common/http';\n\nimport { StationAwareVisSelection, selectionProperty, POPInput, BASE_POP_INPUT, SelectionGroup, GroupHttpParams } from './vis-selection';\nimport { NpnServiceUtils, SpeciesPlot, TaxonomicSpeciesTitlePipe, getSpeciesPlotKeys, TaxonomicSpeciesRank, TaxonomicPhenophaseRank, SpeciesService, NetworkService, getStaticColor, CURRENT_YEAR, CURRENT_YEAR_VALUE  } from '../common';\n\nexport interface ObservationDatePlot extends SpeciesPlot {\n    [x: string]: any;\n}\n\nexport interface ObservationDataDataPoint {\n    x: number;\n    y: number;\n    color: string;\n}\nexport interface ObservationDateData {\n    labels: string[];\n    data: ObservationDataDataPoint[];\n}\n\nexport interface ObservationDatePlotData {\n    plot: ObservationDatePlot;\n    group?: SelectionGroup;\n    data: any;\n}\n\nexport abstract class ObservationDateVisSelection extends StationAwareVisSelection {\n    $supportsPop:boolean = true;\n\n    requestSrc: string = 'observation-date-vis-selection';\n\n    @selectionProperty()\n    negative: boolean = false;\n    @selectionProperty()\n    negativeColor: string = '#aaa'\n    @selectionProperty()\n    years: number[] = [];\n    @selectionProperty()\n    plots: ObservationDatePlot[] = [];\n\n    /** The maximum number of plots we want to allow. */\n    readonly MAX_PLOTS:number = 10;\n\n    constructor(\n        protected serviceUtils:NpnServiceUtils,\n        protected speciesTitle:TaxonomicSpeciesTitlePipe,\n        protected speciesService:SpeciesService,\n        protected networkService:NetworkService\n    ) {\n        super(serviceUtils,networkService);\n    }\n\n    isValid(): boolean {\n        return this.years && this.years.length && this.validPlots.length > 0;\n    }\n\n    get validPlots(): ObservationDatePlot[] {\n        return (this.plots || []).filter(p => {\n            return p.species && p.phenophase && \n                // color only required if not grouping\n                (p.color || (this.groups && this.groups.length > 0));\n        });\n    }\n\n    get actualYears():number[] {\n        return (this.years||[]).map(y => y === CURRENT_YEAR ? CURRENT_YEAR_VALUE : y);\n    }\n\n    /**\n     * Indicates whether or not adding one more plot will result in a visualization exceeding\n     * the maximum number of allowed plots.\n     */\n    get canAddPlot():boolean {\n        const years = this.years ? this.years.length : 0;\n        const groups = this.groups ? this.groups.length : 0;\n        const next_plots = ((this.plots ? this.plots.length : 0)+1)*years;\n        const next_count = groups ? (groups * next_plots) : next_plots;\n        return next_count <= this.MAX_PLOTS;\n    }\n\n    toURLSearchParams(params: HttpParams = new HttpParams()): Promise<HttpParams> {\n        params = params.set('request_src', this.requestSrc);\n        this.actualYears.forEach((y, i) => {\n            params = params.set(`year[${i}]`, `${y}`);\n        });\n        return super.toURLSearchParams(params);\n    }\n\n    toPOPInput(input:POPInput = {...BASE_POP_INPUT}):Promise<POPInput> {\n        return super.toPOPInput(input)\n            .then(input => {\n                const yearRange = this.actualYears\n                    .reduce((range,y) => {\n                        if(!range) {\n                            return [y,y];\n                        }\n                        if(y < range[0]) {\n                            range[0] = y;\n                        }\n                        if(y > range[1]) {\n                            range[1] = y;\n                        }\n                        return range;\n                    },undefined);\n                if(yearRange) {\n                    input.startDate = `${yearRange[0]}-01-01`;\n                    input.endDate = `${yearRange[1]}-12-31`;\n                }\n                return this.speciesService.getSpeciesIds(this.validPlots)\n                    .then(ids => {\n                        input.species = ids;\n                        return input;\n                    });\n            });\n    }\n\n    postProcessData(data: ObservationDatePlotData[]): ObservationDateData {\n        if (!data || !data.length) {\n            return null;\n        }\n        const plots = data.map(d => d.plot);\n        let y = (plots.length * this.years.length) -1;\n        const addDoys = (doys, color) => {\n            doys.forEach(doy => {\n                response.data.push({\n                    y: y,\n                    x: doy,\n                    color: color\n                });\n            });\n        };\n        const response:ObservationDateData = {\n            labels: [],\n            data: []\n        };\n        data.forEach(d => {\n            const plot = d.plot;\n            const group = d.group;\n            const rData:any= d.data;\n            let pPhases = {years:{}}; // empty\n            const pPhaseKey = plot.phenophaseRank === TaxonomicPhenophaseRank.CLASS ? 'pheno_classes' : 'phenophases';\n            if(rData && rData[pPhaseKey] && rData[pPhaseKey].length) {\n                pPhases = rData[pPhaseKey][0];\n            }\n            this.actualYears.forEach(year => {\n                if(pPhases.years[year]) {\n                    if(this.negative) {\n                        addDoys(pPhases.years[year].negative,this.negativeColor);\n                    }\n                    addDoys(pPhases.years[year].positive,plot.color);\n                }\n                const pp = plot.phenophase as any;\n                response.labels.splice(0, 0, \n                    ` ${year}: `+\n                    this.speciesTitle.transform(plot.species,plot.speciesRank) +\n                    ' - '+\n                    (pp.phenophase_name||pp.pheno_class_name)+\n                    (!!group ? ` (${group.label})` : ''));\n                y--;\n            })\n        });\n        console.log('observation data', response);\n        return response;\n    }\n\n    getData(): Promise<ObservationDatePlotData[]> {\n        // work around TypeScript Promise.all issue\n        return this._getData();\n    }\n\n    private _getData(): Promise<any> {\n        if (!this.isValid()) {\n            return Promise.reject(this.INVALID_SELECTION);\n        }\n        const fetchDataForPlot = (baseParams,plot,group?) => {\n            const keys = getSpeciesPlotKeys(plot);\n            let plotParams = baseParams.set(`${keys.speciesIdKey}[0]`,`${plot.species[keys.speciesIdKey]}`)\n                .set(`${keys.phenophaseIdKey}[0]`,`${plot.phenophase[keys.phenophaseIdKey]}`);\n            if((plot.speciesRank||TaxonomicSpeciesRank.SPECIES) !== TaxonomicSpeciesRank.SPECIES) {\n                plotParams = plotParams.set('taxonomy_aggregate','1');\n            }\n            if(plot.phenophaseRank === TaxonomicPhenophaseRank.CLASS) {\n                plotParams = plotParams.set('pheno_class_aggregate','1');\n            }\n            return this.serviceUtils.cachedPost(serviceUrl,plotParams.toString())\n                .then((results:any[]) => {\n                    const data = results[0];\n                    return {plot,data,group};\n                });\n        };\n        this.working = true;\n        const serviceUrl = this.serviceUtils.apiUrl('/npn_portal/observations/getObservationDates.json');\n        return this.toURLSearchParams()\n            // one request per valid plot\n            .then(baseParams => {\n                const validPlots = this.validPlots;\n                return (this.groups && this.groups.length)\n                    ? this.toGroupHttpParams(baseParams)\n                        .then((groupParams:GroupHttpParams[]) => {\n                            let plotIndex = 0;\n                            // just to make TypeScript happy...\n                            const arr:Promise<ObservationDatePlotData>[] = [];\n                            const promises = validPlots.reduce((promises,p) => {\n                                groupParams.forEach(gp => {\n                                    const plot = JSON.parse(JSON.stringify(p));\n                                    plot.color = getStaticColor(plotIndex++);\n                                    promises.push(fetchDataForPlot(gp.params,plot,gp.group));\n                                });\n                                return promises;\n                            },arr);\n                            return Promise.all(promises);\n                        })\n                    : Promise.all(validPlots.map(plot => fetchDataForPlot(baseParams,plot)));\n            })\n            .then(result => {\n                this.working = false;\n                return result;\n            })\n            .catch(err => {\n                this.working = false;\n                this.handleError(err);\n            });\n    }\n}\n","export * from './public_api';","import {Component, Input, OnInit} from '@angular/core';\n\nimport {ObservationFrequencySelection} from './observation-frequency-selection';\nimport { CURRENT_YEAR, CURRENT_YEAR_LABEL } from '../../common';\n\n@Component({\n    selector: 'observation-frequency-control',\n    template:`\n    <mat-form-field class=\"year-input\">\n        <mat-select placeholder=\"Year *\" [(ngModel)]=\"selection.year\" (ngModelChange)=\"selection.update()\">\n            <mat-option *ngFor=\"let y of validYears\" [value]=\"y\">{{y === CURRENT_YEAR ? CURRENT_YEAR_LABEL : y}}</mat-option>\n        </mat-select>\n    </mat-form-field>\n    `,\n    styles:[`\n        .year-input {\n            width: 90px;\n        }\n    `]\n})\nexport class ObservationFrequencyControl implements OnInit {\n    @Input()\n    selection: ObservationFrequencySelection;\n    @Input()\n    allowCurrentYear:boolean = false;\n    CURRENT_YEAR = CURRENT_YEAR;\n    CURRENT_YEAR_LABEL = CURRENT_YEAR_LABEL;\n    \n    validYears:number[] = [];\n\n    ngOnInit() {\n        this.validYears = (function(allowCurrentYear){\n            let max = (new Date()).getFullYear()+1,\n                current = 2000,\n                years:number[] = [];\n            while(current < max) {\n                years.push(current++);\n            }\n            if(allowCurrentYear) {\n                years.push(CURRENT_YEAR);\n            }\n            return years.reverse();\n        })(this.allowCurrentYear);\n    }\n}\n","import {Injectable} from '@angular/core';\nimport {NetworkService,NpnServiceUtils} from '../../common';\n\nimport {ObservationFrequencySelection} from './observation-frequency-selection';\n\n@Injectable()\nexport class ObservationFrequencySelectionFactory {\n    constructor(protected serviceUtils:NpnServiceUtils,protected networkService: NetworkService) {}\n\n    newSelection(): ObservationFrequencySelection {\n        return new ObservationFrequencySelection(this.serviceUtils,this.networkService);\n    }\n}\n","import { NpnServiceUtils, NetworkService, CURRENT_YEAR, CURRENT_YEAR_VALUE } from '../../common';\nimport { StationAwareVisSelection, selectionProperty, GroupHttpParams } from '../vis-selection';\nimport { HttpParams } from '@angular/common/http';\n\nexport interface ObservationFrequencyData {\n    /** The label for the data set. */\n    label: string;\n    /** The corresponding year. */\n    year: number;\n    /** Array of 12 (0=Jan,11=Dec) */\n    months: number[];\n}\n\ninterface SiteVisitFreqStation {\n    months: number[];\n    station_name: string;\n    station_id: number;\n}\ninterface SiteVisitFreq {\n    year: number;\n    station_ids: number[];\n    network_name: string;\n    stations: SiteVisitFreqStation[];\n}\n/**\n * @dynamic\n */\nexport class ObservationFrequencySelection extends StationAwareVisSelection {\n    @selectionProperty()\n    $class:string = 'ObservationFrequencySelection';\n\n    @selectionProperty()\n    $entity:any;\n\n    @selectionProperty()\n    year:number;\n\n    constructor(protected serviceUtils:NpnServiceUtils,protected networkService: NetworkService) {\n        super(serviceUtils,networkService);\n    }\n\n    get actualYear():number {\n        return this.year === CURRENT_YEAR ? CURRENT_YEAR_VALUE : this.year;\n    }\n    \n    isValid():boolean {\n        return !!this.year && this.networkIds.length > 0;\n    }\n\n    toURLSearchParams(params: HttpParams = new HttpParams()): Promise<HttpParams> {\n        return super.toURLSearchParams(params.set('year',`${this.actualYear}`));\n    }\n\n    getData():Promise<ObservationFrequencyData []> {\n        const url = this.serviceUtils.apiUrl('/npn_portal/networks/getSiteVisitFrequency.json');\n        const rollup = (data:SiteVisitFreq,label:string):ObservationFrequencyData => {\n            const year = data.year;\n            const months:number[] = data.stations.reduce((months:number[],station:SiteVisitFreqStation) => {\n                station.months.forEach((m,i) => months[i] += m);\n                return months;\n            },[0,0,0,0,0,0,0,0,0,0,0,0]);\n            return {label,year,months};\n        };\n        this.working = true;\n        if(!this.$entity) {\n            // the selection was created before the phenology trails work and must just contain a single network id\n            // for a refuge, chase it to get the label for the visualization and then the data....\n            return this.serviceUtils.cachedGet(url,{year: this.actualYear,network_id:this.networkIds[0]})\n                .then((result:SiteVisitFreq) => {\n                    this.working = false;\n                    return [rollup(result,result.network_name)];\n                });\n        }\n        return this.toURLSearchParams()\n            .then(baseParams => {\n                if(this.groups && this.groups.length) {\n                    return this.toGroupHttpParams(baseParams)\n                        .then((groupParams:GroupHttpParams[]) => Promise.all(\n                                groupParams.map(gp =>this.serviceUtils.cachedPost(url,gp.params.toString())\n                                    .then((result:SiteVisitFreq) => rollup(result,gp.group.label)))\n                            ).then(data => {\n                                this.working = false;\n                                return data;\n                            }));\n                }\n                return this.serviceUtils.cachedPost(url,baseParams.toString())\n                    .then((result:SiteVisitFreq) => {\n                        this.working = false;\n                        let label = this.$entity.title;\n                        if(this.stationIds && this.stationIds.length) {\n                            // refuge, subset of stations\n                            label += ' (select stations)';\n                        } else if (this.$entity.network_ids && this.networkIds.length !== this.$entity.network_ids.length) {\n                            // phenology trail, subset of groups\n                            label += ' (select groups)';\n                        }\n                        return [rollup(result,label)];\n                    });\n            });\n    }\n}\n","import { Component, Input, ElementRef } from '@angular/core';\nimport { ObservableMedia } from \"@angular/flex-layout\";\n\nimport { VisualizationMargins } from '../visualization-base.component';\nimport { SvgVisualizationBaseComponent, DEFAULT_MARGINS } from '../svg-visualization-base.component';\n\nimport { ObservationFrequencySelection, ObservationFrequencyData } from './observation-frequency-selection';\n\nimport { Axis, axisBottom, axisLeft } from 'd3-axis';\nimport { Selection } from 'd3-selection';\nimport { ScaleBand, scaleBand, ScaleLinear, scaleLinear, ScaleOrdinal, scaleOrdinal } from 'd3-scale';\nimport * as d3 from 'd3';\nimport { getStaticColor } from '../../common';\n\nconst TITLE = 'Site visits by month';\nconst DEFAULT_TOP_MARGIN = 100;\nconst LEGEND_VPAD = 4;\nconst MARGIN_VPAD = 5;\nconst TITLE_FONT_SIZE = 18;\nconst SWATCH_SIZE = 20;\nconst BAR_OPACITY = '0.75';\n\n@Component({\n  selector: 'observation-frequency',\n  templateUrl: '../svg-visualization-base.component.html',\n  styleUrls: ['../svg-visualization-base.component.scss'],\n})\nexport class ObservationFrequencyComponent extends SvgVisualizationBaseComponent {\n    @Input()\n    selection:ObservationFrequencySelection;\n\n    title: Selection<any,any,any,any>;\n\n    x: ScaleBand<number>;\n    xAxis: Axis<number>;\n\n    y: ScaleLinear<number,number>;\n    yAxis: Axis<number>;\n\n    z: ScaleOrdinal<number,string> = scaleOrdinal<number,string>();\n\n    filename:string = 'observation-frequency.png';\n    margins: VisualizationMargins = {...DEFAULT_MARGINS, ...{top: DEFAULT_TOP_MARGIN,left: 80}};\n\n    data:ObservationFrequencyData[];\n\n    constructor(protected rootElement: ElementRef, protected media: ObservableMedia) {\n        super(rootElement,media);\n    }\n\n    protected reset(): void {\n        // dynamic top margins\n        this.margins.top = DEFAULT_TOP_MARGIN;\n        const fontSize:number = this.baseFontSize() as number;\n        const plotCount = this.data ? this.data.length : 0;\n        if(plotCount) {\n            this.margins.top = fontSize+(plotCount*SWATCH_SIZE)+(plotCount*LEGEND_VPAD)+MARGIN_VPAD;\n        }\n        super.reset();\n        const {chart,sizing,svg} = this;\n        const d3_month_fmt = d3.timeFormat('%B');\n        const titleDy = this.margins.top-TITLE_FONT_SIZE-fontSize;\n\n        this.title =  chart.append('g')\n                     .attr('class','chart-title')\n                     .append('text')\n                     .attr('y', '0')\n                     .attr('dy',`-${titleDy}`)\n                     .attr('x', '0')\n                     .style('text-anchor','start')\n                     .style('font-size',`${TITLE_FONT_SIZE}px`);\n\n        this.x = scaleBand<number>().rangeRound([0,sizing.width]).padding(0.05).domain(d3.range(0,12));\n        this.xAxis = axisBottom<number>(this.x).tickFormat(i =>  d3_month_fmt(new Date(1900,i)));\n        this.y = scaleLinear().range([sizing.height,0]).domain([0,20]); // just a default domain\n        this.yAxis = axisLeft<number>(this.y).tickSize(-sizing.width).tickFormat(d3.format('.0d'));\n\n        chart.append('g')\n            .attr('class', 'x axis')\n            .attr('transform', 'translate(0,' + sizing.height + ')')\n            .call(this.xAxis);\n\n        chart.append('g')\n            .attr('class', 'y axis')\n            .call(this.yAxis)\n                .append('text')\n                .attr('fill','#000') // somehow parent g has fill=\"none\"\n                .attr('transform', 'rotate(-90)')\n                .attr('y', '0')\n                .attr('dy','-3em')\n                .attr('x',-1*(sizing.height/2)) // looks odd but to move in the Y we need to change X because of transform\n                .style('text-anchor', 'middle')\n                .text('Site visits');\n\n        this.commonUpdates();\n    }\n\n    protected update(): void {\n        console.debug('ObservationFrequencyComponent.update');\n        this.reset();\n        delete this.data;\n        this.selection.getData()\n            .then(data => {\n                this.data = data;\n                this.reset()\n                this.redraw();\n            })\n            .catch(this.handleError);\n    }\n\n    private updateLegend():void {\n        const {chart,data,sizing,z} = this;\n        chart.select('.legend').remove();\n        if(data && data.length) {\n            const fontSize:number = this.baseFontSize() as number;\n            z.domain(data.map((d,i) => i)).range(data.map((d,i) => getStaticColor(i)));\n            const labels = data.map(d => d.label);\n            const legend = chart.append('g')\n                .attr('class','legend')\n                .attr('transform',`translate(55,-${sizing.margin.top})`)\n                .attr('text-anchor','start')\n                .style('font-size',`${fontSize}px`)\n                .selectAll('g')\n                .data(labels)\n                    .enter().append('g')\n                    // needs to be kept in sync with logic in dynamic margins in reset()\n                    .attr('transform',(d,i) => `translate(10,${fontSize+(i*SWATCH_SIZE)+(i*LEGEND_VPAD)})`);\n            // add legend swatches\n            legend.append('rect')\n                .attr('x',0)\n                .attr('width',SWATCH_SIZE)\n                .attr('height',SWATCH_SIZE)\n                .attr('fill',(d,i) => z(i))\n                .style('opacity',BAR_OPACITY);\n            // add labels\n            legend.append('text')\n                .attr('x',SWATCH_SIZE+4)\n                .attr('y',fontSize)\n                .attr('dy','0.1em')\n                .text(d => d);\n        }\n    }\n\n    protected commonUpdates(): void {\n        super.commonUpdates();\n        const {chart} = this;\n        // undo/change some of the commonUpdates\n        const _yAxis = chart.select('.y.axis');\n        _yAxis.select('path.domain')\n            .attr('stroke','none')\n            .style('stroke','none');\n        _yAxis.selectAll('.tick>line')\n            .attr('stroke',i => i === 0 ? '#000' : '#ddd')\n            .style('stroke',i => i === 0 ? '#000' : '#ddd');\n    }\n\n    protected redrawSvg(): void {\n        if(!this.data) {\n            return;\n        }\n        console.debug('ObservationFrequencyComponent.redrawSvg:data',this.data);\n        this.title.text(`${this.selection.actualYear}`);\n        this.updateLegend();\n        const visData = d3.range(0,12)\n            .map(month => this.data.reduce((map,d,index) => {\n                map[`${index}`] = d.months[month];\n                return map;\n            },{}));\n        const max:number = visData.reduce((max:number,d) => {\n                const sum = Object.values(d).reduce((sum:number,n:number) => (sum+n),0);\n                return sum > max ? sum : max;\n            },0) as number; // TS handing of reduce is stupid\n        const layers = d3.stack().keys(this.data.map((d,i) => `${i}`))(visData);\n        const {chart,y,yAxis,x} = this;\n\n        y.domain([0,max]);\n        yAxis.ticks(max < 11 ? max : 10); // at most 10 ticks\n        chart.selectAll('g .y.axis').call(this.yAxis);\n\n        chart.selectAll('.layer').remove();\n        const layer = chart.selectAll('.layer')\n            .data(layers)\n            .enter()\n            .append('g')\n            .attr('class','layer')\n            .style('fill',(d,i) => this.z(i));\n        layer.selectAll('rect')\n            .data(d => d)\n            .enter()\n            .append('rect')\n                .attr('x',(d,i) => x(i))\n                .attr('y',d => y(d[1]))\n                .attr('height',d => y(d[0]) - y(d[1]))\n                .attr('width',x.bandwidth() -10)\n                .style('opacity',BAR_OPACITY);\n        this.commonUpdates();\n    }\n}","export * from './observation-frequency-selection';\nexport * from './observation-frequency-selection-factory.service';\nexport * from './observation-frequency.component';\nexport * from './observation-frequency-control.component';\n","export * from './public_api';","import {Component, Input, OnInit} from '@angular/core';\n\nimport {ObserverActivitySelection} from './observer-activity-selection';\nimport { CURRENT_YEAR, CURRENT_YEAR_LABEL } from '@npn/common/common';\n\n@Component({\n    selector: 'observer-activity-control',\n    template:`\n    <mat-form-field class=\"year-input\">\n        <mat-select placeholder=\"Year *\" [(ngModel)]=\"selection.year\" (ngModelChange)=\"selection.update()\">\n            <mat-option *ngFor=\"let y of validYears\" [value]=\"y\">{{y === CURRENT_YEAR ? CURRENT_YEAR_LABEL : y}}</mat-option>\n        </mat-select>\n    </mat-form-field>\n    `,\n    styles:[`\n        .year-input {\n            width: 90px;\n        }\n    `]\n})\nexport class ObserverActivityControl implements OnInit {\n    @Input()\n    selection: ObserverActivitySelection;\n    @Input()\n    allowCurrentYear:boolean = false;\n    CURRENT_YEAR = CURRENT_YEAR;\n    CURRENT_YEAR_LABEL = CURRENT_YEAR_LABEL;\n\n    validYears:number[] = [];\n\n    ngOnInit() {\n        this.validYears = (function(allowCurrentYear) {\n            let thisYear = (new Date()).getFullYear(),\n                years: number[] = [],\n                c = 2000;\n            while(c <= thisYear) {\n                years.push(c++);\n            }\n            if(allowCurrentYear) {\n                years.push(CURRENT_YEAR);\n            }\n            return years.reverse();\n        })(this.allowCurrentYear);\n    }\n}\n","import {Injectable} from '@angular/core';\nimport {NpnServiceUtils, NetworkService} from '../../common';\n\nimport {ObserverActivitySelection} from './observer-activity-selection';\n\n@Injectable()\nexport class ObserverActivitySelectionFactory {\n    constructor(protected serviceUtils:NpnServiceUtils,protected networkService:NetworkService) {}\n\n    newSelection(): ObserverActivitySelection {\n        return new ObserverActivitySelection(this.serviceUtils,this.networkService);\n    }\n}\n","import { NpnServiceUtils, NetworkService, CURRENT_YEAR, CURRENT_YEAR_VALUE } from '../../common';\nimport { selectionProperty, StationAwareVisSelection, GroupHttpParams } from '../vis-selection';\nimport { HttpParams } from '@angular/common/http';\n\nexport interface ObserverActivityMonth {\n    /** Month (1-12) */\n    month:number;\n    /** Number of new observers */\n    newObservers:number;\n    /** Number of active observers */\n    activeObservers:number;\n}\n\nexport interface ObserverActivityData {\n    /** The label for the data set. */\n    label: string;\n    /** The corresponding year. */\n    year: number;\n    /** Array of 12 (ordered) */\n    months: ObserverActivityMonth[];\n    // TODO how do we label a non-grouped data set....\n    // previously simply relied on network_name as returned by the server....\n}\n\nexport enum ObserverActivityVisMode {\n    NEW_OBSERVERS = 'New Observers',\n    ACTIVE_OBSERVERS = 'Active Observers'\n};\n\nexport class ObserverActivitySelection extends StationAwareVisSelection {\n    @selectionProperty()\n    $class:string = 'ObserverActivitySelection';\n\n    @selectionProperty()\n    $entity:any;\n\n    @selectionProperty()\n    year:number;\n\n    @selectionProperty()\n    mode:ObserverActivityVisMode = ObserverActivityVisMode.ACTIVE_OBSERVERS;\n\n    constructor(protected serviceUtils:NpnServiceUtils,protected networkService:NetworkService) {\n        super(serviceUtils,networkService);\n    }\n\n    isValid():boolean {\n        return !!this.year;\n    }\n\n    get actualYear():number {\n        return this.year === CURRENT_YEAR ? CURRENT_YEAR_VALUE : this.year;\n    }\n\n    toURLSearchParams(params: HttpParams = new HttpParams()): Promise<HttpParams> {\n        return super.toURLSearchParams(params.set('year',`${this.actualYear}`));\n    }\n\n    getData():Promise<ObserverActivityData[]> {\n        const url = this.serviceUtils.apiUrl('/npn_portal/networks/getObserversByMonth.json');\n        // pulls data for a given month from a server response\n        const dataForMonth = (month:number,data:any):ObserverActivityMonth => ({\n            month,\n            newObservers: data.months[month].new_observers.length,\n            activeObservers: data.months[month].active_observers.length\n        });\n        this.working = true;\n        // if $entity is not set then this selection was created prior to the phenology trail\n        // work and so needs to behave as it did previously, only single network id, etc.\n        if(!this.$entity) {\n            return this.serviceUtils.cachedGet(url,{year: this.actualYear,network_id: this.networkIds[0]})\n                .then(data => {\n                    this.working = false;\n                    data.label = `${data.network_name}`;\n                    data.months = [1,2,3,4,5,6,7,8,9,10,11,12].map(i => dataForMonth(i,data));\n                    const d = data as ObserverActivityData;\n                    return [d];\n                });\n        }\n        // $entity is set this is a new selection that can deal with\n        return this.toURLSearchParams()\n            .then(baseParams => {\n                if(this.groups && this.groups.length) {\n                    return this.toGroupHttpParams(baseParams)\n                        .then((groupParams:GroupHttpParams[]) => Promise.all(\n                            groupParams.map(gp => this.serviceUtils.cachedPost(url,gp.params.toString())\n                                .then(data => {\n                                    data.label = gp.group.label;\n                                    data.months = [1,2,3,4,5,6,7,8,9,10,11,12].map(i => dataForMonth(i,data));\n                                    const d = data as ObserverActivityData;\n                                    return d;\n                                }))\n                        )).then((results:ObserverActivityData[]) => {\n                            this.working = false;\n                            return results;\n                        })\n                }\n                // a single data set\n                return this.serviceUtils.cachedPost(url,baseParams.toString())\n                    .then(data => {\n                        this.working = false;\n                        let label = this.$entity.title;\n                        if(this.stationIds && this.stationIds.length) {\n                            // refuge, subset of stations\n                            label += ' (select stations)';\n                        } else if (this.$entity.network_ids && this.networkIds.length !== this.$entity.network_ids.length) {\n                            // phenology trail, subset of groups\n                            label += ' (select groups)';\n                        }\n                        data.label = label;\n                        data.months = [1,2,3,4,5,6,7,8,9,10,11,12].map(i => dataForMonth(i,data));\n                        const d = data as ObserverActivityData;\n                        return [d];\n                    });\n            });\n    }\n}\n","module.exports = \"<div class=\\\"vis-container\\\">\\n    <div class=\\\"vis-working\\\" *ngIf=\\\"selection.working\\\">\\n        <npn-logo spin=\\\"false\\\"></npn-logo>\\n    </div>\\n    <div class=\\\"chart-container\\\">\\n        <visualization-download *ngIf=\\\"!thumbnail && !mobileMode\\\" svgWrapperId=\\\"{{id}}\\\" filename=\\\"{{filename}}\\\"></visualization-download>\\n        <div [class]=\\\"clazz\\\" id=\\\"{{id}}\\\"><svg class=\\\"svg-visualization\\\"></svg></div>\\n    </div>\\n    <mat-radio-group style=\\\"display:block; margin-top: 10px;\\\" *ngIf=\\\"!thumbnail\\\"\\n        [(ngModel)]=\\\"selection.mode\\\"\\n        (change)=\\\"redraw()\\\">\\n        <mat-radio-button [value]=\\\"modes.ACTIVE_OBSERVERS\\\" style=\\\"margin-right: 5px;\\\">{{modes.ACTIVE_OBSERVERS}}</mat-radio-button>\\n        <mat-radio-button [value]=\\\"modes.NEW_OBSERVERS\\\">{{modes.NEW_OBSERVERS}}</mat-radio-button>\\n    </mat-radio-group>\\n</div>\\n\"","import { Component, Input, ElementRef } from '@angular/core';\nimport { ObservableMedia } from \"@angular/flex-layout\";\n\nimport { VisualizationMargins } from '../visualization-base.component';\nimport { SvgVisualizationBaseComponent, DEFAULT_MARGINS } from '../svg-visualization-base.component';\n\nimport { ObserverActivitySelection, ObserverActivityData, ObserverActivityVisMode } from './observer-activity-selection';\n\nimport { Axis, axisBottom, axisLeft } from 'd3-axis';\nimport { Selection } from 'd3-selection';\nimport { ScaleBand, scaleBand, ScaleLinear, scaleLinear, ScaleOrdinal, scaleOrdinal } from 'd3-scale';\nimport * as d3 from 'd3';\nimport { getStaticColor } from '../../common';\n\nconst DEFAULT_TOP_MARGIN = 100;\nconst LEGEND_VPAD = 4;\nconst MARGIN_VPAD = 5;\nconst TITLE_FONT_SIZE = 18;\nconst SWATCH_SIZE = 20;\nconst BAR_OPACITY = '0.75';\n\n@Component({\n  selector: 'observer-activity',\n  templateUrl: './observer-activity.component.html',\n  styleUrls: ['../svg-visualization-base.component.scss']\n})\nexport class ObserverActivityComponent extends SvgVisualizationBaseComponent {\n    modes = ObserverActivityVisMode;\n\n    @Input()\n    selection:ObserverActivitySelection;\n\n    title: Selection<any,any,any,any>;\n    tooltip: Selection<any,any,any,any>;\n    x: ScaleBand<number>;\n    xAxis: Axis<number>;\n    yAxisLabel;\n\n    y: ScaleLinear<number,number>;\n    yAxis: Axis<number>;\n\n    z: ScaleOrdinal<number,string> = scaleOrdinal<number,string>();\n\n    filename:string = 'observer-activity.png';\n    margins: VisualizationMargins = {...DEFAULT_MARGINS, ...{top: DEFAULT_TOP_MARGIN,left: 80}};\n\n    data:ObserverActivityData[];\n\n    constructor(protected rootElement: ElementRef, protected media: ObservableMedia) {\n        super(rootElement,media);\n    }\n\n    protected reset(): void {\n        // dynamic top margins\n        this.margins.top = DEFAULT_TOP_MARGIN;\n        const fontSize:number = this.baseFontSize() as number;\n        const plotCount = this.data ? this.data.length : 0;\n        if(plotCount) {\n            this.margins.top = fontSize+(plotCount*SWATCH_SIZE)+(plotCount*LEGEND_VPAD)+MARGIN_VPAD;\n        }\n        super.reset();\n        const {chart,sizing,svg} = this;\n        const d3_month_fmt = d3.timeFormat('%B');\n        const titleDy = this.margins.top-TITLE_FONT_SIZE-fontSize;\n\n        this.title =  chart.append('g')\n                     .attr('class','chart-title')\n                     .append('text')\n                     .attr('y', '0')\n                     .attr('dy',`-${titleDy}`)\n                     .attr('x', '0')\n                     .style('text-anchor','start')\n                     .style('font-size',`${TITLE_FONT_SIZE}px`);\n\n        this.x = scaleBand<number>().rangeRound([0,sizing.width]).padding(0.05).domain(d3.range(0,12));\n        this.xAxis = axisBottom<number>(this.x).tickFormat((i) => d3_month_fmt(new Date(1900,i)));\n        this.y = scaleLinear().range([sizing.height,0]).domain([0,20]); // just a default domain\n        this.yAxis = axisLeft<number>(this.y)\n            .tickSize(-sizing.width)\n            .tickFormat(d3.format('.0d'));\n\n        chart.append('g')\n            .attr('class', 'x axis')\n            .attr('transform', 'translate(0,' + sizing.height + ')')\n            .call(this.xAxis);\n\n        this.yAxisLabel = chart.append('g')\n            .attr('class', 'y axis')\n            .call(this.yAxis)\n                .append('text')\n                .attr('fill','#000') // somehow parent g has fill=\"none\"\n                .attr('transform', 'rotate(-90)')\n                .attr('y', '0')\n                .attr('dy','-3em')\n                .attr('x',-1*(sizing.height/2)) // looks odd but to move in the Y we need to change X because of transform\n                .style('text-anchor', 'middle');\n\n        this.tooltip = svg.append('g')\n            .attr('class','tooltip')\n            .style('display','none');\n        this.tooltip.append(\"rect\")\n            .attr(\"width\", 60)\n            .attr(\"height\", 20)\n            .attr(\"fill\", \"white\")\n            .style(\"opacity\", 0.5);\n        this.tooltip.append(\"text\")\n            .attr(\"x\", 30)\n            .attr(\"dy\", \"1.2em\")\n            .style(\"text-anchor\", \"middle\")\n            .attr(\"font-size\", \"12px\")\n            .attr(\"font-weight\", \"bold\");\n        this.commonUpdates();\n    }\n\n    protected update(): void {\n        this.reset();\n        this.selection.getData()\n            .then(data => {\n                this.data = data;\n                this.reset();\n                this.redraw();\n            })\n            .catch(this.handleError);\n    }\n\n    private updateLegend():void {\n        const {chart,data,sizing,z} = this;\n        chart.select('.legend').remove();\n        if(data && data.length) {\n            const fontSize:number = this.baseFontSize() as number;\n            z.domain(data.map((d,i) => i)).range(data.map((d,i) => getStaticColor(i)));\n            const labels = data.map(d => d.label);\n            const legend = chart.append('g')\n                .attr('class','legend')\n                .attr('transform',`translate(55,-${sizing.margin.top})`)\n                .attr('text-anchor','start')\n                .style('font-size',`${fontSize}px`)\n                .selectAll('g')\n                .data(labels)\n                    .enter().append('g')\n                    // needs to be kept in sync with logic in dynamic margins in reset()\n                    .attr('transform',(d,i) => `translate(10,${fontSize+(i*SWATCH_SIZE)+(i*LEGEND_VPAD)})`);\n            // add legend swatches\n            legend.append('rect')\n                .attr('x',0)\n                .attr('width',SWATCH_SIZE)\n                .attr('height',SWATCH_SIZE)\n                .attr('fill',(d,i) => z(i))\n                .style('opacity',BAR_OPACITY);\n            // add labels\n            legend.append('text')\n                .attr('x',SWATCH_SIZE+4)\n                .attr('y',fontSize)\n                .attr('dy','0.1em')\n                .text(d => d);\n        }\n    }\n\n    protected commonUpdates(): void {\n        super.commonUpdates();\n        const {chart} = this;\n        // undo/change some of the commonUpdates\n        const _yAxis = chart.select('.y.axis');\n        _yAxis.select('path.domain')\n            .attr('stroke','none')\n            .style('stroke','none');\n        _yAxis.selectAll('.tick>line')\n            .attr('stroke',i => i === 0 ? '#000' : '#ddd')\n            .style('stroke',i => i === 0 ? '#000' : '#ddd');\n    }\n\n    protected redrawSvg(): void {\n        if(!this.data) {\n            return;\n        }\n        console.debug('ObserverActivityComponent:data',this.data);\n        this.title.text(`${this.selection.actualYear}`);\n        this.yAxisLabel.text(this.selection.mode);\n        this.updateLegend();\n        const dataKey = this.selection.mode === ObserverActivityVisMode.ACTIVE_OBSERVERS ? 'activeObservers' : 'newObservers';\n        const visData = d3.range(0,12)\n            .map(month => this.data.reduce((map,d,index) => {\n                map[`${index}`] = d.months[month][dataKey];\n                return map;\n            },{}));\n        const max:number = visData.reduce((max:number,d) => {\n                const sum = Object.values(d).reduce((sum:number,n:number) => (sum+n),0);\n                return sum > max ? sum : max;\n            },0) as number; // TS handing of reduce is stupid\n        const layers = d3.stack().keys(this.data.map((d,i) => `${i}`))(visData);\n        const {chart,y,yAxis,x,tooltip,sizing} = this;\n\n        y.domain([0,max]);\n        yAxis.ticks(max < 11 ? max : 10); // at most 10 ticks\n        chart.selectAll('g .y.axis').call(this.yAxis);\n\n        chart.selectAll('.layer').remove();\n        const layer = chart.selectAll('.layer')\n            .data(layers)\n            .enter()\n            .append('g')\n            .attr('class','layer')\n            .style('fill',(d,i) => this.z(i));\n        layer.selectAll('rect')\n            .data(d => d)\n            .enter()\n            .append('rect')\n                .attr('x',(d,i) => x(i))\n                .attr('y',d => y(d[1]))\n                .attr('height',d => y(d[0]) - y(d[1]))\n                .attr('width',x.bandwidth() -10)\n                .style('opacity',BAR_OPACITY);\n            /* tooltips not working nicely, flashing\n            .on('mouseover', () => tooltip.style('display',null))\n            .on('mouseout', () => tooltip.style('display','none'))\n            .on('mousemove', function(d) {\n                const container = this as d3.ContainerElement;\n                var xPosition = d3.mouse(container)[0] + sizing.margin.left - 5;\n                var yPosition = d3.mouse(container)[1] + sizing.margin.top - 5;\n                tooltip.attr('transform',`translate(${xPosition},${yPosition})`);\n                tooltip.select('text').text(d[1]-d[0]);\n            });*/\n        this.commonUpdates();\n    }\n}\n","export * from './observer-activity-selection';\nexport * from './observer-activity-selection-factory.service';\nexport * from './observer-activity.component';\nexport * from './observer-activity-control.component';\n","export { VisSelection, NetworkAwareVisSelection, StationAwareVisSelection } from './vis-selection';\nexport { VisualizationSelectionFactory } from './visualization-selection-factory.service';\nexport * from './visualizations.module';\nexport * from './calendar/public_api';\nexport * from './scatter-plot/public_api';\nexport * from './activity-curves/public_api';\nexport * from './clipped-wms-map/public_api';\nexport * from './observer-activity/public_api';\nexport * from './observation-frequency/public_api';\nexport * from './agdd-time-series/public_api';\nexport * from './map/public_api';\nexport * from './common-controls';\n","export * from './public_api';","export {ScatterPlotSelection,AXIS} from './scatter-plot-selection';\nexport {ScatterPlotSelectionFactory} from './scatter-plot-selection-factory.service';\nexport {ScatterPlotComponent} from './scatter-plot.component';\nexport {ScatterPlotControlsComponent as ScatterPlotControls} from './scatter-plot-controls.component';\n","import {Component, Input } from '@angular/core';\n\nimport {ScatterPlotSelection,AXIS} from './scatter-plot-selection';\nimport { HigherSpeciesPhenophaseInputCriteria } from '../common-controls';\nimport * as d3 from 'd3';\nimport { MonitorsDestroy } from '@npn/common/common';\nimport { takeUntil, filter, debounceTime } from 'rxjs/operators';\nimport { VisSelectionEvent } from '../vis-selection';\nimport { faExclamationTriangle } from '@fortawesome/pro-light-svg-icons';\n\n@Component({\n    selector: 'scatter-plot-control',\n    template: `\n    <div *ngIf=\"!selection.canAddPlot\" class=\"max-plots-reached\"><fa-icon [icon]=\"faExclamationTriangle\"></fa-icon> One more plot would exceed the maximum of {{selection.MAX_PLOTS}} allowed</div>\n    <year-range-input [allowCurrentYear]=\"allowCurrentYear\" [(start)]=\"selection.start\" [(end)]=\"selection.end\" (onStartChange)=\"yearChange()\" (onEndChange)=\"yearChange()\"></year-range-input>\n\n    <div class=\"phenophase-input-wrapper\" *ngFor=\"let spi of selection.plots; index as idx\">\n        <higher-species-phenophase-input\n            gatherColor=\"true\"\n            [selection]=\"selection\"\n            [criteria]=\"criteria\"\n            [plot]=\"spi\"\n            (plotChange)=\"selection.update()\">\n        </higher-species-phenophase-input>\n        <button *ngIf=\"selection.plots.length > 1\" mat-button class=\"remove-plot\" (click)=\"removePlot(idx)\">Remove</button>\n        <button *ngIf=\"idx === (selection.plots.length-1)\" mat-button class=\"add-plot\" [disabled]=\"!plotsValid() || !selection.canAddPlot\" (click)=\"addPlot()\">Add</button>\n    </div>\n\n    <div>\n        <mat-form-field>\n            <mat-select placeholder=\"X Axis\" name=\"xAxis\" [(ngModel)]=\"selection.axis\" (ngModelChange)=\"redrawChange()\">\n              <mat-option *ngFor=\"let a of axis\" [value]=\"a\">{{a.label}}</mat-option>\n            </mat-select>\n        </mat-form-field>\n\n        <mat-checkbox [(ngModel)]=\"selection.regressionLines\" (change)=\"redrawChange()\">Fit Lines</mat-checkbox>\n\n        <mat-checkbox [(ngModel)]=\"selection.individualPhenometrics\" (change)=\"selection.update()\">Use Individual Phenometrics</mat-checkbox>\n    </div>\n    `,\n    styles: [`\n        year-range-input,\n        .phenophase-input-wrapper {\n            display: block;\n            margin-top: 15px;\n        }\n        mat-form-field,\n        mat-checkbox {\n            padding-right: 10px;\n        }\n    `]\n})\nexport class ScatterPlotControlsComponent extends MonitorsDestroy {\n    @Input()\n    selection: ScatterPlotSelection;\n    @Input()\n    allowCurrentYear:boolean = false;\n    axis = AXIS;\n    criteria:HigherSpeciesPhenophaseInputCriteria;\n\n    faExclamationTriangle = faExclamationTriangle;\n\n    ngOnInit() {\n        this.selection.pipe(\n            filter(event => event === VisSelectionEvent.SCOPE_CHANGE),\n            debounceTime(500),\n            takeUntil(this.componentDestroyed)\n        ).subscribe(() => this.updateCriteria());\n        \n        if(this.selection.plots.length === 0) {\n            this.addPlot();\n        }\n        setTimeout(() => this.updateCriteria());\n    }\n\n    yearChange() {\n        this.updateCriteria();\n        this.selection.update();\n    }\n\n    updateCriteria() {\n        this.criteria = {\n            years: d3.range(this.selection.start,this.selection.actualEnd+1),\n            stationIds: this.selection.getStationIds()\n        };\n    }\n\n    redrawChange(change?) {\n        if(change && !change.oldValue && change.newValue) { // e.g. no color to a color means a plot that wasn't valid is now potentially valid.\n            this.selection.update();\n        } else {\n            this.selection.redraw();\n        }\n    }\n\n    addPlot() {\n        this.selection.plots.push({});\n    }\n\n    removePlot(index:number) {\n        this.selection.plots.splice(index,1);\n        this.selection.update();\n    }\n\n    plotsValid() {\n        return this.selection.plots.length === this.selection.validPlots.length;\n    }\n}\n","import { Injectable } from '@angular/core';\nimport { NpnServiceUtils, SpeciesService, NetworkService } from '../../common';\nimport { ScatterPlotSelection } from './scatter-plot-selection';\n\n@Injectable()\nexport class ScatterPlotSelectionFactory {\n    constructor(\n        private serviceUtils:NpnServiceUtils,\n        private speciesService:SpeciesService,\n        private networkService:NetworkService) {}\n\n    newSelection(): ScatterPlotSelection {\n        return new ScatterPlotSelection(this.serviceUtils,this.speciesService,this.networkService);\n    }\n}\n","import { NULL_DATA, ONE_DAY_MILLIS, selectionProperty, POPInput, BASE_POP_INPUT } from '../vis-selection';\nimport { SiteOrSummaryVisSelection, SiteOrSummaryPlotData } from '../site-or-summary-vis-selection';\nimport { HttpParams } from '@angular/common/http';\nimport * as d3 from 'd3';\nimport { CURRENT_YEAR, CURRENT_YEAR_VALUE } from '@npn/common/common';\n\nconst KEYS_TO_NORMALIZE  = {\n    daylength: 'mean_daylength',\n    acc_prcp: 'mean_accum_prcp',\n    gdd: 'mean_gdd'\n};\n\nexport const AXIS = [\n    {key: 'latitude', label: 'Latitude', axisFmt: d3.format('.2f')},\n    {key: 'longitude', label: 'Longitude', axisFmt: d3.format('.2f')},\n    {key:'elevation_in_meters',label:'Elevation (m)'},\n    {key:'fyy', label: 'Year'},\n\n    {key:'prcp_fall',label:'Precip Fall (mm)'},\n    {key:'prcp_spring',label:'Precip Spring (mm)'},\n    {key:'prcp_summer',label:'Precip Summer (mm)'},\n    {key:'prcp_winter',label:'Precip Winter (mm)'},\n\n    {key:'tmax_fall',label:'Tmax Fall (C\\xB0)'},\n    {key:'tmax_spring',label:'Tmax Spring (C\\xB0)'},\n    {key:'tmax_summer',label:'Tmax Summer (C\\xB0)'},\n    {key:'tmax_winter',label:'Tmax Winter (C\\xB0)'},\n\n    {key:'tmin_fall',label:'Tmin Fall (C\\xB0)'},\n    {key:'tmin_spring',label:'Tmin Spring (C\\xB0)'},\n    {key:'tmin_summer',label:'Tmin Summer (C\\xB0)'},\n    {key:'tmin_winter',label:'Tmin Winter (C\\xB0)'},\n\n    {key:'daylength',label:'Day Length (s)'},\n    {key:'acc_prcp',label:'Accumulated Precip (mm)'},\n    {key:'gdd',label:'AGDD'}\n];\n\n/**\n * @dynamic\n */\nexport class ScatterPlotSelection extends SiteOrSummaryVisSelection {\n    $supportsPop:boolean = true;\n\n    @selectionProperty()\n    $class:string = 'ScatterPlotSelection';\n\n    @selectionProperty()\n    start: number = 2011;\n    @selectionProperty()\n    end: number = (new Date()).getFullYear();\n    @selectionProperty()\n    regressionLines: boolean = false;\n    @selectionProperty()\n    _axis:any = AXIS[0];\n    @selectionProperty()\n    _minDoy:number = 1;\n    @selectionProperty()\n    _maxDoy:number = 365;\n\n    /** The maximum number of plots we want to allow. */\n    readonly MAX_PLOTS:number = 6;\n\n    private d3DateFormat = d3.timeFormat('%x');\n\n    get actualEnd():number {\n        return this.end === CURRENT_YEAR ? CURRENT_YEAR_VALUE : this.end;\n    }\n    /**\n     * Indicates whether or not adding one more plot will result in a visualization exceeding\n     * the maximum number of allowed plots.\n     */\n    get canAddPlot():boolean {\n        const groups = this.groups ? this.groups.length : 0;\n        const next_plots = (this.plots ? this.plots.length : 0)+1;\n        const next_count = groups ? (groups * next_plots) : next_plots;\n        return next_count <= this.MAX_PLOTS;\n    }    \n\n    get minDoy():number { return this._minDoy; }\n    set minDoy(doy:number) {\n        this._minDoy = doy;\n        this.redraw();\n    }\n\n    get maxDoy():number { return this._maxDoy; }\n    set maxDoy(doy:number) {\n        this._maxDoy = doy;\n        this.redraw();\n    }\n\n    set axis(a:any) {\n        if(a) {\n            // an axis may hold axisFmt and if this selection is \n            // deserialized then it won't be in that array\n            this._axis = AXIS.indexOf(a) !== -1\n                ? a\n                : AXIS.find(ax => a.key === ax.key);\n        } else {\n            this._axis = a;\n        }\n    }\n\n    get axis():any {\n        return this._axis;\n    }\n\n    isValid():boolean {\n        return this.start &&\n               this.actualEnd &&\n               this.axis &&\n               (this.start <= this.actualEnd) &&\n               this.validPlots.length > 0;\n    }\n\n    toURLSearchParams(params: HttpParams = new HttpParams()): Promise<HttpParams> {\n        params = params.set('climate_data','1')\n                    .set('request_src','npn-vis-scatter-plot')\n                    .set('start_date',`${this.start}-01-01`)\n                    .set('end_date',`${this.actualEnd}-12-31`);\n        return super.toURLSearchParams(params);\n    }\n\n    toPOPInput(input:POPInput = {...BASE_POP_INPUT}):Promise<POPInput> {\n        return super.toPOPInput(input)\n            .then(input => {\n                input.startDate = `${this.start}-01-01`;\n                input.endDate = `${this.actualEnd}-12-31`;\n                return input;\n            });\n    }\n\n    doyDateFormat(doy:number):string {\n        let start = new Date(this.start,0,1),\n            time = ((doy-1)*ONE_DAY_MILLIS)+start.getTime(), // TODO, not enforcing that start/end be midnight on Jan 1\n            date = new Date(time);\n        return this.d3DateFormat(date);\n    }\n\n    // data access functions, not sure if the functionality here is too specific\n    // to the visualization of the resulting data so should be held somewhere else\n    // but it's here for now\n    getDoy(d): any {\n        return this.individualPhenometrics ? d.first_yes_doy : d.mean_first_yes_doy;\n    }\n\n    getFirstYesYear(d): any {\n        return this.individualPhenometrics ? d.first_yes_year : d.mean_first_yes_year;\n    }\n\n    axisData(d:any):number {\n        return d[this.axis.key];\n    }\n\n    axisNonNull(data:any[]): any[] {\n        return data.filter((d) => {\n            return this.axisData(d) !== NULL_DATA;\n        });\n    }\n\n    postProcessData(data:SiteOrSummaryPlotData[]):any[] {\n        const {start,minDoy,maxDoy} = this;\n        return data.reduce((result,plotData) => {\n                const filtered = plotData.data.filter(d => {\n                        const doy = this.getDoy(d);\n                        return doy >= minDoy && doy <= maxDoy;\n                    })\n                    .map(d => {\n                        d.color = plotData.plot.color;\n                        d.fyy = this.getFirstYesYear(d);\n                        for(let summaryKey in KEYS_TO_NORMALIZE) {\n                            if(typeof(d[summaryKey]) === 'undefined') {\n                                d[summaryKey] = d[KEYS_TO_NORMALIZE[summaryKey]];\n                            }\n                        }\n                        // this is the day # that will get plotted 1 being the first day of the start_year\n                        // 366 being the first day of start_year+1, etc.\n                        d.day_in_range = ((d.fyy-start)*365)+this.getDoy(d);\n                        return d;\n                    });\n                return result.concat(filtered);\n            },[]).map((d,i) => {\n                d.id = i;\n                return d;\n            });\n    }\n}\n","import { Component, Input, ElementRef } from '@angular/core';\n\nimport { ObservableMedia } from \"@angular/flex-layout\";\n\nimport { TaxonomicSpeciesTitlePipe, getSpeciesPlotKeys } from '../../common';\nimport { VisualizationMargins } from '../visualization-base.component';\nimport { SvgVisualizationBaseComponent, DEFAULT_MARGINS } from '../svg-visualization-base.component';\n\nimport { ScatterPlotSelection } from './scatter-plot-selection';\n\nimport { Axis, axisBottom, axisLeft } from 'd3-axis';\nimport { Selection } from 'd3-selection';\nimport { ScaleLinear, scaleLinear } from 'd3-scale';\nimport * as d3 from 'd3';\nimport { SiteOrSummaryPlotData } from '../site-or-summary-vis-selection';\n\nconst DEFAULT_TOP_MARGIN = 80;\nconst LEGEND_VPAD = 4;\nconst MARGIN_VPAD = 5;\n\n@Component({\n  selector: 'scatter-plot',\n  templateUrl: '../svg-visualization-base.component.html',\n  styleUrls: ['../svg-visualization-base.component.scss'],\n  /*styles: [` // really because of the \"inline styles\" there's no big need to categorize things...\n      .visualization.ScatterPlotComponent {\n              border: 1px solid red;\n      }\n  `]*/\n})\nexport class ScatterPlotComponent extends SvgVisualizationBaseComponent {\n    @Input() selection : ScatterPlotSelection;\n\n    title: Selection<any,any,any,any>;\n\n    x: ScaleLinear<number,number>;\n    xAxis: Axis<number>;\n\n    y: ScaleLinear<number,number>;\n    yAxis: Axis<number>;\n\n    defaultAxisFormat = d3.format('d');\n    dateFormat = d3.timeFormat('%x');\n\n    filename:string = 'scatter-plot.png';\n    // https://www.typescriptlang.org/docs/handbook/release-notes/typescript-2-1.html#object-spread-and-rest\n    // similar to _|angular.extend\n    margins: VisualizationMargins = {...DEFAULT_MARGINS, ...{top: DEFAULT_TOP_MARGIN,left: 60}};\n\n    private data:SiteOrSummaryPlotData[];\n\n    constructor(protected rootElement: ElementRef, protected media:ObservableMedia, protected speciesTitle: TaxonomicSpeciesTitlePipe) {\n        super(rootElement,media);\n    }\n\n    protected reset(): void {\n        this.margins.top = DEFAULT_TOP_MARGIN;\n        const fontSize = this.baseFontSize() as number;\n        const plotCount = this.data ? this.data.length : 0;\n        if(plotCount) {\n            this.margins.top = ((plotCount+1)*fontSize)+(plotCount*LEGEND_VPAD)+MARGIN_VPAD;\n        }\n        super.reset();\n        const {chart,sizing} = this;\n        const titleFontSize = 18;\n        const titleDy = this.margins.top-titleFontSize-fontSize;\n        this.title =  chart.append('g')\n                     .attr('class','chart-title')\n                     .append('text')\n                     .attr('y', '0')\n                     .attr('dy',`-${titleDy}`)\n                     .attr('x', '-2.5em')\n                     .style('text-anchor','start')\n                     .style('font-size',`${titleFontSize}px`);\n        this.x = scaleLinear().range([0,sizing.width]).domain([0,100]);\n        this.xAxis = axisBottom<number>(this.x).tickFormat((i) => this.defaultAxisFormat(i));\n        this.y = scaleLinear().range([sizing.height,0]).domain([1,365]);\n        this.yAxis = axisLeft<number>(this.y);\n\n        chart.append('g')\n            .attr('class', 'x axis')\n            .attr('transform', 'translate(0,' + sizing.height + ')')\n            .call(this.xAxis);\n\n        chart.append('g')\n            .attr('class', 'y axis')\n            .call(this.yAxis)\n          .append('text')\n          .attr('fill','#000') // somehow parent g has fill=\"none\"\n          .attr('transform', 'rotate(-90)')\n          .attr('y', '0')\n          .attr('dy','-3em')\n          .attr('x',-1*(sizing.height/2)) // looks odd but to move in the Y we need to change X because of transform\n          .style('text-anchor', 'middle')\n          .text('Onset Day of Year');\n\n        this.commonUpdates();\n    }\n\n    protected update(): void {\n        this.reset();\n        this.selection.getData().then((data) => {\n            this.data = data;\n            this.redraw();\n        })\n        .catch(e => this.handleError(e));\n    }\n\n    protected redrawSvg():void {\n        if(!this.data) {\n            return;\n        }\n        let processedData = this.selection.postProcessData(this.data),\n            padding = 1,\n            selection = this.selection,\n            nonNullData = selection.axisNonNull(processedData),\n            getX = d => selection.axisData(d),\n            getY = d => selection.getDoy(d), // dataFunc\n            extent = d3.extent(nonNullData,getX),\n            formatXTickLabels = selection.axis.axisFmt||this.defaultAxisFormat;\n\n        this.title.text(`${selection.start} - ${selection.actualEnd}`);\n\n        this.x.domain([extent[0]-padding,extent[1]+padding]);\n        this.xAxis.scale(this.x).tickFormat(d3.format('.2f')); // TODO per-selection tick formatting\n        let xA = this.chart.selectAll('g .x.axis');\n        xA.call(this.xAxis.tickFormat(formatXTickLabels));\n        xA.selectAll('.axis-label').remove();\n        xA.append('text')\n          .attr('class','axis-label')\n          .attr('x',(this.sizing.width/2))\n          .attr('dy', '3em')\n          .attr('fill','#000')\n          .style('text-anchor', 'middle')\n          .style('font-size', '12px')\n          .text(this.selection.axis.label);\n\n        this.y.domain([this.selection.minDoy||1,this.selection.maxDoy||365]);\n        this.chart.selectAll('g .y.axis').call(this.yAxis);\n\n        this.chart.selectAll('.circle').remove();\n        let circles = this.chart.selectAll('.circle').data(nonNullData,(d:any) => d.id)\n            .enter().append('circle')\n            .attr('class', 'circle')\n            .style('stroke','#333')\n            .style('stroke-width','1');\n\n        circles.attr('cx', d => this.x(getX(d)))\n              .attr('cy', d => this.y(getY(d)))\n              .attr('r', '5')\n              .attr('fill',d => d.color)\n              .on('click',d => {\n                    if (d3.event.defaultPrevented){\n                        return;\n                    }\n                    this.record = d;\n                })\n              .append('title')\n              .text(d => `${selection.doyDateFormat(d.day_in_range)} [${d.latitude},${d.longitude}]`);\n\n        this.chart.selectAll('.regression').remove();\n        const plots = this.data.map(d => d.plot);\n        plots.forEach(plot => delete plot.regressionLine);\n        if(this.selection.regressionLines) {\n            let regressionLines = [];\n            plots.forEach(plot => {\n                let series = nonNullData.filter(d => d.color === plot.color);\n                if(series.length) {\n                    const keys = getSpeciesPlotKeys(plot);\n                    regressionLines.push(plot.regressionLine = new RegressionLine(\n                        `${plot.species[keys.speciesIdKey]}.${plot.phenophase[keys.phenophaseIdKey]}`,\n                        plot.color,\n                        series,\n                        getX, getY\n                    ));\n                }\n            });\n            let regression = this.chart.selectAll('.regression')\n                .data(regressionLines,(d:any) => d.id)\n                .enter().append('line')\n                .attr('class','regression');\n            regression\n                //.attr('data-legend',function(d) { return d.legend; } )\n                .attr('x1', d => this.x(d.p1[0]))\n                .attr('y1', d => this.y(d.p1[1]))\n                .attr('x2', d => this.x(d.p2[0]))\n                .attr('y2', d => this.y(d.p2[1]))\n                .attr('fill', d => d.color)\n                .attr('stroke', d => d.color)\n                .attr('stroke-width', 2);\n        }\n\n        this.chart.select('.legend').remove();\n        let legend = this.chart.append('g')\n            .attr('class','legend')\n            .attr('transform','translate(75,-'+(this.sizing.margin.top-10)+')')\n            .style('font-size','1em');\n        const r = 5;\n        this.data.forEach((d,i) => {\n            const plot = d.plot;\n            const group = d.group;\n            let row = legend.append('g')\n                .attr('class','legend-item')\n                .attr('transform','translate(10,'+(((i+1)*(this.baseFontSize() as number))+(i*LEGEND_VPAD))+')');\n            const pp:any = plot.phenophase;\n            let title =  this.speciesTitle.transform(plot.species,plot.speciesRank)+'/'+(pp.phenophase_name||pp.pheno_class_name);\n            if(plot.regressionLine && typeof(plot.regressionLine.r2) === 'number' && !isNaN(plot.regressionLine.r2)) {\n                // NOTE: the baseline-shift doesn't appear to work on Firefox\n                if(this.isIE) {\n                    title += ` (R2 ${plot.regressionLine.r2.toFixed(2)})`;\n                } else {\n                    title += ` (R<tspan style=\"baseline-shift: super; font-size: 0.65em;\">2</tspan> ${plot.regressionLine.r2.toFixed(2)})`;\n                }\n            }\n            if(group) {\n                title += ` (${group.label})`;\n            }\n            row.append('circle')\n                .attr('r',r)\n                .attr('fill',plot.color);\n            let text = row.append('text')\n                .style('font-size',this.baseFontSize(true))\n                .attr('x',(2*4))\n                .attr('y',(r/2));\n            if(this.isIE) {\n                text.text(title);\n            } else {\n                text.html(title);\n            }\n        });\n\n        this.commonUpdates();\n    }\n}\n\nclass RegressionLine {\n    id: string;\n    color: string;\n    legend: string; // TODO\n    p1: number[];\n    p2: number[];\n    r2: number;\n\n    constructor(id: string, color: string, data: any[], getX, getY) {\n        let datas = data.sort(function(o1,o2){ // sorting isn't necessary but makes it easy to pick min/max x\n                return getX(o1) - getX(o2);\n            }),\n            isNumber = d => typeof(d) === 'number',\n            xSeries = datas.map(getX).filter(isNumber),\n            ySeries = datas.map(getY).filter(isNumber),\n            leastSquaresCoeff = this.leastSquares(xSeries,ySeries),\n            x1 = xSeries[0] as number,\n            y1 = this.approxY(leastSquaresCoeff,x1),\n            x2 = xSeries[xSeries.length-1] as number,\n            y2 = this.approxY(leastSquaresCoeff,x2);\n\n        this.id = id;\n        this.color = color;\n        this.p1 = [x1,y1];\n        this.p2 = [x2,y2];\n        this.r2 = leastSquaresCoeff[2];\n    }\n\n    leastSquares(xSeries,ySeries): [number,number,number] {\n        if(xSeries.length === 0 || ySeries.length === 0) {\n            return [Number.NaN,Number.NaN,Number.NaN];\n        }\n        let reduceSumFunc = function(prev, cur) { return prev + cur; };\n\n        let xBar = xSeries.reduce(reduceSumFunc) * 1.0 / xSeries.length;\n        let yBar = ySeries.reduce(reduceSumFunc) * 1.0 / ySeries.length;\n\n        let ssXX = xSeries.map(function(d) { return Math.pow(d - xBar, 2); })\n            .reduce(reduceSumFunc);\n\n        let ssYY = ySeries.map(function(d) { return Math.pow(d - yBar, 2); })\n            .reduce(reduceSumFunc);\n\n        let ssXY = xSeries.map(function(d, i) { return (d - xBar) * (ySeries[i] - yBar); })\n            .reduce(reduceSumFunc);\n\n        let slope = ssXY / ssXX;\n        let intercept = yBar - (xBar * slope);\n        let rSquare = Math.pow(ssXY, 2) / (ssXX * ssYY);\n\n        return [slope, intercept, rSquare];\n    }\n\n    approxY(leastSquaresCoeff,x): number {\n        // y = a + bx\n        let a = leastSquaresCoeff[1],\n            b = leastSquaresCoeff[0];\n        return a + (b*x);\n    }\n}\n","import { HttpParams } from '@angular/common/http';\nimport { NpnServiceUtils,  SpeciesPlot, getSpeciesPlotKeys, TaxonomicSpeciesRank, TaxonomicPhenophaseRank, SpeciesService, NetworkService, getStaticColor } from '../common';\nimport { StationAwareVisSelection, selectionProperty, POPInput, BASE_POP_INPUT, GroupHttpParams, SelectionGroup } from './vis-selection';\n\nexport interface SiteOrSummaryPlot extends SpeciesPlot {\n    [x: string]: any;\n}\n\nexport interface SiteOrSummaryPlotData {\n    plot: SiteOrSummaryPlot;\n    group?: SelectionGroup;\n    data: any[];\n}\n\nexport abstract class SiteOrSummaryVisSelection extends StationAwareVisSelection {\n    @selectionProperty()\n    individualPhenometrics: boolean = false;\n    @selectionProperty()\n    _numDaysQualityFilter:number = 30;\n    @selectionProperty({\n        ser:d => {\n            const {species,phenophase} = d;\n            const o:any = {species,phenophase};\n            Object.getOwnPropertyNames(d)\n                .filter(key => key !== 'species' && key !== 'phenophase')\n                .forEach(key => o[key] = d[key]);\n            return o;\n        }\n    })\n    plots:SiteOrSummaryPlot[] = [];\n\n    constructor(\n        protected serviceUtils:NpnServiceUtils,\n        protected speciesService:SpeciesService,\n        protected networkService:NetworkService\n    ) {\n        super(serviceUtils,networkService);\n    }\n\n    toURLSearchParams(params: HttpParams = new HttpParams()): Promise<HttpParams> {\n        if(this.numDaysQualityFilter && this.numDaysQualityFilter > 0) {\n            if(this.individualPhenometrics) {\n                params = params.set('num_days_quality_filter_individual',`${this.numDaysQualityFilter}`)\n            } else {\n                params = params.set('num_days_quality_filter',`${this.numDaysQualityFilter}`)\n            }\n        }\n        return super.toURLSearchParams(params);\n    }\n\n    toPOPInput(input:POPInput = {...BASE_POP_INPUT}):Promise<POPInput> {\n        return super.toPOPInput(input)\n            .then(input => {\n                if(this.numDaysQualityFilter) {\n                    input.dataPrecision = this.numDaysQualityFilter;\n                }\n                return this.speciesService.getSpeciesIds(this.validPlots)\n                    .then(ids => {\n                        input.species = ids;\n                        return input;\n                    });\n            });\n    }\n\n    get validPlots():SiteOrSummaryPlot[] {\n        return this.plots.filter(p => !!p.species && !!p.phenophase);\n    }\n\n    get numDaysQualityFilter():number {\n        return this._numDaysQualityFilter;\n    }\n    set numDaysQualityFilter(n:number) {\n        this._numDaysQualityFilter = n;\n        this.update(); // param change\n    }\n\n    getData():Promise<SiteOrSummaryPlotData []> {\n        // work around TypeScript Promise.all issue\n        return this._getData();\n    }\n\n    private _getData(): Promise<any> {\n        if (!this.isValid()) {\n            return Promise.reject(this.INVALID_SELECTION);\n        }\n        const url = this.serviceUtils.apiUrl(`/npn_portal/observations/${this.individualPhenometrics ? 'getSummarizedData' : 'getSiteLevelData'}.json`);\n        const filterLqd = (data,plot,plotIndex) => { // site\n                const minusUnwanted =  data.filter(filterUnwantedDataFunctor(plot));\n                const minusSuspect = minusUnwanted.filter(filterSuspectSummaryData);\n                const filtered = minusSuspect.filter(this.individualPhenometrics ? filterLqSummaryData : filterLqSiteData);\n                console.debug(`plot[${plotIndex}] filtered out ${data.length-minusUnwanted.length}/${data.length} unwanted records`);\n                console.debug(`plot[${plotIndex}] filtered out ${minusUnwanted.length-minusSuspect.length}/${minusUnwanted.length} suspect records`);\n                console.debug(`plot[${plotIndex}] filtered out ${minusSuspect.length-filtered.length}/${minusSuspect.length} LQD records`);\n                if(this.individualPhenometrics) {\n                    const individuals = filtered.reduce(function (map, d) {\n                        var key = d.individual_id + '/' + d.phenophase_id + '/' + d.first_yes_year;\n                        map[key] = map[key] || [];\n                        map[key].push(d);\n                        return map;\n                    }, {});\n                    const uniqueIndividuals = [];\n                    for (let key in individuals) {\n                        let arr = individuals[key];\n                        if (arr.length > 1) {\n                            // sort by first_yes_doy\n                            arr.sort(function (a, b) {\n                                return a.first_yes_doy - b.first_yes_doy;\n                            });\n                        }\n                        // use the earliest record\n                        uniqueIndividuals.push(arr[0]);\n                    }\n                    console.debug(`plot[${plotIndex}] filtered out ${(filtered.length - uniqueIndividuals.length)}/${filtered.length} individual records (preferring lowest first_yes_doy)`);\n                    return uniqueIndividuals;\n                }\n                return filtered;\n            };\n        const fetchDataForPlot = (baseParams,plot,plotIndex,group?) => {\n            const keys = getSpeciesPlotKeys(plot);\n            let params = baseParams.set(`${keys.speciesIdKey}[0]`,`${plot.species[keys.speciesIdKey]}`)\n                .set(`${keys.phenophaseIdKey}[0]`,`${plot.phenophase[keys.phenophaseIdKey]}`);\n            if((plot.speciesRank||TaxonomicSpeciesRank.SPECIES) !== TaxonomicSpeciesRank.SPECIES) {\n                params = params.set('taxonomy_aggregate','1');\n            }\n            if(plot.phenophaseRank === TaxonomicPhenophaseRank.CLASS) {\n                params = params.set('pheno_class_aggregate','1');\n            }\n            params = params.set('climate_data','1');\n            return this.serviceUtils.cachedPost(url,params.toString())\n                .then(data => filterLqd(data,plot,plotIndex))\n                .then(data => ({plot,data,group}));\n        };\n        this.working = true;\n        return this.toURLSearchParams()\n            .then(baseParams => {\n                const validPlots = this.validPlots;\n                return (this.groups && this.groups.length )\n                    ? this.toGroupHttpParams(baseParams)\n                        .then((groupParams:GroupHttpParams[]) => {\n                            // multiply plots by groups\n                            let plotIndex = 0; // just for logging\n                            const promises = groupParams.reduce((promises,gp) => {\n                                validPlots.forEach(p => {\n                                    const plot = JSON.parse(JSON.stringify(p));\n                                    plot.color = getStaticColor(plotIndex);\n                                    promises.push(fetchDataForPlot(gp.params,plot,plotIndex++,gp.group));\n                                });\n                                return promises;\n                            },[]);\n                            return Promise.all(promises);\n                        })\n                    : Promise.all(validPlots.map((plot,plotIndex) => fetchDataForPlot(baseParams,plot,plotIndex)));\n            })\n            .then((results) => {\n                this.working = false;\n                return results;\n            })\n            .catch(err => {\n                this.working = false;\n                this.handleError(err);\n            });\n    }\n}\n\n/**\n * The underlying services do not treat species/phenophase pairs as\n * parallel arrays but as independent arrays.  This means when two species\n * share a phenophase but if that phenophase is only requested for one of the two\n * extra recrods can be returned and need to be discarded.  This function\n * returns a function that can be passed to Array.filter to discard those records\n * from server responses.\n * \n * Note: This should no longer ever prune out any unwanted records now that one request\n * is being made per plot\n */\nfunction filterUnwantedDataFunctor(plot:SpeciesPlot):(any) => boolean {\n    const keys = getSpeciesPlotKeys(plot);\n    const speciesId = plot.species[keys.speciesIdKey];\n    const phenoId = plot.phenophase[keys.phenophaseIdKey];\n    return d => {\n        const keep = speciesId == d[keys.speciesIdKey] &&\n                        phenoId == d[keys.phenophaseIdKey];\n        if(!keep) {\n            console.warn('filtering unwanted response record',d);\n        }\n        return keep;\n    };\n}\n\nfunction filterSuspectSummaryData(d):boolean {\n    var bad = (d.latitude === 0.0 || d.longitude === 0.0 || d.elevation_in_meters < 0);\n    if (bad) {\n        console.warn('suspect station data', d);\n    }\n    return !bad;\n}\n\nfunction filterLqSummaryData(d):boolean {\n    var keep = d.numdays_since_prior_no >= 0;\n    if (!keep) {\n        console.debug('filtering less precise data from summary output', d);\n    }\n    return keep;\n}\n\nfunction filterLqSiteData(d):boolean {\n    var keep = d.mean_numdays_since_prior_no >= 0;\n    if (!keep) {\n        console.debug('filtering less precise data from site level output', d);\n    }\n    return keep;\n}","module.exports = \"<div class=\\\"vis-container\\\">\\n    <div class=\\\"vis-working\\\" *ngIf=\\\"selection.working\\\">\\n        <npn-logo spin=\\\"false\\\"></npn-logo>\\n    </div>\\n    <div class=\\\"chart-container\\\">\\n        <visualization-download *ngIf=\\\"!thumbnail && !mobileMode\\\" svgWrapperId=\\\"{{id}}\\\" filename=\\\"{{filename}}\\\"></visualization-download>\\n        <div [class]=\\\"clazz\\\" id=\\\"{{id}}\\\"><svg class=\\\"svg-visualization\\\"></svg></div>\\n    </div>\\n    <div *ngIf=\\\"disclaimer && !thumbnail\\\" class=\\\"vis-disclaimer\\\">{{disclaimer}}</div>\\n</div>\\n<!--pre *ngIf=\\\"record\\\">{{record | json}}</pre-->\\n\"","module.exports = \".vis-container {\\n  display: block;\\n  position: relative; }\\n  .vis-container .chart-container {\\n    position: relative; }\\n  .vis-container .visualization > svg,\\n  .vis-container img.thumbnail-image {\\n    border: 1px solid #000; }\\n  .vis-container .visualization > svg {\\n    display: block; }\\n  .vis-container .vis-disclaimer {\\n    margin-top: 5px;\\n    font-size: .75em;\\n    float: right; }\\n\"","import { Component, Input } from '@angular/core';\n\nimport { VisSelection, VisSelectionEvent } from './vis-selection';\nimport { VisualizationBaseComponent, VisualizationSizing, VisualizationMargins } from './visualization-base.component';\n\nimport { Selection } from 'd3-selection';\nimport * as d3 from 'd3';\n\nexport const DEFAULT_MARGINS: VisualizationMargins = { top: 20, right: 30, bottom: 60, left: 40 };\nexport const FONT_SIZE: number = 14;\nexport const FONT_SIZE_PX: string = FONT_SIZE + 'px';\n\n/*\nIMPORTANT: see not in VisualizationBaseComponent\n\n@Component({\n    selector: 'svg-visualization-base',\n    templateUrl: './svg-visualization-base.component.html',\n    styleUrls: ['./svg-visualization-base.component.scss']\n})\n*/\nexport class SvgVisualizationBaseComponent extends VisualizationBaseComponent {\n    record: any;\n\n    disclaimer: string;\n\n    filename: string = 'visualization.png';\n\n    // wrapping element\n    visRoot: Selection<any, any, any, any>;\n    // svg element\n    svg: Selection<any, any, any, any>;\n    // base g element that the chart draws on\n    chart: Selection<any, any, any, any>;\n\n    margins: VisualizationMargins = DEFAULT_MARGINS;\n\n    protected minWidth: number = 700;\n\n    baseFontSize(withPx?: boolean): number | string {\n        let fs = FONT_SIZE;\n        /*\n        if(this.sizing) {\n            if(this.sizing.width < 650) {\n                fs -=2;\n            }\n            if(this.sizing.width < 400) {\n                fs -= 2;\n            }\n        }*/\n        return withPx ? `${fs}px` : fs;\n    }\n\n    /**\n     * sub-classes should call after they have redrawn the visualization to get any\n     * common styling updates applied.\n     */\n    protected commonUpdates(): void {\n        let chart = this.chart,\n            fontSizePx = this.baseFontSize(true);\n\n        ['.axis path', '.axis line'].forEach(selector =>\n            chart.selectAll(selector).style('fill', 'none')\n                .style('stroke', '#000')\n                .style('shape-rendering', 'crispEdges'));\n\n        chart.selectAll('text')\n            .style('font-family', 'Arial');\n        chart.selectAll('g .axis text')\n            .style('font-size', fontSizePx);\n    }\n\n    /**\n     * `reset` is intended to initialize a visualziation to it's known \"clean\" state\n     * placing all common elements, etc.  Subclasses will almost certainly over-ride\n     * this implementation and call it to get the ball rolling.\n     *\n     * No asynchronous work should be done here, fetching data, etc. should happen\n     * only within `update`.\n     */\n    protected reset(): void {\n        let sizing = this.getSizeInfo(),\n            svg = this.svg,\n            width = sizing.width + sizing.margin.left + sizing.margin.right,\n            height = sizing.height + sizing.margin.top + sizing.margin.bottom;\n        // remove all children\n        svg.selectAll('*').remove();\n        // set size\n        svg.attr('width', width)\n            .attr('height', height)\n            .attr('viewBox', `0 0 ${width} ${height}`)\n            .attr('preserveAspectRatio', 'xMidYMid meet');\n        svg.append('g')\n            .attr('class', 'vis-background')\n            .append('rect')\n            .attr('width', '100%')\n            .attr('height', '100%')\n            .attr('fill', '#fff');\n        this.chart = svg.append('g')\n            .attr('transform', `translate(${sizing.margin.left},${sizing.margin.top})`)\n            .attr('class', 'vis-chart');\n\n        svg.append('g')\n            .attr('transform', `translate(10,${sizing.height + sizing.margin.top + sizing.margin.bottom - 10})`)\n            .append('text')\n            .attr('font-size', '11px')\n            .attr('font-style', 'italic')\n            .attr('text-anchor', 'right').text('USA National Phenology Network, www.usanpn.org');\n    }\n\n    protected resize(): void {\n        this.reset();\n        this.redraw();\n    }\n\n    // this used to be in ngAfterViewInit and most time it would succeed from there\n    // but very occasionally ngAfterViewInit would be called BEFORE the underlying\n    // elements exist in the DOM.  No time to understand cleanly why so these selections\n    // are now made whever asking about sizing which is the FIRST thing necessary to\n    // render an SVG visualization so it should be safe.\n    private selectElements() {\n        this.visRoot = d3.select('#' + this.id);\n        this.svg = this.visRoot.select('svg');\n    }\n\n    getSizeInfo(minWidth?: number): VisualizationSizing {\n        this.selectElements();\n        return super.getSizeInfo(this.minWidth);\n    }\n\n    /**\n     * IMPORTANT:\n     * Sub-classes should implement the redrawSvg and not over-ride redraw.\n     * If redraw is over-ridden the implementation  will lose the ability to\n     * dynamically replace themselves with a thumbnail should the screen\n     * realestate for the visualization get too small.\n     * \n     * public and not protected because used by HTML templates directly\n     */\n    redraw(): void {\n        this.redrawSvg();\n        let sizeInfo = this.sizing,\n            w = sizeInfo.width + sizeInfo.margin.left + sizeInfo.margin.right;\n        if (w === this.minWidth) {\n            // If the resulting width matches the minWidth then the realestate to draw the\n            // SVG is at or below the minWidth.  Attempting to render visualizations too small\n            // results in unusable/cramped results so when we reach this break point draw the\n            // visualization scaled to its minimum size and scale it down (shrink everything)\n            let native = this.rootElement.nativeElement as HTMLElement,\n                svg = native.querySelector('svg.svg-visualization') as SVGElement,\n                wrappedSvg = d3.select(svg),\n                h = sizeInfo.height + sizeInfo.margin.bottom + sizeInfo.margin.top,\n                aspectMult = sizeInfo.scaledWidth / this.minWidth;\n            wrappedSvg.attr('width', sizeInfo.scaledWidth);\n            wrappedSvg.attr('height', Math.round(h * aspectMult));\n        }\n    }\n\n    /**\n     * SVG replacement for the redraw function.\n     */\n    protected redrawSvg(): void { throw new Error('abstract'); }\n\n    ngAfterViewInit() {\n        this.selectElements();\n        // sets up common handlers\n        super.ngAfterViewInit();\n    }\n\n}\n","import { EventEmitter } from '@angular/core';\nimport { newGuid, NpnServiceUtils, NetworkService, Station } from '../common';\nimport { HttpParams } from '@angular/common/http';\n\nexport const NULL_DATA = -9999;\nexport const ONE_DAY_MILLIS: number = (24 * 60 * 60 * 1000);\n\nexport const enum VisSelectionEvent {\n    RESET = 'reset', // go back to a \"clean\" slate\n    REDRAW = 'redraw', // assuming you have data simply re-draw with that data\n    UPDATE = 'update', // go get new data and reset/redraw\n    RESIZE = 'resize', // short cut for reset/redraw\n    SCOPE_CHANGE = 'scope_change', // a scope related property has changed (NetworkAwareVisSelection)\n}\n\n/*\n * A VisSelection is a jumble of properties and methods, not all of which should be serialized\n * and deserialized when [re]storing a selection to/from JSON.  In standard JavaScript this\n * could probably be dealt with cleanly via Object.defineProperty (and a big constructor) but\n * with TypeScript it's significantly more complicated.  For this reason all properties that\n * are part of what should be serialized for a given selection MUST be annotated with @selectionProperty()\n *\n * The virtual `external` property on a selection will produce a plain object representation\n * for a selection.  Assigning an object to the `external` property will deserialize it onto\n * the selection object.\n *\n * IMPORTANT: If a property key is prefixed with `_` it is assumed, by convention, that is the\n * internal representation of a virtual property of the same name without the leading `_`.\n * Such properties will be serialized without the leading `_` and when deserialized will be set\n * directly without the leading `_` so that any logic defined in the corresponding property setter\n * is run.\n */\nimport 'reflect-metadata';\nconst selectionPropertyMetadataKey = Symbol('npnSelectionProperty');\nconst IDENTITY = d => d;\n/**\n * Defines a property handler for a selection property.\n */\nexport class SelectionPropertyHandler {\n    /**\n     * A function that is used to serialize a property object.\n     * Takes as input an object and returns an object.\n     * Defaults to object identity.\n     */\n    ser?: Function;\n    /**\n     * A function that is used to serialize a property object.\n     * Takes as input an object and returns an object.\n     * Defaults to object identity.\n     */\n    des?: Function;\n}\n/**\n * Property decorator to indicate which properties of a selection should\n * be part of the external form of the selection.\n * E.g.\n * <pre>\n *   @selectionProperty()\n *   private s:string;\n *   @selectionProperty({des: d => new Date(d)})\n *   private date:Date;\n *   @selectionProperty({\n *     des: d => {\n *       let o = new MyClass();\n *       ... copy properties for d to o ...\n *       return o;\n *     },\n *     ser: d => d\n *   })\n *   private o:MyClass;\n * </pre>\n */\nexport const selectionProperty = (handler?: SelectionPropertyHandler) => {\n    let the_handler = {\n        ...{ des: IDENTITY, ser: IDENTITY },\n        ...(handler || {})\n    };\n    return Reflect.metadata(selectionPropertyMetadataKey, the_handler);\n};\nconst isSelectionProperty = (target: any, propertyKey: string) => {\n    let meta = Reflect.getMetadata(selectionPropertyMetadataKey, target, propertyKey);\n    if (!meta) {\n        meta = Reflect.getMetadata(selectionPropertyMetadataKey, target, `_${propertyKey}`);\n    }\n    return meta;\n};\n// these are exported functions so that other classes can use similar\n// s11n/des11n functionality.\nexport function GET_EXTERNAL() {\n    let ext = {\n        // see comment below on $class property\n        //$class: this.constructor.name\n    };\n    Object.keys(this).forEach(key => {\n        let handler = isSelectionProperty(this, key);\n        if (handler) {\n            let v = this[key];\n            if (/^_/.test(key)) {\n                key = key.substring(1);\n            }\n            if (Array.isArray(v)) {\n                ext[key] = v.map(d => handler.ser(d));\n            } else {\n                ext[key] = handler.ser(v);\n            }\n        }\n    });\n    return ext;\n};\nexport function SET_EXTERNAL(o) {\n    Object.keys(o).forEach(key => {\n        let handler = isSelectionProperty(this, key);\n        if (handler) {\n            let v = o[key];\n            if (typeof (v) !== 'undefined') {\n                if (Array.isArray(v)) {\n                    this[key] = v.map(d => handler.des(d));\n                } else {\n                    this[key] = handler.des(v);\n                }\n            } else {\n                this[key] = undefined;\n            }\n        }\n    });\n};\n\nexport const REJECT_INVALID_SELECTION = 'invalid selection';\n\n/**\n * Base class for visualization selection (user input).  A VisSelection is attached\n * to a specific visualization and the selection itself sends events to the visualization\n * to tell it when meaningful changes have happened and it should reset/redraw or update.\n *\n * The utility methods reset/redraw/update send instructions to the visualization.  These\n * functions can be called at any time, even before the selection has been wired to its\n * visualization.  Events will be held onto and delivered if/when the visualization has\n * subscribed.\n *\n * Note: EventEmitter does not have an unsubscribe (though it, today, extends RxJs Subject)\n * so technically does.  Should perhaps consider not extending Angular's EventEmitter\n * \n * Note: Within the current set of visualizations there are two distinct ways that events\n * are triggered.  Earlier visualizations would have controls populate values on a selection\n * and then based on knowledge about how the visualization worked the controls themselves\n * would call update or redraw.  This meant that controls contained more logic and more\n * internal knowledge about how a specific visualization functions (which properties might\n * just alter the appearance of a visualization, redraw, versus what type of change might\n * require the visualization to go back to the server to get new data).  Newer visualization\n * implementations move that knowledge into the selection via the use of setters/getters\n * which can simplify controls many times simply allowing them to use two-way data binding\n * between a control and the selection itself.  The `pause`/`resume` functionality was added\n * to help with these types of implementations when special cases arise to avoid any attached\n * visualization components from doing work (e.g. population of defaults or cooperating\n * selection properties)\n * \n * @todo review use of `editMode` flag to see if it can be removed (maybe using `pause`/`resume` instead).\n * \n * @dynamic\n */\nexport abstract class VisSelection extends EventEmitter<VisSelectionEvent> {\n    /**\n     * Sub-classes set to true if they support export to POP\n     * Must also implement `toPOPInput(input:POPInput = {...BASE_POP_INPUT}):Promise<POPInput>`\n     */\n    $supportsPop:boolean = false;\n    /*\n    Note: Previously this.class.name was used when serializing a selection to JSON.\n    This does not work in production mode because of JavaScript minification.\n    So instead making this explicit.  All concrete VisSelection classes need to\n    add the $class @selectionProperty() and put their class name within it.\n     */\n    @selectionProperty()\n    $class: string = 'VisSelection';\n    @selectionProperty()\n    guid: string = newGuid();\n    @selectionProperty()\n    meta: any = {}; // a place for non selection specific info to be held\n    debug: boolean = false;\n    working: boolean = false;\n    // this flag is not persisted but can be used by a visualization if it\n    // would like to have a control pick \"default state\" while the visualization\n    // is being built.\n    editMode: boolean = false;\n    updateSent: boolean = false;\n    private _paused:boolean = false;\n    [x: string]: any;\n\n    readonly INVALID_SELECTION = REJECT_INVALID_SELECTION;\n\n    private lastEmit: any = {};\n    private firstSubscriberResolver: any;\n    private firstSubscriber: Promise<any> = new Promise<any>((resolve) => {\n        this.firstSubscriberResolver = resolve;\n    });\n\n    get external() { return GET_EXTERNAL.apply(this, arguments); }\n    set external(o) {\n        this.pause();\n        try {\n            SET_EXTERNAL.apply(this, arguments);\n        } finally {\n            this.resume();\n        }\n    }\n\n    /** @returns {boolean} true if events are paused. */\n    isPaused():boolean { return this._paused; }\n    /** Pauses even propagation so update/redraw, etc. will have no effect until resumed. */\n    pause() { this._paused = true; }\n    /** Resumes event propagation. */\n    resume() { this._paused = false; }\n\n    /**\n     * Instruct the visualization to go back to a \"clean\" slate\n     */\n    reset(): void {\n        this.emit(VisSelectionEvent.RESET);\n    }\n\n    /**\n     * Instruct the visualization to redraw itself using the data it already\n     * has and the current state of the selection.\n     * Will do nothing if the selection is not valid.\n     * If an update has not been sent yet then redraw will cause an update.\n     */\n    redraw(): void {\n        if(this.isValid()) {\n            if(!this.updateSent) {\n                this.update();\n            } else {\n                this.emit(VisSelectionEvent.REDRAW);\n            }\n        }\n    }\n\n    /**\n     * Instruct the visualization to go get new data and reset/redraw itself.\n     * Will do nothing if the selection is not valid.\n     */\n    update(): void {\n        if(this.isValid()) {\n            this.emit(VisSelectionEvent.UPDATE);\n        }\n    }\n\n    /**\n     * Instruct the visualization to resize itself.\n     */\n    resize(): void {\n        this.emit(VisSelectionEvent.RESIZE);\n    }\n\n    abstract isValid(): boolean;\n\n    protected handleError(e?: any): void {\n        console.error(e);\n        this.working = false;\n    }\n\n    // make sure no events go out until there is at least one subscriber to receive them.\n    emit(value?: VisSelectionEvent) {\n        if(this._paused) {\n            return;\n        }\n        var self = this,\n            emitArgs = arguments,\n            thisEmit: any = {\n                value: value,\n                when: Date.now(),\n                ext: JSON.stringify(this.external)\n            };\n        // throttle events on emit rather than requiring subscribers to do this.\n        // i.e. if the event being emitted differs from the last event emitted it\n        // always gets through.  events get pruned out if they are not distinct\n        // and happen within the specific interval\n        // e.g.\n        // selection.update(); selection.update(); selection.update();\n        // only the first will get through\n        // but selection.update() setTimeout(() => selection.update(),600);\n        // both will get through\n        if (this.lastEmit.value !== thisEmit.value || this.lastEmit.ext !== thisEmit.ext || this.lastEmit.when < (thisEmit.when - 500) || this.$class===\"ActivityCurvesSelection\") {\n            this.lastEmit = thisEmit;\n            console.log('letting event through', thisEmit/*, new Error(`${thisEmit.value}: stack trace`)*/);\n            this.firstSubscriber.then(() => {\n                super.emit.apply(self, emitArgs);\n                if(thisEmit.value === VisSelectionEvent.UPDATE) {\n                    this.updateSent = true;\n                }\n            });\n        } else {\n            console.log('pruned out redundant event', thisEmit);\n        }\n    }\n\n    subscribe(generatorOrNext?: any, error?: any, complete?: any): any {\n        // resolve the above promise..\n        this.firstSubscriberResolver();\n        return super.subscribe.apply(this, arguments);\n    }\n}\n\n/**\n * Selections may produce if they support export via the POP.\n * Selections need only supply start/endDate formatted `YYYY-MM-DD` \n */\nexport interface POPInput {\n    downloadType: string;\n    searchSource: string;\n    rangeType: string;\n\n    dataPrecision?: number;\n\n    startDate?: string;\n    startYear?: number;\n    startMonth?: string;\n    startDay?: number;\n\n    endDate?: string;\n    endYear?: string;\n    endMonth?: string;\n    endDay?: number;\n\n    species?: number[];\n    phenophases?: number[];\n    partnerGroups?: number[];\n    stations?: number[];\n}\n\nexport interface SupportsPOPInput {\n    toPOPInput(input?:POPInput):Promise<POPInput>;\n}\n\nconst MONTHS = [\n    'January','February','March','April','May','June',\n    'July','August','September','October','November','December'\n];\n/**\n * Takes values for `start|endDate` and fills in the values for\n * `start|endYear|Month|Day`\n * \n * @param input \n */\nexport function completePOPDates(input:POPInput):POPInput {\n    const toParts = d => {\n        let [year,month,day] = d.split('-').map(p => parseInt(p));\n        month = MONTHS[month-1];\n        return {year,month,day};\n    };\n    ['start','end'].forEach(prefix => {\n        const date = input[`${prefix}Date`];\n        if(date) {\n            const parts = toParts(date);\n            input[`${prefix}Year`] = parts.year;\n            input[`${prefix}Month`] = parts.month;\n            input[`${prefix}Day`] = parts.day;\n        }\n    });\n    return input;\n}\n\nexport const BASE_POP_INPUT:POPInput = {\n    downloadType: 'selectable',\n    searchSource: 'visualization-tool',\n    rangeType: 'Calendar'\n};\n\n/**\n * The mode of a given SelectionGroup\n */\nexport enum SelectionGroupMode {\n    /** The group represents the data gathered by a network. */\n    NETWORK = \"N\",\n    /** The group represents the data gathered by a single station. */\n    STATION = \"S\",\n    /** The group represents the data gathered by stations within a radius of a network (specifically a network with a known boundary). */\n    OUTSIDE = \"O\"\n};\n\n/**\n * Represents a selection group when performing visualization comparisons between\n * stations and networks.\n */\nexport interface SelectionGroup {\n    /** The label representing this selection group */\n    label: string;\n    /** The mode of this selection group. */\n    mode: SelectionGroupMode;\n    /** The network or station id of this selection group. */\n    id?: number;\n    /** If mode === NETWORK an optional list of station ids to exclude from the network. */\n    excludeIds?: number[];\n    /** If mode === OUTSIDE the radius outside of the network to gather stations. */\n    outsideRadiusMiles?: number;\n}\n\n/**\n * The pairing of a single SelectionGroup with the HttpParams that\n * will be used to fetch its data.\n */\nexport interface GroupHttpParams {\n    group: SelectionGroup;\n    params: HttpParams;\n}\n\n/**\n * @dynamic\n */\nexport abstract class NetworkAwareVisSelection extends VisSelection implements SupportsPOPInput {\n    @selectionProperty()\n    _networkIds?: number[] = [];\n    @selectionProperty()\n    _groups?: SelectionGroup[];\n\n    constructor(protected networkService:NetworkService){\n        super();\n    }\n\n    set networkIds(ids:number[]) {\n        this._networkIds = ids;\n        this.emit(VisSelectionEvent.SCOPE_CHANGE);\n    }\n\n    get networkIds():number[] {\n        return this._networkIds;\n    }\n\n    set groups(groups:SelectionGroup[]) {\n        this._groups = groups;\n        this.emit(VisSelectionEvent.SCOPE_CHANGE);\n    }\n\n    get groups():SelectionGroup[] {\n        return this._groups;\n    }\n\n    /**\n     * Fetches the list of station ids associated with a `Selectiongroup`\n     * \n     * @param group The group\n     */\n    private getStationIdsForGroup(group:SelectionGroup):Promise<number[]> {\n        switch(group.mode) {\n            case SelectionGroupMode.STATION:\n                return Promise.resolve([group.id]);\n            case SelectionGroupMode.NETWORK:\n                // translate the network to its underlying stations\n                return this.networkService.getStations(group.id)\n                    // just need the station_ids\n                    .then((stations:Station[]) => stations.map(s => s.station_id))\n                    // exclude any stations the group excludes\n                    .then((ids:number[]) => ids.filter(id => (group.excludeIds||[]).indexOf(id) === -1));\n            case SelectionGroupMode.OUTSIDE:\n                return this.networkService.getNearbyStationIds(group.id,group.outsideRadiusMiles);\n        }\n    }\n\n    /**\n     * If the `groups` property is set then the output of this function will be\n     * the compilation of all the station ids that are part of the corresponding\n     * groups, otherwise it will be based upon any networkIds set.\n     */\n    getStationIds():Promise<number []> {\n        return !!this.groups && this.groups.length > 0\n            ? Promise.all(this.groups.map(group => this.getStationIdsForGroup(group)))\n                .then((list) => list.reduce((ids,idList) => {\n                    idList.forEach(id => {\n                        if(ids.indexOf(id) === -1) {\n                            ids.push(id);\n                        }\n                    });\n                    return ids;\n                },[]))\n            : this.networkIds && this.networkIds.length\n            ? this.networkService.getStations(this.networkIds)\n                .then(stations => stations.map(s => s.station_id))\n            : Promise.resolve([]);\n    }\n\n    /**\n     * If the `groups` property is set then no `station_id` parameters will\n     * be populated on the base `HttpParams` since separate requests will need to\n     * be issued for group data and `toGroupHttpParams` must be called to build those\n     * request parameters.\n     * \n     * @param params The HttpParams (optional)\n     */\n    toURLSearchParams(params: HttpParams = new HttpParams()): Promise<HttpParams> {\n        return !!this.groups && this.groups.length > 0\n            ? Promise.resolve(params)\n            // translate any network_ids into station_ids\n            : this.getStationIds()\n                  .then(sids => sids.reduce((params,id,i) => params.set(`station_id[${i}]`, `${id}`),params));\n    }\n    \n    toPOPInput(input:POPInput = {...BASE_POP_INPUT}):Promise<POPInput> {\n        input.partnerGroups = this.networkIds && this.networkIds.length\n            ? this.networkIds.slice()\n            : undefined;\n        return Promise.resolve(input);\n    }\n\n    /**\n     * Removes any station_id[n] parameters from a set of HttpParams.\n     * \n     * @param params The params to remove parameters from\n     */\n    protected resetStationIdParams(params: HttpParams):HttpParams {\n        params.keys()\n            .filter(key => /^station_id\\[\\d+\\]$/.test(key))\n            .forEach(key => params = params.delete(key));\n        return params;\n    }\n\n    /**\n     * Multiplies out a set of HttpParams by the value of the groups property.\n     * This function should NOT be called if the groups property is not set or empty (will result in a rejected Promise).\n     * \n     * @todo Implement SelectionGroupMode.OUTSIDE support\n     * @param params The params to multiply out by groups\n     */\n    toGroupHttpParams(params: HttpParams = new HttpParams()): Promise<GroupHttpParams[]> {\n        if(!this.groups || !this.groups.length) {\n            return Promise.reject('selection has no SelectionGroups defined');\n        }\n        // to be safe clean out any station_id parameters that might have been set\n        const resetParams = this.resetStationIdParams(params);\n        const promises:Promise<GroupHttpParams>[] = this.groups.map(group =>this.getStationIdsForGroup(group)\n            .then((ids:number[]) => {\n                params = ids.reduce((params,id,i) => params.set(`station_id[${i}]`,`${id}`),resetParams);\n                return ({group,params});\n            }));\n        return Promise.all(promises);\n    }\n}\n\nexport interface PredefinedBoundarySelection {\n    id: number;\n    boundaryName: string;\n    typeId: number;\n    boundaryTypeName: string;\n}\n\nexport interface PolygonBoundarySelection {\n    data: number[][];\n}\n\nexport type BoundarySelection = PredefinedBoundarySelection | PolygonBoundarySelection;\n\nexport function isPredefinedBoundarySelection(o:any):boolean {\n    return typeof(o.id) === 'number' &&\n        typeof(o.typeId) === 'number' &&\n        typeof(o.boundaryName) === 'string' &&\n        typeof(o.boundaryTypeName) === 'string';\n}\n\nexport function isPolygonBoundarySelection(o:any):boolean {\n    return Array.isArray(o.data) &&\n        o.data.length &&\n        Array.isArray(o.data[0]) &&\n        o.data[0].length === 2 &&\n        typeof(o.data[0][0]) === 'number';\n}\n\n/**\n * @dynamic\n */\nexport abstract class StationAwareVisSelection extends NetworkAwareVisSelection {\n    @selectionProperty()\n    _personId;\n    @selectionProperty()\n    _groupId;\n    @selectionProperty()\n    _stationIds?: any[] = [];\n    @selectionProperty()\n    _boundaries:BoundarySelection[];\n\n    constructor(protected serviceUtils:NpnServiceUtils,protected networkService:NetworkService) {\n        super(networkService);\n    }\n\n    set stationIds(ids:any[]) {\n        this._stationIds = ids;\n        this.emit(VisSelectionEvent.SCOPE_CHANGE);\n    }\n    get stationIds():any[] {\n        return this._stationIds;\n    }\n\n    get personId():any {\n        return this._personId;\n    }\n    set personId(id:any) {\n        const orig = this._personId;\n        if((this._personId = id) != orig) {\n            this.update();\n        }\n    }\n\n    get groupId():any {\n        return this._groupId;\n    }\n\n    set groupId(id:any) {\n        const orig = this._groupId;\n        if((this._groupId = id) != orig) {\n            this.update();\n        }\n    }\n\n    get boundaries():BoundarySelection[] {\n        return this._boundaries||[];\n    }\n\n    set boundaries(boundaries:BoundarySelection[]) {\n        this._boundaries = boundaries;\n        this.update();\n    }\n\n    protected getStationIdPromises():Promise<number[]>[] {\n        const baseParams:any = {};\n        if(this.personId) {\n            baseParams.person_id = this.personId;\n        }\n        if(this.groupId) {\n            baseParams.group_id = this.groupId;\n        }\n        const promises = this.boundaries.map(b => {\n            if((b as any).data) {\n                const polySelection = b as PolygonBoundarySelection;\n                const polygon = polySelection.data.slice();\n                polygon.push(polySelection.data[0]); // close the loop\n                return this.serviceUtils.cachedGet(\n                        this.serviceUtils.apiUrl('/npn_portal/stations/getStationsByLocation.json'),\n                        {...baseParams,wkt: 'POLYGON(('+polygon.map(pair => `${pair[1]} ${pair[0]}`).join(',')+'))'}\n                    )\n                    .then(response => response.map(s => s.station_id))\n            }\n            const predefSelection = b as PredefinedBoundarySelection;\n            return this.serviceUtils.cachedGet(\n                this.serviceUtils.apiUrl('/npn_portal/stations/getStationsForBoundary.json'),\n                {...baseParams,boundary_id:predefSelection.id}\n            );\n        });\n        // If this selection has an explicit list of stationIds then return them and ignore any\n        // the parent class might supply by virtue of the value of the networkIds property.\n        // It is assumed that if they are set AND the parent has a list of networkIds\n        // that the list of stationIds is a subset of stations within the parent's networks\n        if(this.stationIds && this.stationIds.length) {\n            promises.push(Promise.resolve(this.stationIds.slice()));\n        } else {\n            promises.push(super.getStationIds());\n        }\n        return promises;\n    }\n\n    getStationIds():Promise<number []> {\n        return Promise.all(this.getStationIdPromises())\n            .then(results => results.reduce((ids,stationIds) => ids.concat(stationIds),[]))\n    }\n\n    toURLSearchParams(params: HttpParams = new HttpParams()): Promise<HttpParams> {\n        return super.toURLSearchParams(params)\n            .then(params => this.personId ? params.set('person_id',`${this.personId}`) : params)\n            .then(params => this.groupId ? params.set('group_id',`${this.groupId}`) : params)\n            .then(params => {\n                // note: in case the parent's implementation of toURLSearchParams included station_ids parameters we need\n                // to unset them and replace them with any this class generates (which may include or exclude those supplied\n                // by the parent)\n                params = this.resetStationIdParams(params);\n                return this.getStationIds().then(results => {\n                    results.forEach((id,i) => params = params.set(`station_id[${i}]`, `${id}`));\n                    return params;\n                })\n            });\n    }\n\n    toPOPInput(input:POPInput = {...BASE_POP_INPUT}):Promise<POPInput> {\n        return super.toPOPInput(input)\n            .then(input => Promise.all(this.getStationIdPromises())\n                .then(results => {\n                    input.stations = results.reduce((ids,stationIds) => ids.concat(stationIds),[]);\n                    return input;\n                }));\n    }\n}\n","import { Input, ElementRef } from '@angular/core';\n\nimport { detectIE, MonitorsDestroy } from '../common';\nimport { VisSelection, VisSelectionEvent, REJECT_INVALID_SELECTION } from './vis-selection';\n\nimport { fromEvent } from 'rxjs';\nimport { debounceTime, takeUntil } from 'rxjs/operators';\n\nimport { MediaChange, ObservableMedia } from \"@angular/flex-layout\";\n\nexport const DEFAULT_MARGINS: VisualizationMargins = { top: 20, right: 30, bottom: 60, left: 40 };\nexport const FONT_SIZE: number = 14;\nexport const FONT_SIZE_PX: string = FONT_SIZE + 'px';\n\n/*\nIMPORTANT: There is a rather annoying chicken and egg problem with angular\ndevelopment vs production builds.  This \"component\" originally took full\nadvantage of language features and was properly abstract, works great in dev.\nProduction builds wouldn't allow this.  They'd complain about the component\nnot being registered, comment out the @Component annotation and dev builds\nthen fail.\n\n@Component({\n  selector: 'visualization-base',\n  template: '\"abstract\" component'\n})\n*/\nexport class VisualizationBaseComponent extends MonitorsDestroy {\n    @Input()\n    selection: VisSelection;\n    @Input()\n    thumbnail: boolean = false;\n\n    id: string = 'visualization-' + Math.floor(Math.random() * 1000);\n\n    sizing: VisualizationSizing;\n    clazz: string = 'visualization ' + this.constructor.name;\n\n    margins: VisualizationMargins = { top: 0, right: 0, left: 0, bottom: 0 };\n    mobileMode: boolean = false;\n\n    protected isIE: boolean;\n\n    constructor(protected rootElement: ElementRef, protected media: ObservableMedia) {\n        super();\n        this.media.asObservable().pipe(takeUntil(this.componentDestroyed))\n            .subscribe((mediaChange: MediaChange) => this.mobileMode = mediaChange.mqAlias === 'xs' || mediaChange.mqAlias === 'sm');\n        this.isIE = !!detectIE();\n    }\n\n    /**\n     * Calculates the dimensions (width based) that the visualization should\n     * be drawn to fit properly within the parent element.\n     */\n    getSizeInfo(minWidth?: number): VisualizationSizing {\n        let native = this.rootElement.nativeElement as HTMLElement,\n            parent = native.parentElement as HTMLElement,\n            ratioMult = 0.5376, // ratio based on initial w/h of 930/500\n            strToPx = s => parseInt(s.replace(/px$/, '')),\n            style = getComputedStyle(parent, null),\n            minusLeft = strToPx(style.paddingLeft) + strToPx(style.borderLeftWidth),\n            minusRight = strToPx(style.paddingRight) + strToPx(style.borderRightWidth),\n            innerWidth = parent.clientWidth - minusLeft - minusRight,\n            margin = this.margins,\n            cw = Math.floor(innerWidth),\n            scaledWidth = cw;\n        if (minWidth && cw < minWidth) {\n            cw = minWidth;\n        }\n        let ch = Math.floor(cw * ratioMult),\n            w = cw - margin.left - margin.right,\n            h = ch - margin.top - margin.bottom;\n        if (isNaN(w)) {\n            w = 0;\n        }\n        if (isNaN(h)) {\n            h = 0;\n        }\n        return (this.sizing = { scaledWidth: scaledWidth, width: w, height: h, margin: margin });\n    }\n\n    /**\n     * `reset` is intended to initialize a visualziation to it's known \"clean\" state\n     * placing all common elements, etc.  Subclasses will almost certainly over-ride\n     * this implementation and call it to get the ball rolling.\n     *\n     * No asynchronous work should be done here, fetching data, etc. should happen\n     * only within `update`.\n     */\n    protected reset(): void { throw new Error('abstract'); }\n\n    /**\n     * Called when the visualization should be redrawn from data already in hand\n     * using the current state of the selection.\n     */\n    protected redraw(): void { throw new Error('abstract'); }\n\n    /**\n     * Called when the visualization should go get new clean data, based on its\n     * selection, and reset/redraw itself.\n     */\n    protected update(): void { throw new Error('abstract'); }\n\n    /**\n     * Called when the visualization should resize itself.\n     */\n    protected resize(): void { throw new Error('abstract'); }\n\n    ngAfterViewInit() {\n        console.debug('visualization.ngAfterViewInit');\n        // redraw and update the visualization on window re-size, debounce\n        // to avoid rapid redraws as the window is resized\n        // NOTE: there may be some stupid issue with IE11 and the window\n        // resize event.  Could perhaps use the @HostListener route below but\n        // that should then implement its own debounce (via setTimeout)\n        // and they seem to want to push the use of RxJs so this kind of thing\n        // feels cleaner.\n        fromEvent(window, 'resize').pipe(debounceTime(500),takeUntil(this.componentDestroyed))\n            .subscribe(() => {\n                try {\n                    this.resize()\n                } catch (resizeE) {\n                    console.error('error during resize',resizeE);\n                }\n            });\n\n        // now that we're prepared to start listening to our selection for\n        // VisSelectionEvents.\n        this.selection\n            .pipe(takeUntil(this.componentDestroyed))\n            .subscribe((event) => {\n                switch (event) {\n                    case VisSelectionEvent.RESET:\n                        return this.reset();\n                    case VisSelectionEvent.REDRAW:\n                        return this.redraw();\n                    case VisSelectionEvent.UPDATE:\n                        return this.update();\n                    case VisSelectionEvent.RESIZE:\n                        return this.resize();\n                }\n            });\n    }\n\n    /* a way of capturing window events...\n    @HostListener('window:resize',['$event'])\n    onResize(event) {\n        this.redraw();\n    }*/\n\n    protected handleError(e?: any): void {\n        if (e && e !== REJECT_INVALID_SELECTION) {\n            console.error(e);\n        }\n    }\n}\n\nexport class VisualizationMargins {\n    top?: number;\n    right?: number;\n    bottom?: number;\n    left?: number;\n}\n\nexport class VisualizationSizing {\n    scaledWidth?: number;\n    width: number;\n    height: number;\n    margin: VisualizationMargins;\n}\n","import { Component, Input } from '@angular/core';\n\nimport { faDownload } from '@fortawesome/pro-light-svg-icons';\n\nimport * as d3 from 'd3';\n\n@Component({\n    selector: 'visualization-download',\n    template: `\n    <div class=\"vis-download\">\n        <a href (click)=\"download($event)\" title=\"Download\"><fa-icon [icon]=\"faDownload\"></fa-icon></a>\n        <canvas id=\"dlcanvas-{{svgWrapperId}}\" style=\"display: none;\"></canvas>\n        <a id=\"dllink-{{svgWrapperId}}\" style=\"display: none;\">download</a>\n    </div>\n    `,\n    styles: [`\n        .vis-download {\n            height: 28px;\n            width: 28px;\n            position: absolute;\n            right: 0px;\n            margin: 10px;\n            font-size: 1.5em;\n        }\n        .vis-download >a {\n            color: #000;\n            &:hover {\n                color: #000;\n            }\n        }\n    `]\n})\nexport class VisualizationDownloadComponent {\n    faDownload = faDownload;\n    @Input() svgWrapperId: string;\n    @Input() filename: string;\n\n    download($event): void {\n        $event.preventDefault();\n\n        let svg = document.querySelector(`#${this.svgWrapperId} >svg`) as SVGElement,\n            wrappedSvg = d3.select(svg);\n        wrappedSvg.attr('version', 1.1)\n            .attr('xmlns', 'http://www.w3.org/2000/svg');\n        let parent = svg.parentNode as HTMLElement,\n            html = parent.innerHTML;\n        // see here (the unicode problem)\n        // https://developer.mozilla.org/en-US/docs/Web/API/WindowBase64/Base64_encoding_and_decoding\n        let htmlForBase64 = encodeURIComponent(html).replace(/%([0-9A-F]{2})/g,\n            function toSolidBytes(match, p1) {\n                return String.fromCharCode(<any>'0x' + p1);\n            });\n        let imgsrc = 'data:image/svg+xml;base64,' + window.btoa(htmlForBase64),\n            canvas = document.querySelector(`#dlcanvas-${this.svgWrapperId}`) as HTMLCanvasElement,\n            link = document.querySelector(`#dllink-${this.svgWrapperId}`) as HTMLAnchorElement;\n        canvas.width = +wrappedSvg.attr('width');\n        canvas.height = +wrappedSvg.attr('height');\n\n        let context = canvas.getContext('2d'),\n            image = new Image();\n        image.onload = () => {\n            context.drawImage(image, 0, 0);\n            let canvasdata = canvas.toDataURL('image/png');\n            link.download = this.filename;\n            link.href = canvasdata;\n            link.click();\n        };\n        image.src = imgsrc;\n    }\n}\n","import { Injectable } from '@angular/core';\n\nimport { VisSelection } from './vis-selection';\nimport { ScatterPlotSelection, ScatterPlotSelectionFactory } from './scatter-plot';\nimport { CalendarSelection, CalendarSelectionFactory } from './calendar';\nimport { ActivityCurvesSelection, ActivityCurvesSelectionFactory } from './activity-curves';\nimport { ObserverActivitySelection, ObserverActivitySelectionFactory } from './observer-activity';\nimport { ObservationFrequencySelection, ObservationFrequencySelectionFactory } from './observation-frequency';\nimport { ClippedWmsMapSelection, ClippedWmsMapSelectionFactory } from './clipped-wms-map';\nimport { MapSelectionFactory, MapSelection } from './map';\nimport { AgddTimeSeriesSelection, AgddTimeSeriesSelectionFactory } from './agdd-time-series';\n\n@Injectable()\nexport class VisualizationSelectionFactory {\n    private factoryMap:any = {};\n\n    constructor(private calendar: CalendarSelectionFactory,\n                private scatter: ScatterPlotSelectionFactory,\n                private activity: ActivityCurvesSelectionFactory,\n                private observer: ObserverActivitySelectionFactory,\n                private observationFreq: ObservationFrequencySelectionFactory,\n                private clippedWmsMap: ClippedWmsMapSelectionFactory,\n                private map: MapSelectionFactory,\n                private agddTime:AgddTimeSeriesSelectionFactory\n\n    ) {\n        this.factoryMap.CalendarSelection = calendar;\n        this.factoryMap.ScatterPlotSelection = scatter;\n        this.factoryMap.ActivityCurvesSelection = activity;\n        this.factoryMap.ObserverActivitySelection = observer;\n        this.factoryMap.ObservationFrequencySelection = observationFreq;\n        this.factoryMap.ClippedWmsMapSelection = clippedWmsMap;\n        this.factoryMap.MapSelection = map;\n        this.factoryMap.AgddTimeSeriesSelection = agddTime;\n    }\n\n    newCalendarSelection():CalendarSelection {\n        return this.calendar.newSelection();\n    }\n\n    newScatterPlotSelection():ScatterPlotSelection {\n        return this.scatter.newSelection();\n    }\n\n    newActivityCurvesSelection():ActivityCurvesSelection {\n        return this.activity.newSelection();\n    }\n\n    newObserverActivitySelection():ObserverActivitySelection {\n        return this.observer.newSelection();\n    }\n    \n    newObservationFrequencySelection(): ObservationFrequencySelection {\n        return this.observationFreq.newSelection();\n    }\n\n    newClippedWmsMapSelection(): ClippedWmsMapSelection {\n        return this.clippedWmsMap.newSelection();\n    }\n\n    newMapSelection(): MapSelection {\n        return this.map.newSelection();\n    }\n\n    newAgddTimeSeriesSelection(): AgddTimeSeriesSelection {\n        return this.agddTime.newSelection();\n    }\n\n    cloneSelection(selection:VisSelection): VisSelection {\n        return this.newSelection(selection.external);\n    }\n\n    newSelections(selections:any[]): VisSelection[] {\n        return selections.map(s => this.newSelection(s));\n    }\n\n    newSelection(selection:any): VisSelection {\n        if(!this.factoryMap[selection.$class]) {\n            throw new Error(`Unknown selection type \"${selection.$class}\"`);\n        }\n        let s:VisSelection = this.factoryMap[selection.$class].newSelection();\n        s.external = selection;\n        return s\n    }\n}\n","import {Component,Input,OnInit} from '@angular/core';\n\nimport {VisSelection} from './vis-selection';\n\nimport {ScatterPlotSelection} from './scatter-plot';\nimport {CalendarSelection} from './calendar';\nimport {ActivityCurvesSelection} from './activity-curves';\nimport {ObserverActivitySelection} from './observer-activity';\nimport {ClippedWmsMapSelection} from './clipped-wms-map';\nimport {ObservationFrequencySelection} from './observation-frequency';\n\n// the idea here is that with Angular 2/4 there is no $compile functionality\n// so instead it's probably best to create an \"all knowing\" directive that\n// includes all possible visualizations and picks which to render based on\n// the type of selection it is given.\n@Component({\n    selector: 'npn-visualization',\n    template: `\n    <scatter-plot *ngIf=\"scatter\" [selection]=\"scatter\" [thumbnail]=\"thumbnail\"></scatter-plot>\n    <calendar *ngIf=\"calendar\" [selection]=\"calendar\"  [thumbnail]=\"thumbnail\"></calendar>\n    <activity-curves *ngIf=\"activity\" [selection]=\"activity\"  [thumbnail]=\"thumbnail\"></activity-curves>\n    <observer-activity *ngIf=\"observer\" [selection]=\"observer\" [thumbnail]=\"thumbnail\"></observer-activity>\n    <observation-frequency *ngIf=\"observationFreq\" [selection]=\"observationFreq\" [thumbnail]=\"thumbnail\"></observation-frequency>\n    <clipped-wms-map *ngIf=\"clippedWmsMap\" [selection]=\"clippedWmsMap\" [thumbnail]=\"thumbnail\"></clipped-wms-map>\n    <mat-expansion-panel *ngIf=\"selection.debug\">\n        <mat-expansion-panel-header>\n            <mat-panel-title>Selection</mat-panel-title>\n        </mat-expansion-panel-header>\n        <pre>{{selection.external | json}}</pre>\n    </mat-expansion-panel>\n    `,\n    styles: [`\n        pre {\n            font-family: \"courier new\";\n        }\n        mat-expansion-panel {\n            margin-top: 10px;\n        }\n    `]\n})\nexport class VisualizationComponent implements OnInit {\n    @Input()\n    thumbnail:boolean = false;\n\n    @Input()\n    selection: VisSelection;\n\n    scatter: ScatterPlotSelection;\n    calendar: CalendarSelection;\n    activity: ActivityCurvesSelection;\n    observer: ObserverActivitySelection;\n    observationFreq: ObservationFrequencySelection;\n    clippedWmsMap: ClippedWmsMapSelection;\n\n    ngOnInit() {\n        if(this.selection instanceof ScatterPlotSelection) {\n            this.scatter = this.selection;\n        } else if(this.selection instanceof CalendarSelection) {\n            this.calendar = this.selection;\n        } else if(this.selection instanceof ClippedWmsMapSelection) {\n            this.clippedWmsMap = this.selection;\n        } else if(this.selection instanceof ActivityCurvesSelection) {\n            this.activity = this.selection;\n        } else if(this.selection instanceof ObserverActivitySelection) {\n            this.observer = this.selection;\n        } else if (this.selection instanceof ObservationFrequencySelection) {\n            this.observationFreq = this.selection;\n        }\n    }\n}\n","/*\nNOTE: this is currently one BIG module that includes all the visualizations.\nthat's ok generally but it would be better to have each visualization be its own\nmodule that deals with its own dependencies so that they could be imported individually\ninto an application (and simplify this module's imports).\n\nsee the commented out start of such a module in ./clipped-wms-map\n\nprobably should be an activity for a later date, or if time permits.\n*/\nimport { NgModule } from '@angular/core';\nimport { CommonModule,DatePipe } from '@angular/common';\nimport { FormsModule,ReactiveFormsModule } from '@angular/forms';\n\nimport { FontAwesomeModule } from '@fortawesome/angular-fontawesome';\n\nimport {VisualizationDownloadComponent} from './visualization-download.component';\n\nimport {ScatterPlotSelectionFactory,ScatterPlotComponent,ScatterPlotControls} from './scatter-plot';\nimport {CalendarSelectionFactory,CalendarComponent,CalendarControlComponent} from './calendar';\nimport {ActivityCurvesSelectionFactory,ActivityCurvesComponent,CurveControlComponent,ActivityCurvesControlComponent} from './activity-curves';\nimport {ClippedWmsMapComponent,ClippedWmsMapControl,ClippedWmsMapStatisticsComponent,ClippedStatValuePipe,ClippedWmsMapSelectionFactory} from './clipped-wms-map';\n//import {ClippedWmsMapVisModule} from './clipped-wms-map';\nimport {ObserverActivitySelectionFactory,ObserverActivityComponent,ObserverActivityControl} from './observer-activity';\nimport {ObservationFrequencySelectionFactory,ObservationFrequencyComponent,ObservationFrequencyControl} from './observation-frequency';\n\nimport {\n    MapSelectionFactory,\n    MapVisualizationComponent,\n    ExtentControl, ExtentDateControl, ExtentDoyControl, ExtentYearControl,\n    GriddedRangeSliderControl,\n    ConsolidatedMapLayerControlComponent,\n    PestMapLayerControlComponent,\n    TempAccumMapLayerControlComponent,\n    SpringIndexMapLayerControlComponent,\n    MapVisualizationMarkerIw\n} from './map';\n\nimport {\n  AgddTimeSeriesSelectionFactory,\n  AgddTimeSeriesComponent,\n  AgddTsMapLayerControl\n} from './agdd-time-series';\n\nimport {VisualizationComponent} from './visualization.component';\n\nimport {VisualizationSelectionFactory} from './visualization-selection-factory.service';\nimport {YearRangeInputComponent,HigherSpeciesPhenophaseInputComponent} from './common-controls';\n\nimport {MatFormFieldModule,MatButtonModule, MatCheckboxModule, MatSelectModule,MatRadioModule,\n        MatExpansionModule,MatAutocompleteModule,\n        MatInputModule, MatSliderModule, MatProgressBarModule, MatTooltipModule,\n        MatDatepickerModule, MatNativeDateModule, MAT_DATE_FORMATS } from '@angular/material';\nimport { Ng5SliderModule } from 'ng5-slider';\n\nimport {AgmCoreModule} from '@agm/core';\nimport { FlexLayoutModule } from '@angular/flex-layout';\n\nimport {NpnCommonModule} from '../common';\nimport {NpnGriddedModule} from '../gridded';\n\n@NgModule({\n  imports: [\n    /*BrowserAnimationsModule,\n    BrowserModule,*/\n    CommonModule,\n    FormsModule,ReactiveFormsModule,\n    FontAwesomeModule,\n    MatFormFieldModule,MatButtonModule, MatCheckboxModule,MatSelectModule,MatRadioModule,\n    MatExpansionModule,MatAutocompleteModule,\n    MatInputModule, MatSliderModule, MatProgressBarModule, MatTooltipModule, MatDatepickerModule,\n    MatNativeDateModule,\n    Ng5SliderModule,\n    AgmCoreModule,\n    FlexLayoutModule,\n    NpnCommonModule,NpnGriddedModule\n  ],\n  declarations: [\n      //VisualizationBaseComponent,SvgVisualizationBaseComponent,MapVisualizationBaseComponent,\n      ScatterPlotComponent,ScatterPlotControls,\n      CalendarComponent,CalendarControlComponent,\n      ActivityCurvesComponent,CurveControlComponent,ActivityCurvesControlComponent,\n      ObserverActivityComponent,ObserverActivityControl,\n      ObservationFrequencyComponent,ObservationFrequencyControl,\n      ClippedWmsMapComponent,ClippedWmsMapControl,ClippedWmsMapStatisticsComponent,ClippedStatValuePipe /* not exported */,\n      MapVisualizationComponent,\n      VisualizationDownloadComponent,\n      VisualizationComponent,\n      YearRangeInputComponent,\n      HigherSpeciesPhenophaseInputComponent,\n\n      ExtentControl, ExtentDateControl, ExtentDoyControl, ExtentYearControl,\n      GriddedRangeSliderControl,\n      ConsolidatedMapLayerControlComponent,PestMapLayerControlComponent,TempAccumMapLayerControlComponent,SpringIndexMapLayerControlComponent,MapVisualizationMarkerIw,\n      AgddTimeSeriesComponent, AgddTsMapLayerControl\n  ],\n  exports: [\n      ScatterPlotComponent,\n      ScatterPlotControls,\n      ActivityCurvesComponent,CurveControlComponent,ActivityCurvesControlComponent,\n      ObserverActivityComponent,ObserverActivityControl,\n      ObservationFrequencyComponent,ObservationFrequencyControl,\n      CalendarComponent,CalendarControlComponent,\n      ClippedWmsMapComponent,ClippedWmsMapControl,ClippedWmsMapStatisticsComponent,\n      MapVisualizationComponent,\n      VisualizationComponent,\n      HigherSpeciesPhenophaseInputComponent,\n      YearRangeInputComponent,\n      ExtentControl,\n      GriddedRangeSliderControl,\n      ConsolidatedMapLayerControlComponent,\n      AgddTimeSeriesComponent, AgddTsMapLayerControl\n  ],\n  providers: [\n      DatePipe,\n      // can inject a specific type of factory\n      ScatterPlotSelectionFactory,\n      CalendarSelectionFactory,\n      ClippedWmsMapSelectionFactory,\n      ActivityCurvesSelectionFactory,\n      ObserverActivitySelectionFactory,\n      ObservationFrequencySelectionFactory,\n      MapSelectionFactory,\n      AgddTimeSeriesSelectionFactory,\n      // OR one factory to rule them all\n      VisualizationSelectionFactory,\n      {provide: MAT_DATE_FORMATS, useValue: {\n        parse: { dateInput: null },\n        display: {\n          dateInput: {\n            year: \"numeric\",\n            month: \"long\",\n            day: \"numeric\"\n          },\n          monthYearLabel: {\n            year: \"numeric\",\n            month: \"long\"\n          },\n          dateA11yLabel: {\n            year: \"numeric\",\n            month: \"long\",\n            day: \"numeric\"\n          },\n          monthYearA11yLabel: {\n            year: \"numeric\",\n            month: \"long\"\n          }\n        }\n      }\n    }\n  ]\n})\nexport class VisualizationsModule { }\n\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { BrowserModule } from '@angular/platform-browser';\nimport { CommonModule } from '@angular/common';\nimport { NgModule, enableProdMode } from '@angular/core';\nimport { HttpClientModule } from '@angular/common/http';\n\nimport { NpnLibModule, NpnCommonModule, VisualizationsModule, NPN_BASE_HREF, NPN_CONFIGURATION, NpnGriddedModule } from '@npn/common';\n\nimport { RefugeControl } from './refuge-control.component';\nimport { SpringDashboardComponent } from './spring-dashboard.component';\nimport { RefugeService } from './refuge.service';\nimport { StatusOfSpringComponent } from './status-of-spring.component';\nimport { StartOfSpringComponent } from './start-of-spring.component';\n\nimport { FormsModule, ReactiveFormsModule, NgModel } from '@angular/forms';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport {\n  MatTabsModule, MatDialogModule,\n  MatProgressSpinnerModule, MatIconModule, MatButtonModule, MatTooltipModule,\n  MatFormFieldModule, MatSelectModule, MatInputModule, MatAutocompleteModule\n} from '@angular/material';\n\nimport { FlexLayoutModule } from '@angular/flex-layout';\n\nimport { environment } from '../environments/environment';\nimport { AgmCoreModule } from '@agm/core';\nimport { StartOfSpringDialog, SosDoyTransform } from './start-of-spring-dialog.component';\nimport { SafeHtmlPipe } from 'projects/fws-dashboard/src/app/resources.component';\n\nexport function baseHrefFactory() {\n  return window['npn_base_href'];\n}\nexport function npnConfigurationFactory() {\n  return window['npn_configuration'];\n}\n\n@NgModule({\n  imports: [\n    BrowserAnimationsModule,\n    BrowserModule,\n    CommonModule,\n    FormsModule, ReactiveFormsModule,\n\n    NpnLibModule,\n    NpnGriddedModule,\n    VisualizationsModule,\n    NpnCommonModule,\n\n    HttpClientModule,\n\n    MatTabsModule, MatDialogModule,\n    MatProgressSpinnerModule, MatIconModule, MatButtonModule, MatTooltipModule,\n    MatFormFieldModule, MatSelectModule, MatInputModule, MatAutocompleteModule,\n\n    FlexLayoutModule, // TODO - do I need?\n\n    AgmCoreModule.forRoot({\n      apiKey: environment.googleMapsApiKey\n    })\n  ],\n  declarations: [\n    RefugeControl,\n    SpringDashboardComponent,\n    StatusOfSpringComponent,\n    StartOfSpringComponent,\n    StartOfSpringDialog,\n    SosDoyTransform,\n    SafeHtmlPipe\n  ],\n  providers: [\n    RefugeService,\n    { provide: NPN_BASE_HREF, useFactory: baseHrefFactory },\n    { provide: NPN_CONFIGURATION, useFactory: npnConfigurationFactory }\n  ],\n  entryComponents: [\n    StartOfSpringDialog\n  ],\n  bootstrap: [SpringDashboardComponent],\n})\nexport class AppModule { }\n\n","const BUCKETS = [\n    [0.0,5.0],\n    [5.0,25.0],\n    [25.0,75.0],\n    [75.0,95.0],\n    [95.0,101.0] // just so < test is inclusive of 100.0\n];\nexport const MARKER_COLORS = [\n    '#ed3d3d', // < 5%\n    '#f5a27a', // 5 - 25%\n    '#828282', // 25 - 75%\n    '#5cb3f2', // 75 - 95%\n    '#3b3bf0' // > 95%\n];\nexport const MARKER_ICONS = [\n    'mean-5.png',\n    'mean-5-25.png',\n    'mean-25-75.png',\n    'mean-75-95.png',\n    'mean-95.png',\n    'no-data.png'\n];\nexport const FLI_DESCRIPTIONS = [\n    'extremely early',\n    'early',\n    'average',\n    'late',\n    'extremely late'\n];\nexport const FLI_PCNT_BUCKET_INDEX = (pcnt) => {\n    if(isNaN(pcnt)) {\n        return -1;\n    }\n    return BUCKETS.reduce((index,range,bucketIndex) => {\n            if(index === -1) {\n                if(pcnt >= range[0] && pcnt < range[1]) {\n                    index = bucketIndex;\n                }\n            }\n            return index;\n        },-1);\n};","export const FLYWAY_COLORS = {\n    'waterfowl_flyways.1' : '#ff7f7f', // pacific\n    'waterfowl_flyways.2' : '#a3ff73', // central\n    'waterfowl_flyways.3' : '#73dfff', // mississippi\n    'waterfowl_flyways.4' : '#df73ff' // atlantic\n};\nexport const FLYWAY_NAMES = {\n    'waterfowl_flyways.1' : 'Pacific',\n    'waterfowl_flyways.2' : 'Central',\n    'waterfowl_flyways.3' : 'Mississippi',\n    'waterfowl_flyways.4' : 'Atlantic'\n};\nexport const FLYWAY_TEXTS = {\n    'waterfowl_flyways.1' : 'This Refuge lies within the Pacific flyway, which exhibited a significant trend toward earlier onset of spring leaf out and bloom (0.4 and 0.4 days per decade, respectively). There was no difference in the advance of spring between northern and southern latitudes.',\n    'waterfowl_flyways.2' : 'This Refuge lies within the Central flyway, which exhibited a significant trend toward an earlier onset of spring leaf out and bloom (0.3 and 0.4 days per decade, respectively). The advance of spring was slightly greater at northern latitudes than at southern latitudes.',\n    'waterfowl_flyways.3' : 'This Refuge lies within the Mississippi flyway, which exhibited a significant trend toward an earlier onset of spring leaf out and bloom (0.4 and 0.4 days per decade, respectively). The advance of spring was greater at northern latitudes than at southern latitudes.',\n    'waterfowl_flyways.4' : 'This Refuge lies within the Atlantic flyway, which exhibited a significant trend toward an earlier onset of spring leaf out and bloom (0.5 and 0.6 days per decade, respectively). The advance of spring was greater at northern latitudes than at southern latitudes.'\n};","export class MapBase {\n    private mapResolver;\n    protected getMap:Promise<google.maps.Map> = new Promise(resolve => this.mapResolver = resolve);\n\n    public latitude:number = 41.135760;\n    public longitude:number = -99.157679;\n    public zoom:number = 4;\n\n    public mapStyles:any[] = [{\n            featureType: 'poi',\n            elementType: 'labels',\n            stylers: [{visibility:'off'}]\n        },{\n            featureType: 'transit.station',\n            elementType: 'labels',\n            stylers: [{visibility:'off'}]\n        },\n        {\n            featureType: 'poi.park',\n            stylers: [{ visibility: 'off'}]\n        },\n        {\n            featureType: 'landscape',\n            stylers: [{ visibility: 'off'}]\n        }];\n\n    protected configureMap(map:google.maps.Map) {\n    }\n\n    mapReady(map: google.maps.Map) {\n        this.configureMap(map);\n        this.mapResolver(map);\n    }\n}","module.exports = \":host {\\n  flex-grow: 1; }\\n  :host mat-form-field {\\n    width: 100%; }\\n  @media (min-width: 992px) {\\n    :host {\\n      max-width: 60%; } }\\n\"","import { Component, Output, EventEmitter } from \"@angular/core\";\nimport { RefugeService, Refuge } from \"./refuge.service\";\nimport { FormControl } from \"@angular/forms\";\nimport { Observable } from \"rxjs\";\nimport { filter, map, takeUntil } from 'rxjs/operators';\n\n\n@Component({\n    selector: 'refuge-control',\n    template: `\n    <mat-form-field *ngIf=\"refuges\" class=\"refuges-input\">\n        <input matInput [placeholder]=\"selected ? 'Refuge' : 'Find a refuge'\" [formControl]=\"control\" [matAutocomplete]=\"auto\" />\n        <mat-autocomplete #auto=\"matAutocomplete\" [displayWith]=\"refugeTitle\">\n            <mat-option *ngFor=\"let refuge of filteredRefuges | async\" [value]=\"refuge\">{{ refuge.title }}</mat-option>\n        </mat-autocomplete>\n    </mat-form-field>\n    `,\n    styleUrls:['./refuge-control.component.scss']\n})\nexport class RefugeControl {\n    control:FormControl = new FormControl();\n    refuges:Refuge[];\n    selected:Refuge;\n    filteredRefuges:Observable<Refuge[]>;\n    @Output() onSelect: EventEmitter<Refuge> = new EventEmitter();\n    @Output() onList: EventEmitter<Refuge[]> = new EventEmitter();\n\n    constructor(protected refugeService:RefugeService){}\n\n    ngOnInit() {\n        this.refugeService.refugeList().pipe(\n                map(list => list.filter(refuge => !!refuge.location)) // just in case any don't have location set\n            ).subscribe(list => this.onList.emit(this.refuges = list));\n        // TODO takeUntil\n        this.control.valueChanges.pipe(\n                filter(r => !r || typeof(r) === 'object'), // includes null\n                filter(r => !(this.selected && r === this.selected)), // don't re-deliver\n                map(r => (r && typeof(r) === 'object') ? r : null)\n            ) .subscribe((refuge:Refuge) => this.onSelect.emit(this.selected = refuge));\n        // TODO takeUntil\n        this.filteredRefuges = this.control.valueChanges.pipe(\n                filter(r => typeof(r) === 'string'),\n                map(s => s ? this._filterRefuges(s) : (this.refuges ? this.refuges.slice() : []))\n            );\n    }\n\n    refugeTitle(refuge:Refuge) {\n        return refuge ? refuge.title : '';\n    }\n    _filterRefuges(val:string):Refuge[] {\n        if(!this.refuges) {\n            return [];\n        }\n        val = val.toLowerCase();\n        return this.refuges.filter(r => r.title.toLowerCase().indexOf(val) !== -1);\n    }\n}","import {Injectable} from '@angular/core';\nimport { Observable, from } from 'rxjs';\nimport { map } from 'rxjs/operators';\n\nimport {HttpClient, HttpHeaders} from '@angular/common/http';\n\nimport {CacheService,VisualizationSelectionFactory,VisSelection} from  '@npn/common';\n\n// this means that the app can no longer function outside of the context of Drupal, period.\nconst API_ROOT = '/api/refuge';\n\n@Injectable()\nexport class RefugeService {\n    private refugePromiseResolver;\n    private refugePromiseRejector;\n    private refugeListPromise:Promise<Refuge[]> = new Promise((resolve,reject) => {\n        this.refugePromiseResolver = resolve;\n        this.refugePromiseRejector = reject;\n    });\n\n    constructor(private http: HttpClient,\n                protected cacheService: CacheService,\n                protected selectionFactory: VisualizationSelectionFactory) {\n        this.http.get(`${API_ROOT}`,{\n                params: {\n                    terse: 'true'\n                }\n            }).pipe(\n                map(map => Object.keys(map).map(key => map[key]) as Refuge[])\n            )\n            .subscribe(\n                refuges => this.refugePromiseResolver(refuges),\n                err => this.refugePromiseRejector(err));\n    }\n\n    parseSelections(json:string):VisSelection[] {\n        let selections = this.selectionFactory.newSelections(JSON.parse(json));\n        /*\n        console.log('JSON',json);\n        console.log('SELECTIONS',selections);\n        */\n        return selections;\n    }\n\n    private refugeUrl(refuge_id) {\n        return `${API_ROOT}/${refuge_id}`;\n    }\n\n    private castRefuge(refuge_id,refuge:any):Refuge {\n        refuge.id = refuge_id;\n        let selections = (refuge.selections||[]).map(s => JSON.parse(s));\n        refuge.selections = this.selectionFactory.newSelections(selections);\n        return refuge as Refuge;\n    }\n\n    refugeList():Observable<Refuge []> {\n        return from(this.refugeListPromise);\n    }\n\n    getRefuge(refuge_id):Promise<Refuge> {\n        return this.http.get(this.refugeUrl(refuge_id))\n                .toPromise()\n                .then(response => this.castRefuge(refuge_id,response));\n    }\n\n    saveRefuge(refuge:Refuge):Promise<Refuge> {\n            let r = {...{},...refuge} as any;\n            r.selections = (r.selections||[]).map(s => JSON.stringify(s.external) );\n            let json = JSON.stringify(r);\n            console.log(`JSON ${json}`)\n            return this.http.put(this.refugeUrl(refuge.id),json,{headers:{'Content-Type':'application/json'}})\n                .toPromise()\n                .then(response => this.castRefuge(refuge.id,response));\n    }\n}\n\nexport class Location {\n    lat: number;\n    lng: number;\n}\n\nexport class Refuge {\n    id:string;\n    title:string;\n    network_id:number;\n    partner:boolean;\n    no_geospatial: boolean;\n    boundary_id:string;\n    location?:Location;\n    selections:VisSelection[];\n    resources?:string;\n    flywayId?:string;\n    point?:any;\n    data?:any;\n    icon?:any;\n}\n","module.exports = \":host {\\n  display: block; }\\n\\n.mat-tab-header {\\n  border-bottom: none; }\\n\\n.mat-tab-header .mat-ink-bar {\\n    display: none; }\\n\\n.mat-tab-header .mat-tab-labels {\\n    flex-flow: row nowrap; }\\n\\n.mat-tab-header .mat-tab-labels > .mat-tab-label {\\n    width: 100%;\\n    white-space: normal;\\n    display: block;\\n    font-size: 0.9em;\\n    height: 48px;\\n    opacity: 1;\\n    color: #fff;\\n    padding: 0px;\\n    background-color: transparent; }\\n\\n@media (min-width: 768px) {\\n      .mat-tab-header .mat-tab-labels > .mat-tab-label {\\n        display: flex; } }\\n\\n@media (min-width: 992px) {\\n      .mat-tab-header .mat-tab-labels > .mat-tab-label {\\n        font-size: 1em; } }\\n\\n.mat-tab-header .mat-tab-labels > .mat-tab-label > .mat-tab-label-content {\\n      width: 100%; }\\n\\n.mat-tab-header .mat-tab-labels > .mat-tab-label > .mat-tab-label-content,\\n    .mat-tab-header .mat-tab-labels > .mat-tab-label > .mat-tab-label-content > .spring-tab-label {\\n      display: block;\\n      padding: 0px;\\n      height: 100%; }\\n\\n.mat-tab-header .mat-tab-labels > .mat-tab-label:focus {\\n      background-color: transparent; }\\n\\n.mat-tab-header .mat-tab-labels > .mat-tab-label.mat-tab-label-active {\\n      color: orange; }\\n\\n.mat-tab-header .mat-tab-labels > .mat-tab-label:nth-of-type(1) > .mat-tab-label-content > .spring-tab-label {\\n      background-color: #271614; }\\n\\n@media (min-width: 768px) {\\n        .mat-tab-header .mat-tab-labels > .mat-tab-label:nth-of-type(1) > .mat-tab-label-content > .spring-tab-label {\\n          padding-left: 24px; } }\\n\\n.mat-tab-header .mat-tab-labels > .mat-tab-label:nth-of-type(1)::after {\\n      content: '';\\n      border-top: 24px solid #3f322b;\\n      border-right: 24px solid #3f322b;\\n      border-bottom: 24px solid #271614;\\n      border-left: 24px solid #271614; }\\n\\n.mat-tab-header .mat-tab-labels > .mat-tab-label:nth-of-type(2) > .mat-tab-label-content > .spring-tab-label {\\n      background-color: #3f322b; }\\n\\n.mat-tab-header .mat-tab-labels > .mat-tab-label:nth-of-type(2)::after {\\n      content: '';\\n      border-top: 24px solid transparent;\\n      border-right: 24px solid transparent;\\n      border-bottom: 24px solid #3f322b;\\n      border-left: 24px solid #3f322b; }\\n\\n.spring-tab-label {\\n  position: relative;\\n  text-transform: uppercase; }\\n\\n.spring-tab-label > label {\\n    color: inherit;\\n    margin-top: 1em; }\\n\\n.spring-tab-content {\\n  padding: 20px 5px;\\n  color: #000;\\n  border-left: 2px solid #ddd;\\n  border-right: 2px solid #ddd;\\n  border-bottom: 2px solid #ddd;\\n  background-color: #fff; }\\n\\n@media (min-width: 992px) {\\n    .spring-tab-content {\\n      padding: 20px; } }\\n\"","import { Component, OnInit, ElementRef, ViewEncapsulation } from '@angular/core';\n\nimport { RefugeService } from './refuge.service';\n\nimport { MatTabChangeEvent } from '@angular/material';\n\n@Component({\n    selector: 'spring-dashboard',\n    template: `\n  <mat-tab-group class=\"spring-dashboard-tabs\" (selectedTabChange)=\"selectedTabChange($event)\">\n    <mat-tab>\n        <ng-template mat-tab-label>\n            <div class=\"spring-tab-label current-spring\">\n                <label>Current Status of Spring</label>\n            </div>\n        </ng-template>\n        <div class=\"spring-tab-content\">\n            <status-of-spring></status-of-spring>\n        </div>\n    </mat-tab>\n    <mat-tab>\n        <ng-template mat-tab-label>\n            <div class=\"spring-tab-label current-spring\">\n                <label>Long-term changes in the Start of Spring</label>\n            </div>\n        </ng-template>\n        <div class=\"spring-tab-content\">\n            <start-of-spring></start-of-spring>\n        </div>\n    </mat-tab>\n  </mat-tab-group>\n  `,\n    styleUrls: ['./spring-dashboard.component.scss'],\n    encapsulation: ViewEncapsulation.None\n})\nexport class SpringDashboardComponent implements OnInit {\n    userIsLoggedIn: boolean = false;\n\n    constructor(private element: ElementRef,\n        private refugeService: RefugeService) {\n        let e = element.nativeElement as HTMLElement;\n        this.userIsLoggedIn = e.getAttribute('user_is_logged_in') !== null;\n    }\n\n    ngOnInit() {\n\n    }\n\n    selectedTabChange($event: MatTabChangeEvent) {\n        console.debug('selectedTabChange', $event);\n    }\n}\n","import { Component, Inject, ElementRef, NgZone, PipeTransform, Pipe } from \"@angular/core\";\nimport { Refuge } from \"./refuge.service\";\nimport { MAT_DIALOG_DATA, MatDialogRef } from \"@angular/material\";\n\nimport { FLYWAY_TEXTS } from './flyways';\nimport { FLI_DESCRIPTIONS, FLI_PCNT_BUCKET_INDEX } from './fli-pcnt';\n\nimport * as d3 from 'd3';\nimport { NpnServiceUtils } from '@npn/common';\n\n@Pipe({name:'SosDoy'})\nexport class SosDoyTransform implements PipeTransform {\n    readonly dateFormat = d3.timeFormat('%B %e');\n    transform(value:number,stdev:number):string {\n        const fixed = value.toFixed(2);\n        const fixedStdev = stdev.toFixed(2);\n        const fmt = this.dateFormat(this.getDate(value));\n        return `${fmt} (${fixed} DOY \\u00B1 ${fixedStdev} days)`;\n    }\n\n    getDate(value:number):Date {\n        const rounded = Math.floor(value);\n        const d = new Date(2010,0,1); // 2010 not a leap year\n        d.setTime(d.getTime()+((rounded-1)*24*60*60*1000));\n        return d;\n    }\n}\n\n@Component({\n    template: `\n    <button mat-icon-button class=\"dialog-close\" (click)=\"close()\"><i class=\"fa fa-times\" aria-hidden=\"true\"></i></button>\n    <div class=\"mat-typography\" id=\"startOfSpringDialogWrapper\">\n        <span class=\"mat-title\">{{refuge.title}}</span>\n        <span *ngIf=\"!noData; else noDataDisclaimer\">\n            <ul class=\"refuge-info\">\n                <li>\n                    <label>Average spring leaf onset in recent decades (1983-2012):</label>\n                    {{refugeData['FLI (Day)'] | SosDoy:refugeData['FLI SD, AVG']}}\n                </li>\n                <li>\n                    <label>Recent change in timing relative to historical range of variation (1901-2012):</label>\n                    Spring first leaf arrival in recent decades is {{fliCategory}} ({{refugeData['FLI (%)'] | number:'1.2-2'}}%) compared to the historical range.\n                </li>\n                <li>\n                    <label>Change in timing over latitudinal exent of migratory flyway (1920-2012):</label>\n                    <p>\n                        <span *ngIf=\"FLYWAY_TEXTS[refuge.flywayId]; else noFlyway\">\n                        {{FLYWAY_TEXTS[refuge.flywayId]}}\n                        </span>\n                        <ng-template #noFlyway>\n                        This Refuge is outside of the four migratory flyways.\n                        </ng-template>\n                    </p>\n                </li>\n            </ul>\n            <div id=\"startOfSpringVisWrapper\">\n                <div class=\"vis-working\" *ngIf=\"working\">\n                    <mat-progress-spinner mode=\"indeterminate\"></mat-progress-spinner>\n                </div>\n                <svg id=\"timeSeries\"></svg>\n            </div>\n        </span>\n        <ng-template #noDataDisclaimer>\n            <p>Data are not available for this Refuge.</p>\n        </ng-template>\n    </div>\n    <!--pre>{{refugeData | json}}</pre-->\n    `,\n    styles:[`\n        button.dialog-close {\n            float: right;\n        }\n        #startOfSpringVisWrapper {\n            min-height: 1px;\n            position: relative;\n            padding-top: 10px;\n        }\n        svg {\n            display: block;\n            border: 1px solid #aaa;\n            margin: auto;\n        }\n        ul.refuge-info {\n            margin: 0 0 12px;\n        }\n        ul.refuge-info>li {\n            list-style: none;\n            padding: 10px 0px 0px 0px;\n        }\n        ul.refuge-info>li label {\n            font-weight: bold;\n        }\n        p {\n            margin: 0px;\n        }\n    `],\n    providers: [\n        SosDoyTransform\n    ]\n})\nexport class StartOfSpringDialog {\n    working = true;\n    FLYWAY_TEXTS = FLYWAY_TEXTS;\n    refuge:Refuge;\n    refugeData:any;\n    noData:boolean;\n    fliCategory:string;\n\n    constructor(@Inject(MAT_DIALOG_DATA) private dialogData:any,\n                private dialogRef:MatDialogRef<StartOfSpringDialog>,\n                private zone:NgZone,\n                private npnSvcUtils:NpnServiceUtils,\n                private rootElement:ElementRef,\n                private doyTrans:SosDoyTransform) {\n        this.refuge = dialogData.refuge;\n        this.refugeData = dialogData.refugeData;\n        const bucketIndex = FLI_PCNT_BUCKET_INDEX(this.refugeData['FLI (%)']);\n        this.noData = bucketIndex === -1;\n        if(bucketIndex !== -1) {\n            this.fliCategory = FLI_DESCRIPTIONS[bucketIndex];\n        }\n    }\n\n    /*\n    this feels like a hack/workaround.  something about the code in this dialog\n    prevents the standard mat-dialog-close directive from working, clicks of the\n    close icon are being run outside of the angular zone even though (click) events\n    are being tied to the correct code.\n\n    the behavior is inconsistent.  everything works on a new window until a browser refresh\n    and then stops working.  once it stops working the dialog will close if you click the X\n    and then hover the mouse over the visualization (meaning the d3 mouse events ARE being\n    evaluated within the angular zone).\n\n    at any rate cannot deep end on the issue and forcing the close to run in the angular\n    zone seems to work.\n    */\n    close() {\n        this.zone.run(() => {\n            this.dialogRef.close();\n        });\n    }\n\n    ngAfterViewInit() {\n        if(this.noData) {\n            return;\n        }\n        const svg = d3.select('#timeSeries');\n        const native = this.rootElement.nativeElement as HTMLElement;\n        const wrapper = native.querySelector('#startOfSpringVisWrapper');\n        const style = getComputedStyle(wrapper,null);\n        const strToPx = s => parseInt(s.replace(/px$/,''));\n        const ratioMult = 0.5376 // based on 930/500\n        const minusLeft = strToPx(style.paddingLeft)+strToPx(style.borderLeftWidth),\n              minusRight = strToPx(style.paddingRight)+strToPx(style.borderRightWidth),\n              innerWidth = (wrapper.clientWidth*0.6) - minusLeft - minusRight,\n              cw = Math.floor(innerWidth);\n        const margin = {top: 35, right: 20, left: 55, bottom: 50};\n        const ch = (cw*ratioMult),\n              w = cw  - margin.left - margin.right,\n              h = ch  - margin.top - margin.bottom;\n\n        const svgWidth = w + margin.left + margin.right,\n              svgHeight = h + margin.top + margin.bottom;\n        svg.attr('width', svgWidth)\n            .attr('height', svgHeight)\n            .attr('viewBox', `0 0 ${svgWidth} ${svgHeight}`)\n            .attr('preserveAspectRatio','xMidYMid meet');\n        svg.append('g')\n            .attr('class','vis-background')\n            .append('rect')\n            .attr('width','100%')\n            .attr('height','100%')\n            .attr('fill','#fff');\n        const chart = svg.append('g')\n            .attr('transform',`translate(${margin.left},${margin.top})`)\n            .attr('class','vis-chart');\n\n        const hover = svg.append('g')\n            .attr('transform',`translate(${margin.left},${margin.top})`)\n            .style('display','none');\n        const hoverLine = hover.append('line')\n            .attr('class','focus')\n            .attr('fill','none')\n            .attr('stroke','green')\n            .attr('stroke-width',1)\n            .attr('x1',0)\n            .attr('y1',0)\n            .attr('x2',0)\n            .attr('y2',h);\n        const hoverDoy = hover.append('text')\n            .attr('class','focus-doy')\n            .style('white-space','pre')\n            .attr('y',10)\n            .attr('x',0)\n            .text(' ');\n\n        const startYear = 1981,\n              endYear = 2012; // BEST data set only throu 2013 (new Date()).getFullYear() - 2;\n        \n        svg.append('g')\n            .attr('transform',`translate(10,20)`)\n            .append('text')\n            .attr('font-size', '18px')\n            .attr('font-style','bold')\n            .attr('text-anchor','left')\n            .text(`Arrival of Spring First Leaf Index from ${startYear}-${endYear}`);\n\n        svg.append('g')\n            .attr('transform',`translate(10,${h+margin.top+margin.bottom-10})`)\n            .append('text')\n\t\t\t.attr('font-size', '11px')\n\t\t\t.attr('font-style','italic')\n            .attr('text-anchor','right').text('USA National Phenology Network, www.usanpn.org');\n\n        const x = d3.scaleTime().rangeRound([0,w]);\n        const y = d3.scaleLinear().rangeRound([h,0]);\n        const parseDate = d3.timeParse('%Y-%m-%d');\n        const line = d3.line()\n            .x((d:any) => x(d.date))\n            .y((d:any) => y(d.doy));\n\n        this.npnSvcUtils.cachedGet(this.npnSvcUtils.dataApiUrl('/v0/si-x/area/statistics/timeseries'),{\n            layerName: 'si-x:average_leaf_best',\n            fwsBoundary: this.refuge.boundary_id,\n            yearStart: startYear,\n            yearEnd: endYear,\n            useBufferedBoundary: true,\n            useConvexHullBoundary: false,\n            useCache: false\n        }).then(response => {\n            this.working = false;\n            const data = response.timeSeries;\n            (data||[]).forEach(d => {\n                d.date = parseDate(d.date);\n                d.doy = Math.round(d.mean);\n            });\n\n            x.domain(d3.extent(data,function(d:any) { return d.date; }) as [Date,Date]);\n            y.domain(d3.extent(data,function(d:any) { return d.doy; }) as [Number,Number]);\n\n            chart.append(\"g\")\n                    .attr(\"transform\", \"translate(0,\" + h + \")\")\n                    .call(d3.axisBottom(x))\n                .select(\".domain\")\n                    .remove();\n      \n            const abbrevDateFmt = d3.timeFormat('%b %e');\n            const yTickFmt = (d:number) => abbrevDateFmt(this.doyTrans.getDate(d));\n            chart.append(\"g\")\n                    .call(d3.axisLeft(y).tickFormat(yTickFmt))\n                .append(\"text\")\n                    .attr(\"fill\", \"#000\")\n                    .attr(\"transform\", \"rotate(-90)\")\n                    .attr(\"y\", 6)\n                    .attr(\"dy\", \"0.71em\")\n                    .attr(\"text-anchor\", \"end\")\n                    .text(\"Date\");\n\n            chart.append(\"path\")\n                .datum(data)\n                .attr(\"fill\", \"none\")\n                .attr(\"stroke\", \"steelblue\")\n                .attr(\"stroke-linejoin\", \"round\")\n                .attr(\"stroke-linecap\", \"round\")\n                .attr(\"stroke-width\", 1.5)\n                .attr(\"d\", line);\n\n            chart.selectAll('.dot')   \n                .data(data)\n                .enter().append('circle')\n                    .attr('class','dot')\n                    .attr('r',3.5)\n                    .attr('cx',(d:any) => x(d.date))\n                    .attr('cy',(d:any) => y(d.doy))\n                    .style('fill','#000');\n\n            const dateFormat = d3.timeFormat('%Y');\n            \n            function updateFocus() {\n                const coords = d3.mouse(this),\n                    xCoord = coords[0];\n                const inverted:Date = x.invert(xCoord);\n                const calcDiff = (d:Date) => Math.abs(inverted.getTime()-d.getTime());\n                // find the nearest data point to inverted to \"snap to\"\n                const nearest = data.reduce((nearest,d,index) => {\n                    const diff = calcDiff(d.date);\n                    if(!nearest || diff < nearest.diff) {\n                        return {\n                            diff: diff,\n                            date: d.date,\n                            doy: d.doy,\n                            index: index\n                        };\n                    }\n                    return nearest;\n                },undefined);\n                const tx = x(nearest.date);\n                hoverLine.attr('transform',`translate(${tx})`);\n                const anchor = nearest.index < (data.length/2) ? 'start' : 'end';\n                const doyDate = yTickFmt(nearest.doy);\n                hoverDoy\n                    .style('text-anchor',anchor)\n                    .attr('x',tx)\n                    .text(`    ${dateFormat(nearest.date)} (${doyDate})     `);\n            }\n            svg.append('rect')\n                .attr('class','overlay')\n                .attr('transform', 'translate(' + margin.left + ',' + margin.top + ')')\n                .style('fill','none')\n                .style('pointer-events','all')\n                .attr('x',0)\n                .attr('y',0)\n                .attr('width',w)\n                .attr('height',h)\n                .on('mouseover',() => hover.style('display',null))\n                .on('mouseout',() => hover.style('display','none'))\n                .on('mousemove',updateFocus);\n        });\n    }\n}","module.exports = \".map-wrapper {\\n  position: relative; }\\n  .map-wrapper ul.start-of-spring-legend {\\n    list-style: none;\\n    margin: 0px;\\n    width: 185px;\\n    position: absolute;\\n    left: 10px;\\n    top: 10px;\\n    padding: 8px;\\n    border: 1px solid #aaa;\\n    background-color: rgba(255, 255, 255, 0.85);\\n    border-radius: 5px; }\\n  .map-wrapper ul.start-of-spring-legend > li {\\n      list-style: none;\\n      padding: 0px; }\\n  .map-wrapper ul.start-of-spring-legend > li:not(.title) {\\n        position: relative;\\n        padding: 0px 0px 4px 25px; }\\n  .map-wrapper ul.start-of-spring-legend > li:not(.title):before {\\n          display: inline-block;\\n          content: ' ';\\n          width: 20px;\\n          height: 20px;\\n          border: 1px solid #aaa;\\n          margin-right: 5px;\\n          position: absolute;\\n          top: 0px;\\n          left: 0px; }\\n  .map-wrapper ul.start-of-spring-legend > li.mean-5:before {\\n        background-color: #ed3d3d; }\\n  .map-wrapper ul.start-of-spring-legend > li.mean-5-25:before {\\n        background-color: #f5a27a; }\\n  .map-wrapper ul.start-of-spring-legend > li.mean-25-75:before {\\n        background-color: #828282; }\\n  .map-wrapper ul.start-of-spring-legend > li.mean-75-95:before {\\n        background-color: #5cb3f2; }\\n  .map-wrapper ul.start-of-spring-legend > li.mean-95:before {\\n        background-color: #3b3bf0; }\\n  .map-wrapper ul.start-of-spring-legend > li.no-data:before {\\n        background-color: #ffffff; }\\n  .map-wrapper ul.start-of-spring-legend > li.title {\\n        font-weight: bold; }\\n\"","import { Component, NgZone } from '@angular/core';\n\nimport { MapsAPILoader } from '@agm/core';\n\nimport { MapBase } from './map-base';\nimport { Refuge } from './refuge.service';\nimport { NpnServiceUtils,DESTINATION_POINT } from '@npn/common';\n\nimport * as d3 from 'd3';\nimport { MatDialog } from '@angular/material';\nimport { StartOfSpringDialog } from './start-of-spring-dialog.component';\nimport { FLYWAY_COLORS } from './flyways';\nimport { MARKER_COLORS, MARKER_ICONS, FLI_PCNT_BUCKET_INDEX, FLI_DESCRIPTIONS } from './fli-pcnt';\n\nfunction polyContains(point,poly) {\n    return google.maps.geometry.poly.containsLocation(point,poly) || google.maps.geometry.poly.isLocationOnEdge(point,poly);\n}\nfunction geoContains(point,geo) {\n    const polyType = geo.getType();\n    let poly,arr,i;\n    if(polyType == 'Polygon') {\n        arr = geo.getArray();\n        const outerRing = new google.maps.Polygon({paths: arr[0].getArray()});\n        if(polyContains(point,outerRing)) {\n            /* for the purposes of this application being anywhere inside the\n               outer ring means you're in the flyway\n               the polygons may have holes for things like the great lakes..\n            // inside the outer ring\n            for(i = 1; i < arr.length; i++) {\n                const innerRing = new google.maps.Polygon({paths: arr[i].getArray()});\n                if(polyContains(point,innerRing)) {\n                    // inside a hole in the outer ring so not in the polygon\n                    return false;\n                }\n            }*/\n            return true;\n        }\n        return false;\n    } else if (polyType === 'MultiPolygon' || polyType == 'GeometryCollection') {\n        arr = geo.getArray();\n        for(i = 0; i < arr.length; i++) {\n            if(geoContains(point,arr[i])) {\n                return true;\n            }\n        }\n    }\n    return false;\n}\n\nconst DIALOG_CONFIG = {\n    width: '90vw',\n    maxWidth: '90vw'\n};\n\n@Component({\n    selector: 'start-of-spring',\n    template: `\n    <form class=\"control-form\">\n        <refuge-control (onList)=\"refugesReady($event)\" (onSelect)=\"selectRefuge($event)\"></refuge-control>\n        <button *ngIf=\"selected\" class=\"reset-button\"\n            mat-icon-button (click)=\"reset()\" matTooltip=\"Reset map\"><i class=\"fa fa-refresh\" aria-hidden=\"true\"></i></button>\n    </form>\n    <div class=\"map-wrapper\">\n        <div class=\"vis-working\" *ngIf=\"working\">\n            <mat-progress-spinner mode=\"indeterminate\"></mat-progress-spinner>\n        </div>\n        <agm-map (mapReady)=\"mapReady($event)\"\n                [latitude]=\"latitude\" [longitude]=\"longitude\" [zoom]=\"zoom\"\n                [streetViewControl]=\"false\" [scrollwheel]=\"false\" [styles]=\"mapStyles\">\n            <agm-marker *ngFor=\"let refuge of refuges\"\n                (markerClick)=\"selectRefuge(refuge)\"\n                [iconUrl]=\"refuge.icon\"\n                [title]=\"refuge.title\"\n                [latitude]=\"refuge.location.lat\" [longitude]=\"refuge.location.lng\"></agm-marker>\n        </agm-map>\n        <ul class=\"start-of-spring-legend\">\n            <li class=\"title\">How does the timing of recent spring compare to the last 100 years?</li>\n            <li class=\"mean-5\">&lt; 5% ({{FLI_DESCRIPTIONS[0]}})</li>\n            <li class=\"mean-5-25\">5 - 25% ({{FLI_DESCRIPTIONS[1]}})</li>\n            <li class=\"mean-25-75\">25 - 75% ({{FLI_DESCRIPTIONS[2]}})</li>\n            <li class=\"mean-75-95\">75 - 95% ({{FLI_DESCRIPTIONS[3]}})</li>\n            <li class=\"mean-95\">&gt; 95% ({{FLI_DESCRIPTIONS[4]}})</li>\n            <li class=\"no-data\">No data</li>\n        </ul>\n    </div>\n    `,\n    styleUrls:['./start-of-spring.component.scss']\n})\nexport class StartOfSpringComponent extends MapBase {\n    FLI_DESCRIPTIONS = FLI_DESCRIPTIONS;\n    refuges:Refuge[] = [];\n    selected:Refuge;\n    working = false;\n\n    flywayTesters = [];\n    constructor(public npnSvcUtils:NpnServiceUtils,\n                private dialog:MatDialog,\n                private zone:NgZone) {\n        super();\n    }\n\n    private findFlywayId(refuge:Refuge):string {\n        let flywayId = this.flywayTesters.reduce((flywayId,tester) => {\n            if(!flywayId) {\n                flywayId = tester(refuge.point);\n            }\n            return flywayId;\n        },null);// using null so subsequent clicks don't re-test\n        if(!flywayId) {\n            // create a polygon\n            const distToCornersKmToTest = [\n                25,\n                50,\n                75\n            ];\n            const bearingsToTest = [\n                270, // W\n                315, // NW\n                0, // N\n                45, // NE\n                90, // E\n                135, // SE\n                180, // S\n                225, // SW\n                270, // W\n            ];\n            flywayId = distToCornersKmToTest.reduce((flywayId,distToCornersKm)=> {\n                if(!flywayId) {\n                    flywayId = bearingsToTest.reduce((flywayId,bearing) => {\n                        if(flywayId) {\n                            return flywayId;\n                        }\n                        const p = DESTINATION_POINT(refuge.point,bearing,distToCornersKm);\n                        return this.flywayTesters.reduce((fid,tester) => {\n                            if(!fid) {\n                                fid = tester(p);\n                            }\n                            return fid;\n                        },null);\n                    },null);\n                    /* draw polygon on the map to show this miss\n                    if(!flywayId) {\n                        const intersects = new google.maps.Polygon({\n                            paths: bearingsToTest.map(bearing => DESTINATION_POINT(refuge.point,bearing,distToCornersKm)),\n                            strokeColor: 'red',\n                            fillColor: 'blue',\n                            strokeWeight: 1,\n                            fillOpacity: 0.0\n                        })\n                        this.getMap.then(map => intersects.setMap(map))\n                    }*/\n                }\n                return flywayId;\n            },null);\n            \n        }\n        return flywayId;\n    }\n\n    reset() {\n        delete this.selected;\n        this.getMap.then((map:google.maps.Map) => {\n            map.setCenter(new google.maps.LatLng(this.latitude,this.longitude));\n            map.setZoom(this.zoom);\n        });\n    }\n\n    refugesReady(refuges:Refuge[]) {\n        this.getMap.then(map => {\n            this.npnSvcUtils.cachedGet(this.npnSvcUtils.geoServerUrl('/gdd/ows'),{\n                    service: 'WFS',\n                    version: '1.0.0',\n                    request: 'GetFeature',\n                    typeName: 'gdd:waterfowl_flyways',\n                    maxFeatures: 50,\n                    outputFormat: 'application/json'\n                })\n                .then(geoJson => {\n                    map.data.addGeoJson(geoJson);\n                    map.data.setStyle(function(feature) {\n                        return {\n                            strokeOpacity: 0,\n                            strokeWeight: 0,\n                            strokeColor: 'transparent',\n                            fillOpacity: 0.10,\n                            fillColor: FLYWAY_COLORS[feature.getId()]||'#ff0000',\n                            clickable: false\n                        };\n                    });\n                    const self = this;\n                    map.data.forEach(function(feature) {\n                        const id = feature.getId();\n                        const flywayGeometry = feature.getGeometry();\n                        self.flywayTesters.push(function(point) {\n                            return geoContains(point,flywayGeometry) ? id : null;\n                        });\n                    });\n                    // go get the data\n                    let nanData = null; \n                    // the csv function is not part of the 4x d3 typings.    \n                    (d3 as any).csv('/sites/fws/modules/custom/fws_dashboard/data/start_of_spring_across_moving_windows.csv',(csvData) => {\n                        const dataByRefuge = csvData.reduce((map,row) => {\n                            Object.keys(row).forEach(key => {\n                                if(key && key !== 'NWR') {\n                                    row[key] = parseFloat(row[key]);\n                                }\n                            });\n                            // the \"NWR\" column contains the refuge boundary id\n                            // in other CSV is '' column\n                            map[row['NWR'].trim()] = row;\n                            if(!nanData) {\n                                nanData = Object.keys(row).reduce((map,key) => {\n                                    map[key] = key === 'NWR' ? null : Number.NaN;\n                                    return map;\n                                },{});\n                            }\n                            return map;\n                        },{});\n                        refuges = refuges.filter(refuge => {\n                            if(!refuge.location) {\n                                return false;\n                            }\n                            const refugeKey = refuge.title.toUpperCase();\n                            if(!dataByRefuge[refugeKey]) {\n                                console.warn(`No data found for ${refugeKey}`)\n                                // insert a row containing NaN for all numbers\n                                dataByRefuge[refugeKey] = {\n                                    ...nanData,\n                                    NWR: refugeKey\n                                };\n                            }\n                            return true;\n                        });\n                        refuges.forEach(refuge => {\n                            refuge.data = dataByRefuge[refuge.title.toUpperCase()];\n                            refuge.point = new google.maps.LatLng(refuge.location.lat,refuge.location.lng);\n                            let markerColorIndex = FLI_PCNT_BUCKET_INDEX(refuge.data['FLI (%)']);\n                            /* temporary test code to see for refuges with data which aren't in a flyway boundary\n                                * doing this up front is too expensive only make test when the user clicks on a marker\n                            if(markerColorIndex !== -1) {\n                                // timeout just a hack to give the geometry library time to load\n                                setTimeout(() => {\n                                    if(!this.findFlywayId(refuge)) {\n                                        console.log(`${refuge.title} NOT IN FLYWAY`)\n                                    }\n                                },5000);\n                            }*/\n                            /* For this number of icons SVG icons cause a performance isue\n                             * presumably because Google maps must re-draw all the SVGs over\n                             * and over on zoom/pan\n                             * switching to static icons\n                            refuge.icon = {\n                                path: google.maps.SymbolPath.CIRCLE,\n                                scale: 5,\n                                fillOpacity: 1.0,\n                                strokeWeight: 1,\n                                fillColor: markerColorIndex !== -1 ? MARKER_COLORS[markerColorIndex] : '#fff'\n                            };*/\n                            if(markerColorIndex === -1) {\n                                markerColorIndex = MARKER_ICONS.length-1;\n                            }\n                            refuge.icon = `/sites/fws/modules/custom/fws_dashboard/markers/${MARKER_ICONS[markerColorIndex]}`;\n                        });\n                        this.refuges = refuges;\n                    });\n                });\n        });\n    }\n\n    selectRefuge(refuge:Refuge) {\n        if(!refuge) {\n            return this.reset();\n        }\n        // show a progress spinner since finding the flyway can be expensive\n        // for a rare few refuges (like those in the caribean or florida keys)\n        this.working = true;\n        setTimeout(() => {\n            this.selected = refuge;\n            this.getMap.then((map:google.maps.Map) => {\n                map.panTo(refuge.point);\n                map.setZoom(8);\n            });\n            if(refuge.flywayId === undefined) {\n                refuge.flywayId = this.findFlywayId(refuge);\n            }\n            const config:any = {\n                ...DIALOG_CONFIG,\n                data: {\n                    refuge,\n                    refugeData: refuge.data\n                }\n            };\n            this.working = false;\n            this.dialog.open(\n                StartOfSpringDialog,\n                config\n            );\n        });\n        \n    }\n}","module.exports = \".map-wrapper {\\n  position: relative; }\\n  .map-wrapper map-layer-legend .gridded-legend {\\n    margin-top: 10px;\\n    border-bottom: 1px solid #aaa; }\\n  @media (min-width: 992px) {\\n    .map-wrapper map-layer-legend,\\n    .map-wrapper clipped-wms-map-statistics {\\n      position: absolute;\\n      left: 10px;\\n      padding: 8px;\\n      border: 1px solid #aaa;\\n      background-color: rgba(255, 255, 255, 0.85);\\n      border-radius: 5px; }\\n    .map-wrapper map-layer-legend {\\n      bottom: 25px;\\n      width: 60%; }\\n      .map-wrapper map-layer-legend .gridded-legend {\\n        margin-top: 0px;\\n        border-bottom: none;\\n        width: 100%;\\n        height: 125px;\\n        border: none; }\\n    .map-wrapper clipped-wms-map-statistics {\\n      top: 10px; } }\\n\"","import { Component, ViewChild } from '@angular/core';\nimport {FormControl, FormGroup} from '@angular/forms';\n\nimport {Observable,Subject} from 'rxjs';\nimport {filter,takeUntil} from 'rxjs/operators';\n\nimport { MapBase } from './map-base';\nimport { Refuge } from './refuge.service';\nimport { RefugeControl } from './refuge-control.component';\n\nimport {ClippedWmsMapSelectionFactory,ClippedWmsMapSelection} from '@npn/common';\n\nconst ONE_DAY_MILLIS:number = (24*60*60*1000);\ninterface DdSelection {\n    label: string;\n    selection: ClippedWmsMapSelection;\n}\n\n@Component({\n    selector: 'status-of-spring',\n    template: `\n    <form class=\"control-form\">\n        <refuge-control (onList)=\"refuges=$event\" (onSelect)=\"focusRefuge($event)\"></refuge-control>\n        <mat-form-field *ngIf=\"selections\" class=\"selection-input\">\n            <mat-select placeholder=\"Layer\" [formControl]=\"selectionFormControl\">\n                <mat-option *ngFor=\"let s of selections\" [value]=\"s.selection\">{{ s.label }}</mat-option>\n            </mat-select>\n        </mat-form-field>\n        <button *ngIf=\"selection\" class=\"reset-button\" [disabled]=\"selection && selection.working\"\n            mat-icon-button (click)=\"reset()\" matTooltip=\"Reset map\"><i class=\"fa fa-refresh\" aria-hidden=\"true\"></i></button>\n    </form>\n\n    <div class=\"map-wrapper\">\n        <div class=\"vis-working\" *ngIf=\"selection && selection.working\">\n            <mat-progress-spinner mode=\"indeterminate\"></mat-progress-spinner>\n        </div>\n        <agm-map (mapReady)=\"mapReady($event)\"\n                [latitude]=\"latitude\" [longitude]=\"longitude\" [zoom]=\"zoom\"\n                [streetViewControl]=\"false\" [scrollwheel]=\"false\" [styles]=\"mapStyles\">\n            <span *ngFor=\"let refuge of refuges\">\n                <agm-marker *ngIf=\"refuge !== focused\"\n                    (markerClick)=\"refugeClick(refuge)\"\n                    iconUrl=\"/sites/fws/libraries/gmap_markers/marker-1.png\"\n                    [title]=\"refuge.title\"\n                    [latitude]=\"refuge.location.lat\" [longitude]=\"refuge.location.lng\"></agm-marker>\n            </span>\n        </agm-map>\n        <map-layer-legend *ngIf=\"selection && selection.legend && selection.data && selection.data.statistics && selection.data.statistics.count !== 0\"\n            [legend]=\"selection.legend\"\n            [legendTitle]=\"selection.legendTitle\"></map-layer-legend>\n        <clipped-wms-map-statistics *ngIf=\"selection && selection.data && selection.data.statistics\"\n            [selection]=\"selection\"></clipped-wms-map-statistics>\n    </div>\n    <div class=\"project-profile-block\" *ngIf=\"focused\">\n        <p *ngIf=\"focused.partner\">\n            How is the Status of Spring impacting phenology of plants and animals at your Refuge?\n            Visit the <a [href]=\"focused.links.dashboard\" [title]=\"focused.title + 'Dashboard'\">{{focused.title}} Dashboard</a> to find out!</p>\n        <span *ngIf=\"!focused.partner\">\n            <p>Refuges across the country are using <a href=\"https://www.usanpn.org/natures_notebook\" alt=\"Nature's Notebook\" title=\"Nature's Notebook\"><em>Nature’s Notebook</em></a> to learn about how the Status of Spring is impacting phenology of plants and animals at their refuges.</p>\n            <p>Start a phenology monitoring project at your refuge to better understand phenological changes of your species of interest!</p>\n            <p class=\"call-arrow\"><a href=\"/project\" title=\"Start a project\" class=\"call-arrow-link\">Start a project</a></p>\n        </span>\n    </div>\n    `,\n    styleUrls:['./status-of-spring.component.scss']\n})\nexport class StatusOfSpringComponent extends MapBase {\n    @ViewChild(RefugeControl) refugeControl:RefugeControl;\n    private componentDestroyed:Subject<any> = new Subject();\n\n    allControls:FormGroup;\n    selectionFormControl:FormControl = new FormControl();\n\n    refuges:Refuge[];\n    focused:Refuge;\n    selection:ClippedWmsMapSelection;\n\n    selections:DdSelection[];\n\n    constructor(public selectionFactory:ClippedWmsMapSelectionFactory) {\n        super();\n    }\n\n    ngOnInit() {\n        this.allControls = new FormGroup({\n            refuges: this.refugeControl.control,\n            selection: this.selectionFormControl\n        });\n        this.selectionFormControl.valueChanges.pipe(\n                filter(s => typeof(s) === 'object'),\n                filter(s => !(this.selection && s === this.selection)), // don't re-deliver\n                takeUntil(this.componentDestroyed)\n            ).subscribe((selection:ClippedWmsMapSelection) => this.setSelection(selection));\n    }\n\n    ngOnDestroy() {\n        this.componentDestroyed.next();\n    }\n\n    private newSelection(refuge:Refuge,service:string,layerId:string):ClippedWmsMapSelection {\n        let selection = this.selectionFactory.newSelection();\n        selection.networkIds = [refuge.network_id];\n        selection.fwsBoundary = refuge.boundary_id;\n        selection.service = service;\n        selection.layer = selection.validLayers.reduce((found,l) => {\n                return found||(l.id === layerId ? l : undefined);\n            },undefined);\n        return selection;\n    }\n\n    refugeTitle(refuge:Refuge) {\n        return refuge ? refuge.title : '';\n    }\n\n    refugeClick(refuge:Refuge) {\n        this.refugeControl.control.setValue(refuge);\n    }\n\n    reset() {\n        this.refugeControl.control.setValue(null);\n    }\n\n    focusRefuge(refuge:Refuge) {\n        console.debug('focusRefuge',refuge);\n        this.focused = refuge;\n        if(!refuge) {\n            this.selections = null;\n            this.selectionFormControl.setValue(null);\n            this.getMap.then((map:google.maps.Map) => {\n                map.setCenter(new google.maps.LatLng(this.latitude,this.longitude));\n                map.setZoom(this.zoom);\n            });\n            return;\n        }\n        this.getMap.then((map:google.maps.Map) => {\n            map.panTo(new google.maps.LatLng(refuge.location.lat,refuge.location.lng));\n            map.setZoom(8);\n        });\n        console.log('focusRefuge',refuge)\n        // build the new set of selections to put stuff on the map\n        let selections:DdSelection[] = [],\n            // TODO writing in winter and no spring data, pretending\n            // today is another date for now.\n            //today = new Date(2017,4,2,0,0,0,0),//new Date(),\n            today = new Date(),\n            yesterday = new Date(today.getTime()-ONE_DAY_MILLIS),\n            selection;\n        // where has spring arrived\n        selection = this.newSelection(refuge,'si-x','current');\n        selection.legendTitle = `${refuge.title}, Spring First Leaf Index`;\n        selection.explicitDate = yesterday;\n        selections.push({\n            label: 'Where has spring arrived?',\n            selection: selection\n        });\n        // spring forecast\n        selection = this.newSelection(refuge,'si-x','forecast');\n        selection.forecastDays = 3;\n        selection.explicitDate = today;\n        selection.legendTitle = `${refuge.title}, Spring First Leaf Index ${selection.forecastDays}-day Forecast`;\n        selections.push({\n            label: 'Spring forecast',\n            selection: selection\n        });\n        // anomaly\n        selection = this.newSelection(refuge,'si-x','anomaly');\n        selection.legendTitle = `${refuge.title}, Spring First Leaf Index Anomaly`;\n        selection.explicitDate = yesterday;\n        selections.push({\n            label: 'How does this year stack up?',\n            selection: selection\n        });\n\n        this.selections = selections;\n        this.selectionFormControl.setValue(this.selections[0].selection);\n    }\n\n    setSelection(s:ClippedWmsMapSelection) {\n        console.debug('setSelection',s ? s.external : 'NULL');\n        this.getMap\n            .then((map:google.maps.Map) => {\n                let add = () => {\n                    if(this.selection = s) {\n                        let refuge = this.focused,\n                            onResolve = () => {\n                                this.allControls.enable();\n                                console.debug('added selection',s.external)\n                            };\n                        this.allControls.disable();\n                        if(refuge.no_geospatial) {\n                            console.debug('refuge has no geo spatial data.');\n                            s.layer = {...s.layer}\n                            s.layer.noDataDisclaimer = 'Data are not currently available for this Refuge, as it is outside of the coverage of the Spring Indices model.';\n                            s.getBoundary()\n                                .then((geoJson) => {\n                                    s.data = {\n                                        data: null,\n                                        boundary: geoJson,\n                                        statistics: {\n                                            date: s.explicitDate,\n                                            count: 0\n                                        },\n                                    };\n                                    s.addBoundary(map,geoJson);\n                                    onResolve();\n                                });\n                        } else {\n                            s.addTo(map).then(onResolve);\n                        }\n\n                    }\n                };\n                if(this.selection) {\n                    this.selection.removeFrom(map)\n                        .then(add);\n                } else {\n                    add();\n                }\n            });\n    }\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false,\n  googleMapsApiKey: 'AIzaSyAsTM8XaktfkwpjEeDMXkNrojaiB2W5WyE',\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nimport 'hammerjs';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\nconsole.log('test');\n"],"sourceRoot":""}
